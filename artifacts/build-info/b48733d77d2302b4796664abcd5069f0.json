{"id":"b48733d77d2302b4796664abcd5069f0","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC6093.sol)\npragma solidity >=0.8.4;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC1363.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"},"@openzeppelin/contracts/interfaces/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC165.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"},"@openzeppelin/contracts/interfaces/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC20.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"},"@openzeppelin/contracts/token/ERC1155/ERC1155.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC1155/ERC1155.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155} from \"./IERC1155.sol\";\nimport {IERC1155MetadataURI} from \"./extensions/IERC1155MetadataURI.sol\";\nimport {ERC1155Utils} from \"./utils/ERC1155Utils.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {Arrays} from \"../../utils/Arrays.sol\";\nimport {IERC1155Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n */\nabstract contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI, IERC1155Errors {\n    using Arrays for uint256[];\n    using Arrays for address[];\n\n    mapping(uint256 id => mapping(address account => uint256)) private _balances;\n\n    mapping(address account => mapping(address operator => bool)) private _operatorApprovals;\n\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n    string private _uri;\n\n    /**\n     * @dev See {_setURI}.\n     */\n    constructor(string memory uri_) {\n        _setURI(uri_);\n    }\n\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC1155).interfaceId ||\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256 /* id */) public view virtual returns (string memory) {\n        return _uri;\n    }\n\n    /// @inheritdoc IERC1155\n    function balanceOf(address account, uint256 id) public view virtual returns (uint256) {\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] memory accounts,\n        uint256[] memory ids\n    ) public view virtual returns (uint256[] memory) {\n        if (accounts.length != ids.length) {\n            revert ERC1155InvalidArrayLength(ids.length, accounts.length);\n        }\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i));\n        }\n\n        return batchBalances;\n    }\n\n    /// @inheritdoc IERC1155\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /// @inheritdoc IERC1155\n    function isApprovedForAll(address account, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[account][operator];\n    }\n\n    /// @inheritdoc IERC1155\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeTransferFrom(from, to, id, value, data);\n    }\n\n    /// @inheritdoc IERC1155\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeBatchTransferFrom(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n     * (or `to`) is the zero address.\n     *\n     * Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n     *   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     *\n     * NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead.\n     */\n    function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {\n        if (ids.length != values.length) {\n            revert ERC1155InvalidArrayLength(ids.length, values.length);\n        }\n\n        address operator = _msgSender();\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids.unsafeMemoryAccess(i);\n            uint256 value = values.unsafeMemoryAccess(i);\n\n            if (from != address(0)) {\n                uint256 fromBalance = _balances[id][from];\n                if (fromBalance < value) {\n                    revert ERC1155InsufficientBalance(from, fromBalance, value, id);\n                }\n                unchecked {\n                    // Overflow not possible: value <= fromBalance\n                    _balances[id][from] = fromBalance - value;\n                }\n            }\n\n            if (to != address(0)) {\n                _balances[id][to] += value;\n            }\n        }\n\n        if (ids.length == 1) {\n            uint256 id = ids.unsafeMemoryAccess(0);\n            uint256 value = values.unsafeMemoryAccess(0);\n            emit TransferSingle(operator, from, to, id, value);\n        } else {\n            emit TransferBatch(operator, from, to, ids, values);\n        }\n    }\n\n    /**\n     * @dev Version of {_update} that performs the token acceptance check by calling\n     * {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n     * contains code (eg. is a smart contract at the moment of execution).\n     *\n     * IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n     * update to the contract state after this function would break the check-effect-interaction pattern. Consider\n     * overriding {_update} instead.\n     */\n    function _updateWithAcceptanceCheck(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal virtual {\n        _update(from, to, ids, values);\n        if (to != address(0)) {\n            address operator = _msgSender();\n            if (ids.length == 1) {\n                uint256 id = ids.unsafeMemoryAccess(0);\n                uint256 value = values.unsafeMemoryAccess(0);\n                ERC1155Utils.checkOnERC1155Received(operator, from, to, id, value, data);\n            } else {\n                ERC1155Utils.checkOnERC1155BatchReceived(operator, from, to, ids, values, data);\n            }\n        }\n    }\n\n    /**\n     * @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     */\n    function _safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the values in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        _uri = newuri;\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _mintBatch(address to, uint256[] memory ids, uint256[] memory values, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens of type `id` from `from`\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     */\n    function _burn(address from, uint256 id, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     * - `ids` and `values` must have the same length.\n     */\n    function _burnBatch(address from, uint256[] memory ids, uint256[] memory values) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the zero address.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC1155InvalidOperator(address(0));\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Creates an array in memory with only one value for each of the elements provided.\n     */\n    function _asSingletonArrays(\n        uint256 element1,\n        uint256 element2\n    ) private pure returns (uint256[] memory array1, uint256[] memory array2) {\n        assembly (\"memory-safe\") {\n            // Load the free memory pointer\n            array1 := mload(0x40)\n            // Set array length to 1\n            mstore(array1, 1)\n            // Store the single element at the next word after the length (where content starts)\n            mstore(add(array1, 0x20), element1)\n\n            // Repeat for next array locating it right after the first array\n            array2 := add(array1, 0x40)\n            mstore(array2, 1)\n            mstore(add(array2, 0x20), element2)\n\n            // Update the free memory pointer by pointing after the second array\n            mstore(0x40, add(array2, 0x40))\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC1155/extensions/IERC1155MetadataURI.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC1155} from \"../IERC1155.sol\";\n\n/**\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[ERC].\n */\ninterface IERC1155MetadataURI is IERC1155 {\n    /**\n     * @dev Returns the URI for token type `id`.\n     *\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\n     * clients with the actual token type ID.\n     */\n    function uri(uint256 id) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC1155/IERC1155.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[ERC].\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the value of tokens of token type `id` owned by `account`.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] calldata accounts,\n        uint256[] calldata ids\n    ) external view returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the zero address.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {IERC1155Receiver-onERC1155Received} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes calldata data) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {IERC1155Receiver-onERC1155BatchReceived} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external;\n}\n"},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Interface that must be implemented by smart contracts in order to receive\n * ERC-1155 token transfers.\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC-1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC-1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC1155/utils/ERC1155Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155Receiver} from \"../IERC1155Receiver.sol\";\nimport {IERC1155Errors} from \"../../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Library that provide common ERC-1155 utility functions.\n *\n * See https://eips.ethereum.org/EIPS/eip-1155[ERC-1155].\n *\n * _Available since v5.1._\n */\nlibrary ERC1155Utils {\n    /**\n     * @dev Performs an acceptance check for the provided `operator` by calling {IERC1155Receiver-onERC1155Received}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC1155Received(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    // Tokens rejected\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC1155Receiver implementer\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(reason, 0x20), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev Performs a batch acceptance check for the provided `operator` by calling {IERC1155Receiver-onERC1155BatchReceived}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC1155BatchReceived(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (\n                bytes4 response\n            ) {\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\n                    // Tokens rejected\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC1155Receiver implementer\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(reason, 0x20), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /// @inheritdoc IERC20\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /// @inheritdoc IERC20\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /// @inheritdoc IERC20\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"},"@openzeppelin/contracts/utils/Arrays.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/Arrays.sol)\n// This file was procedurally generated from scripts/generate/templates/Arrays.js.\n\npragma solidity ^0.8.20;\n\nimport {Comparators} from \"./Comparators.sol\";\nimport {SlotDerivation} from \"./SlotDerivation.sol\";\nimport {StorageSlot} from \"./StorageSlot.sol\";\nimport {Math} from \"./math/Math.sol\";\n\n/**\n * @dev Collection of functions related to array types.\n */\nlibrary Arrays {\n    using SlotDerivation for bytes32;\n    using StorageSlot for bytes32;\n\n    /**\n     * @dev Sort an array of uint256 (in memory) following the provided comparator function.\n     *\n     * This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n     * convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n     *\n     * NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n     * array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n     * when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n     * consume more gas than is available in a block, leading to potential DoS.\n     *\n     * IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way.\n     */\n    function sort(\n        uint256[] memory array,\n        function(uint256, uint256) pure returns (bool) comp\n    ) internal pure returns (uint256[] memory) {\n        _quickSort(_begin(array), _end(array), comp);\n        return array;\n    }\n\n    /**\n     * @dev Variant of {sort} that sorts an array of uint256 in increasing order.\n     */\n    function sort(uint256[] memory array) internal pure returns (uint256[] memory) {\n        sort(array, Comparators.lt);\n        return array;\n    }\n\n    /**\n     * @dev Sort an array of address (in memory) following the provided comparator function.\n     *\n     * This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n     * convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n     *\n     * NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n     * array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n     * when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n     * consume more gas than is available in a block, leading to potential DoS.\n     *\n     * IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way.\n     */\n    function sort(\n        address[] memory array,\n        function(address, address) pure returns (bool) comp\n    ) internal pure returns (address[] memory) {\n        sort(_castToUint256Array(array), _castToUint256Comp(comp));\n        return array;\n    }\n\n    /**\n     * @dev Variant of {sort} that sorts an array of address in increasing order.\n     */\n    function sort(address[] memory array) internal pure returns (address[] memory) {\n        sort(_castToUint256Array(array), Comparators.lt);\n        return array;\n    }\n\n    /**\n     * @dev Sort an array of bytes32 (in memory) following the provided comparator function.\n     *\n     * This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n     * convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n     *\n     * NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n     * array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n     * when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n     * consume more gas than is available in a block, leading to potential DoS.\n     *\n     * IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way.\n     */\n    function sort(\n        bytes32[] memory array,\n        function(bytes32, bytes32) pure returns (bool) comp\n    ) internal pure returns (bytes32[] memory) {\n        sort(_castToUint256Array(array), _castToUint256Comp(comp));\n        return array;\n    }\n\n    /**\n     * @dev Variant of {sort} that sorts an array of bytes32 in increasing order.\n     */\n    function sort(bytes32[] memory array) internal pure returns (bytes32[] memory) {\n        sort(_castToUint256Array(array), Comparators.lt);\n        return array;\n    }\n\n    /**\n     * @dev Performs a quick sort of a segment of memory. The segment sorted starts at `begin` (inclusive), and stops\n     * at end (exclusive). Sorting follows the `comp` comparator.\n     *\n     * Invariant: `begin <= end`. This is the case when initially called by {sort} and is preserved in subcalls.\n     *\n     * IMPORTANT: Memory locations between `begin` and `end` are not validated/zeroed. This function should\n     * be used only if the limits are within a memory array.\n     */\n    function _quickSort(uint256 begin, uint256 end, function(uint256, uint256) pure returns (bool) comp) private pure {\n        unchecked {\n            if (end - begin < 0x40) return;\n\n            // Use first element as pivot\n            uint256 pivot = _mload(begin);\n            // Position where the pivot should be at the end of the loop\n            uint256 pos = begin;\n\n            for (uint256 it = begin + 0x20; it < end; it += 0x20) {\n                if (comp(_mload(it), pivot)) {\n                    // If the value stored at the iterator's position comes before the pivot, we increment the\n                    // position of the pivot and move the value there.\n                    pos += 0x20;\n                    _swap(pos, it);\n                }\n            }\n\n            _swap(begin, pos); // Swap pivot into place\n            _quickSort(begin, pos, comp); // Sort the left side of the pivot\n            _quickSort(pos + 0x20, end, comp); // Sort the right side of the pivot\n        }\n    }\n\n    /**\n     * @dev Pointer to the memory location of the first element of `array`.\n     */\n    function _begin(uint256[] memory array) private pure returns (uint256 ptr) {\n        assembly (\"memory-safe\") {\n            ptr := add(array, 0x20)\n        }\n    }\n\n    /**\n     * @dev Pointer to the memory location of the first memory word (32bytes) after `array`. This is the memory word\n     * that comes just after the last element of the array.\n     */\n    function _end(uint256[] memory array) private pure returns (uint256 ptr) {\n        unchecked {\n            return _begin(array) + array.length * 0x20;\n        }\n    }\n\n    /**\n     * @dev Load memory word (as a uint256) at location `ptr`.\n     */\n    function _mload(uint256 ptr) private pure returns (uint256 value) {\n        assembly {\n            value := mload(ptr)\n        }\n    }\n\n    /**\n     * @dev Swaps the elements memory location `ptr1` and `ptr2`.\n     */\n    function _swap(uint256 ptr1, uint256 ptr2) private pure {\n        assembly {\n            let value1 := mload(ptr1)\n            let value2 := mload(ptr2)\n            mstore(ptr1, value2)\n            mstore(ptr2, value1)\n        }\n    }\n\n    /// @dev Helper: low level cast address memory array to uint256 memory array\n    function _castToUint256Array(address[] memory input) private pure returns (uint256[] memory output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /// @dev Helper: low level cast bytes32 memory array to uint256 memory array\n    function _castToUint256Array(bytes32[] memory input) private pure returns (uint256[] memory output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /// @dev Helper: low level cast address comp function to uint256 comp function\n    function _castToUint256Comp(\n        function(address, address) pure returns (bool) input\n    ) private pure returns (function(uint256, uint256) pure returns (bool) output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /// @dev Helper: low level cast bytes32 comp function to uint256 comp function\n    function _castToUint256Comp(\n        function(bytes32, bytes32) pure returns (bool) input\n    ) private pure returns (function(uint256, uint256) pure returns (bool) output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /**\n     * @dev Searches a sorted `array` and returns the first index that contains\n     * a value greater or equal to `element`. If no such index exists (i.e. all\n     * values in the array are strictly less than `element`), the array length is\n     * returned. Time complexity O(log n).\n     *\n     * NOTE: The `array` is expected to be sorted in ascending order, and to\n     * contain no repeated elements.\n     *\n     * IMPORTANT: Deprecated. This implementation behaves as {lowerBound} but lacks\n     * support for repeated elements in the array. The {lowerBound} function should\n     * be used instead.\n     */\n    function findUpperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value > element) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        // At this point `low` is the exclusive upper bound. We will return the inclusive upper bound.\n        if (low > 0 && unsafeAccess(array, low - 1).value == element) {\n            return low - 1;\n        } else {\n            return low;\n        }\n    }\n\n    /**\n     * @dev Searches an `array` sorted in ascending order and returns the first\n     * index that contains a value greater or equal than `element`. If no such index\n     * exists (i.e. all values in the array are strictly less than `element`), the array\n     * length is returned. Time complexity O(log n).\n     *\n     * See C++'s https://en.cppreference.com/w/cpp/algorithm/lower_bound[lower_bound].\n     */\n    function lowerBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value < element) {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            } else {\n                high = mid;\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Searches an `array` sorted in ascending order and returns the first\n     * index that contains a value strictly greater than `element`. If no such index\n     * exists (i.e. all values in the array are strictly less than `element`), the array\n     * length is returned. Time complexity O(log n).\n     *\n     * See C++'s https://en.cppreference.com/w/cpp/algorithm/upper_bound[upper_bound].\n     */\n    function upperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value > element) {\n                high = mid;\n            } else {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Same as {lowerBound}, but with an array in memory.\n     */\n    function lowerBoundMemory(uint256[] memory array, uint256 element) internal pure returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeMemoryAccess(array, mid) < element) {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            } else {\n                high = mid;\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Same as {upperBound}, but with an array in memory.\n     */\n    function upperBoundMemory(uint256[] memory array, uint256 element) internal pure returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeMemoryAccess(array, mid) > element) {\n                high = mid;\n            } else {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(address[] storage arr, uint256 pos) internal pure returns (StorageSlot.AddressSlot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getAddressSlot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(bytes32[] storage arr, uint256 pos) internal pure returns (StorageSlot.Bytes32Slot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getBytes32Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(uint256[] storage arr, uint256 pos) internal pure returns (StorageSlot.Uint256Slot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getUint256Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(bytes[] storage arr, uint256 pos) internal pure returns (StorageSlot.BytesSlot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getBytesSlot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(string[] storage arr, uint256 pos) internal pure returns (StorageSlot.StringSlot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getStringSlot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(address[] memory arr, uint256 pos) internal pure returns (address res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(bytes32[] memory arr, uint256 pos) internal pure returns (bytes32 res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(bytes[] memory arr, uint256 pos) internal pure returns (bytes memory res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(string[] memory arr, uint256 pos) internal pure returns (string memory res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(address[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(bytes32[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(uint256[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(bytes[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(string[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Comparators.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Comparators.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides a set of functions to compare values.\n *\n * _Available since v5.1._\n */\nlibrary Comparators {\n    function lt(uint256 a, uint256 b) internal pure returns (bool) {\n        return a < b;\n    }\n\n    function gt(uint256 a, uint256 b) internal pure returns (bool) {\n        return a > b;\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/Hashes.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/cryptography/Hashes.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library of standard hash functions.\n *\n * _Available since v5.1._\n */\nlibrary Hashes {\n    /**\n     * @dev Commutative Keccak256 hash of a sorted pair of bytes32. Frequently used when working with merkle proofs.\n     *\n     * NOTE: Equivalent to the `standardNodeHash` in our https://github.com/OpenZeppelin/merkle-tree[JavaScript library].\n     */\n    function commutativeKeccak256(bytes32 a, bytes32 b) internal pure returns (bytes32) {\n        return a < b ? efficientKeccak256(a, b) : efficientKeccak256(b, a);\n    }\n\n    /**\n     * @dev Implementation of keccak256(abi.encode(a, b)) that doesn't allocate or expand memory.\n     */\n    function efficientKeccak256(bytes32 a, bytes32 b) internal pure returns (bytes32 value) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, a)\n            mstore(0x20, b)\n            value := keccak256(0x00, 0x40)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/MerkleProof.sol)\n// This file was procedurally generated from scripts/generate/templates/MerkleProof.js.\n\npragma solidity ^0.8.20;\n\nimport {Hashes} from \"./Hashes.sol\";\n\n/**\n * @dev These functions deal with verification of Merkle Tree proofs.\n *\n * The tree and the proofs can be generated using our\n * https://github.com/OpenZeppelin/merkle-tree[JavaScript library].\n * You will find a quickstart guide in the readme.\n *\n * WARNING: You should avoid using leaf values that are 64 bytes long prior to\n * hashing, or use a hash function other than keccak256 for hashing leaves.\n * This is because the concatenation of a sorted pair of internal nodes in\n * the Merkle tree could be reinterpreted as a leaf value.\n * OpenZeppelin's JavaScript library generates Merkle trees that are safe\n * against this attack out of the box.\n *\n * IMPORTANT: Consider memory side-effects when using custom hashing functions\n * that access memory in an unsafe way.\n *\n * NOTE: This library supports proof verification for merkle trees built using\n * custom _commutative_ hashing functions (i.e. `H(a, b) == H(b, a)`). Proving\n * leaf inclusion in trees built using non-commutative hashing functions requires\n * additional logic that is not supported by this library.\n */\nlibrary MerkleProof {\n    /**\n     *@dev The multiproof provided is not valid.\n     */\n    error MerkleProofInvalidMultiproof();\n\n    /**\n     * @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n     * defined by `root`. For this, a `proof` must be provided, containing\n     * sibling hashes on the branch from the leaf to the root of the tree. Each\n     * pair of leaves and each pair of pre-images are assumed to be sorted.\n     *\n     * This version handles proofs in memory with the default hashing function.\n     */\n    function verify(bytes32[] memory proof, bytes32 root, bytes32 leaf) internal pure returns (bool) {\n        return processProof(proof, leaf) == root;\n    }\n\n    /**\n     * @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n     * from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n     * hash matches the root of the tree. When processing the proof, the pairs\n     * of leaves & pre-images are assumed to be sorted.\n     *\n     * This version handles proofs in memory with the default hashing function.\n     */\n    function processProof(bytes32[] memory proof, bytes32 leaf) internal pure returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            computedHash = Hashes.commutativeKeccak256(computedHash, proof[i]);\n        }\n        return computedHash;\n    }\n\n    /**\n     * @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n     * defined by `root`. For this, a `proof` must be provided, containing\n     * sibling hashes on the branch from the leaf to the root of the tree. Each\n     * pair of leaves and each pair of pre-images are assumed to be sorted.\n     *\n     * This version handles proofs in memory with a custom hashing function.\n     */\n    function verify(\n        bytes32[] memory proof,\n        bytes32 root,\n        bytes32 leaf,\n        function(bytes32, bytes32) view returns (bytes32) hasher\n    ) internal view returns (bool) {\n        return processProof(proof, leaf, hasher) == root;\n    }\n\n    /**\n     * @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n     * from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n     * hash matches the root of the tree. When processing the proof, the pairs\n     * of leaves & pre-images are assumed to be sorted.\n     *\n     * This version handles proofs in memory with a custom hashing function.\n     */\n    function processProof(\n        bytes32[] memory proof,\n        bytes32 leaf,\n        function(bytes32, bytes32) view returns (bytes32) hasher\n    ) internal view returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            computedHash = hasher(computedHash, proof[i]);\n        }\n        return computedHash;\n    }\n\n    /**\n     * @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n     * defined by `root`. For this, a `proof` must be provided, containing\n     * sibling hashes on the branch from the leaf to the root of the tree. Each\n     * pair of leaves and each pair of pre-images are assumed to be sorted.\n     *\n     * This version handles proofs in calldata with the default hashing function.\n     */\n    function verifyCalldata(bytes32[] calldata proof, bytes32 root, bytes32 leaf) internal pure returns (bool) {\n        return processProofCalldata(proof, leaf) == root;\n    }\n\n    /**\n     * @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n     * from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n     * hash matches the root of the tree. When processing the proof, the pairs\n     * of leaves & pre-images are assumed to be sorted.\n     *\n     * This version handles proofs in calldata with the default hashing function.\n     */\n    function processProofCalldata(bytes32[] calldata proof, bytes32 leaf) internal pure returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            computedHash = Hashes.commutativeKeccak256(computedHash, proof[i]);\n        }\n        return computedHash;\n    }\n\n    /**\n     * @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n     * defined by `root`. For this, a `proof` must be provided, containing\n     * sibling hashes on the branch from the leaf to the root of the tree. Each\n     * pair of leaves and each pair of pre-images are assumed to be sorted.\n     *\n     * This version handles proofs in calldata with a custom hashing function.\n     */\n    function verifyCalldata(\n        bytes32[] calldata proof,\n        bytes32 root,\n        bytes32 leaf,\n        function(bytes32, bytes32) view returns (bytes32) hasher\n    ) internal view returns (bool) {\n        return processProofCalldata(proof, leaf, hasher) == root;\n    }\n\n    /**\n     * @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n     * from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n     * hash matches the root of the tree. When processing the proof, the pairs\n     * of leaves & pre-images are assumed to be sorted.\n     *\n     * This version handles proofs in calldata with a custom hashing function.\n     */\n    function processProofCalldata(\n        bytes32[] calldata proof,\n        bytes32 leaf,\n        function(bytes32, bytes32) view returns (bytes32) hasher\n    ) internal view returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            computedHash = hasher(computedHash, proof[i]);\n        }\n        return computedHash;\n    }\n\n    /**\n     * @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n     * `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n     *\n     * This version handles multiproofs in memory with the default hashing function.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n     *\n     * NOTE: Consider the case where `root == proof[0] && leaves.length == 0` as it will return `true`.\n     * The `leaves` must be validated independently. See {processMultiProof}.\n     */\n    function multiProofVerify(\n        bytes32[] memory proof,\n        bool[] memory proofFlags,\n        bytes32 root,\n        bytes32[] memory leaves\n    ) internal pure returns (bool) {\n        return processMultiProof(proof, proofFlags, leaves) == root;\n    }\n\n    /**\n     * @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n     * proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n     * leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n     * respectively.\n     *\n     * This version handles multiproofs in memory with the default hashing function.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n     * is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n     * tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n     *\n     * NOTE: The _empty set_ (i.e. the case where `proof.length == 1 && leaves.length == 0`) is considered a no-op,\n     * and therefore a valid multiproof (i.e. it returns `proof[0]`). Consider disallowing this case if you're not\n     * validating the leaves elsewhere.\n     */\n    function processMultiProof(\n        bytes32[] memory proof,\n        bool[] memory proofFlags,\n        bytes32[] memory leaves\n    ) internal pure returns (bytes32 merkleRoot) {\n        // This function rebuilds the root hash by traversing the tree up from the leaves. The root is rebuilt by\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\n        // the Merkle tree.\n        uint256 leavesLen = leaves.length;\n        uint256 proofFlagsLen = proofFlags.length;\n\n        // Check proof validity.\n        if (leavesLen + proof.length != proofFlagsLen + 1) {\n            revert MerkleProofInvalidMultiproof();\n        }\n\n        // The xxxPos values are \"pointers\" to the next value to consume in each array. All accesses are done using\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \"pop\".\n        bytes32[] memory hashes = new bytes32[](proofFlagsLen);\n        uint256 leafPos = 0;\n        uint256 hashPos = 0;\n        uint256 proofPos = 0;\n        // At each step, we compute the next hash using two values:\n        // - a value from the \"main queue\". If not all leaves have been consumed, we get the next leaf, otherwise we\n        //   get the next hash.\n        // - depending on the flag, either another value from the \"main queue\" (merging branches) or an element from the\n        //   `proof` array.\n        for (uint256 i = 0; i < proofFlagsLen; i++) {\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\n            bytes32 b = proofFlags[i]\n                ? (leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++])\n                : proof[proofPos++];\n            hashes[i] = Hashes.commutativeKeccak256(a, b);\n        }\n\n        if (proofFlagsLen > 0) {\n            if (proofPos != proof.length) {\n                revert MerkleProofInvalidMultiproof();\n            }\n            unchecked {\n                return hashes[proofFlagsLen - 1];\n            }\n        } else if (leavesLen > 0) {\n            return leaves[0];\n        } else {\n            return proof[0];\n        }\n    }\n\n    /**\n     * @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n     * `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n     *\n     * This version handles multiproofs in memory with a custom hashing function.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n     *\n     * NOTE: Consider the case where `root == proof[0] && leaves.length == 0` as it will return `true`.\n     * The `leaves` must be validated independently. See {processMultiProof}.\n     */\n    function multiProofVerify(\n        bytes32[] memory proof,\n        bool[] memory proofFlags,\n        bytes32 root,\n        bytes32[] memory leaves,\n        function(bytes32, bytes32) view returns (bytes32) hasher\n    ) internal view returns (bool) {\n        return processMultiProof(proof, proofFlags, leaves, hasher) == root;\n    }\n\n    /**\n     * @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n     * proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n     * leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n     * respectively.\n     *\n     * This version handles multiproofs in memory with a custom hashing function.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n     * is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n     * tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n     *\n     * NOTE: The _empty set_ (i.e. the case where `proof.length == 1 && leaves.length == 0`) is considered a no-op,\n     * and therefore a valid multiproof (i.e. it returns `proof[0]`). Consider disallowing this case if you're not\n     * validating the leaves elsewhere.\n     */\n    function processMultiProof(\n        bytes32[] memory proof,\n        bool[] memory proofFlags,\n        bytes32[] memory leaves,\n        function(bytes32, bytes32) view returns (bytes32) hasher\n    ) internal view returns (bytes32 merkleRoot) {\n        // This function rebuilds the root hash by traversing the tree up from the leaves. The root is rebuilt by\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\n        // the Merkle tree.\n        uint256 leavesLen = leaves.length;\n        uint256 proofFlagsLen = proofFlags.length;\n\n        // Check proof validity.\n        if (leavesLen + proof.length != proofFlagsLen + 1) {\n            revert MerkleProofInvalidMultiproof();\n        }\n\n        // The xxxPos values are \"pointers\" to the next value to consume in each array. All accesses are done using\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \"pop\".\n        bytes32[] memory hashes = new bytes32[](proofFlagsLen);\n        uint256 leafPos = 0;\n        uint256 hashPos = 0;\n        uint256 proofPos = 0;\n        // At each step, we compute the next hash using two values:\n        // - a value from the \"main queue\". If not all leaves have been consumed, we get the next leaf, otherwise we\n        //   get the next hash.\n        // - depending on the flag, either another value from the \"main queue\" (merging branches) or an element from the\n        //   `proof` array.\n        for (uint256 i = 0; i < proofFlagsLen; i++) {\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\n            bytes32 b = proofFlags[i]\n                ? (leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++])\n                : proof[proofPos++];\n            hashes[i] = hasher(a, b);\n        }\n\n        if (proofFlagsLen > 0) {\n            if (proofPos != proof.length) {\n                revert MerkleProofInvalidMultiproof();\n            }\n            unchecked {\n                return hashes[proofFlagsLen - 1];\n            }\n        } else if (leavesLen > 0) {\n            return leaves[0];\n        } else {\n            return proof[0];\n        }\n    }\n\n    /**\n     * @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n     * `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n     *\n     * This version handles multiproofs in calldata with the default hashing function.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n     *\n     * NOTE: Consider the case where `root == proof[0] && leaves.length == 0` as it will return `true`.\n     * The `leaves` must be validated independently. See {processMultiProofCalldata}.\n     */\n    function multiProofVerifyCalldata(\n        bytes32[] calldata proof,\n        bool[] calldata proofFlags,\n        bytes32 root,\n        bytes32[] memory leaves\n    ) internal pure returns (bool) {\n        return processMultiProofCalldata(proof, proofFlags, leaves) == root;\n    }\n\n    /**\n     * @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n     * proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n     * leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n     * respectively.\n     *\n     * This version handles multiproofs in calldata with the default hashing function.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n     * is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n     * tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n     *\n     * NOTE: The _empty set_ (i.e. the case where `proof.length == 1 && leaves.length == 0`) is considered a no-op,\n     * and therefore a valid multiproof (i.e. it returns `proof[0]`). Consider disallowing this case if you're not\n     * validating the leaves elsewhere.\n     */\n    function processMultiProofCalldata(\n        bytes32[] calldata proof,\n        bool[] calldata proofFlags,\n        bytes32[] memory leaves\n    ) internal pure returns (bytes32 merkleRoot) {\n        // This function rebuilds the root hash by traversing the tree up from the leaves. The root is rebuilt by\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\n        // the Merkle tree.\n        uint256 leavesLen = leaves.length;\n        uint256 proofFlagsLen = proofFlags.length;\n\n        // Check proof validity.\n        if (leavesLen + proof.length != proofFlagsLen + 1) {\n            revert MerkleProofInvalidMultiproof();\n        }\n\n        // The xxxPos values are \"pointers\" to the next value to consume in each array. All accesses are done using\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \"pop\".\n        bytes32[] memory hashes = new bytes32[](proofFlagsLen);\n        uint256 leafPos = 0;\n        uint256 hashPos = 0;\n        uint256 proofPos = 0;\n        // At each step, we compute the next hash using two values:\n        // - a value from the \"main queue\". If not all leaves have been consumed, we get the next leaf, otherwise we\n        //   get the next hash.\n        // - depending on the flag, either another value from the \"main queue\" (merging branches) or an element from the\n        //   `proof` array.\n        for (uint256 i = 0; i < proofFlagsLen; i++) {\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\n            bytes32 b = proofFlags[i]\n                ? (leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++])\n                : proof[proofPos++];\n            hashes[i] = Hashes.commutativeKeccak256(a, b);\n        }\n\n        if (proofFlagsLen > 0) {\n            if (proofPos != proof.length) {\n                revert MerkleProofInvalidMultiproof();\n            }\n            unchecked {\n                return hashes[proofFlagsLen - 1];\n            }\n        } else if (leavesLen > 0) {\n            return leaves[0];\n        } else {\n            return proof[0];\n        }\n    }\n\n    /**\n     * @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n     * `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n     *\n     * This version handles multiproofs in calldata with a custom hashing function.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n     *\n     * NOTE: Consider the case where `root == proof[0] && leaves.length == 0` as it will return `true`.\n     * The `leaves` must be validated independently. See {processMultiProofCalldata}.\n     */\n    function multiProofVerifyCalldata(\n        bytes32[] calldata proof,\n        bool[] calldata proofFlags,\n        bytes32 root,\n        bytes32[] memory leaves,\n        function(bytes32, bytes32) view returns (bytes32) hasher\n    ) internal view returns (bool) {\n        return processMultiProofCalldata(proof, proofFlags, leaves, hasher) == root;\n    }\n\n    /**\n     * @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n     * proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n     * leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n     * respectively.\n     *\n     * This version handles multiproofs in calldata with a custom hashing function.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n     * is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n     * tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n     *\n     * NOTE: The _empty set_ (i.e. the case where `proof.length == 1 && leaves.length == 0`) is considered a no-op,\n     * and therefore a valid multiproof (i.e. it returns `proof[0]`). Consider disallowing this case if you're not\n     * validating the leaves elsewhere.\n     */\n    function processMultiProofCalldata(\n        bytes32[] calldata proof,\n        bool[] calldata proofFlags,\n        bytes32[] memory leaves,\n        function(bytes32, bytes32) view returns (bytes32) hasher\n    ) internal view returns (bytes32 merkleRoot) {\n        // This function rebuilds the root hash by traversing the tree up from the leaves. The root is rebuilt by\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\n        // the Merkle tree.\n        uint256 leavesLen = leaves.length;\n        uint256 proofFlagsLen = proofFlags.length;\n\n        // Check proof validity.\n        if (leavesLen + proof.length != proofFlagsLen + 1) {\n            revert MerkleProofInvalidMultiproof();\n        }\n\n        // The xxxPos values are \"pointers\" to the next value to consume in each array. All accesses are done using\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \"pop\".\n        bytes32[] memory hashes = new bytes32[](proofFlagsLen);\n        uint256 leafPos = 0;\n        uint256 hashPos = 0;\n        uint256 proofPos = 0;\n        // At each step, we compute the next hash using two values:\n        // - a value from the \"main queue\". If not all leaves have been consumed, we get the next leaf, otherwise we\n        //   get the next hash.\n        // - depending on the flag, either another value from the \"main queue\" (merging branches) or an element from the\n        //   `proof` array.\n        for (uint256 i = 0; i < proofFlagsLen; i++) {\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\n            bytes32 b = proofFlags[i]\n                ? (leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++])\n                : proof[proofPos++];\n            hashes[i] = hasher(a, b);\n        }\n\n        if (proofFlagsLen > 0) {\n            if (proofPos != proof.length) {\n                revert MerkleProofInvalidMultiproof();\n            }\n            unchecked {\n                return hashes[proofFlagsLen - 1];\n            }\n        } else if (leavesLen > 0) {\n            return leaves[0];\n        } else {\n            return proof[0];\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Return the 512-bit addition of two uint256.\n     *\n     * The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low.\n     */\n    function add512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        assembly (\"memory-safe\") {\n            low := add(a, b)\n            high := lt(low, a)\n        }\n    }\n\n    /**\n     * @dev Return the 512-bit multiplication of two uint256.\n     *\n     * The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low.\n     */\n    function mul512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        // 512-bit multiply [high low] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n        // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n        // variables such that product = high * 2²⁵⁶ + low.\n        assembly (\"memory-safe\") {\n            let mm := mulmod(a, b, not(0))\n            low := mul(a, b)\n            high := sub(sub(mm, low), lt(mm, low))\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            success = c >= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a - b;\n            success = c <= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a * b;\n            assembly (\"memory-safe\") {\n                // Only true when the multiplication doesn't overflow\n                // (c / a == b) || (a == 0)\n                success := or(eq(div(c, a), b), iszero(a))\n            }\n            // equivalent to: success ? c : 0\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `DIV` opcode returns zero when the denominator is 0.\n                result := div(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `MOD` opcode returns zero when the denominator is 0.\n                result := mod(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryAdd(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Unsigned saturating subtraction, bounds to zero instead of overflowing.\n     */\n    function saturatingSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        (, uint256 result) = trySub(a, b);\n        return result;\n    }\n\n    /**\n     * @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryMul(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (high == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return low / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= high) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [high low].\n            uint256 remainder;\n            assembly (\"memory-safe\") {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                high := sub(high, gt(remainder, low))\n                low := sub(low, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly (\"memory-safe\") {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [high low] by twos.\n                low := div(low, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from high into low.\n            low |= high * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and high\n            // is no longer required.\n            result = low * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n            if (high >= 1 << n) {\n                Panic.panic(Panic.UNDER_OVERFLOW);\n            }\n            return (high << (256 - n)) | (low >> n);\n        }\n    }\n\n    /**\n     * @dev Calculates x * y >> n with full precision, following the selected rounding direction.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n, Rounding rounding) internal pure returns (uint256) {\n        return mulShr(x, y, n) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, 1 << n) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // If upper 8 bits of 16-bit half set, add 8 to result\n        r |= SafeCast.toUint((x >> r) > 0xff) << 3;\n        // If upper 4 bits of 8-bit half set, add 4 to result\n        r |= SafeCast.toUint((x >> r) > 0xf) << 2;\n\n        // Shifts value right by the current result and use it as an index into this lookup table:\n        //\n        // | x (4 bits) |  index  | table[index] = MSB position |\n        // |------------|---------|-----------------------------|\n        // |    0000    |    0    |        table[0] = 0         |\n        // |    0001    |    1    |        table[1] = 0         |\n        // |    0010    |    2    |        table[2] = 1         |\n        // |    0011    |    3    |        table[3] = 1         |\n        // |    0100    |    4    |        table[4] = 2         |\n        // |    0101    |    5    |        table[5] = 2         |\n        // |    0110    |    6    |        table[6] = 2         |\n        // |    0111    |    7    |        table[7] = 2         |\n        // |    1000    |    8    |        table[8] = 3         |\n        // |    1001    |    9    |        table[9] = 3         |\n        // |    1010    |   10    |        table[10] = 3        |\n        // |    1011    |   11    |        table[11] = 3        |\n        // |    1100    |   12    |        table[12] = 3        |\n        // |    1101    |   13    |        table[13] = 3        |\n        // |    1110    |   14    |        table[14] = 3        |\n        // |    1111    |   15    |        table[15] = 3        |\n        //\n        // The lookup table is represented as a 32-byte value with the MSB positions for 0-15 in the last 16 bytes.\n        assembly (\"memory-safe\") {\n            r := or(r, byte(shr(r, x), 0x0000010102020202030303030303030300000000000000000000000000000000))\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // Add 1 if upper 8 bits of 16-bit half set, and divide accumulated result by 8\n        return (r >> 3) | SafeCast.toUint((x >> r) > 0xff);\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/utils/SlotDerivation.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/SlotDerivation.sol)\n// This file was procedurally generated from scripts/generate/templates/SlotDerivation.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for computing storage (and transient storage) locations from namespaces and deriving slots\n * corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by\n * the solidity language / compiler.\n *\n * See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.].\n *\n * Example usage:\n * ```solidity\n * contract Example {\n *     // Add the library methods\n *     using StorageSlot for bytes32;\n *     using SlotDerivation for bytes32;\n *\n *     // Declare a namespace\n *     string private constant _NAMESPACE = \"<namespace>\"; // eg. OpenZeppelin.Slot\n *\n *     function setValueInNamespace(uint256 key, address newValue) internal {\n *         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;\n *     }\n *\n *     function getValueInNamespace(uint256 key) internal view returns (address) {\n *         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {StorageSlot}.\n *\n * NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking\n * upgrade safety will ignore the slots accessed through this library.\n *\n * _Available since v5.1._\n */\nlibrary SlotDerivation {\n    /**\n     * @dev Derive an ERC-7201 slot from a string (namespace).\n     */\n    function erc7201Slot(string memory namespace) internal pure returns (bytes32 slot) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, sub(keccak256(add(namespace, 0x20), mload(namespace)), 1))\n            slot := and(keccak256(0x00, 0x20), not(0xff))\n        }\n    }\n\n    /**\n     * @dev Add an offset to a slot to get the n-th element of a structure or an array.\n     */\n    function offset(bytes32 slot, uint256 pos) internal pure returns (bytes32 result) {\n        unchecked {\n            return bytes32(uint256(slot) + pos);\n        }\n    }\n\n    /**\n     * @dev Derive the location of the first element in an array from the slot where the length is stored.\n     */\n    function deriveArray(bytes32 slot) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, slot)\n            result := keccak256(0x00, 0x20)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, address key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, and(key, shr(96, not(0))))\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bool key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, iszero(iszero(key)))\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bytes32 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, uint256 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, int256 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, string memory key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            let length := mload(key)\n            let begin := add(key, 0x20)\n            let end := add(begin, length)\n            let cache := mload(end)\n            mstore(end, slot)\n            result := keccak256(begin, add(length, 0x20))\n            mstore(end, cache)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bytes memory key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            let length := mload(key)\n            let begin := add(key, 0x20)\n            let end := add(begin, length)\n            let cache := mload(end)\n            mstore(end, slot)\n            result := keccak256(begin, add(length, 0x20))\n            mstore(end, cache)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"},"contracts/F.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\ninterface ITreasury { function depositFees(uint256 liquidityFeeAmount) external; }\n\ncontract F is ERC20, Ownable {\n    struct FeeConfig { uint256 burnFee; uint256 stakingFee; uint256 liquidityFee; }\n    struct WalletLocks { uint256 lockUntil; uint256 lockedAmount; }\n    address public immutable STAKING_CONTRACT;\n    address public immutable TREASURY_CONTRACT;\n    uint256 public immutable LAUNCH_TIMESTAMP;\n    address public pancakeSwapPair;\n    address private immutable BURN_ADDRESS = 0x000000000000000000000000000000000000dEaD;\n    uint256 public constant MAX_SUPPLY = 500000000 * 10**18;\n    uint256 public immutable BURN_STOP_THRESHOLD = 100000000 * 10**18;\n    FeeConfig public feeConfigPhase1;\n    FeeConfig public feeConfigPhase2;\n    uint256 public maxWalletHolding;\n    mapping(address => WalletLocks) private _walletLocks;\n    mapping(address => bool) private _isFeeExempt;\n    mapping(address => bool) private _isLimitExempt;\n    uint256 public deadblockCount = 2;\n    uint256 public launchBlockNumber;\n    mapping(address => uint256) private _lastTxTimestamp;\n    uint256 public dynamicCooldownSeconds = 15;\n    event FeesDistributed(uint256 burnAmount, uint256 stakingAmount, uint256 liquidityAmount);\n    event WalletLocked(address indexed wallet, uint256 amount, uint256 lockUntil);\n    event BotTransactionRedirected(address indexed botAddress, uint256 amount);\n    event FeeExemptionChanged(address indexed account, bool isExempt);\n    event LimitExemptionChanged(address indexed account, bool isExempt);\n    event CooldownChanged(uint256 newCooldown);\n    event PancakeSwapPairSet(address indexed pair);\n\n    constructor(address _initialOwner, address _stakingContract, address _treasuryContract) ERC20(\"FreedomTest\", \"F\") Ownable(_initialOwner) {\n        LAUNCH_TIMESTAMP = block.timestamp;\n        launchBlockNumber = block.number;\n        STAKING_CONTRACT = _stakingContract;\n        TREASURY_CONTRACT = _treasuryContract;\n        feeConfigPhase1 = FeeConfig(250, 1, 1);\n        feeConfigPhase2 = FeeConfig(100, 1, 1);\n        maxWalletHolding = (MAX_SUPPLY * 3) / 100;\n        _isFeeExempt[_initialOwner] = true;\n        _isFeeExempt[address(this)] = true;\n        _isFeeExempt[STAKING_CONTRACT] = true;\n        _isFeeExempt[TREASURY_CONTRACT] = true;\n        _isLimitExempt[address(this)] = true;\n        _isLimitExempt[TREASURY_CONTRACT] = true;\n        _isLimitExempt[STAKING_CONTRACT] = true;\n        _mint(_initialOwner, MAX_SUPPLY);\n    }\n    \n    function setPancakeSwapPair(address _pair) public onlyOwner { pancakeSwapPair = _pair; _isFeeExempt[_pair] = true; _isLimitExempt[_pair] = true; emit PancakeSwapPairSet(_pair); }\n    \n    function _update(address from, address to, uint256 amount) internal override {\n        if (from == address(0)) { super._update(from, to, amount); return; }\n        \n        bool takeFee = !_isFeeExempt[from] && !_isFeeExempt[to];\n        \n        if (takeFee && from == pancakeSwapPair && block.number <= launchBlockNumber + deadblockCount) {\n            _handleBotTransaction(to, amount);\n            return;\n        }\n\n        if(takeFee) {\n             require(block.timestamp >= _lastTxTimestamp[from] + dynamicCooldownSeconds, \"Cooldown active\");\n             _lastTxTimestamp[from] = block.timestamp;\n        }\n        \n        if (takeFee) {\n            _transferWithFees(from, to, amount);\n        } else {\n            super._update(from, to, amount);\n        }\n\n        if (!_isLimitExempt[to]) {\n            require(balanceOf(to) <= maxWalletHolding, \"Exceeds max wallet limit\");\n        }\n        if (from == pancakeSwapPair && balanceOf(to) >= amount && !_isLimitExempt[to]) {\n             _applyFirstBuyLock(to, amount);\n        }\n    }\n\n    function _transferWithFees(address from, address to, uint256 amount) private {\n        FeeConfig memory currentFees = _getCurrentFeeConfig();\n        uint256 burnAmount = (amount * currentFees.burnFee) / 10000;\n        uint256 stakingAmount = (amount * currentFees.stakingFee) / 10000;\n        uint256 liquidityAmount = (amount * currentFees.liquidityFee) / 10000;\n        uint256 transferAmount = amount - burnAmount - stakingAmount - liquidityAmount;\n\n        if(transferAmount > 0) {\n            super._update(from, to, transferAmount);\n        }\n        \n        if (totalSupply() > BURN_STOP_THRESHOLD && burnAmount > 0) {\n            super._update(from, BURN_ADDRESS, burnAmount);\n        }\n        if (stakingAmount > 0) {\n            super._update(from, STAKING_CONTRACT, stakingAmount);\n        }\n        if (liquidityAmount > 0) {\n            super._update(from, TREASURY_CONTRACT, liquidityAmount);\n            // Für Unit-Tests auskommentiert, in Produktion aktivieren\n            // ITreasury(TREASURY_CONTRACT).depositFees(liquidityAmount);\n        }\n        emit FeesDistributed(burnAmount, stakingAmount, liquidityAmount);\n    }\n    \n    function _getCurrentFeeConfig() private view returns (FeeConfig memory) {\n        if (block.timestamp < LAUNCH_TIMESTAMP + (2 * 365 days)) return feeConfigPhase1;\n        return feeConfigPhase2;\n    }\n\n    function _applyFirstBuyLock(address to, uint256 amount) private {\n        uint256 lockDuration = (amount * 365 days) / maxWalletHolding;\n        if (lockDuration > 30 days) {\n            _walletLocks[to] = WalletLocks(block.timestamp + lockDuration, amount);\n            emit WalletLocked(to, amount, block.timestamp + lockDuration);\n        }\n    }\n\n    function _handleBotTransaction(address recipient, uint256 amount) private {\n        super._update(pancakeSwapPair, TREASURY_CONTRACT, amount);\n        emit BotTransactionRedirected(recipient, amount);\n    }\n    \n    function setFeeExempt(address account, bool isExempt) public onlyOwner { _isFeeExempt[account] = isExempt; emit FeeExemptionChanged(account, isExempt); }\n    function setLimitExempt(address account, bool isExempt) public onlyOwner { _isLimitExempt[account] = isExempt; emit LimitExemptionChanged(account, isExempt); }\n    function setDynamicCooldown(uint256 newCooldownSeconds) public onlyOwner { require(newCooldownSeconds <= 300, \"Cooldown too long\"); dynamicCooldownSeconds = newCooldownSeconds; emit CooldownChanged(newCooldownSeconds); }\n}\n"},"contracts/RewardManager.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\nimport \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\";\ncontract RewardManager is ERC1155, Ownable {\n    string public baseURI;\n    mapping(uint256 => bytes32) public merkleRoots;\n    mapping(uint256 => mapping(address => bool)) public hasClaimed;\n    mapping(uint256 => uint256) public mintedCounts;\n    mapping(uint256 => uint256) public supplyLimits;\n    address public royaltyRecipient;\n    uint96 public royaltyFraction;\n    event NFTClaimed(address indexed user, uint256 indexed tokenId);\n    event MerkleRootUpdated(uint256 indexed tokenId, bytes32 newRoot);\n    event BaseURIUpdated(string newURI);\n    event RoyaltyInfoUpdated(address indexed receiver, uint96 fraction);\n    constructor(string memory _initialBaseURI, address _initialOwner, address _royaltyReceiver) ERC1155(_initialBaseURI) Ownable(_initialOwner) {\n        baseURI = _initialBaseURI;\n        royaltyRecipient = _royaltyReceiver;\n        royaltyFraction = 250;\n        supplyLimits[2] = 200000;\n        supplyLimits[3] = 100000;\n        supplyLimits[4] = 80000;\n        supplyLimits[5] = 50000;\n    }\n    function claimNFT(uint256 tokenId, bytes32[] calldata merkleProof) external {\n        require(tokenId >= 1 && tokenId <= 5, \"Invalid tokenId\");\n        require(!hasClaimed[tokenId][msg.sender], \"Already claimed\");\n        if (supplyLimits[tokenId] > 0) { require(mintedCounts[tokenId] < supplyLimits[tokenId], \"Supply limit reached\"); }\n        bytes32 leaf = keccak256(abi.encodePacked(msg.sender));\n        require(MerkleProof.verify(merkleProof, merkleRoots[tokenId], leaf), \"Invalid proof\");\n        hasClaimed[tokenId][msg.sender] = true;\n        mintedCounts[tokenId]++;\n        _mint(msg.sender, tokenId, 1, \"\");\n        emit NFTClaimed(msg.sender, tokenId);\n    }\n    function uri(uint256 tokenId) public view override returns (string memory) { return string(abi.encodePacked(baseURI, _toString(tokenId), \".json\")); }\n    function royaltyInfo(uint256, uint256 _salePrice) external view returns (address receiver, uint256 royaltyAmount) { return (royaltyRecipient, (_salePrice * royaltyFraction) / 10000); }\n    function setMerkleRoot(uint256 tokenId, bytes32 _newRoot) public onlyOwner { require(tokenId >= 1 && tokenId <= 5, \"Invalid tokenId\"); merkleRoots[tokenId] = _newRoot; emit MerkleRootUpdated(tokenId, _newRoot); }\n    function setBaseURI(string memory _newBaseURI) public onlyOwner { baseURI = _newBaseURI; emit BaseURIUpdated(_newBaseURI); }\n    function setRoyaltyInfo(address _receiver, uint96 _fraction) public onlyOwner { royaltyRecipient = _receiver; royaltyFraction = _fraction; emit RoyaltyInfoUpdated(_receiver, _fraction); }\n    function _toString(uint256 value) private pure returns (string memory) {\n        if (value == 0) return \"0\";\n        uint256 temp = value; uint256 digits;\n        while (temp != 0) { digits++; temp /= 10; }\n        bytes memory buffer = new bytes(digits);\n        while (value != 0) { digits -= 1; buffer[digits] = bytes1(uint8(48 + uint256(value % 10))); value /= 10; }\n        return string(buffer);\n    }\n}\n"},"contracts/Staking.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\ncontract Staking is Ownable, ReentrancyGuard {\n    using SafeERC20 for IERC20;\n    struct StakerInfo { uint256 amount; uint256 since; uint256 unlocksOn; bool isLpStaker; }\n    IERC20 public immutable F_TOKEN;\n    uint256 public totalStaked;\n    uint256 public constant STAKING_HARD_CAP = 100000000 * 10**18;\n    mapping(address => StakerInfo) public stakers;\n    mapping(address => bool) public isLpStaker;\n    uint256[] public normalRates = [50, 100, 200, 300];\n    uint256[] public lpRates = [100, 200, 400, 600];\n    event Staked(address indexed user, uint256 amount, uint256 unlocksOn);\n    event Unstaked(address indexed user, uint256 amount, uint256 reward);\n    event LpStatusChanged(address indexed user, bool isLp);\n    constructor(address _fTokenAddress, address _initialOwner) Ownable(_initialOwner) { F_TOKEN = IERC20(_fTokenAddress); }\n    function stake(uint256 amount, uint256 durationInDays) external nonReentrant {\n        require(amount > 0, \"Staking: amount > 0\");\n        require(stakers[msg.sender].amount == 0, \"Staking: already staking\");\n        require(totalStaked + amount <= STAKING_HARD_CAP, \"Staking: hard cap reached\");\n        uint256 unlockDuration = _getDurationInSeconds(durationInDays);\n        require(unlockDuration > 0, \"Staking: invalid duration\");\n        totalStaked += amount;\n        stakers[msg.sender] = StakerInfo(amount, block.timestamp, block.timestamp + unlockDuration, isLpStaker[msg.sender]);\n        F_TOKEN.safeTransferFrom(msg.sender, address(this), amount);\n        emit Staked(msg.sender, amount, stakers[msg.sender].unlocksOn);\n    }\n    function unstake() external nonReentrant {\n        StakerInfo storage staker = stakers[msg.sender];\n        require(staker.amount > 0, \"Unstaking: not staking\");\n        require(block.timestamp >= staker.unlocksOn, \"Unstaking: lock period not over\");\n        uint256 reward = calculateReward(msg.sender);\n        uint256 totalAmount = staker.amount + reward;\n        totalStaked -= staker.amount;\n        delete stakers[msg.sender];\n        F_TOKEN.safeTransfer(msg.sender, totalAmount);\n        emit Unstaked(msg.sender, staker.amount, reward);\n    }\n    function setLpStaker(address user, bool isLp) public onlyOwner { isLpStaker[user] = isLp; emit LpStatusChanged(user, isLp); }\n    function calculateReward(address stakerAddress) public view returns (uint256) {\n        StakerInfo memory staker = stakers[stakerAddress];\n        if (staker.amount == 0) return 0;\n        uint256 stakingDuration = staker.unlocksOn - staker.since;\n        uint256[] memory rates = staker.isLpStaker ? lpRates : normalRates;\n        uint256 rateBps = 0;\n        if (stakingDuration >= (365 days)) rateBps = rates[3];\n        else if (stakingDuration >= (180 days)) rateBps = rates[2];\n        else if (stakingDuration >= (90 days)) rateBps = rates[1];\n        else if (stakingDuration >= (30 days)) rateBps = rates[0];\n        return (staker.amount * rateBps) / 10000;\n    }\n    function _getDurationInSeconds(uint256 durationInDays) private pure returns (uint256) {\n        if (durationInDays == 30) return 30 days;\n        if (durationInDays == 90) return 90 days;\n        if (durationInDays == 180) return 180 days;\n        if (durationInDays == 365) return 365 days;\n        return 0;\n    }\n}\n"},"contracts/TokenVesting.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\ncontract TokenVesting is Ownable {\n    using SafeERC20 for IERC20;\n    IERC20 public immutable TOKEN;\n    address public immutable BENEFICIARY;\n    uint256 public immutable CLIFF_DURATION;\n    uint256 public immutable TOTAL_VESTING_DURATION;\n    uint256 public immutable VESTING_START_TIMESTAMP;\n    uint256 public totalLockedAmount;\n    uint256 public releasedAmount;\n    event TokensReleased(address indexed beneficiary, uint256 amount);\n    event TokensDeposited(uint256 amount);\n    constructor(address _tokenAddress, address _beneficiaryAddress, address _initialOwner) Ownable(_initialOwner) {\n        require(_beneficiaryAddress != address(0), \"Beneficiary is zero\");\n        require(_tokenAddress != address(0), \"Token is zero\");\n        TOKEN = IERC20(_tokenAddress);\n        BENEFICIARY = _beneficiaryAddress;\n        VESTING_START_TIMESTAMP = block.timestamp;\n        CLIFF_DURATION = 2 * 365 days;\n        TOTAL_VESTING_DURATION = 7 * 365 days;\n    }\n    function release() public {\n        require(msg.sender == BENEFICIARY, \"Only beneficiary\");\n        uint256 releasableAmount = _calculateReleasableAmount();\n        require(releasableAmount > 0, \"No tokens due\");\n        releasedAmount += releasableAmount;\n        TOKEN.safeTransfer(BENEFICIARY, releasableAmount);\n        emit TokensReleased(BENEFICIARY, releasableAmount);\n    }\n    function _calculateReleasableAmount() private view returns (uint256) {\n        if (block.timestamp < VESTING_START_TIMESTAMP + CLIFF_DURATION) return 0;\n        if (block.timestamp >= VESTING_START_TIMESTAMP + TOTAL_VESTING_DURATION) return totalLockedAmount - releasedAmount;\n        uint256 timeElapsed = block.timestamp - (VESTING_START_TIMESTAMP + CLIFF_DURATION);\n        uint256 vestingPeriod = TOTAL_VESTING_DURATION - CLIFF_DURATION;\n        uint256 vestedAmount = (totalLockedAmount * timeElapsed) / vestingPeriod;\n        return vestedAmount - releasedAmount;\n    }\n    function getReleasableAmount() public view returns (uint256) { return _calculateReleasableAmount(); }\n    function depositVestingTokens(uint256 _totalAmount) public onlyOwner {\n        require(totalLockedAmount == 0, \"Deposited already\");\n        totalLockedAmount = _totalAmount;\n        TOKEN.safeTransferFrom(msg.sender, address(this), _totalAmount);\n        emit TokensDeposited(_totalAmount);\n    }\n}\n"},"contracts/Treasury.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\ninterface IAggregatorV3 { function latestRoundData() external view returns (uint80, int256, uint256, uint256, uint80); }\ninterface IPancakeRouter { function swapExactTokensForTokens(uint, uint, address[] calldata, address, uint) external returns (uint[] memory); }\ncontract Treasury is Ownable, ReentrancyGuard {\n    using SafeERC20 for IERC20;\n    IERC20 public immutable F_TOKEN;\n    IERC20 public immutable STABLECOIN;\n    IPancakeRouter public immutable PANCAKE_ROUTER;\n    IAggregatorV3 public immutable PRICE_FEED;\n    address public immutable F_TOKEN_CONTRACT_ADDRESS;\n    address public immutable STAKING_CONTRACT;\n    address private immutable BURN_ADDRESS = 0x000000000000000000000000000000000000dEaD;\n    uint256 public immutable REBURN_ACTIVATION_TIMESTAMP;\n    uint256 public constant FINAL_SUPPLY_TARGET = 50000000 * 10**18;\n    uint256 public softFloorPrice;\n    uint256 public lastBuybackTimestamp;\n    event ReburnExecuted(uint256 amountBought, uint256 amountBurned);\n    event SoftFloorProtected(uint256 amountBought, int256 currentPrice);\n    event SoftFloorPriceUpdated(uint256 newPrice);\n    event FundsReceived(address indexed from, uint256 amount);\n    constructor(address _fTokenAddress, address _stablecoinAddress, address _routerAddress, address _chainlinkFeedAddress, address _stakingContract, address _initialOwner) Ownable(_initialOwner) {\n        F_TOKEN = IERC20(_fTokenAddress);\n        STABLECOIN = IERC20(_stablecoinAddress);\n        PANCAKE_ROUTER = IPancakeRouter(_routerAddress);\n        PRICE_FEED = IAggregatorV3(_chainlinkFeedAddress);\n        F_TOKEN_CONTRACT_ADDRESS = _fTokenAddress;\n        STAKING_CONTRACT = _stakingContract;\n        REBURN_ACTIVATION_TIMESTAMP = block.timestamp + (8 * 365 days);\n        lastBuybackTimestamp = block.timestamp;\n    }\n    function executeReburn() external nonReentrant {\n        require(block.timestamp >= REBURN_ACTIVATION_TIMESTAMP, \"Re-burn not active\");\n        require(F_TOKEN.totalSupply() > FINAL_SUPPLY_TARGET, \"Final supply target reached\");\n        require(block.timestamp >= lastBuybackTimestamp + 30 days, \"Re-burn cooldown\");\n        uint256 stablecoinBalance = STABLECOIN.balanceOf(address(this));\n        if (stablecoinBalance == 0) return;\n        uint256 amountToSpend = (stablecoinBalance * 1) / 100;\n        _buyAndBurn(amountToSpend);\n        lastBuybackTimestamp = block.timestamp;\n    }\n    function protectSoftFloor() external nonReentrant {\n        if (softFloorPrice == 0) return;\n        int256 currentPrice = getFTokenPrice();\n        if (currentPrice >= int256(softFloorPrice)) return;\n        uint256 stablecoinBalance = STABLECOIN.balanceOf(address(this));\n        if (stablecoinBalance == 0) return;\n        uint256 amountToSpend = (stablecoinBalance * 5) / 100;\n        _buyAndSupport(amountToSpend);\n        emit SoftFloorProtected(amountToSpend, currentPrice);\n    }\n    function _buyAndBurn(uint256 _amountToSpend) private { uint256 boughtAmount = _swapStableForFToken(_amountToSpend, BURN_ADDRESS); if (boughtAmount > 0) emit ReburnExecuted(_amountToSpend, boughtAmount); }\n    function _buyAndSupport(uint256 _amountToSpend) private { _swapStableForFToken(_amountToSpend, STAKING_CONTRACT); }\n    function _swapStableForFToken(uint256 _amountIn, address _to) private returns (uint256) {\n        address[] memory path = new address[](2);\n        path[0] = address(STABLECOIN);\n        path[1] = address(F_TOKEN);\n        STABLECOIN.approve(address(PANCAKE_ROUTER), _amountIn);\n        uint[] memory amounts = PANCAKE_ROUTER.swapExactTokensForTokens(_amountIn, 0, path, _to, block.timestamp);\n        return amounts[1];\n    }\n    function depositFees(uint256) external { require(msg.sender == F_TOKEN_CONTRACT_ADDRESS, \"Only F Token contract\"); }\n    function setSoftFloorPrice(uint256 _newPrice) public onlyOwner { softFloorPrice = _newPrice; emit SoftFloorPriceUpdated(_newPrice); }\n    function getFTokenPrice() public view returns (int256) { (, int256 price, , , ) = PRICE_FEED.latestRoundData(); return price * 10**10; }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"errors":[{"component":"general","errorCode":"2018","formattedMessage":"Warning: Function state mutability can be restricted to view\n  --> contracts/Treasury.sol:66:5:\n   |\n66 |     function depositFees(uint256) external { require(msg.sender == F_TOKEN_CONTRACT_ADDRESS, \"Only F Token contract\"); }\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"Function state mutability can be restricted to view","severity":"warning","sourceLocation":{"end":4054,"file":"contracts/Treasury.sol","start":3938},"type":"Warning"}],"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[3749],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":3750,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3749,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":3749,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,3749],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3731,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3731,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1363.sol","exportedSymbols":{"IERC1363":[229],"IERC165":[5273],"IERC20":[2219]},"id":230,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"107:24:1"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC20.sol","file":"./IERC20.sol","id":151,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":230,"sourceUnit":238,"src":"133:36:1","symbolAliases":[{"foreign":{"id":150,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2219,"src":"141:6:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"./IERC165.sol","id":153,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":230,"sourceUnit":234,"src":"170:38:1","symbolAliases":[{"foreign":{"id":152,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5273,"src":"178:7:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":155,"name":"IERC20","nameLocations":["590:6:1"],"nodeType":"IdentifierPath","referencedDeclaration":2219,"src":"590:6:1"},"id":156,"nodeType":"InheritanceSpecifier","src":"590:6:1"},{"baseName":{"id":157,"name":"IERC165","nameLocations":["598:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":5273,"src":"598:7:1"},"id":158,"nodeType":"InheritanceSpecifier","src":"598:7:1"}],"canonicalName":"IERC1363","contractDependencies":[],"contractKind":"interface","documentation":{"id":154,"nodeType":"StructuredDocumentation","src":"210:357:1","text":" @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."},"fullyImplemented":false,"id":229,"linearizedBaseContracts":[229,5273,2219],"name":"IERC1363","nameLocation":"578:8:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":159,"nodeType":"StructuredDocumentation","src":"1148:370:1","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"1296ee62","id":168,"implemented":false,"kind":"function","modifiers":[],"name":"transferAndCall","nameLocation":"1532:15:1","nodeType":"FunctionDefinition","parameters":{"id":164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":161,"mutability":"mutable","name":"to","nameLocation":"1556:2:1","nodeType":"VariableDeclaration","scope":168,"src":"1548:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":160,"name":"address","nodeType":"ElementaryTypeName","src":"1548:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":163,"mutability":"mutable","name":"value","nameLocation":"1568:5:1","nodeType":"VariableDeclaration","scope":168,"src":"1560:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":162,"name":"uint256","nodeType":"ElementaryTypeName","src":"1560:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1547:27:1"},"returnParameters":{"id":167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":166,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":168,"src":"1593:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":165,"name":"bool","nodeType":"ElementaryTypeName","src":"1593:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1592:6:1"},"scope":229,"src":"1523:76:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":169,"nodeType":"StructuredDocumentation","src":"1605:453:1","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"4000aea0","id":180,"implemented":false,"kind":"function","modifiers":[],"name":"transferAndCall","nameLocation":"2072:15:1","nodeType":"FunctionDefinition","parameters":{"id":176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":171,"mutability":"mutable","name":"to","nameLocation":"2096:2:1","nodeType":"VariableDeclaration","scope":180,"src":"2088:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":170,"name":"address","nodeType":"ElementaryTypeName","src":"2088:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":173,"mutability":"mutable","name":"value","nameLocation":"2108:5:1","nodeType":"VariableDeclaration","scope":180,"src":"2100:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":172,"name":"uint256","nodeType":"ElementaryTypeName","src":"2100:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":175,"mutability":"mutable","name":"data","nameLocation":"2130:4:1","nodeType":"VariableDeclaration","scope":180,"src":"2115:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":174,"name":"bytes","nodeType":"ElementaryTypeName","src":"2115:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2087:48:1"},"returnParameters":{"id":179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":178,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":180,"src":"2154:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":177,"name":"bool","nodeType":"ElementaryTypeName","src":"2154:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2153:6:1"},"scope":229,"src":"2063:97:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":181,"nodeType":"StructuredDocumentation","src":"2166:453:1","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"d8fbe994","id":192,"implemented":false,"kind":"function","modifiers":[],"name":"transferFromAndCall","nameLocation":"2633:19:1","nodeType":"FunctionDefinition","parameters":{"id":188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":183,"mutability":"mutable","name":"from","nameLocation":"2661:4:1","nodeType":"VariableDeclaration","scope":192,"src":"2653:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":182,"name":"address","nodeType":"ElementaryTypeName","src":"2653:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":185,"mutability":"mutable","name":"to","nameLocation":"2675:2:1","nodeType":"VariableDeclaration","scope":192,"src":"2667:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":184,"name":"address","nodeType":"ElementaryTypeName","src":"2667:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":187,"mutability":"mutable","name":"value","nameLocation":"2687:5:1","nodeType":"VariableDeclaration","scope":192,"src":"2679:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":186,"name":"uint256","nodeType":"ElementaryTypeName","src":"2679:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2652:41:1"},"returnParameters":{"id":191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":190,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":192,"src":"2712:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":189,"name":"bool","nodeType":"ElementaryTypeName","src":"2712:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2711:6:1"},"scope":229,"src":"2624:94:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":193,"nodeType":"StructuredDocumentation","src":"2724:536:1","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"c1d34b89","id":206,"implemented":false,"kind":"function","modifiers":[],"name":"transferFromAndCall","nameLocation":"3274:19:1","nodeType":"FunctionDefinition","parameters":{"id":202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":195,"mutability":"mutable","name":"from","nameLocation":"3302:4:1","nodeType":"VariableDeclaration","scope":206,"src":"3294:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":194,"name":"address","nodeType":"ElementaryTypeName","src":"3294:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":197,"mutability":"mutable","name":"to","nameLocation":"3316:2:1","nodeType":"VariableDeclaration","scope":206,"src":"3308:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":196,"name":"address","nodeType":"ElementaryTypeName","src":"3308:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":199,"mutability":"mutable","name":"value","nameLocation":"3328:5:1","nodeType":"VariableDeclaration","scope":206,"src":"3320:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":198,"name":"uint256","nodeType":"ElementaryTypeName","src":"3320:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":201,"mutability":"mutable","name":"data","nameLocation":"3350:4:1","nodeType":"VariableDeclaration","scope":206,"src":"3335:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":200,"name":"bytes","nodeType":"ElementaryTypeName","src":"3335:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3293:62:1"},"returnParameters":{"id":205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":204,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":206,"src":"3374:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":203,"name":"bool","nodeType":"ElementaryTypeName","src":"3374:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3373:6:1"},"scope":229,"src":"3265:115:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":207,"nodeType":"StructuredDocumentation","src":"3386:390:1","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"3177029f","id":216,"implemented":false,"kind":"function","modifiers":[],"name":"approveAndCall","nameLocation":"3790:14:1","nodeType":"FunctionDefinition","parameters":{"id":212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":209,"mutability":"mutable","name":"spender","nameLocation":"3813:7:1","nodeType":"VariableDeclaration","scope":216,"src":"3805:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":208,"name":"address","nodeType":"ElementaryTypeName","src":"3805:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":211,"mutability":"mutable","name":"value","nameLocation":"3830:5:1","nodeType":"VariableDeclaration","scope":216,"src":"3822:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":210,"name":"uint256","nodeType":"ElementaryTypeName","src":"3822:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3804:32:1"},"returnParameters":{"id":215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":214,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":216,"src":"3855:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":213,"name":"bool","nodeType":"ElementaryTypeName","src":"3855:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3854:6:1"},"scope":229,"src":"3781:80:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":217,"nodeType":"StructuredDocumentation","src":"3867:478:1","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"cae9ca51","id":228,"implemented":false,"kind":"function","modifiers":[],"name":"approveAndCall","nameLocation":"4359:14:1","nodeType":"FunctionDefinition","parameters":{"id":224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":219,"mutability":"mutable","name":"spender","nameLocation":"4382:7:1","nodeType":"VariableDeclaration","scope":228,"src":"4374:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":218,"name":"address","nodeType":"ElementaryTypeName","src":"4374:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":221,"mutability":"mutable","name":"value","nameLocation":"4399:5:1","nodeType":"VariableDeclaration","scope":228,"src":"4391:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":220,"name":"uint256","nodeType":"ElementaryTypeName","src":"4391:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":223,"mutability":"mutable","name":"data","nameLocation":"4421:4:1","nodeType":"VariableDeclaration","scope":228,"src":"4406:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":222,"name":"bytes","nodeType":"ElementaryTypeName","src":"4406:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4373:53:1"},"returnParameters":{"id":227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":226,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":228,"src":"4445:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":225,"name":"bool","nodeType":"ElementaryTypeName","src":"4445:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4444:6:1"},"scope":229,"src":"4350:101:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":230,"src":"568:3885:1","usedErrors":[],"usedEvents":[2153,2162]}],"src":"107:4347:1"},"id":1},"@openzeppelin/contracts/interfaces/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","exportedSymbols":{"IERC165":[5273]},"id":234,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":231,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"106:25:2"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../utils/introspection/IERC165.sol","id":233,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":234,"sourceUnit":5274,"src":"133:59:2","symbolAliases":[{"foreign":{"id":232,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5273,"src":"141:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"106:87:2"},"id":2},"@openzeppelin/contracts/interfaces/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC20.sol","exportedSymbols":{"IERC20":[2219]},"id":238,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":235,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"105:25:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../token/ERC20/IERC20.sol","id":237,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":238,"sourceUnit":2220,"src":"132:49:3","symbolAliases":[{"foreign":{"id":236,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2219,"src":"140:6:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"105:77:3"},"id":3},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[374],"IERC20Errors":[279],"IERC721Errors":[327]},"id":375,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":239,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"112:24:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":240,"nodeType":"StructuredDocumentation","src":"138:141:4","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":279,"linearizedBaseContracts":[279],"name":"IERC20Errors","nameLocation":"290:12:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":241,"nodeType":"StructuredDocumentation","src":"309:309:4","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":249,"name":"ERC20InsufficientBalance","nameLocation":"629:24:4","nodeType":"ErrorDefinition","parameters":{"id":248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":243,"mutability":"mutable","name":"sender","nameLocation":"662:6:4","nodeType":"VariableDeclaration","scope":249,"src":"654:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":242,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":245,"mutability":"mutable","name":"balance","nameLocation":"678:7:4","nodeType":"VariableDeclaration","scope":249,"src":"670:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":244,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":247,"mutability":"mutable","name":"needed","nameLocation":"695:6:4","nodeType":"VariableDeclaration","scope":249,"src":"687:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":246,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:4"},"src":"623:80:4"},{"documentation":{"id":250,"nodeType":"StructuredDocumentation","src":"709:152:4","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":254,"name":"ERC20InvalidSender","nameLocation":"872:18:4","nodeType":"ErrorDefinition","parameters":{"id":253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":252,"mutability":"mutable","name":"sender","nameLocation":"899:6:4","nodeType":"VariableDeclaration","scope":254,"src":"891:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":251,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:4"},"src":"866:41:4"},{"documentation":{"id":255,"nodeType":"StructuredDocumentation","src":"913:159:4","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":259,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:4","nodeType":"ErrorDefinition","parameters":{"id":258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":257,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:4","nodeType":"VariableDeclaration","scope":259,"src":"1104:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":256,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:4"},"src":"1077:45:4"},{"documentation":{"id":260,"nodeType":"StructuredDocumentation","src":"1128:345:4","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":268,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:4","nodeType":"ErrorDefinition","parameters":{"id":267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":262,"mutability":"mutable","name":"spender","nameLocation":"1519:7:4","nodeType":"VariableDeclaration","scope":268,"src":"1511:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":261,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":264,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:4","nodeType":"VariableDeclaration","scope":268,"src":"1528:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":263,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":266,"mutability":"mutable","name":"needed","nameLocation":"1555:6:4","nodeType":"VariableDeclaration","scope":268,"src":"1547:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":265,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:4"},"src":"1478:85:4"},{"documentation":{"id":269,"nodeType":"StructuredDocumentation","src":"1569:174:4","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":273,"name":"ERC20InvalidApprover","nameLocation":"1754:20:4","nodeType":"ErrorDefinition","parameters":{"id":272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":271,"mutability":"mutable","name":"approver","nameLocation":"1783:8:4","nodeType":"VariableDeclaration","scope":273,"src":"1775:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":270,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:4"},"src":"1748:45:4"},{"documentation":{"id":274,"nodeType":"StructuredDocumentation","src":"1799:195:4","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":278,"name":"ERC20InvalidSpender","nameLocation":"2005:19:4","nodeType":"ErrorDefinition","parameters":{"id":277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":276,"mutability":"mutable","name":"spender","nameLocation":"2033:7:4","nodeType":"VariableDeclaration","scope":278,"src":"2025:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":275,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:4"},"src":"1999:43:4"}],"scope":375,"src":"280:1764:4","usedErrors":[249,254,259,268,273,278],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":280,"nodeType":"StructuredDocumentation","src":"2046:143:4","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":327,"linearizedBaseContracts":[327],"name":"IERC721Errors","nameLocation":"2200:13:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":281,"nodeType":"StructuredDocumentation","src":"2220:219:4","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":285,"name":"ERC721InvalidOwner","nameLocation":"2450:18:4","nodeType":"ErrorDefinition","parameters":{"id":284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":283,"mutability":"mutable","name":"owner","nameLocation":"2477:5:4","nodeType":"VariableDeclaration","scope":285,"src":"2469:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":282,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:4"},"src":"2444:40:4"},{"documentation":{"id":286,"nodeType":"StructuredDocumentation","src":"2490:132:4","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":290,"name":"ERC721NonexistentToken","nameLocation":"2633:22:4","nodeType":"ErrorDefinition","parameters":{"id":289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":288,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:4","nodeType":"VariableDeclaration","scope":290,"src":"2656:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":287,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:4"},"src":"2627:46:4"},{"documentation":{"id":291,"nodeType":"StructuredDocumentation","src":"2679:289:4","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":299,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:4","nodeType":"ErrorDefinition","parameters":{"id":298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":293,"mutability":"mutable","name":"sender","nameLocation":"3008:6:4","nodeType":"VariableDeclaration","scope":299,"src":"3000:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":292,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":295,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:4","nodeType":"VariableDeclaration","scope":299,"src":"3016:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":294,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":297,"mutability":"mutable","name":"owner","nameLocation":"3041:5:4","nodeType":"VariableDeclaration","scope":299,"src":"3033:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":296,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:4"},"src":"2973:75:4"},{"documentation":{"id":300,"nodeType":"StructuredDocumentation","src":"3054:152:4","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":304,"name":"ERC721InvalidSender","nameLocation":"3217:19:4","nodeType":"ErrorDefinition","parameters":{"id":303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":302,"mutability":"mutable","name":"sender","nameLocation":"3245:6:4","nodeType":"VariableDeclaration","scope":304,"src":"3237:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":301,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:4"},"src":"3211:42:4"},{"documentation":{"id":305,"nodeType":"StructuredDocumentation","src":"3259:159:4","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":309,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:4","nodeType":"ErrorDefinition","parameters":{"id":308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":307,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:4","nodeType":"VariableDeclaration","scope":309,"src":"3451:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":306,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:4"},"src":"3423:46:4"},{"documentation":{"id":310,"nodeType":"StructuredDocumentation","src":"3475:247:4","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":316,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:4","nodeType":"ErrorDefinition","parameters":{"id":315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":312,"mutability":"mutable","name":"operator","nameLocation":"3768:8:4","nodeType":"VariableDeclaration","scope":316,"src":"3760:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":311,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":314,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:4","nodeType":"VariableDeclaration","scope":316,"src":"3778:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":313,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:4"},"src":"3727:68:4"},{"documentation":{"id":317,"nodeType":"StructuredDocumentation","src":"3801:174:4","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":321,"name":"ERC721InvalidApprover","nameLocation":"3986:21:4","nodeType":"ErrorDefinition","parameters":{"id":320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":319,"mutability":"mutable","name":"approver","nameLocation":"4016:8:4","nodeType":"VariableDeclaration","scope":321,"src":"4008:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":318,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:4"},"src":"3980:46:4"},{"documentation":{"id":322,"nodeType":"StructuredDocumentation","src":"4032:197:4","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":326,"name":"ERC721InvalidOperator","nameLocation":"4240:21:4","nodeType":"ErrorDefinition","parameters":{"id":325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":324,"mutability":"mutable","name":"operator","nameLocation":"4270:8:4","nodeType":"VariableDeclaration","scope":326,"src":"4262:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":323,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:4"},"src":"4234:46:4"}],"scope":375,"src":"2190:2092:4","usedErrors":[285,290,299,304,309,316,321,326],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":328,"nodeType":"StructuredDocumentation","src":"4284:145:4","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":374,"linearizedBaseContracts":[374],"name":"IERC1155Errors","nameLocation":"4440:14:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":329,"nodeType":"StructuredDocumentation","src":"4461:361:4","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":339,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:4","nodeType":"ErrorDefinition","parameters":{"id":338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":331,"mutability":"mutable","name":"sender","nameLocation":"4868:6:4","nodeType":"VariableDeclaration","scope":339,"src":"4860:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":330,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":333,"mutability":"mutable","name":"balance","nameLocation":"4884:7:4","nodeType":"VariableDeclaration","scope":339,"src":"4876:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":332,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":335,"mutability":"mutable","name":"needed","nameLocation":"4901:6:4","nodeType":"VariableDeclaration","scope":339,"src":"4893:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":334,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":337,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:4","nodeType":"VariableDeclaration","scope":339,"src":"4909:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":336,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:4"},"src":"4827:99:4"},{"documentation":{"id":340,"nodeType":"StructuredDocumentation","src":"4932:152:4","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":344,"name":"ERC1155InvalidSender","nameLocation":"5095:20:4","nodeType":"ErrorDefinition","parameters":{"id":343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":342,"mutability":"mutable","name":"sender","nameLocation":"5124:6:4","nodeType":"VariableDeclaration","scope":344,"src":"5116:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":341,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:4"},"src":"5089:43:4"},{"documentation":{"id":345,"nodeType":"StructuredDocumentation","src":"5138:159:4","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":349,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:4","nodeType":"ErrorDefinition","parameters":{"id":348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":347,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:4","nodeType":"VariableDeclaration","scope":349,"src":"5331:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":346,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:4"},"src":"5302:47:4"},{"documentation":{"id":350,"nodeType":"StructuredDocumentation","src":"5355:256:4","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":356,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:4","nodeType":"ErrorDefinition","parameters":{"id":355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":352,"mutability":"mutable","name":"operator","nameLocation":"5659:8:4","nodeType":"VariableDeclaration","scope":356,"src":"5651:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":351,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":354,"mutability":"mutable","name":"owner","nameLocation":"5677:5:4","nodeType":"VariableDeclaration","scope":356,"src":"5669:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":353,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:4"},"src":"5616:68:4"},{"documentation":{"id":357,"nodeType":"StructuredDocumentation","src":"5690:174:4","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":361,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:4","nodeType":"ErrorDefinition","parameters":{"id":360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":359,"mutability":"mutable","name":"approver","nameLocation":"5906:8:4","nodeType":"VariableDeclaration","scope":361,"src":"5898:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":358,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:4"},"src":"5869:47:4"},{"documentation":{"id":362,"nodeType":"StructuredDocumentation","src":"5922:197:4","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":366,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:4","nodeType":"ErrorDefinition","parameters":{"id":365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":364,"mutability":"mutable","name":"operator","nameLocation":"6161:8:4","nodeType":"VariableDeclaration","scope":366,"src":"6153:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":363,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:4"},"src":"6124:47:4"},{"documentation":{"id":367,"nodeType":"StructuredDocumentation","src":"6177:280:4","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":373,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:4","nodeType":"ErrorDefinition","parameters":{"id":372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":369,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:4","nodeType":"VariableDeclaration","scope":373,"src":"6494:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":368,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":371,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:4","nodeType":"VariableDeclaration","scope":373,"src":"6513:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":370,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:4"},"src":"6462:73:4"}],"scope":375,"src":"4430:2107:4","usedErrors":[339,344,349,356,361,366,373],"usedEvents":[]}],"src":"112:6426:4"},"id":4},"@openzeppelin/contracts/token/ERC1155/ERC1155.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","exportedSymbols":{"Arrays":[3687],"Context":[3749],"ERC1155":[1291],"ERC1155Utils":[1626],"ERC165":[5261],"IERC1155":[1414],"IERC1155Errors":[374],"IERC1155MetadataURI":[1472],"IERC165":[5273]},"id":1292,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":376,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","file":"./IERC1155.sol","id":378,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1292,"sourceUnit":1415,"src":"135:40:5","symbolAliases":[{"foreign":{"id":377,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1414,"src":"143:8:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol","file":"./extensions/IERC1155MetadataURI.sol","id":380,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1292,"sourceUnit":1473,"src":"176:73:5","symbolAliases":[{"foreign":{"id":379,"name":"IERC1155MetadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1472,"src":"184:19:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol","file":"./utils/ERC1155Utils.sol","id":382,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1292,"sourceUnit":1627,"src":"250:54:5","symbolAliases":[{"foreign":{"id":381,"name":"ERC1155Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1626,"src":"258:12:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":384,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1292,"sourceUnit":3750,"src":"305:48:5","symbolAliases":[{"foreign":{"id":383,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3749,"src":"313:7:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":387,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1292,"sourceUnit":5262,"src":"354:69:5","symbolAliases":[{"foreign":{"id":385,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5273,"src":"362:7:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":386,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5261,"src":"371:6:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Arrays.sol","file":"../../utils/Arrays.sol","id":389,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1292,"sourceUnit":3688,"src":"424:46:5","symbolAliases":[{"foreign":{"id":388,"name":"Arrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3687,"src":"432:6:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":391,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1292,"sourceUnit":375,"src":"471:67:5","symbolAliases":[{"foreign":{"id":390,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"479:14:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":393,"name":"Context","nameLocations":["754:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":3749,"src":"754:7:5"},"id":394,"nodeType":"InheritanceSpecifier","src":"754:7:5"},{"baseName":{"id":395,"name":"ERC165","nameLocations":["763:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":5261,"src":"763:6:5"},"id":396,"nodeType":"InheritanceSpecifier","src":"763:6:5"},{"baseName":{"id":397,"name":"IERC1155","nameLocations":["771:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":1414,"src":"771:8:5"},"id":398,"nodeType":"InheritanceSpecifier","src":"771:8:5"},{"baseName":{"id":399,"name":"IERC1155MetadataURI","nameLocations":["781:19:5"],"nodeType":"IdentifierPath","referencedDeclaration":1472,"src":"781:19:5"},"id":400,"nodeType":"InheritanceSpecifier","src":"781:19:5"},{"baseName":{"id":401,"name":"IERC1155Errors","nameLocations":["802:14:5"],"nodeType":"IdentifierPath","referencedDeclaration":374,"src":"802:14:5"},"id":402,"nodeType":"InheritanceSpecifier","src":"802:14:5"}],"canonicalName":"ERC1155","contractDependencies":[],"contractKind":"contract","documentation":{"id":392,"nodeType":"StructuredDocumentation","src":"540:184:5","text":" @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155"},"fullyImplemented":true,"id":1291,"linearizedBaseContracts":[1291,374,1472,1414,5261,5273,3749],"name":"ERC1155","nameLocation":"743:7:5","nodeType":"ContractDefinition","nodes":[{"global":false,"id":406,"libraryName":{"id":403,"name":"Arrays","nameLocations":["829:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":3687,"src":"829:6:5"},"nodeType":"UsingForDirective","src":"823:27:5","typeName":{"baseType":{"id":404,"name":"uint256","nodeType":"ElementaryTypeName","src":"840:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":405,"nodeType":"ArrayTypeName","src":"840:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},{"global":false,"id":410,"libraryName":{"id":407,"name":"Arrays","nameLocations":["861:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":3687,"src":"861:6:5"},"nodeType":"UsingForDirective","src":"855:27:5","typeName":{"baseType":{"id":408,"name":"address","nodeType":"ElementaryTypeName","src":"872:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":409,"nodeType":"ArrayTypeName","src":"872:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},{"constant":false,"id":416,"mutability":"mutable","name":"_balances","nameLocation":"955:9:5","nodeType":"VariableDeclaration","scope":1291,"src":"888:76:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"typeName":{"id":415,"keyName":"id","keyNameLocation":"904:2:5","keyType":{"id":411,"name":"uint256","nodeType":"ElementaryTypeName","src":"896:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"888:58:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":414,"keyName":"account","keyNameLocation":"926:7:5","keyType":{"id":412,"name":"address","nodeType":"ElementaryTypeName","src":"918:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"910:35:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":413,"name":"uint256","nodeType":"ElementaryTypeName","src":"937:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":422,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1041:18:5","nodeType":"VariableDeclaration","scope":1291,"src":"971:88:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":421,"keyName":"account","keyNameLocation":"987:7:5","keyType":{"id":417,"name":"address","nodeType":"ElementaryTypeName","src":"979:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"971:61:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":420,"keyName":"operator","keyNameLocation":"1014:8:5","keyType":{"id":418,"name":"address","nodeType":"ElementaryTypeName","src":"1006:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"998:33:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":419,"name":"bool","nodeType":"ElementaryTypeName","src":"1026:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"constant":false,"id":424,"mutability":"mutable","name":"_uri","nameLocation":"1195:4:5","nodeType":"VariableDeclaration","scope":1291,"src":"1180:19:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":423,"name":"string","nodeType":"ElementaryTypeName","src":"1180:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":434,"nodeType":"Block","src":"1281:30:5","statements":[{"expression":{"arguments":[{"id":431,"name":"uri_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":427,"src":"1299:4:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":430,"name":"_setURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1052,"src":"1291:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1291:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":433,"nodeType":"ExpressionStatement","src":"1291:13:5"}]},"documentation":{"id":425,"nodeType":"StructuredDocumentation","src":"1206:38:5","text":" @dev See {_setURI}."},"id":435,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":427,"mutability":"mutable","name":"uri_","nameLocation":"1275:4:5","nodeType":"VariableDeclaration","scope":435,"src":"1261:18:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":426,"name":"string","nodeType":"ElementaryTypeName","src":"1261:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1260:20:5"},"returnParameters":{"id":429,"nodeType":"ParameterList","parameters":[],"src":"1281:0:5"},"scope":1291,"src":"1249:62:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[5260,5272],"body":{"id":465,"nodeType":"Block","src":"1453:197:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":446,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"1482:11:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":448,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1414,"src":"1502:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155_$1414_$","typeString":"type(contract IERC1155)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC1155_$1414_$","typeString":"type(contract IERC1155)"}],"id":447,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1497:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1497:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC1155_$1414","typeString":"type(contract IERC1155)"}},"id":450,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1512:11:5","memberName":"interfaceId","nodeType":"MemberAccess","src":"1497:26:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1482:41:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":452,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"1539:11:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":454,"name":"IERC1155MetadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1472,"src":"1559:19:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155MetadataURI_$1472_$","typeString":"type(contract IERC1155MetadataURI)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC1155MetadataURI_$1472_$","typeString":"type(contract IERC1155MetadataURI)"}],"id":453,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1554:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1554:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC1155MetadataURI_$1472","typeString":"type(contract IERC1155MetadataURI)"}},"id":456,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1580:11:5","memberName":"interfaceId","nodeType":"MemberAccess","src":"1554:37:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1539:52:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1482:109:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":461,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"1631:11:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":459,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1607:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC1155_$1291_$","typeString":"type(contract super ERC1155)"}},"id":460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1613:17:5","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":5260,"src":"1607:23:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1607:36:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1482:161:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":445,"id":464,"nodeType":"Return","src":"1463:180:5"}]},"documentation":{"id":436,"nodeType":"StructuredDocumentation","src":"1317:23:5","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":466,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1354:17:5","nodeType":"FunctionDefinition","overrides":{"id":442,"nodeType":"OverrideSpecifier","overrides":[{"id":440,"name":"ERC165","nameLocations":["1421:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":5261,"src":"1421:6:5"},{"id":441,"name":"IERC165","nameLocations":["1429:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":5273,"src":"1429:7:5"}],"src":"1412:25:5"},"parameters":{"id":439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":438,"mutability":"mutable","name":"interfaceId","nameLocation":"1379:11:5","nodeType":"VariableDeclaration","scope":466,"src":"1372:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":437,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1372:6:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1371:20:5"},"returnParameters":{"id":445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":444,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":466,"src":"1447:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":443,"name":"bool","nodeType":"ElementaryTypeName","src":"1447:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1446:6:5"},"scope":1291,"src":"1345:305:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1471],"body":{"id":476,"nodeType":"Block","src":"2124:28:5","statements":[{"expression":{"id":474,"name":"_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":424,"src":"2141:4:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":473,"id":475,"nodeType":"Return","src":"2134:11:5"}]},"documentation":{"id":467,"nodeType":"StructuredDocumentation","src":"1656:388:5","text":" @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."},"functionSelector":"0e89341c","id":477,"implemented":true,"kind":"function","modifiers":[],"name":"uri","nameLocation":"2058:3:5","nodeType":"FunctionDefinition","parameters":{"id":470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":469,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":477,"src":"2062:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":468,"name":"uint256","nodeType":"ElementaryTypeName","src":"2062:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2061:18:5"},"returnParameters":{"id":473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":472,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":477,"src":"2109:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":471,"name":"string","nodeType":"ElementaryTypeName","src":"2109:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2108:15:5"},"scope":1291,"src":"2049:103:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1352],"body":{"id":493,"nodeType":"Block","src":"2273:46:5","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":487,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"2290:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":489,"indexExpression":{"id":488,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":482,"src":"2300:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2290:13:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":491,"indexExpression":{"id":490,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"2304:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2290:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":486,"id":492,"nodeType":"Return","src":"2283:29:5"}]},"documentation":{"id":478,"nodeType":"StructuredDocumentation","src":"2158:24:5","text":"@inheritdoc IERC1155"},"functionSelector":"00fdd58e","id":494,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2196:9:5","nodeType":"FunctionDefinition","parameters":{"id":483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":480,"mutability":"mutable","name":"account","nameLocation":"2214:7:5","nodeType":"VariableDeclaration","scope":494,"src":"2206:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":479,"name":"address","nodeType":"ElementaryTypeName","src":"2206:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":482,"mutability":"mutable","name":"id","nameLocation":"2231:2:5","nodeType":"VariableDeclaration","scope":494,"src":"2223:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":481,"name":"uint256","nodeType":"ElementaryTypeName","src":"2223:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2205:29:5"},"returnParameters":{"id":486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":485,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":494,"src":"2264:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":484,"name":"uint256","nodeType":"ElementaryTypeName","src":"2264:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2263:9:5"},"scope":1291,"src":"2187:132:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1365],"body":{"id":563,"nodeType":"Block","src":"2618:410:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":507,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":498,"src":"2632:8:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2641:6:5","memberName":"length","nodeType":"MemberAccess","src":"2632:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":509,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":501,"src":"2651:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2655:6:5","memberName":"length","nodeType":"MemberAccess","src":"2651:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2632:29:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":520,"nodeType":"IfStatement","src":"2628:121:5","trueBody":{"id":519,"nodeType":"Block","src":"2663:86:5","statements":[{"errorCall":{"arguments":[{"expression":{"id":513,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":501,"src":"2710:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2714:6:5","memberName":"length","nodeType":"MemberAccess","src":"2710:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":515,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":498,"src":"2722:8:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2731:6:5","memberName":"length","nodeType":"MemberAccess","src":"2722:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":512,"name":"ERC1155InvalidArrayLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":373,"src":"2684:25:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2684:54:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":518,"nodeType":"RevertStatement","src":"2677:61:5"}]}},{"assignments":[525],"declarations":[{"constant":false,"id":525,"mutability":"mutable","name":"batchBalances","nameLocation":"2776:13:5","nodeType":"VariableDeclaration","scope":563,"src":"2759:30:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":523,"name":"uint256","nodeType":"ElementaryTypeName","src":"2759:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":524,"nodeType":"ArrayTypeName","src":"2759:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":532,"initialValue":{"arguments":[{"expression":{"id":529,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":498,"src":"2806:8:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2815:6:5","memberName":"length","nodeType":"MemberAccess","src":"2806:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":528,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2792:13:5","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":526,"name":"uint256","nodeType":"ElementaryTypeName","src":"2796:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":527,"nodeType":"ArrayTypeName","src":"2796:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2792:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"2759:63:5"},{"body":{"id":559,"nodeType":"Block","src":"2879:112:5","statements":[{"expression":{"id":557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":544,"name":"batchBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"2893:13:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":546,"indexExpression":{"id":545,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":534,"src":"2907:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2893:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":550,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":534,"src":"2950:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":548,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":498,"src":"2922:8:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2931:18:5","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":3579,"src":"2922:27:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (address[] memory,uint256) pure returns (address)"}},"id":551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2922:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":554,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":534,"src":"2977:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":552,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":501,"src":"2954:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2958:18:5","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":3605,"src":"2954:22:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2954:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":547,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"2912:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2912:68:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2893:87:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":558,"nodeType":"ExpressionStatement","src":"2893:87:5"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":537,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":534,"src":"2853:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":538,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":498,"src":"2857:8:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2866:6:5","memberName":"length","nodeType":"MemberAccess","src":"2857:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2853:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":560,"initializationExpression":{"assignments":[534],"declarations":[{"constant":false,"id":534,"mutability":"mutable","name":"i","nameLocation":"2846:1:5","nodeType":"VariableDeclaration","scope":560,"src":"2838:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":533,"name":"uint256","nodeType":"ElementaryTypeName","src":"2838:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":536,"initialValue":{"hexValue":"30","id":535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2850:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2838:13:5"},"loopExpression":{"expression":{"id":542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"2874:3:5","subExpression":{"id":541,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":534,"src":"2876:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":543,"nodeType":"ExpressionStatement","src":"2874:3:5"},"nodeType":"ForStatement","src":"2833:158:5"},{"expression":{"id":561,"name":"batchBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"3008:13:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":506,"id":562,"nodeType":"Return","src":"3001:20:5"}]},"documentation":{"id":495,"nodeType":"StructuredDocumentation","src":"2325:146:5","text":" @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."},"functionSelector":"4e1273f4","id":564,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOfBatch","nameLocation":"2485:14:5","nodeType":"FunctionDefinition","parameters":{"id":502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":498,"mutability":"mutable","name":"accounts","nameLocation":"2526:8:5","nodeType":"VariableDeclaration","scope":564,"src":"2509:25:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":496,"name":"address","nodeType":"ElementaryTypeName","src":"2509:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":497,"nodeType":"ArrayTypeName","src":"2509:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":501,"mutability":"mutable","name":"ids","nameLocation":"2561:3:5","nodeType":"VariableDeclaration","scope":564,"src":"2544:20:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":499,"name":"uint256","nodeType":"ElementaryTypeName","src":"2544:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":500,"nodeType":"ArrayTypeName","src":"2544:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2499:71:5"},"returnParameters":{"id":506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":505,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":564,"src":"2600:16:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":503,"name":"uint256","nodeType":"ElementaryTypeName","src":"2600:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":504,"nodeType":"ArrayTypeName","src":"2600:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2599:18:5"},"scope":1291,"src":"2476:552:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1373],"body":{"id":579,"nodeType":"Block","src":"3138:69:5","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":573,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3731,"src":"3167:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3167:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":575,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":567,"src":"3181:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":576,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":569,"src":"3191:8:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":572,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"3148:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3148:52:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":578,"nodeType":"ExpressionStatement","src":"3148:52:5"}]},"documentation":{"id":565,"nodeType":"StructuredDocumentation","src":"3034:24:5","text":"@inheritdoc IERC1155"},"functionSelector":"a22cb465","id":580,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"3072:17:5","nodeType":"FunctionDefinition","parameters":{"id":570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":567,"mutability":"mutable","name":"operator","nameLocation":"3098:8:5","nodeType":"VariableDeclaration","scope":580,"src":"3090:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":566,"name":"address","nodeType":"ElementaryTypeName","src":"3090:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":569,"mutability":"mutable","name":"approved","nameLocation":"3113:8:5","nodeType":"VariableDeclaration","scope":580,"src":"3108:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":568,"name":"bool","nodeType":"ElementaryTypeName","src":"3108:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3089:33:5"},"returnParameters":{"id":571,"nodeType":"ParameterList","parameters":[],"src":"3138:0:5"},"scope":1291,"src":"3063:144:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1383],"body":{"id":596,"nodeType":"Block","src":"3338:61:5","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":590,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":422,"src":"3355:18:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":592,"indexExpression":{"id":591,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":583,"src":"3374:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3355:27:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":594,"indexExpression":{"id":593,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"3383:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3355:37:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":589,"id":595,"nodeType":"Return","src":"3348:44:5"}]},"documentation":{"id":581,"nodeType":"StructuredDocumentation","src":"3213:24:5","text":"@inheritdoc IERC1155"},"functionSelector":"e985e9c5","id":597,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"3251:16:5","nodeType":"FunctionDefinition","parameters":{"id":586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":583,"mutability":"mutable","name":"account","nameLocation":"3276:7:5","nodeType":"VariableDeclaration","scope":597,"src":"3268:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":582,"name":"address","nodeType":"ElementaryTypeName","src":"3268:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":585,"mutability":"mutable","name":"operator","nameLocation":"3293:8:5","nodeType":"VariableDeclaration","scope":597,"src":"3285:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":584,"name":"address","nodeType":"ElementaryTypeName","src":"3285:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3267:35:5"},"returnParameters":{"id":589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":588,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":597,"src":"3332:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":587,"name":"bool","nodeType":"ElementaryTypeName","src":"3332:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3331:6:5"},"scope":1291,"src":"3242:157:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1397],"body":{"id":640,"nodeType":"Block","src":"3547:238:5","statements":[{"assignments":[612],"declarations":[{"constant":false,"id":612,"mutability":"mutable","name":"sender","nameLocation":"3565:6:5","nodeType":"VariableDeclaration","scope":640,"src":"3557:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":611,"name":"address","nodeType":"ElementaryTypeName","src":"3557:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":615,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":613,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3731,"src":"3574:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3574:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3557:29:5"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":616,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"3600:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":617,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":612,"src":"3608:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3600:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3618:31:5","subExpression":{"arguments":[{"id":620,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"3636:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":621,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":612,"src":"3642:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":619,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"3619:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3619:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3600:49:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":631,"nodeType":"IfStatement","src":"3596:129:5","trueBody":{"id":630,"nodeType":"Block","src":"3651:74:5","statements":[{"errorCall":{"arguments":[{"id":626,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":612,"src":"3701:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":627,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"3709:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":625,"name":"ERC1155MissingApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":356,"src":"3672:28:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3672:42:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":629,"nodeType":"RevertStatement","src":"3665:49:5"}]}},{"expression":{"arguments":[{"id":633,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"3752:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":634,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"3758:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":635,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":604,"src":"3762:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":636,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"3766:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":637,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"3773:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":632,"name":"_safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":986,"src":"3734:17:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,uint256,bytes memory)"}},"id":638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3734:44:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":639,"nodeType":"ExpressionStatement","src":"3734:44:5"}]},"documentation":{"id":598,"nodeType":"StructuredDocumentation","src":"3405:24:5","text":"@inheritdoc IERC1155"},"functionSelector":"f242432a","id":641,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"3443:16:5","nodeType":"FunctionDefinition","parameters":{"id":609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":600,"mutability":"mutable","name":"from","nameLocation":"3468:4:5","nodeType":"VariableDeclaration","scope":641,"src":"3460:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":599,"name":"address","nodeType":"ElementaryTypeName","src":"3460:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":602,"mutability":"mutable","name":"to","nameLocation":"3482:2:5","nodeType":"VariableDeclaration","scope":641,"src":"3474:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":601,"name":"address","nodeType":"ElementaryTypeName","src":"3474:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":604,"mutability":"mutable","name":"id","nameLocation":"3494:2:5","nodeType":"VariableDeclaration","scope":641,"src":"3486:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":603,"name":"uint256","nodeType":"ElementaryTypeName","src":"3486:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":606,"mutability":"mutable","name":"value","nameLocation":"3506:5:5","nodeType":"VariableDeclaration","scope":641,"src":"3498:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":605,"name":"uint256","nodeType":"ElementaryTypeName","src":"3498:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":608,"mutability":"mutable","name":"data","nameLocation":"3526:4:5","nodeType":"VariableDeclaration","scope":641,"src":"3513:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":607,"name":"bytes","nodeType":"ElementaryTypeName","src":"3513:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3459:72:5"},"returnParameters":{"id":610,"nodeType":"ParameterList","parameters":[],"src":"3547:0:5"},"scope":1291,"src":"3434:351:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1413],"body":{"id":686,"nodeType":"Block","src":"4004:245:5","statements":[{"assignments":[658],"declarations":[{"constant":false,"id":658,"mutability":"mutable","name":"sender","nameLocation":"4022:6:5","nodeType":"VariableDeclaration","scope":686,"src":"4014:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":657,"name":"address","nodeType":"ElementaryTypeName","src":"4014:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":661,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":659,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3731,"src":"4031:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4031:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4014:29:5"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":662,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"4057:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":663,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"4065:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4057:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4075:31:5","subExpression":{"arguments":[{"id":666,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"4093:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":667,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"4099:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":665,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"4076:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4076:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4057:49:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":677,"nodeType":"IfStatement","src":"4053:129:5","trueBody":{"id":676,"nodeType":"Block","src":"4108:74:5","statements":[{"errorCall":{"arguments":[{"id":672,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"4158:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":673,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"4166:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":671,"name":"ERC1155MissingApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":356,"src":"4129:28:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4129:42:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":675,"nodeType":"RevertStatement","src":"4122:49:5"}]}},{"expression":{"arguments":[{"id":679,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"4214:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":680,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":646,"src":"4220:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":681,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"4224:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":682,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":652,"src":"4229:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":683,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":654,"src":"4237:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":678,"name":"_safeBatchTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"4191:22:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4191:51:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":685,"nodeType":"ExpressionStatement","src":"4191:51:5"}]},"documentation":{"id":642,"nodeType":"StructuredDocumentation","src":"3791:24:5","text":"@inheritdoc IERC1155"},"functionSelector":"2eb2c2d6","id":687,"implemented":true,"kind":"function","modifiers":[],"name":"safeBatchTransferFrom","nameLocation":"3829:21:5","nodeType":"FunctionDefinition","parameters":{"id":655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":644,"mutability":"mutable","name":"from","nameLocation":"3868:4:5","nodeType":"VariableDeclaration","scope":687,"src":"3860:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":643,"name":"address","nodeType":"ElementaryTypeName","src":"3860:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":646,"mutability":"mutable","name":"to","nameLocation":"3890:2:5","nodeType":"VariableDeclaration","scope":687,"src":"3882:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":645,"name":"address","nodeType":"ElementaryTypeName","src":"3882:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":649,"mutability":"mutable","name":"ids","nameLocation":"3919:3:5","nodeType":"VariableDeclaration","scope":687,"src":"3902:20:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":647,"name":"uint256","nodeType":"ElementaryTypeName","src":"3902:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":648,"nodeType":"ArrayTypeName","src":"3902:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":652,"mutability":"mutable","name":"values","nameLocation":"3949:6:5","nodeType":"VariableDeclaration","scope":687,"src":"3932:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":650,"name":"uint256","nodeType":"ElementaryTypeName","src":"3932:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":651,"nodeType":"ArrayTypeName","src":"3932:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":654,"mutability":"mutable","name":"data","nameLocation":"3978:4:5","nodeType":"VariableDeclaration","scope":687,"src":"3965:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":653,"name":"bytes","nodeType":"ElementaryTypeName","src":"3965:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3850:138:5"},"returnParameters":{"id":656,"nodeType":"ParameterList","parameters":[],"src":"4004:0:5"},"scope":1291,"src":"3820:429:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":839,"nodeType":"Block","src":"5057:1174:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":701,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"5071:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5075:6:5","memberName":"length","nodeType":"MemberAccess","src":"5071:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":703,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":698,"src":"5085:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5092:6:5","memberName":"length","nodeType":"MemberAccess","src":"5085:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5071:27:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":714,"nodeType":"IfStatement","src":"5067:117:5","trueBody":{"id":713,"nodeType":"Block","src":"5100:84:5","statements":[{"errorCall":{"arguments":[{"expression":{"id":707,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"5147:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5151:6:5","memberName":"length","nodeType":"MemberAccess","src":"5147:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":709,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":698,"src":"5159:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5166:6:5","memberName":"length","nodeType":"MemberAccess","src":"5159:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":706,"name":"ERC1155InvalidArrayLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":373,"src":"5121:25:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5121:52:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":712,"nodeType":"RevertStatement","src":"5114:59:5"}]}},{"assignments":[716],"declarations":[{"constant":false,"id":716,"mutability":"mutable","name":"operator","nameLocation":"5202:8:5","nodeType":"VariableDeclaration","scope":839,"src":"5194:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":715,"name":"address","nodeType":"ElementaryTypeName","src":"5194:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":719,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":717,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3731,"src":"5213:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5213:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5194:31:5"},{"body":{"id":800,"nodeType":"Block","src":"5277:650:5","statements":[{"assignments":[732],"declarations":[{"constant":false,"id":732,"mutability":"mutable","name":"id","nameLocation":"5299:2:5","nodeType":"VariableDeclaration","scope":800,"src":"5291:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":731,"name":"uint256","nodeType":"ElementaryTypeName","src":"5291:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":737,"initialValue":{"arguments":[{"id":735,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":721,"src":"5327:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":733,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"5304:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5308:18:5","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":3605,"src":"5304:22:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5304:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5291:38:5"},{"assignments":[739],"declarations":[{"constant":false,"id":739,"mutability":"mutable","name":"value","nameLocation":"5351:5:5","nodeType":"VariableDeclaration","scope":800,"src":"5343:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":738,"name":"uint256","nodeType":"ElementaryTypeName","src":"5343:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":744,"initialValue":{"arguments":[{"id":742,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":721,"src":"5385:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":740,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":698,"src":"5359:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5366:18:5","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":3605,"src":"5359:25:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5359:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5343:44:5"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":745,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":690,"src":"5406:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5422:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":747,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5414:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":746,"name":"address","nodeType":"ElementaryTypeName","src":"5414:7:5","typeDescriptions":{}}},"id":749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5414:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5406:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":783,"nodeType":"IfStatement","src":"5402:420:5","trueBody":{"id":782,"nodeType":"Block","src":"5426:396:5","statements":[{"assignments":[752],"declarations":[{"constant":false,"id":752,"mutability":"mutable","name":"fromBalance","nameLocation":"5452:11:5","nodeType":"VariableDeclaration","scope":782,"src":"5444:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":751,"name":"uint256","nodeType":"ElementaryTypeName","src":"5444:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":758,"initialValue":{"baseExpression":{"baseExpression":{"id":753,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"5466:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":755,"indexExpression":{"id":754,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":732,"src":"5476:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5466:13:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":757,"indexExpression":{"id":756,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":690,"src":"5480:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5466:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5444:41:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":759,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"5507:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":760,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":739,"src":"5521:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5507:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":770,"nodeType":"IfStatement","src":"5503:129:5","trueBody":{"id":769,"nodeType":"Block","src":"5528:104:5","statements":[{"errorCall":{"arguments":[{"id":763,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":690,"src":"5584:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":764,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"5590:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":765,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":739,"src":"5603:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":766,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":732,"src":"5610:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":762,"name":"ERC1155InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"5557:26:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256,uint256) pure"}},"id":767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5557:56:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":768,"nodeType":"RevertStatement","src":"5550:63:5"}]}},{"id":781,"nodeType":"UncheckedBlock","src":"5649:159:5","statements":[{"expression":{"id":779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":771,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"5748:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":774,"indexExpression":{"id":772,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":732,"src":"5758:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5748:13:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":775,"indexExpression":{"id":773,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":690,"src":"5762:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5748:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":776,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"5770:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":777,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":739,"src":"5784:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5770:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5748:41:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":780,"nodeType":"ExpressionStatement","src":"5748:41:5"}]}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":784,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":692,"src":"5840:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5854:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":786,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5846:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":785,"name":"address","nodeType":"ElementaryTypeName","src":"5846:7:5","typeDescriptions":{}}},"id":788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5846:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5840:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":799,"nodeType":"IfStatement","src":"5836:81:5","trueBody":{"id":798,"nodeType":"Block","src":"5858:59:5","statements":[{"expression":{"id":796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":790,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"5876:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":793,"indexExpression":{"id":791,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":732,"src":"5886:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5876:13:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":794,"indexExpression":{"id":792,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":692,"src":"5890:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5876:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":795,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":739,"src":"5897:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5876:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":797,"nodeType":"ExpressionStatement","src":"5876:26:5"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":724,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":721,"src":"5256:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":725,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"5260:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5264:6:5","memberName":"length","nodeType":"MemberAccess","src":"5260:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5256:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":801,"initializationExpression":{"assignments":[721],"declarations":[{"constant":false,"id":721,"mutability":"mutable","name":"i","nameLocation":"5249:1:5","nodeType":"VariableDeclaration","scope":801,"src":"5241:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":720,"name":"uint256","nodeType":"ElementaryTypeName","src":"5241:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":723,"initialValue":{"hexValue":"30","id":722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5253:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5241:13:5"},"loopExpression":{"expression":{"id":729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"5272:3:5","subExpression":{"id":728,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":721,"src":"5274:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":730,"nodeType":"ExpressionStatement","src":"5272:3:5"},"nodeType":"ForStatement","src":"5236:691:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":802,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"5941:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5945:6:5","memberName":"length","nodeType":"MemberAccess","src":"5941:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5955:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5941:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":837,"nodeType":"Block","src":"6149:76:5","statements":[{"eventCall":{"arguments":[{"id":830,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":716,"src":"6182:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":831,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":690,"src":"6192:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":832,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":692,"src":"6198:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":833,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"6202:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":834,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":698,"src":"6207:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":829,"name":"TransferBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1326,"src":"6168:13:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory)"}},"id":835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6168:46:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":836,"nodeType":"EmitStatement","src":"6163:51:5"}]},"id":838,"nodeType":"IfStatement","src":"5937:288:5","trueBody":{"id":828,"nodeType":"Block","src":"5958:185:5","statements":[{"assignments":[807],"declarations":[{"constant":false,"id":807,"mutability":"mutable","name":"id","nameLocation":"5980:2:5","nodeType":"VariableDeclaration","scope":828,"src":"5972:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":806,"name":"uint256","nodeType":"ElementaryTypeName","src":"5972:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":812,"initialValue":{"arguments":[{"hexValue":"30","id":810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6008:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":808,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"5985:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5989:18:5","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":3605,"src":"5985:22:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5985:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5972:38:5"},{"assignments":[814],"declarations":[{"constant":false,"id":814,"mutability":"mutable","name":"value","nameLocation":"6032:5:5","nodeType":"VariableDeclaration","scope":828,"src":"6024:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":813,"name":"uint256","nodeType":"ElementaryTypeName","src":"6024:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":819,"initialValue":{"arguments":[{"hexValue":"30","id":817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6066:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":815,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":698,"src":"6040:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6047:18:5","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":3605,"src":"6040:25:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6040:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6024:44:5"},{"eventCall":{"arguments":[{"id":821,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":716,"src":"6102:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":822,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":690,"src":"6112:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":823,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":692,"src":"6118:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":824,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":807,"src":"6122:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":825,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"6126:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":820,"name":"TransferSingle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1311,"src":"6087:14:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,uint256)"}},"id":826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6087:45:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":827,"nodeType":"EmitStatement","src":"6082:50:5"}]}}]},"documentation":{"id":688,"nodeType":"StructuredDocumentation","src":"4255:690:5","text":" @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n (or `to`) is the zero address.\n Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n Requirements:\n - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n - `ids` and `values` must have the same length.\n NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead."},"id":840,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"4959:7:5","nodeType":"FunctionDefinition","parameters":{"id":699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":690,"mutability":"mutable","name":"from","nameLocation":"4975:4:5","nodeType":"VariableDeclaration","scope":840,"src":"4967:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":689,"name":"address","nodeType":"ElementaryTypeName","src":"4967:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":692,"mutability":"mutable","name":"to","nameLocation":"4989:2:5","nodeType":"VariableDeclaration","scope":840,"src":"4981:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":691,"name":"address","nodeType":"ElementaryTypeName","src":"4981:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":695,"mutability":"mutable","name":"ids","nameLocation":"5010:3:5","nodeType":"VariableDeclaration","scope":840,"src":"4993:20:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":693,"name":"uint256","nodeType":"ElementaryTypeName","src":"4993:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":694,"nodeType":"ArrayTypeName","src":"4993:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":698,"mutability":"mutable","name":"values","nameLocation":"5032:6:5","nodeType":"VariableDeclaration","scope":840,"src":"5015:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":696,"name":"uint256","nodeType":"ElementaryTypeName","src":"5015:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":697,"nodeType":"ArrayTypeName","src":"5015:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"4966:73:5"},"returnParameters":{"id":700,"nodeType":"ParameterList","parameters":[],"src":"5057:0:5"},"scope":1291,"src":"4950:1281:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":919,"nodeType":"Block","src":"7001:509:5","statements":[{"expression":{"arguments":[{"id":857,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":843,"src":"7019:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":858,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"7025:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":859,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"7029:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":860,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"7034:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":856,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":840,"src":"7011:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory)"}},"id":861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7011:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":862,"nodeType":"ExpressionStatement","src":"7011:30:5"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":863,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"7055:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7069:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":865,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7061:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":864,"name":"address","nodeType":"ElementaryTypeName","src":"7061:7:5","typeDescriptions":{}}},"id":867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7061:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7055:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":918,"nodeType":"IfStatement","src":"7051:453:5","trueBody":{"id":917,"nodeType":"Block","src":"7073:431:5","statements":[{"assignments":[870],"declarations":[{"constant":false,"id":870,"mutability":"mutable","name":"operator","nameLocation":"7095:8:5","nodeType":"VariableDeclaration","scope":917,"src":"7087:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":869,"name":"address","nodeType":"ElementaryTypeName","src":"7087:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":873,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":871,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3731,"src":"7106:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7106:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7087:31:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":874,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"7136:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7140:6:5","memberName":"length","nodeType":"MemberAccess","src":"7136:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7150:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7136:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":915,"nodeType":"Block","src":"7382:112:5","statements":[{"expression":{"arguments":[{"id":907,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"7441:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":908,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":843,"src":"7451:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":909,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"7457:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":910,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"7461:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":911,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"7466:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":912,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"7474:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":904,"name":"ERC1155Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1626,"src":"7400:12:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1155Utils_$1626_$","typeString":"type(library ERC1155Utils)"}},"id":906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7413:27:5","memberName":"checkOnERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":1625,"src":"7400:40:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7400:79:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":914,"nodeType":"ExpressionStatement","src":"7400:79:5"}]},"id":916,"nodeType":"IfStatement","src":"7132:362:5","trueBody":{"id":903,"nodeType":"Block","src":"7153:223:5","statements":[{"assignments":[879],"declarations":[{"constant":false,"id":879,"mutability":"mutable","name":"id","nameLocation":"7179:2:5","nodeType":"VariableDeclaration","scope":903,"src":"7171:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":878,"name":"uint256","nodeType":"ElementaryTypeName","src":"7171:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":884,"initialValue":{"arguments":[{"hexValue":"30","id":882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7207:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":880,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"7184:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7188:18:5","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":3605,"src":"7184:22:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7184:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7171:38:5"},{"assignments":[886],"declarations":[{"constant":false,"id":886,"mutability":"mutable","name":"value","nameLocation":"7235:5:5","nodeType":"VariableDeclaration","scope":903,"src":"7227:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":885,"name":"uint256","nodeType":"ElementaryTypeName","src":"7227:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":891,"initialValue":{"arguments":[{"hexValue":"30","id":889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7269:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":887,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"7243:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7250:18:5","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":3605,"src":"7243:25:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7243:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7227:44:5"},{"expression":{"arguments":[{"id":895,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"7325:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":896,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":843,"src":"7335:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":897,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"7341:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":898,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":879,"src":"7345:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":899,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":886,"src":"7349:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":900,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"7356:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":892,"name":"ERC1155Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1626,"src":"7289:12:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1155Utils_$1626_$","typeString":"type(library ERC1155Utils)"}},"id":894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7302:22:5","memberName":"checkOnERC1155Received","nodeType":"MemberAccess","referencedDeclaration":1551,"src":"7289:35:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,uint256,bytes memory)"}},"id":901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7289:72:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":902,"nodeType":"ExpressionStatement","src":"7289:72:5"}]}}]}}]},"documentation":{"id":841,"nodeType":"StructuredDocumentation","src":"6237:568:5","text":" @dev Version of {_update} that performs the token acceptance check by calling\n {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n contains code (eg. is a smart contract at the moment of execution).\n IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n update to the contract state after this function would break the check-effect-interaction pattern. Consider\n overriding {_update} instead."},"id":920,"implemented":true,"kind":"function","modifiers":[],"name":"_updateWithAcceptanceCheck","nameLocation":"6819:26:5","nodeType":"FunctionDefinition","parameters":{"id":854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":843,"mutability":"mutable","name":"from","nameLocation":"6863:4:5","nodeType":"VariableDeclaration","scope":920,"src":"6855:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":842,"name":"address","nodeType":"ElementaryTypeName","src":"6855:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":845,"mutability":"mutable","name":"to","nameLocation":"6885:2:5","nodeType":"VariableDeclaration","scope":920,"src":"6877:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":844,"name":"address","nodeType":"ElementaryTypeName","src":"6877:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":848,"mutability":"mutable","name":"ids","nameLocation":"6914:3:5","nodeType":"VariableDeclaration","scope":920,"src":"6897:20:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":846,"name":"uint256","nodeType":"ElementaryTypeName","src":"6897:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":847,"nodeType":"ArrayTypeName","src":"6897:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":851,"mutability":"mutable","name":"values","nameLocation":"6944:6:5","nodeType":"VariableDeclaration","scope":920,"src":"6927:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":849,"name":"uint256","nodeType":"ElementaryTypeName","src":"6927:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":850,"nodeType":"ArrayTypeName","src":"6927:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":853,"mutability":"mutable","name":"data","nameLocation":"6973:4:5","nodeType":"VariableDeclaration","scope":920,"src":"6960:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":852,"name":"bytes","nodeType":"ElementaryTypeName","src":"6960:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6845:138:5"},"returnParameters":{"id":855,"nodeType":"ParameterList","parameters":[],"src":"7001:0:5"},"scope":1291,"src":"6810:700:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":985,"nodeType":"Block","src":"8075:355:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":934,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":925,"src":"8089:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8103:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":936,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8095:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":935,"name":"address","nodeType":"ElementaryTypeName","src":"8095:7:5","typeDescriptions":{}}},"id":938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8095:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8089:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":948,"nodeType":"IfStatement","src":"8085:88:5","trueBody":{"id":947,"nodeType":"Block","src":"8107:66:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8159:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":942,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8151:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":941,"name":"address","nodeType":"ElementaryTypeName","src":"8151:7:5","typeDescriptions":{}}},"id":944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8151:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":940,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"8128:22:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8128:34:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":946,"nodeType":"RevertStatement","src":"8121:41:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":949,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":923,"src":"8186:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8202:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":951,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8194:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":950,"name":"address","nodeType":"ElementaryTypeName","src":"8194:7:5","typeDescriptions":{}}},"id":953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8194:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8186:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":963,"nodeType":"IfStatement","src":"8182:88:5","trueBody":{"id":962,"nodeType":"Block","src":"8206:64:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8256:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":957,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8248:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":956,"name":"address","nodeType":"ElementaryTypeName","src":"8248:7:5","typeDescriptions":{}}},"id":959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8248:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":955,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"8227:20:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8227:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":961,"nodeType":"RevertStatement","src":"8220:39:5"}]}},{"assignments":[968,971],"declarations":[{"constant":false,"id":968,"mutability":"mutable","name":"ids","nameLocation":"8297:3:5","nodeType":"VariableDeclaration","scope":985,"src":"8280:20:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":966,"name":"uint256","nodeType":"ElementaryTypeName","src":"8280:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":967,"nodeType":"ArrayTypeName","src":"8280:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":971,"mutability":"mutable","name":"values","nameLocation":"8319:6:5","nodeType":"VariableDeclaration","scope":985,"src":"8302:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":969,"name":"uint256","nodeType":"ElementaryTypeName","src":"8302:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":970,"nodeType":"ArrayTypeName","src":"8302:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":976,"initialValue":{"arguments":[{"id":973,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"8348:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":974,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":929,"src":"8352:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":972,"name":"_asSingletonArrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1290,"src":"8329:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"}},"id":975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8329:29:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"8279:79:5"},{"expression":{"arguments":[{"id":978,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":923,"src":"8395:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":979,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":925,"src":"8401:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":980,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":968,"src":"8405:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":981,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"8410:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":982,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":931,"src":"8418:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":977,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"8368:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8368:55:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":984,"nodeType":"ExpressionStatement","src":"8368:55:5"}]},"documentation":{"id":921,"nodeType":"StructuredDocumentation","src":"7516:446:5","text":" @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"id":986,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransferFrom","nameLocation":"7976:17:5","nodeType":"FunctionDefinition","parameters":{"id":932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":923,"mutability":"mutable","name":"from","nameLocation":"8002:4:5","nodeType":"VariableDeclaration","scope":986,"src":"7994:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":922,"name":"address","nodeType":"ElementaryTypeName","src":"7994:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":925,"mutability":"mutable","name":"to","nameLocation":"8016:2:5","nodeType":"VariableDeclaration","scope":986,"src":"8008:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":924,"name":"address","nodeType":"ElementaryTypeName","src":"8008:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":927,"mutability":"mutable","name":"id","nameLocation":"8028:2:5","nodeType":"VariableDeclaration","scope":986,"src":"8020:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":926,"name":"uint256","nodeType":"ElementaryTypeName","src":"8020:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":929,"mutability":"mutable","name":"value","nameLocation":"8040:5:5","nodeType":"VariableDeclaration","scope":986,"src":"8032:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":928,"name":"uint256","nodeType":"ElementaryTypeName","src":"8032:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":931,"mutability":"mutable","name":"data","nameLocation":"8060:4:5","nodeType":"VariableDeclaration","scope":986,"src":"8047:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":930,"name":"bytes","nodeType":"ElementaryTypeName","src":"8047:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7993:72:5"},"returnParameters":{"id":933,"nodeType":"ParameterList","parameters":[],"src":"8075:0:5"},"scope":1291,"src":"7967:463:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1040,"nodeType":"Block","src":"9010:266:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1002,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"9024:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9038:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1004,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9030:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1003,"name":"address","nodeType":"ElementaryTypeName","src":"9030:7:5","typeDescriptions":{}}},"id":1006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9030:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9024:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1016,"nodeType":"IfStatement","src":"9020:88:5","trueBody":{"id":1015,"nodeType":"Block","src":"9042:66:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9094:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1010,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9086:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1009,"name":"address","nodeType":"ElementaryTypeName","src":"9086:7:5","typeDescriptions":{}}},"id":1012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9086:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1008,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"9063:22:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9063:34:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1014,"nodeType":"RevertStatement","src":"9056:41:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1017,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"9121:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9137:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1019,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9129:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1018,"name":"address","nodeType":"ElementaryTypeName","src":"9129:7:5","typeDescriptions":{}}},"id":1021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9129:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9121:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1031,"nodeType":"IfStatement","src":"9117:88:5","trueBody":{"id":1030,"nodeType":"Block","src":"9141:64:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9191:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1025,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9183:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1024,"name":"address","nodeType":"ElementaryTypeName","src":"9183:7:5","typeDescriptions":{}}},"id":1027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9183:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1023,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"9162:20:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9162:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1029,"nodeType":"RevertStatement","src":"9155:39:5"}]}},{"expression":{"arguments":[{"id":1033,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"9241:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1034,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"9247:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1035,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"9251:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1036,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":997,"src":"9256:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1037,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":999,"src":"9264:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1032,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"9214:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9214:55:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1039,"nodeType":"ExpressionStatement","src":"9214:55:5"}]},"documentation":{"id":987,"nodeType":"StructuredDocumentation","src":"8436:390:5","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value.\n - `ids` and `values` must have the same length."},"id":1041,"implemented":true,"kind":"function","modifiers":[],"name":"_safeBatchTransferFrom","nameLocation":"8840:22:5","nodeType":"FunctionDefinition","parameters":{"id":1000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":989,"mutability":"mutable","name":"from","nameLocation":"8880:4:5","nodeType":"VariableDeclaration","scope":1041,"src":"8872:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":988,"name":"address","nodeType":"ElementaryTypeName","src":"8872:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":991,"mutability":"mutable","name":"to","nameLocation":"8902:2:5","nodeType":"VariableDeclaration","scope":1041,"src":"8894:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":990,"name":"address","nodeType":"ElementaryTypeName","src":"8894:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":994,"mutability":"mutable","name":"ids","nameLocation":"8931:3:5","nodeType":"VariableDeclaration","scope":1041,"src":"8914:20:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":992,"name":"uint256","nodeType":"ElementaryTypeName","src":"8914:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":993,"nodeType":"ArrayTypeName","src":"8914:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":997,"mutability":"mutable","name":"values","nameLocation":"8961:6:5","nodeType":"VariableDeclaration","scope":1041,"src":"8944:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":995,"name":"uint256","nodeType":"ElementaryTypeName","src":"8944:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":996,"nodeType":"ArrayTypeName","src":"8944:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":999,"mutability":"mutable","name":"data","nameLocation":"8990:4:5","nodeType":"VariableDeclaration","scope":1041,"src":"8977:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":998,"name":"bytes","nodeType":"ElementaryTypeName","src":"8977:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8862:138:5"},"returnParameters":{"id":1001,"nodeType":"ParameterList","parameters":[],"src":"9010:0:5"},"scope":1291,"src":"8831:445:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1051,"nodeType":"Block","src":"10154:30:5","statements":[{"expression":{"id":1049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1047,"name":"_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":424,"src":"10164:4:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1048,"name":"newuri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"10171:6:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"10164:13:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1050,"nodeType":"ExpressionStatement","src":"10164:13:5"}]},"documentation":{"id":1042,"nodeType":"StructuredDocumentation","src":"9282:811:5","text":" @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the values in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."},"id":1052,"implemented":true,"kind":"function","modifiers":[],"name":"_setURI","nameLocation":"10107:7:5","nodeType":"FunctionDefinition","parameters":{"id":1045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1044,"mutability":"mutable","name":"newuri","nameLocation":"10129:6:5","nodeType":"VariableDeclaration","scope":1052,"src":"10115:20:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1043,"name":"string","nodeType":"ElementaryTypeName","src":"10115:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10114:22:5"},"returnParameters":{"id":1046,"nodeType":"ParameterList","parameters":[],"src":"10154:0:5"},"scope":1291,"src":"10098:86:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1103,"nodeType":"Block","src":"10644:264:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1064,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1055,"src":"10658:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10672:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1066,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10664:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1065,"name":"address","nodeType":"ElementaryTypeName","src":"10664:7:5","typeDescriptions":{}}},"id":1068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10664:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10658:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1078,"nodeType":"IfStatement","src":"10654:88:5","trueBody":{"id":1077,"nodeType":"Block","src":"10676:66:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10728:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1072,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10720:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1071,"name":"address","nodeType":"ElementaryTypeName","src":"10720:7:5","typeDescriptions":{}}},"id":1074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10720:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1070,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"10697:22:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10697:34:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1076,"nodeType":"RevertStatement","src":"10690:41:5"}]}},{"assignments":[1083,1086],"declarations":[{"constant":false,"id":1083,"mutability":"mutable","name":"ids","nameLocation":"10769:3:5","nodeType":"VariableDeclaration","scope":1103,"src":"10752:20:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1081,"name":"uint256","nodeType":"ElementaryTypeName","src":"10752:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1082,"nodeType":"ArrayTypeName","src":"10752:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1086,"mutability":"mutable","name":"values","nameLocation":"10791:6:5","nodeType":"VariableDeclaration","scope":1103,"src":"10774:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1084,"name":"uint256","nodeType":"ElementaryTypeName","src":"10774:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1085,"nodeType":"ArrayTypeName","src":"10774:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1091,"initialValue":{"arguments":[{"id":1088,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"10820:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1089,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1059,"src":"10824:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1087,"name":"_asSingletonArrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1290,"src":"10801:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"}},"id":1090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10801:29:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"10751:79:5"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10875:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1094,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10867:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1093,"name":"address","nodeType":"ElementaryTypeName","src":"10867:7:5","typeDescriptions":{}}},"id":1096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10867:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1097,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1055,"src":"10879:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1098,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1083,"src":"10883:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1099,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1086,"src":"10888:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1100,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"10896:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1092,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"10840:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10840:61:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1102,"nodeType":"ExpressionStatement","src":"10840:61:5"}]},"documentation":{"id":1053,"nodeType":"StructuredDocumentation","src":"10190:367:5","text":" @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"id":1104,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"10571:5:5","nodeType":"FunctionDefinition","parameters":{"id":1062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1055,"mutability":"mutable","name":"to","nameLocation":"10585:2:5","nodeType":"VariableDeclaration","scope":1104,"src":"10577:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1054,"name":"address","nodeType":"ElementaryTypeName","src":"10577:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1057,"mutability":"mutable","name":"id","nameLocation":"10597:2:5","nodeType":"VariableDeclaration","scope":1104,"src":"10589:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1056,"name":"uint256","nodeType":"ElementaryTypeName","src":"10589:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1059,"mutability":"mutable","name":"value","nameLocation":"10609:5:5","nodeType":"VariableDeclaration","scope":1104,"src":"10601:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1058,"name":"uint256","nodeType":"ElementaryTypeName","src":"10601:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1061,"mutability":"mutable","name":"data","nameLocation":"10629:4:5","nodeType":"VariableDeclaration","scope":1104,"src":"10616:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1060,"name":"bytes","nodeType":"ElementaryTypeName","src":"10616:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10576:58:5"},"returnParameters":{"id":1063,"nodeType":"ParameterList","parameters":[],"src":"10644:0:5"},"scope":1291,"src":"10562:346:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1144,"nodeType":"Block","src":"11446:175:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1118,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1107,"src":"11460:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11474:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1120,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11466:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1119,"name":"address","nodeType":"ElementaryTypeName","src":"11466:7:5","typeDescriptions":{}}},"id":1122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11466:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11460:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1132,"nodeType":"IfStatement","src":"11456:88:5","trueBody":{"id":1131,"nodeType":"Block","src":"11478:66:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11530:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1126,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11522:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1125,"name":"address","nodeType":"ElementaryTypeName","src":"11522:7:5","typeDescriptions":{}}},"id":1128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11522:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1124,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"11499:22:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11499:34:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1130,"nodeType":"RevertStatement","src":"11492:41:5"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11588:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1135,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11580:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1134,"name":"address","nodeType":"ElementaryTypeName","src":"11580:7:5","typeDescriptions":{}}},"id":1137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11580:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1138,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1107,"src":"11592:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1139,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1110,"src":"11596:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1140,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"11601:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1141,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"11609:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1133,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"11553:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11553:61:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1143,"nodeType":"ExpressionStatement","src":"11553:61:5"}]},"documentation":{"id":1105,"nodeType":"StructuredDocumentation","src":"10914:420:5","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `values` must have the same length.\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."},"id":1145,"implemented":true,"kind":"function","modifiers":[],"name":"_mintBatch","nameLocation":"11348:10:5","nodeType":"FunctionDefinition","parameters":{"id":1116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1107,"mutability":"mutable","name":"to","nameLocation":"11367:2:5","nodeType":"VariableDeclaration","scope":1145,"src":"11359:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1106,"name":"address","nodeType":"ElementaryTypeName","src":"11359:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1110,"mutability":"mutable","name":"ids","nameLocation":"11388:3:5","nodeType":"VariableDeclaration","scope":1145,"src":"11371:20:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1108,"name":"uint256","nodeType":"ElementaryTypeName","src":"11371:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1109,"nodeType":"ArrayTypeName","src":"11371:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1113,"mutability":"mutable","name":"values","nameLocation":"11410:6:5","nodeType":"VariableDeclaration","scope":1145,"src":"11393:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1111,"name":"uint256","nodeType":"ElementaryTypeName","src":"11393:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1112,"nodeType":"ArrayTypeName","src":"11393:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1115,"mutability":"mutable","name":"data","nameLocation":"11431:4:5","nodeType":"VariableDeclaration","scope":1145,"src":"11418:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1114,"name":"bytes","nodeType":"ElementaryTypeName","src":"11418:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"11358:78:5"},"returnParameters":{"id":1117,"nodeType":"ParameterList","parameters":[],"src":"11446:0:5"},"scope":1291,"src":"11339:282:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1194,"nodeType":"Block","src":"11980:264:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1155,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1148,"src":"11994:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12010:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1157,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12002:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1156,"name":"address","nodeType":"ElementaryTypeName","src":"12002:7:5","typeDescriptions":{}}},"id":1159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12002:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11994:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1169,"nodeType":"IfStatement","src":"11990:88:5","trueBody":{"id":1168,"nodeType":"Block","src":"12014:64:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12064:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1163,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12056:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1162,"name":"address","nodeType":"ElementaryTypeName","src":"12056:7:5","typeDescriptions":{}}},"id":1165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12056:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1161,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"12035:20:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12035:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1167,"nodeType":"RevertStatement","src":"12028:39:5"}]}},{"assignments":[1174,1177],"declarations":[{"constant":false,"id":1174,"mutability":"mutable","name":"ids","nameLocation":"12105:3:5","nodeType":"VariableDeclaration","scope":1194,"src":"12088:20:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1172,"name":"uint256","nodeType":"ElementaryTypeName","src":"12088:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1173,"nodeType":"ArrayTypeName","src":"12088:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1177,"mutability":"mutable","name":"values","nameLocation":"12127:6:5","nodeType":"VariableDeclaration","scope":1194,"src":"12110:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1175,"name":"uint256","nodeType":"ElementaryTypeName","src":"12110:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1176,"nodeType":"ArrayTypeName","src":"12110:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1182,"initialValue":{"arguments":[{"id":1179,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1150,"src":"12156:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1180,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1152,"src":"12160:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1178,"name":"_asSingletonArrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1290,"src":"12137:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"}},"id":1181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12137:29:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"12087:79:5"},{"expression":{"arguments":[{"id":1184,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1148,"src":"12203:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12217:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1186,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12209:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1185,"name":"address","nodeType":"ElementaryTypeName","src":"12209:7:5","typeDescriptions":{}}},"id":1188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12209:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1189,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1174,"src":"12221:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1190,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1177,"src":"12226:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"","id":1191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12234:2:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1183,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"12176:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12176:61:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1193,"nodeType":"ExpressionStatement","src":"12176:61:5"}]},"documentation":{"id":1146,"nodeType":"StructuredDocumentation","src":"11627:283:5","text":" @dev Destroys a `value` amount of tokens of type `id` from `from`\n Emits a {TransferSingle} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`."},"id":1195,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"11924:5:5","nodeType":"FunctionDefinition","parameters":{"id":1153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1148,"mutability":"mutable","name":"from","nameLocation":"11938:4:5","nodeType":"VariableDeclaration","scope":1195,"src":"11930:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1147,"name":"address","nodeType":"ElementaryTypeName","src":"11930:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1150,"mutability":"mutable","name":"id","nameLocation":"11952:2:5","nodeType":"VariableDeclaration","scope":1195,"src":"11944:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1149,"name":"uint256","nodeType":"ElementaryTypeName","src":"11944:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1152,"mutability":"mutable","name":"value","nameLocation":"11964:5:5","nodeType":"VariableDeclaration","scope":1195,"src":"11956:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1151,"name":"uint256","nodeType":"ElementaryTypeName","src":"11956:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11929:41:5"},"returnParameters":{"id":1154,"nodeType":"ParameterList","parameters":[],"src":"11980:0:5"},"scope":1291,"src":"11915:329:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1233,"nodeType":"Block","src":"12690:175:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1207,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1198,"src":"12704:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12720:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1209,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12712:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1208,"name":"address","nodeType":"ElementaryTypeName","src":"12712:7:5","typeDescriptions":{}}},"id":1211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12712:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12704:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1221,"nodeType":"IfStatement","src":"12700:88:5","trueBody":{"id":1220,"nodeType":"Block","src":"12724:64:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12774:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1215,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12766:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1214,"name":"address","nodeType":"ElementaryTypeName","src":"12766:7:5","typeDescriptions":{}}},"id":1217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12766:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1213,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"12745:20:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12745:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1219,"nodeType":"RevertStatement","src":"12738:39:5"}]}},{"expression":{"arguments":[{"id":1223,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1198,"src":"12824:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12838:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1225,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12830:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1224,"name":"address","nodeType":"ElementaryTypeName","src":"12830:7:5","typeDescriptions":{}}},"id":1227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12830:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1228,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1201,"src":"12842:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1229,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1204,"src":"12847:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"","id":1230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12855:2:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1222,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"12797:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12797:61:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1232,"nodeType":"ExpressionStatement","src":"12797:61:5"}]},"documentation":{"id":1196,"nodeType":"StructuredDocumentation","src":"12250:345:5","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Emits a {TransferBatch} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`.\n - `ids` and `values` must have the same length."},"id":1234,"implemented":true,"kind":"function","modifiers":[],"name":"_burnBatch","nameLocation":"12609:10:5","nodeType":"FunctionDefinition","parameters":{"id":1205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1198,"mutability":"mutable","name":"from","nameLocation":"12628:4:5","nodeType":"VariableDeclaration","scope":1234,"src":"12620:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1197,"name":"address","nodeType":"ElementaryTypeName","src":"12620:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1201,"mutability":"mutable","name":"ids","nameLocation":"12651:3:5","nodeType":"VariableDeclaration","scope":1234,"src":"12634:20:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1199,"name":"uint256","nodeType":"ElementaryTypeName","src":"12634:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1200,"nodeType":"ArrayTypeName","src":"12634:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1204,"mutability":"mutable","name":"values","nameLocation":"12673:6:5","nodeType":"VariableDeclaration","scope":1234,"src":"12656:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1202,"name":"uint256","nodeType":"ElementaryTypeName","src":"12656:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1203,"nodeType":"ArrayTypeName","src":"12656:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12619:61:5"},"returnParameters":{"id":1206,"nodeType":"ParameterList","parameters":[],"src":"12690:0:5"},"scope":1291,"src":"12600:265:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1273,"nodeType":"Block","src":"13177:222:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1244,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1239,"src":"13191:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13211:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1246,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13203:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1245,"name":"address","nodeType":"ElementaryTypeName","src":"13203:7:5","typeDescriptions":{}}},"id":1248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13203:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13191:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1258,"nodeType":"IfStatement","src":"13187:94:5","trueBody":{"id":1257,"nodeType":"Block","src":"13215:66:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13267:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1252,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13259:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1251,"name":"address","nodeType":"ElementaryTypeName","src":"13259:7:5","typeDescriptions":{}}},"id":1254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13259:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1250,"name":"ERC1155InvalidOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":366,"src":"13236:22:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13236:34:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1256,"nodeType":"RevertStatement","src":"13229:41:5"}]}},{"expression":{"id":1265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1259,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":422,"src":"13290:18:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1262,"indexExpression":{"id":1260,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1237,"src":"13309:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13290:25:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1263,"indexExpression":{"id":1261,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1239,"src":"13316:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13290:35:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1264,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"13328:8:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13290:46:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1266,"nodeType":"ExpressionStatement","src":"13290:46:5"},{"eventCall":{"arguments":[{"id":1268,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1237,"src":"13366:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1269,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1239,"src":"13373:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1270,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"13383:8:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1267,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"13351:14:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13351:41:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1272,"nodeType":"EmitStatement","src":"13346:46:5"}]},"documentation":{"id":1235,"nodeType":"StructuredDocumentation","src":"12871:208:5","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the zero address."},"id":1274,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"13093:18:5","nodeType":"FunctionDefinition","parameters":{"id":1242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1237,"mutability":"mutable","name":"owner","nameLocation":"13120:5:5","nodeType":"VariableDeclaration","scope":1274,"src":"13112:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1236,"name":"address","nodeType":"ElementaryTypeName","src":"13112:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1239,"mutability":"mutable","name":"operator","nameLocation":"13135:8:5","nodeType":"VariableDeclaration","scope":1274,"src":"13127:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1238,"name":"address","nodeType":"ElementaryTypeName","src":"13127:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1241,"mutability":"mutable","name":"approved","nameLocation":"13150:8:5","nodeType":"VariableDeclaration","scope":1274,"src":"13145:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1240,"name":"bool","nodeType":"ElementaryTypeName","src":"13145:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"13111:48:5"},"returnParameters":{"id":1243,"nodeType":"ParameterList","parameters":[],"src":"13177:0:5"},"scope":1291,"src":"13084:315:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1289,"nodeType":"Block","src":"13673:664:5","statements":[{"AST":{"nodeType":"YulBlock","src":"13708:623:5","statements":[{"nodeType":"YulAssignment","src":"13766:21:5","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13782:4:5","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13776:5:5"},"nodeType":"YulFunctionCall","src":"13776:11:5"},"variableNames":[{"name":"array1","nodeType":"YulIdentifier","src":"13766:6:5"}]},{"expression":{"arguments":[{"name":"array1","nodeType":"YulIdentifier","src":"13844:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"13852:1:5","type":"","value":"1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13837:6:5"},"nodeType":"YulFunctionCall","src":"13837:17:5"},"nodeType":"YulExpressionStatement","src":"13837:17:5"},{"expression":{"arguments":[{"arguments":[{"name":"array1","nodeType":"YulIdentifier","src":"13975:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"13983:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13971:3:5"},"nodeType":"YulFunctionCall","src":"13971:17:5"},{"name":"element1","nodeType":"YulIdentifier","src":"13990:8:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13964:6:5"},"nodeType":"YulFunctionCall","src":"13964:35:5"},"nodeType":"YulExpressionStatement","src":"13964:35:5"},{"nodeType":"YulAssignment","src":"14090:27:5","value":{"arguments":[{"name":"array1","nodeType":"YulIdentifier","src":"14104:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"14112:4:5","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14100:3:5"},"nodeType":"YulFunctionCall","src":"14100:17:5"},"variableNames":[{"name":"array2","nodeType":"YulIdentifier","src":"14090:6:5"}]},{"expression":{"arguments":[{"name":"array2","nodeType":"YulIdentifier","src":"14137:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"14145:1:5","type":"","value":"1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14130:6:5"},"nodeType":"YulFunctionCall","src":"14130:17:5"},"nodeType":"YulExpressionStatement","src":"14130:17:5"},{"expression":{"arguments":[{"arguments":[{"name":"array2","nodeType":"YulIdentifier","src":"14171:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"14179:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14167:3:5"},"nodeType":"YulFunctionCall","src":"14167:17:5"},{"name":"element2","nodeType":"YulIdentifier","src":"14186:8:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14160:6:5"},"nodeType":"YulFunctionCall","src":"14160:35:5"},"nodeType":"YulExpressionStatement","src":"14160:35:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14297:4:5","type":"","value":"0x40"},{"arguments":[{"name":"array2","nodeType":"YulIdentifier","src":"14307:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"14315:4:5","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14303:3:5"},"nodeType":"YulFunctionCall","src":"14303:17:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14290:6:5"},"nodeType":"YulFunctionCall","src":"14290:31:5"},"nodeType":"YulExpressionStatement","src":"14290:31:5"}]},"evmVersion":"paris","externalReferences":[{"declaration":1283,"isOffset":false,"isSlot":false,"src":"13766:6:5","valueSize":1},{"declaration":1283,"isOffset":false,"isSlot":false,"src":"13844:6:5","valueSize":1},{"declaration":1283,"isOffset":false,"isSlot":false,"src":"13975:6:5","valueSize":1},{"declaration":1283,"isOffset":false,"isSlot":false,"src":"14104:6:5","valueSize":1},{"declaration":1286,"isOffset":false,"isSlot":false,"src":"14090:6:5","valueSize":1},{"declaration":1286,"isOffset":false,"isSlot":false,"src":"14137:6:5","valueSize":1},{"declaration":1286,"isOffset":false,"isSlot":false,"src":"14171:6:5","valueSize":1},{"declaration":1286,"isOffset":false,"isSlot":false,"src":"14307:6:5","valueSize":1},{"declaration":1277,"isOffset":false,"isSlot":false,"src":"13990:8:5","valueSize":1},{"declaration":1279,"isOffset":false,"isSlot":false,"src":"14186:8:5","valueSize":1}],"flags":["memory-safe"],"id":1288,"nodeType":"InlineAssembly","src":"13683:648:5"}]},"documentation":{"id":1275,"nodeType":"StructuredDocumentation","src":"13405:105:5","text":" @dev Creates an array in memory with only one value for each of the elements provided."},"id":1290,"implemented":true,"kind":"function","modifiers":[],"name":"_asSingletonArrays","nameLocation":"13524:18:5","nodeType":"FunctionDefinition","parameters":{"id":1280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1277,"mutability":"mutable","name":"element1","nameLocation":"13560:8:5","nodeType":"VariableDeclaration","scope":1290,"src":"13552:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1276,"name":"uint256","nodeType":"ElementaryTypeName","src":"13552:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1279,"mutability":"mutable","name":"element2","nameLocation":"13586:8:5","nodeType":"VariableDeclaration","scope":1290,"src":"13578:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1278,"name":"uint256","nodeType":"ElementaryTypeName","src":"13578:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13542:58:5"},"returnParameters":{"id":1287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1283,"mutability":"mutable","name":"array1","nameLocation":"13640:6:5","nodeType":"VariableDeclaration","scope":1290,"src":"13623:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1281,"name":"uint256","nodeType":"ElementaryTypeName","src":"13623:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1282,"nodeType":"ArrayTypeName","src":"13623:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1286,"mutability":"mutable","name":"array2","nameLocation":"13665:6:5","nodeType":"VariableDeclaration","scope":1290,"src":"13648:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1284,"name":"uint256","nodeType":"ElementaryTypeName","src":"13648:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1285,"nodeType":"ArrayTypeName","src":"13648:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"13622:50:5"},"scope":1291,"src":"13515:822:5","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1292,"src":"725:13614:5","usedErrors":[339,344,349,356,361,366,373],"usedEvents":[1311,1326,1335,1342]}],"src":"109:14231:5"},"id":5},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","exportedSymbols":{"IERC1155":[1414],"IERC165":[5273]},"id":1415,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1293,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"110:24:6"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1295,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1415,"sourceUnit":5274,"src":"136:62:6","symbolAliases":[{"foreign":{"id":1294,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5273,"src":"144:7:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1297,"name":"IERC165","nameLocations":["359:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":5273,"src":"359:7:6"},"id":1298,"nodeType":"InheritanceSpecifier","src":"359:7:6"}],"canonicalName":"IERC1155","contractDependencies":[],"contractKind":"interface","documentation":{"id":1296,"nodeType":"StructuredDocumentation","src":"200:136:6","text":" @dev Required interface of an ERC-1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[ERC]."},"fullyImplemented":false,"id":1414,"linearizedBaseContracts":[1414,5273],"name":"IERC1155","nameLocation":"347:8:6","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1299,"nodeType":"StructuredDocumentation","src":"373:125:6","text":" @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."},"eventSelector":"c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62","id":1311,"name":"TransferSingle","nameLocation":"509:14:6","nodeType":"EventDefinition","parameters":{"id":1310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1301,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"540:8:6","nodeType":"VariableDeclaration","scope":1311,"src":"524:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1300,"name":"address","nodeType":"ElementaryTypeName","src":"524:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1303,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"566:4:6","nodeType":"VariableDeclaration","scope":1311,"src":"550:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1302,"name":"address","nodeType":"ElementaryTypeName","src":"550:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1305,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"588:2:6","nodeType":"VariableDeclaration","scope":1311,"src":"572:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1304,"name":"address","nodeType":"ElementaryTypeName","src":"572:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1307,"indexed":false,"mutability":"mutable","name":"id","nameLocation":"600:2:6","nodeType":"VariableDeclaration","scope":1311,"src":"592:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1306,"name":"uint256","nodeType":"ElementaryTypeName","src":"592:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1309,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"612:5:6","nodeType":"VariableDeclaration","scope":1311,"src":"604:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1308,"name":"uint256","nodeType":"ElementaryTypeName","src":"604:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"523:95:6"},"src":"503:116:6"},{"anonymous":false,"documentation":{"id":1312,"nodeType":"StructuredDocumentation","src":"625:144:6","text":" @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."},"eventSelector":"4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb","id":1326,"name":"TransferBatch","nameLocation":"780:13:6","nodeType":"EventDefinition","parameters":{"id":1325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1314,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"819:8:6","nodeType":"VariableDeclaration","scope":1326,"src":"803:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1313,"name":"address","nodeType":"ElementaryTypeName","src":"803:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1316,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"853:4:6","nodeType":"VariableDeclaration","scope":1326,"src":"837:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1315,"name":"address","nodeType":"ElementaryTypeName","src":"837:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1318,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"883:2:6","nodeType":"VariableDeclaration","scope":1326,"src":"867:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1317,"name":"address","nodeType":"ElementaryTypeName","src":"867:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1321,"indexed":false,"mutability":"mutable","name":"ids","nameLocation":"905:3:6","nodeType":"VariableDeclaration","scope":1326,"src":"895:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1319,"name":"uint256","nodeType":"ElementaryTypeName","src":"895:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1320,"nodeType":"ArrayTypeName","src":"895:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1324,"indexed":false,"mutability":"mutable","name":"values","nameLocation":"928:6:6","nodeType":"VariableDeclaration","scope":1326,"src":"918:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1322,"name":"uint256","nodeType":"ElementaryTypeName","src":"918:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1323,"nodeType":"ArrayTypeName","src":"918:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"793:147:6"},"src":"774:167:6"},{"anonymous":false,"documentation":{"id":1327,"nodeType":"StructuredDocumentation","src":"947:147:6","text":" @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":1335,"name":"ApprovalForAll","nameLocation":"1105:14:6","nodeType":"EventDefinition","parameters":{"id":1334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1329,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1136:7:6","nodeType":"VariableDeclaration","scope":1335,"src":"1120:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1328,"name":"address","nodeType":"ElementaryTypeName","src":"1120:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1331,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"1161:8:6","nodeType":"VariableDeclaration","scope":1335,"src":"1145:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1330,"name":"address","nodeType":"ElementaryTypeName","src":"1145:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1333,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"1176:8:6","nodeType":"VariableDeclaration","scope":1335,"src":"1171:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1332,"name":"bool","nodeType":"ElementaryTypeName","src":"1171:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1119:66:6"},"src":"1099:87:6"},{"anonymous":false,"documentation":{"id":1336,"nodeType":"StructuredDocumentation","src":"1192:343:6","text":" @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."},"eventSelector":"6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b","id":1342,"name":"URI","nameLocation":"1546:3:6","nodeType":"EventDefinition","parameters":{"id":1341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1338,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"1557:5:6","nodeType":"VariableDeclaration","scope":1342,"src":"1550:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1337,"name":"string","nodeType":"ElementaryTypeName","src":"1550:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1340,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"1580:2:6","nodeType":"VariableDeclaration","scope":1342,"src":"1564:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1339,"name":"uint256","nodeType":"ElementaryTypeName","src":"1564:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1549:34:6"},"src":"1540:44:6"},{"documentation":{"id":1343,"nodeType":"StructuredDocumentation","src":"1590:90:6","text":" @dev Returns the value of tokens of token type `id` owned by `account`."},"functionSelector":"00fdd58e","id":1352,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1694:9:6","nodeType":"FunctionDefinition","parameters":{"id":1348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1345,"mutability":"mutable","name":"account","nameLocation":"1712:7:6","nodeType":"VariableDeclaration","scope":1352,"src":"1704:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1344,"name":"address","nodeType":"ElementaryTypeName","src":"1704:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1347,"mutability":"mutable","name":"id","nameLocation":"1729:2:6","nodeType":"VariableDeclaration","scope":1352,"src":"1721:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1346,"name":"uint256","nodeType":"ElementaryTypeName","src":"1721:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1703:29:6"},"returnParameters":{"id":1351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1350,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1352,"src":"1756:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1349,"name":"uint256","nodeType":"ElementaryTypeName","src":"1756:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1755:9:6"},"scope":1414,"src":"1685:80:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1353,"nodeType":"StructuredDocumentation","src":"1771:188:6","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."},"functionSelector":"4e1273f4","id":1365,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOfBatch","nameLocation":"1973:14:6","nodeType":"FunctionDefinition","parameters":{"id":1360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1356,"mutability":"mutable","name":"accounts","nameLocation":"2016:8:6","nodeType":"VariableDeclaration","scope":1365,"src":"1997:27:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1354,"name":"address","nodeType":"ElementaryTypeName","src":"1997:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1355,"nodeType":"ArrayTypeName","src":"1997:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1359,"mutability":"mutable","name":"ids","nameLocation":"2053:3:6","nodeType":"VariableDeclaration","scope":1365,"src":"2034:22:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1357,"name":"uint256","nodeType":"ElementaryTypeName","src":"2034:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1358,"nodeType":"ArrayTypeName","src":"2034:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1987:75:6"},"returnParameters":{"id":1364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1363,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1365,"src":"2086:16:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1361,"name":"uint256","nodeType":"ElementaryTypeName","src":"2086:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1362,"nodeType":"ArrayTypeName","src":"2086:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2085:18:6"},"scope":1414,"src":"1964:140:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1366,"nodeType":"StructuredDocumentation","src":"2110:254:6","text":" @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the zero address."},"functionSelector":"a22cb465","id":1373,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"2378:17:6","nodeType":"FunctionDefinition","parameters":{"id":1371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1368,"mutability":"mutable","name":"operator","nameLocation":"2404:8:6","nodeType":"VariableDeclaration","scope":1373,"src":"2396:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1367,"name":"address","nodeType":"ElementaryTypeName","src":"2396:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1370,"mutability":"mutable","name":"approved","nameLocation":"2419:8:6","nodeType":"VariableDeclaration","scope":1373,"src":"2414:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1369,"name":"bool","nodeType":"ElementaryTypeName","src":"2414:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2395:33:6"},"returnParameters":{"id":1372,"nodeType":"ParameterList","parameters":[],"src":"2437:0:6"},"scope":1414,"src":"2369:69:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1374,"nodeType":"StructuredDocumentation","src":"2444:135:6","text":" @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."},"functionSelector":"e985e9c5","id":1383,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"2593:16:6","nodeType":"FunctionDefinition","parameters":{"id":1379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1376,"mutability":"mutable","name":"account","nameLocation":"2618:7:6","nodeType":"VariableDeclaration","scope":1383,"src":"2610:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1375,"name":"address","nodeType":"ElementaryTypeName","src":"2610:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1378,"mutability":"mutable","name":"operator","nameLocation":"2635:8:6","nodeType":"VariableDeclaration","scope":1383,"src":"2627:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1377,"name":"address","nodeType":"ElementaryTypeName","src":"2627:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2609:35:6"},"returnParameters":{"id":1382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1381,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1383,"src":"2668:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1380,"name":"bool","nodeType":"ElementaryTypeName","src":"2668:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2667:6:6"},"scope":1414,"src":"2584:90:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1384,"nodeType":"StructuredDocumentation","src":"2680:927:6","text":" @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {IERC1155Receiver-onERC1155Received} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"functionSelector":"f242432a","id":1397,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"3621:16:6","nodeType":"FunctionDefinition","parameters":{"id":1395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1386,"mutability":"mutable","name":"from","nameLocation":"3646:4:6","nodeType":"VariableDeclaration","scope":1397,"src":"3638:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1385,"name":"address","nodeType":"ElementaryTypeName","src":"3638:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1388,"mutability":"mutable","name":"to","nameLocation":"3660:2:6","nodeType":"VariableDeclaration","scope":1397,"src":"3652:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1387,"name":"address","nodeType":"ElementaryTypeName","src":"3652:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1390,"mutability":"mutable","name":"id","nameLocation":"3672:2:6","nodeType":"VariableDeclaration","scope":1397,"src":"3664:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1389,"name":"uint256","nodeType":"ElementaryTypeName","src":"3664:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1392,"mutability":"mutable","name":"value","nameLocation":"3684:5:6","nodeType":"VariableDeclaration","scope":1397,"src":"3676:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1391,"name":"uint256","nodeType":"ElementaryTypeName","src":"3676:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1394,"mutability":"mutable","name":"data","nameLocation":"3706:4:6","nodeType":"VariableDeclaration","scope":1397,"src":"3691:19:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1393,"name":"bytes","nodeType":"ElementaryTypeName","src":"3691:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3637:74:6"},"returnParameters":{"id":1396,"nodeType":"ParameterList","parameters":[],"src":"3720:0:6"},"scope":1414,"src":"3612:109:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1398,"nodeType":"StructuredDocumentation","src":"3727:831:6","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {IERC1155Receiver-onERC1155BatchReceived} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n Requirements:\n - `ids` and `values` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."},"functionSelector":"2eb2c2d6","id":1413,"implemented":false,"kind":"function","modifiers":[],"name":"safeBatchTransferFrom","nameLocation":"4572:21:6","nodeType":"FunctionDefinition","parameters":{"id":1411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1400,"mutability":"mutable","name":"from","nameLocation":"4611:4:6","nodeType":"VariableDeclaration","scope":1413,"src":"4603:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1399,"name":"address","nodeType":"ElementaryTypeName","src":"4603:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1402,"mutability":"mutable","name":"to","nameLocation":"4633:2:6","nodeType":"VariableDeclaration","scope":1413,"src":"4625:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1401,"name":"address","nodeType":"ElementaryTypeName","src":"4625:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1405,"mutability":"mutable","name":"ids","nameLocation":"4664:3:6","nodeType":"VariableDeclaration","scope":1413,"src":"4645:22:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1403,"name":"uint256","nodeType":"ElementaryTypeName","src":"4645:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1404,"nodeType":"ArrayTypeName","src":"4645:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1408,"mutability":"mutable","name":"values","nameLocation":"4696:6:6","nodeType":"VariableDeclaration","scope":1413,"src":"4677:25:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1406,"name":"uint256","nodeType":"ElementaryTypeName","src":"4677:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1407,"nodeType":"ArrayTypeName","src":"4677:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1410,"mutability":"mutable","name":"data","nameLocation":"4727:4:6","nodeType":"VariableDeclaration","scope":1413,"src":"4712:19:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1409,"name":"bytes","nodeType":"ElementaryTypeName","src":"4712:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4593:144:6"},"returnParameters":{"id":1412,"nodeType":"ParameterList","parameters":[],"src":"4746:0:6"},"scope":1414,"src":"4563:184:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1415,"src":"337:4412:6","usedErrors":[],"usedEvents":[1311,1326,1335,1342]}],"src":"110:4640:6"},"id":6},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","exportedSymbols":{"IERC1155Receiver":[1456],"IERC165":[5273]},"id":1457,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1416,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"118:24:7"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1418,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1457,"sourceUnit":5274,"src":"144:62:7","symbolAliases":[{"foreign":{"id":1417,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5273,"src":"152:7:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1420,"name":"IERC165","nameLocations":["357:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":5273,"src":"357:7:7"},"id":1421,"nodeType":"InheritanceSpecifier","src":"357:7:7"}],"canonicalName":"IERC1155Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":1419,"nodeType":"StructuredDocumentation","src":"208:118:7","text":" @dev Interface that must be implemented by smart contracts in order to receive\n ERC-1155 token transfers."},"fullyImplemented":false,"id":1456,"linearizedBaseContracts":[1456,5273],"name":"IERC1155Receiver","nameLocation":"337:16:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1422,"nodeType":"StructuredDocumentation","src":"371:827:7","text":" @dev Handles the receipt of a single ERC-1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"},"functionSelector":"f23a6e61","id":1437,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155Received","nameLocation":"1212:17:7","nodeType":"FunctionDefinition","parameters":{"id":1433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1424,"mutability":"mutable","name":"operator","nameLocation":"1247:8:7","nodeType":"VariableDeclaration","scope":1437,"src":"1239:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1423,"name":"address","nodeType":"ElementaryTypeName","src":"1239:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1426,"mutability":"mutable","name":"from","nameLocation":"1273:4:7","nodeType":"VariableDeclaration","scope":1437,"src":"1265:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1425,"name":"address","nodeType":"ElementaryTypeName","src":"1265:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1428,"mutability":"mutable","name":"id","nameLocation":"1295:2:7","nodeType":"VariableDeclaration","scope":1437,"src":"1287:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1427,"name":"uint256","nodeType":"ElementaryTypeName","src":"1287:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1430,"mutability":"mutable","name":"value","nameLocation":"1315:5:7","nodeType":"VariableDeclaration","scope":1437,"src":"1307:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1429,"name":"uint256","nodeType":"ElementaryTypeName","src":"1307:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1432,"mutability":"mutable","name":"data","nameLocation":"1345:4:7","nodeType":"VariableDeclaration","scope":1437,"src":"1330:19:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1431,"name":"bytes","nodeType":"ElementaryTypeName","src":"1330:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1229:126:7"},"returnParameters":{"id":1436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1435,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1437,"src":"1374:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1434,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1374:6:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1373:8:7"},"scope":1456,"src":"1203:179:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1438,"nodeType":"StructuredDocumentation","src":"1388:995:7","text":" @dev Handles the receipt of a multiple ERC-1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"},"functionSelector":"bc197c81","id":1455,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155BatchReceived","nameLocation":"2397:22:7","nodeType":"FunctionDefinition","parameters":{"id":1451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1440,"mutability":"mutable","name":"operator","nameLocation":"2437:8:7","nodeType":"VariableDeclaration","scope":1455,"src":"2429:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1439,"name":"address","nodeType":"ElementaryTypeName","src":"2429:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1442,"mutability":"mutable","name":"from","nameLocation":"2463:4:7","nodeType":"VariableDeclaration","scope":1455,"src":"2455:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1441,"name":"address","nodeType":"ElementaryTypeName","src":"2455:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1445,"mutability":"mutable","name":"ids","nameLocation":"2496:3:7","nodeType":"VariableDeclaration","scope":1455,"src":"2477:22:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1443,"name":"uint256","nodeType":"ElementaryTypeName","src":"2477:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1444,"nodeType":"ArrayTypeName","src":"2477:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1448,"mutability":"mutable","name":"values","nameLocation":"2528:6:7","nodeType":"VariableDeclaration","scope":1455,"src":"2509:25:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1446,"name":"uint256","nodeType":"ElementaryTypeName","src":"2509:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1447,"nodeType":"ArrayTypeName","src":"2509:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1450,"mutability":"mutable","name":"data","nameLocation":"2559:4:7","nodeType":"VariableDeclaration","scope":1455,"src":"2544:19:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1449,"name":"bytes","nodeType":"ElementaryTypeName","src":"2544:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2419:150:7"},"returnParameters":{"id":1454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1453,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1455,"src":"2588:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1452,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2588:6:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2587:8:7"},"scope":1456,"src":"2388:208:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1457,"src":"327:2271:7","usedErrors":[],"usedEvents":[]}],"src":"118:2481:7"},"id":7},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol","exportedSymbols":{"IERC1155":[1414],"IERC1155MetadataURI":[1472]},"id":1473,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1458,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"132:24:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","file":"../IERC1155.sol","id":1460,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1473,"sourceUnit":1415,"src":"158:41:8","symbolAliases":[{"foreign":{"id":1459,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1414,"src":"166:8:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1462,"name":"IERC1155","nameLocations":["399:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":1414,"src":"399:8:8"},"id":1463,"nodeType":"InheritanceSpecifier","src":"399:8:8"}],"canonicalName":"IERC1155MetadataURI","contractDependencies":[],"contractKind":"interface","documentation":{"id":1461,"nodeType":"StructuredDocumentation","src":"201:164:8","text":" @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[ERC]."},"fullyImplemented":false,"id":1472,"linearizedBaseContracts":[1472,1414,5273],"name":"IERC1155MetadataURI","nameLocation":"376:19:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1464,"nodeType":"StructuredDocumentation","src":"414:192:8","text":" @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."},"functionSelector":"0e89341c","id":1471,"implemented":false,"kind":"function","modifiers":[],"name":"uri","nameLocation":"620:3:8","nodeType":"FunctionDefinition","parameters":{"id":1467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1466,"mutability":"mutable","name":"id","nameLocation":"632:2:8","nodeType":"VariableDeclaration","scope":1471,"src":"624:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1465,"name":"uint256","nodeType":"ElementaryTypeName","src":"624:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"623:12:8"},"returnParameters":{"id":1470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1469,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1471,"src":"659:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1468,"name":"string","nodeType":"ElementaryTypeName","src":"659:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"658:15:8"},"scope":1472,"src":"611:63:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1473,"src":"366:310:8","usedErrors":[],"usedEvents":[1311,1326,1335,1342]}],"src":"132:545:8"},"id":8},"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol","exportedSymbols":{"ERC1155Utils":[1626],"IERC1155Errors":[374],"IERC1155Receiver":[1456]},"id":1627,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1474,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"120:24:9"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","file":"../IERC1155Receiver.sol","id":1476,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1627,"sourceUnit":1457,"src":"146:57:9","symbolAliases":[{"foreign":{"id":1475,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1456,"src":"154:16:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../../interfaces/draft-IERC6093.sol","id":1478,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1627,"sourceUnit":375,"src":"204:70:9","symbolAliases":[{"foreign":{"id":1477,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"212:14:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC1155Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":1479,"nodeType":"StructuredDocumentation","src":"276:162:9","text":" @dev Library that provide common ERC-1155 utility functions.\n See https://eips.ethereum.org/EIPS/eip-1155[ERC-1155].\n _Available since v5.1._"},"fullyImplemented":true,"id":1626,"linearizedBaseContracts":[1626],"name":"ERC1155Utils","nameLocation":"447:12:9","nodeType":"ContractDefinition","nodes":[{"body":{"id":1550,"nodeType":"Block","src":"1191:776:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1495,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1486,"src":"1205:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1208:4:9","memberName":"code","nodeType":"MemberAccess","src":"1205:7:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1213:6:9","memberName":"length","nodeType":"MemberAccess","src":"1205:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1222:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1205:18:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1549,"nodeType":"IfStatement","src":"1201:760:9","trueBody":{"id":1548,"nodeType":"Block","src":"1225:736:9","statements":[{"clauses":[{"block":{"id":1526,"nodeType":"Block","src":"1341:221:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1513,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1511,"src":"1363:8:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":1514,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1456,"src":"1375:16:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1456_$","typeString":"type(contract IERC1155Receiver)"}},"id":1515,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1392:17:9","memberName":"onERC1155Received","nodeType":"MemberAccess","referencedDeclaration":1437,"src":"1375:34:9","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"}},"id":1516,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1410:8:9","memberName":"selector","nodeType":"MemberAccess","src":"1375:43:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1363:55:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1525,"nodeType":"IfStatement","src":"1359:189:9","trueBody":{"id":1524,"nodeType":"Block","src":"1420:128:9","statements":[{"errorCall":{"arguments":[{"id":1521,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1486,"src":"1526:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1518,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"1488:14:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$374_$","typeString":"type(contract IERC1155Errors)"}},"id":1520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1503:22:9","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":349,"src":"1488:37:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1488:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1523,"nodeType":"RevertStatement","src":"1481:48:9"}]}}]},"errorName":"","id":1527,"nodeType":"TryCatchClause","parameters":{"id":1512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1511,"mutability":"mutable","name":"response","nameLocation":"1331:8:9","nodeType":"VariableDeclaration","scope":1527,"src":"1324:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1510,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1324:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1323:17:9"},"src":"1315:247:9"},{"block":{"id":1545,"nodeType":"Block","src":"1591:360:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1531,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1529,"src":"1613:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1620:6:9","memberName":"length","nodeType":"MemberAccess","src":"1613:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1630:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1613:18:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1543,"nodeType":"Block","src":"1784:153:9","statements":[{"AST":{"nodeType":"YulBlock","src":"1831:88:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"1868:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"1876:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1864:3:9"},"nodeType":"YulFunctionCall","src":"1864:17:9"},{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"1889:6:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1883:5:9"},"nodeType":"YulFunctionCall","src":"1883:13:9"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1857:6:9"},"nodeType":"YulFunctionCall","src":"1857:40:9"},"nodeType":"YulExpressionStatement","src":"1857:40:9"}]},"evmVersion":"paris","externalReferences":[{"declaration":1529,"isOffset":false,"isSlot":false,"src":"1868:6:9","valueSize":1},{"declaration":1529,"isOffset":false,"isSlot":false,"src":"1889:6:9","valueSize":1}],"flags":["memory-safe"],"id":1542,"nodeType":"InlineAssembly","src":"1806:113:9"}]},"id":1544,"nodeType":"IfStatement","src":"1609:328:9","trueBody":{"id":1541,"nodeType":"Block","src":"1633:145:9","statements":[{"errorCall":{"arguments":[{"id":1538,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1486,"src":"1756:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1535,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"1718:14:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$374_$","typeString":"type(contract IERC1155Errors)"}},"id":1537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1733:22:9","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":349,"src":"1718:37:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1718:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1540,"nodeType":"RevertStatement","src":"1711:48:9"}]}}]},"errorName":"","id":1546,"nodeType":"TryCatchClause","parameters":{"id":1530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1529,"mutability":"mutable","name":"reason","nameLocation":"1583:6:9","nodeType":"VariableDeclaration","scope":1546,"src":"1570:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1528,"name":"bytes","nodeType":"ElementaryTypeName","src":"1570:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1569:21:9"},"src":"1563:388:9"}],"externalCall":{"arguments":[{"id":1504,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1482,"src":"1282:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1505,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1484,"src":"1292:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1506,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1488,"src":"1298:2:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1507,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1490,"src":"1302:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1508,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"1309:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1501,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1486,"src":"1260:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1500,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1456,"src":"1243:16:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1456_$","typeString":"type(contract IERC1155Receiver)"}},"id":1502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1243:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155Receiver_$1456","typeString":"contract IERC1155Receiver"}},"id":1503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1264:17:9","memberName":"onERC1155Received","nodeType":"MemberAccess","referencedDeclaration":1437,"src":"1243:38:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"}},"id":1509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1243:71:9","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1547,"nodeType":"TryStatement","src":"1239:712:9"}]}}]},"documentation":{"id":1480,"nodeType":"StructuredDocumentation","src":"466:535:9","text":" @dev Performs an acceptance check for the provided `operator` by calling {IERC1155Receiver-onERC1155Received}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n the transfer."},"id":1551,"implemented":true,"kind":"function","modifiers":[],"name":"checkOnERC1155Received","nameLocation":"1015:22:9","nodeType":"FunctionDefinition","parameters":{"id":1493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1482,"mutability":"mutable","name":"operator","nameLocation":"1055:8:9","nodeType":"VariableDeclaration","scope":1551,"src":"1047:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1481,"name":"address","nodeType":"ElementaryTypeName","src":"1047:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1484,"mutability":"mutable","name":"from","nameLocation":"1081:4:9","nodeType":"VariableDeclaration","scope":1551,"src":"1073:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1483,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1486,"mutability":"mutable","name":"to","nameLocation":"1103:2:9","nodeType":"VariableDeclaration","scope":1551,"src":"1095:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1485,"name":"address","nodeType":"ElementaryTypeName","src":"1095:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1488,"mutability":"mutable","name":"id","nameLocation":"1123:2:9","nodeType":"VariableDeclaration","scope":1551,"src":"1115:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1487,"name":"uint256","nodeType":"ElementaryTypeName","src":"1115:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1490,"mutability":"mutable","name":"value","nameLocation":"1143:5:9","nodeType":"VariableDeclaration","scope":1551,"src":"1135:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1489,"name":"uint256","nodeType":"ElementaryTypeName","src":"1135:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1492,"mutability":"mutable","name":"data","nameLocation":"1171:4:9","nodeType":"VariableDeclaration","scope":1551,"src":"1158:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1491,"name":"bytes","nodeType":"ElementaryTypeName","src":"1158:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1037:144:9"},"returnParameters":{"id":1494,"nodeType":"ParameterList","parameters":[],"src":"1191:0:9"},"scope":1626,"src":"1006:961:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1624,"nodeType":"Block","src":"2733:818:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1569,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1558,"src":"2747:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2750:4:9","memberName":"code","nodeType":"MemberAccess","src":"2747:7:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2755:6:9","memberName":"length","nodeType":"MemberAccess","src":"2747:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2764:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2747:18:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1623,"nodeType":"IfStatement","src":"2743:802:9","trueBody":{"id":1622,"nodeType":"Block","src":"2767:778:9","statements":[{"clauses":[{"block":{"id":1600,"nodeType":"Block","src":"2920:226:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1587,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1585,"src":"2942:8:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":1588,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1456,"src":"2954:16:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1456_$","typeString":"type(contract IERC1155Receiver)"}},"id":1589,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2971:22:9","memberName":"onERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":1455,"src":"2954:39:9","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"}},"id":1590,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2994:8:9","memberName":"selector","nodeType":"MemberAccess","src":"2954:48:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2942:60:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1599,"nodeType":"IfStatement","src":"2938:194:9","trueBody":{"id":1598,"nodeType":"Block","src":"3004:128:9","statements":[{"errorCall":{"arguments":[{"id":1595,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1558,"src":"3110:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1592,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"3072:14:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$374_$","typeString":"type(contract IERC1155Errors)"}},"id":1594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3087:22:9","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":349,"src":"3072:37:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3072:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1597,"nodeType":"RevertStatement","src":"3065:48:9"}]}}]},"errorName":"","id":1601,"nodeType":"TryCatchClause","parameters":{"id":1586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1585,"mutability":"mutable","name":"response","nameLocation":"2897:8:9","nodeType":"VariableDeclaration","scope":1601,"src":"2890:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1584,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2890:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2872:47:9"},"src":"2864:282:9"},{"block":{"id":1619,"nodeType":"Block","src":"3175:360:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1605,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1603,"src":"3197:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3204:6:9","memberName":"length","nodeType":"MemberAccess","src":"3197:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3214:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3197:18:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1617,"nodeType":"Block","src":"3368:153:9","statements":[{"AST":{"nodeType":"YulBlock","src":"3415:88:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"3452:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"3460:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3448:3:9"},"nodeType":"YulFunctionCall","src":"3448:17:9"},{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"3473:6:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3467:5:9"},"nodeType":"YulFunctionCall","src":"3467:13:9"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3441:6:9"},"nodeType":"YulFunctionCall","src":"3441:40:9"},"nodeType":"YulExpressionStatement","src":"3441:40:9"}]},"evmVersion":"paris","externalReferences":[{"declaration":1603,"isOffset":false,"isSlot":false,"src":"3452:6:9","valueSize":1},{"declaration":1603,"isOffset":false,"isSlot":false,"src":"3473:6:9","valueSize":1}],"flags":["memory-safe"],"id":1616,"nodeType":"InlineAssembly","src":"3390:113:9"}]},"id":1618,"nodeType":"IfStatement","src":"3193:328:9","trueBody":{"id":1615,"nodeType":"Block","src":"3217:145:9","statements":[{"errorCall":{"arguments":[{"id":1612,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1558,"src":"3340:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1609,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"3302:14:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$374_$","typeString":"type(contract IERC1155Errors)"}},"id":1611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3317:22:9","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":349,"src":"3302:37:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3302:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1614,"nodeType":"RevertStatement","src":"3295:48:9"}]}}]},"errorName":"","id":1620,"nodeType":"TryCatchClause","parameters":{"id":1604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1603,"mutability":"mutable","name":"reason","nameLocation":"3167:6:9","nodeType":"VariableDeclaration","scope":1620,"src":"3154:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1602,"name":"bytes","nodeType":"ElementaryTypeName","src":"3154:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3153:21:9"},"src":"3147:388:9"}],"externalCall":{"arguments":[{"id":1578,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1554,"src":"2829:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1579,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1556,"src":"2839:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1580,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1561,"src":"2845:3:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1581,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1564,"src":"2850:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1582,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1566,"src":"2858:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1575,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1558,"src":"2802:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1574,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1456,"src":"2785:16:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1456_$","typeString":"type(contract IERC1155Receiver)"}},"id":1576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2785:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155Receiver_$1456","typeString":"contract IERC1155Receiver"}},"id":1577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2806:22:9","memberName":"onERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":1455,"src":"2785:43:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"}},"id":1583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2785:78:9","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1621,"nodeType":"TryStatement","src":"2781:754:9"}]}}]},"documentation":{"id":1552,"nodeType":"StructuredDocumentation","src":"1973:545:9","text":" @dev Performs a batch acceptance check for the provided `operator` by calling {IERC1155Receiver-onERC1155BatchReceived}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n the transfer."},"id":1625,"implemented":true,"kind":"function","modifiers":[],"name":"checkOnERC1155BatchReceived","nameLocation":"2532:27:9","nodeType":"FunctionDefinition","parameters":{"id":1567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1554,"mutability":"mutable","name":"operator","nameLocation":"2577:8:9","nodeType":"VariableDeclaration","scope":1625,"src":"2569:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1553,"name":"address","nodeType":"ElementaryTypeName","src":"2569:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1556,"mutability":"mutable","name":"from","nameLocation":"2603:4:9","nodeType":"VariableDeclaration","scope":1625,"src":"2595:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1555,"name":"address","nodeType":"ElementaryTypeName","src":"2595:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1558,"mutability":"mutable","name":"to","nameLocation":"2625:2:9","nodeType":"VariableDeclaration","scope":1625,"src":"2617:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1557,"name":"address","nodeType":"ElementaryTypeName","src":"2617:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1561,"mutability":"mutable","name":"ids","nameLocation":"2654:3:9","nodeType":"VariableDeclaration","scope":1625,"src":"2637:20:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1559,"name":"uint256","nodeType":"ElementaryTypeName","src":"2637:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1560,"nodeType":"ArrayTypeName","src":"2637:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1564,"mutability":"mutable","name":"values","nameLocation":"2684:6:9","nodeType":"VariableDeclaration","scope":1625,"src":"2667:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1562,"name":"uint256","nodeType":"ElementaryTypeName","src":"2667:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1563,"nodeType":"ArrayTypeName","src":"2667:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1566,"mutability":"mutable","name":"data","nameLocation":"2713:4:9","nodeType":"VariableDeclaration","scope":1625,"src":"2700:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1565,"name":"bytes","nodeType":"ElementaryTypeName","src":"2700:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2559:164:9"},"returnParameters":{"id":1568,"nodeType":"ParameterList","parameters":[],"src":"2733:0:9"},"scope":1626,"src":"2523:1028:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":1627,"src":"439:3114:9","usedErrors":[],"usedEvents":[]}],"src":"120:3434:9"},"id":9},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[3749],"ERC20":[2141],"IERC20":[2219],"IERC20Errors":[279],"IERC20Metadata":[2245]},"id":2142,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1628,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:10"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":1630,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2142,"sourceUnit":2220,"src":"131:36:10","symbolAliases":[{"foreign":{"id":1629,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2219,"src":"139:6:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":1632,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2142,"sourceUnit":2246,"src":"168:63:10","symbolAliases":[{"foreign":{"id":1631,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2245,"src":"176:14:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":1634,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2142,"sourceUnit":3750,"src":"232:48:10","symbolAliases":[{"foreign":{"id":1633,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3749,"src":"240:7:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":1636,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2142,"sourceUnit":375,"src":"281:65:10","symbolAliases":[{"foreign":{"id":1635,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":279,"src":"289:12:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1638,"name":"Context","nameLocations":["1133:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":3749,"src":"1133:7:10"},"id":1639,"nodeType":"InheritanceSpecifier","src":"1133:7:10"},{"baseName":{"id":1640,"name":"IERC20","nameLocations":["1142:6:10"],"nodeType":"IdentifierPath","referencedDeclaration":2219,"src":"1142:6:10"},"id":1641,"nodeType":"InheritanceSpecifier","src":"1142:6:10"},{"baseName":{"id":1642,"name":"IERC20Metadata","nameLocations":["1150:14:10"],"nodeType":"IdentifierPath","referencedDeclaration":2245,"src":"1150:14:10"},"id":1643,"nodeType":"InheritanceSpecifier","src":"1150:14:10"},{"baseName":{"id":1644,"name":"IERC20Errors","nameLocations":["1166:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":279,"src":"1166:12:10"},"id":1645,"nodeType":"InheritanceSpecifier","src":"1166:12:10"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":1637,"nodeType":"StructuredDocumentation","src":"348:757:10","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."},"fullyImplemented":true,"id":2141,"linearizedBaseContracts":[2141,279,2245,2219,3749],"name":"ERC20","nameLocation":"1124:5:10","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1649,"mutability":"mutable","name":"_balances","nameLocation":"1229:9:10","nodeType":"VariableDeclaration","scope":2141,"src":"1185:53:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1648,"keyName":"account","keyNameLocation":"1201:7:10","keyType":{"id":1646,"name":"address","nodeType":"ElementaryTypeName","src":"1193:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1185:35:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1647,"name":"uint256","nodeType":"ElementaryTypeName","src":"1212:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":1655,"mutability":"mutable","name":"_allowances","nameLocation":"1317:11:10","nodeType":"VariableDeclaration","scope":2141,"src":"1245:83:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":1654,"keyName":"account","keyNameLocation":"1261:7:10","keyType":{"id":1650,"name":"address","nodeType":"ElementaryTypeName","src":"1253:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1245:63:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1653,"keyName":"spender","keyNameLocation":"1288:7:10","keyType":{"id":1651,"name":"address","nodeType":"ElementaryTypeName","src":"1280:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1272:35:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1652,"name":"uint256","nodeType":"ElementaryTypeName","src":"1299:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":1657,"mutability":"mutable","name":"_totalSupply","nameLocation":"1351:12:10","nodeType":"VariableDeclaration","scope":2141,"src":"1335:28:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1656,"name":"uint256","nodeType":"ElementaryTypeName","src":"1335:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":1659,"mutability":"mutable","name":"_name","nameLocation":"1385:5:10","nodeType":"VariableDeclaration","scope":2141,"src":"1370:20:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1658,"name":"string","nodeType":"ElementaryTypeName","src":"1370:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":1661,"mutability":"mutable","name":"_symbol","nameLocation":"1411:7:10","nodeType":"VariableDeclaration","scope":2141,"src":"1396:22:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1660,"name":"string","nodeType":"ElementaryTypeName","src":"1396:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":1677,"nodeType":"Block","src":"1638:57:10","statements":[{"expression":{"id":1671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1669,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1659,"src":"1648:5:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1670,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1664,"src":"1656:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1648:13:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1672,"nodeType":"ExpressionStatement","src":"1648:13:10"},{"expression":{"id":1675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1673,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1661,"src":"1671:7:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1674,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1666,"src":"1681:7:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1671:17:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1676,"nodeType":"ExpressionStatement","src":"1671:17:10"}]},"documentation":{"id":1662,"nodeType":"StructuredDocumentation","src":"1425:152:10","text":" @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."},"id":1678,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1664,"mutability":"mutable","name":"name_","nameLocation":"1608:5:10","nodeType":"VariableDeclaration","scope":1678,"src":"1594:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1663,"name":"string","nodeType":"ElementaryTypeName","src":"1594:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1666,"mutability":"mutable","name":"symbol_","nameLocation":"1629:7:10","nodeType":"VariableDeclaration","scope":1678,"src":"1615:21:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1665,"name":"string","nodeType":"ElementaryTypeName","src":"1615:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1593:44:10"},"returnParameters":{"id":1668,"nodeType":"ParameterList","parameters":[],"src":"1638:0:10"},"scope":2141,"src":"1582:113:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2232],"body":{"id":1686,"nodeType":"Block","src":"1820:29:10","statements":[{"expression":{"id":1684,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1659,"src":"1837:5:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1683,"id":1685,"nodeType":"Return","src":"1830:12:10"}]},"documentation":{"id":1679,"nodeType":"StructuredDocumentation","src":"1701:54:10","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1687,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"1769:4:10","nodeType":"FunctionDefinition","parameters":{"id":1680,"nodeType":"ParameterList","parameters":[],"src":"1773:2:10"},"returnParameters":{"id":1683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1682,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1687,"src":"1805:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1681,"name":"string","nodeType":"ElementaryTypeName","src":"1805:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1804:15:10"},"scope":2141,"src":"1760:89:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2238],"body":{"id":1695,"nodeType":"Block","src":"2024:31:10","statements":[{"expression":{"id":1693,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1661,"src":"2041:7:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1692,"id":1694,"nodeType":"Return","src":"2034:14:10"}]},"documentation":{"id":1688,"nodeType":"StructuredDocumentation","src":"1855:102:10","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":1696,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"1971:6:10","nodeType":"FunctionDefinition","parameters":{"id":1689,"nodeType":"ParameterList","parameters":[],"src":"1977:2:10"},"returnParameters":{"id":1692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1691,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1696,"src":"2009:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1690,"name":"string","nodeType":"ElementaryTypeName","src":"2009:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2008:15:10"},"scope":2141,"src":"1962:93:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2244],"body":{"id":1704,"nodeType":"Block","src":"2744:26:10","statements":[{"expression":{"hexValue":"3138","id":1702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2761:2:10","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":1701,"id":1703,"nodeType":"Return","src":"2754:9:10"}]},"documentation":{"id":1697,"nodeType":"StructuredDocumentation","src":"2061:622:10","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":1705,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"2697:8:10","nodeType":"FunctionDefinition","parameters":{"id":1698,"nodeType":"ParameterList","parameters":[],"src":"2705:2:10"},"returnParameters":{"id":1701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1700,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1705,"src":"2737:5:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1699,"name":"uint8","nodeType":"ElementaryTypeName","src":"2737:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2736:7:10"},"scope":2141,"src":"2688:82:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2168],"body":{"id":1713,"nodeType":"Block","src":"2864:36:10","statements":[{"expression":{"id":1711,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1657,"src":"2881:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1710,"id":1712,"nodeType":"Return","src":"2874:19:10"}]},"documentation":{"id":1706,"nodeType":"StructuredDocumentation","src":"2776:22:10","text":"@inheritdoc IERC20"},"functionSelector":"18160ddd","id":1714,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"2812:11:10","nodeType":"FunctionDefinition","parameters":{"id":1707,"nodeType":"ParameterList","parameters":[],"src":"2823:2:10"},"returnParameters":{"id":1710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1709,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1714,"src":"2855:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1708,"name":"uint256","nodeType":"ElementaryTypeName","src":"2855:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2854:9:10"},"scope":2141,"src":"2803:97:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2176],"body":{"id":1726,"nodeType":"Block","src":"3007:42:10","statements":[{"expression":{"baseExpression":{"id":1722,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1649,"src":"3024:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1724,"indexExpression":{"id":1723,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1717,"src":"3034:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3024:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1721,"id":1725,"nodeType":"Return","src":"3017:25:10"}]},"documentation":{"id":1715,"nodeType":"StructuredDocumentation","src":"2906:22:10","text":"@inheritdoc IERC20"},"functionSelector":"70a08231","id":1727,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2942:9:10","nodeType":"FunctionDefinition","parameters":{"id":1718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1717,"mutability":"mutable","name":"account","nameLocation":"2960:7:10","nodeType":"VariableDeclaration","scope":1727,"src":"2952:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1716,"name":"address","nodeType":"ElementaryTypeName","src":"2952:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2951:17:10"},"returnParameters":{"id":1721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1720,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1727,"src":"2998:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1719,"name":"uint256","nodeType":"ElementaryTypeName","src":"2998:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2997:9:10"},"scope":2141,"src":"2933:116:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2186],"body":{"id":1750,"nodeType":"Block","src":"3319:103:10","statements":[{"assignments":[1738],"declarations":[{"constant":false,"id":1738,"mutability":"mutable","name":"owner","nameLocation":"3337:5:10","nodeType":"VariableDeclaration","scope":1750,"src":"3329:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1737,"name":"address","nodeType":"ElementaryTypeName","src":"3329:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1741,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1739,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3731,"src":"3345:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3345:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3329:28:10"},{"expression":{"arguments":[{"id":1743,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1738,"src":"3377:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1744,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"3384:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1745,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1732,"src":"3388:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1742,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1871,"src":"3367:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3367:27:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1747,"nodeType":"ExpressionStatement","src":"3367:27:10"},{"expression":{"hexValue":"74727565","id":1748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3411:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1736,"id":1749,"nodeType":"Return","src":"3404:11:10"}]},"documentation":{"id":1728,"nodeType":"StructuredDocumentation","src":"3055:184:10","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":1751,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3253:8:10","nodeType":"FunctionDefinition","parameters":{"id":1733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1730,"mutability":"mutable","name":"to","nameLocation":"3270:2:10","nodeType":"VariableDeclaration","scope":1751,"src":"3262:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1729,"name":"address","nodeType":"ElementaryTypeName","src":"3262:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1732,"mutability":"mutable","name":"value","nameLocation":"3282:5:10","nodeType":"VariableDeclaration","scope":1751,"src":"3274:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1731,"name":"uint256","nodeType":"ElementaryTypeName","src":"3274:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3261:27:10"},"returnParameters":{"id":1736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1735,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1751,"src":"3313:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1734,"name":"bool","nodeType":"ElementaryTypeName","src":"3313:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3312:6:10"},"scope":2141,"src":"3244:178:10","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2196],"body":{"id":1767,"nodeType":"Block","src":"3544:51:10","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":1761,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1655,"src":"3561:11:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1763,"indexExpression":{"id":1762,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1754,"src":"3573:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3561:18:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1765,"indexExpression":{"id":1764,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1756,"src":"3580:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3561:27:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1760,"id":1766,"nodeType":"Return","src":"3554:34:10"}]},"documentation":{"id":1752,"nodeType":"StructuredDocumentation","src":"3428:22:10","text":"@inheritdoc IERC20"},"functionSelector":"dd62ed3e","id":1768,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3464:9:10","nodeType":"FunctionDefinition","parameters":{"id":1757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1754,"mutability":"mutable","name":"owner","nameLocation":"3482:5:10","nodeType":"VariableDeclaration","scope":1768,"src":"3474:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1753,"name":"address","nodeType":"ElementaryTypeName","src":"3474:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1756,"mutability":"mutable","name":"spender","nameLocation":"3497:7:10","nodeType":"VariableDeclaration","scope":1768,"src":"3489:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1755,"name":"address","nodeType":"ElementaryTypeName","src":"3489:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3473:32:10"},"returnParameters":{"id":1760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1759,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1768,"src":"3535:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1758,"name":"uint256","nodeType":"ElementaryTypeName","src":"3535:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3534:9:10"},"scope":2141,"src":"3455:140:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2206],"body":{"id":1791,"nodeType":"Block","src":"3981:107:10","statements":[{"assignments":[1779],"declarations":[{"constant":false,"id":1779,"mutability":"mutable","name":"owner","nameLocation":"3999:5:10","nodeType":"VariableDeclaration","scope":1791,"src":"3991:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1778,"name":"address","nodeType":"ElementaryTypeName","src":"3991:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1782,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1780,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3731,"src":"4007:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4007:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3991:28:10"},{"expression":{"arguments":[{"id":1784,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1779,"src":"4038:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1785,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"4045:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1786,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1773,"src":"4054:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1783,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[2032,2092],"referencedDeclaration":2032,"src":"4029:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4029:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1788,"nodeType":"ExpressionStatement","src":"4029:31:10"},{"expression":{"hexValue":"74727565","id":1789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4077:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1777,"id":1790,"nodeType":"Return","src":"4070:11:10"}]},"documentation":{"id":1769,"nodeType":"StructuredDocumentation","src":"3601:296:10","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":1792,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3911:7:10","nodeType":"FunctionDefinition","parameters":{"id":1774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1771,"mutability":"mutable","name":"spender","nameLocation":"3927:7:10","nodeType":"VariableDeclaration","scope":1792,"src":"3919:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1770,"name":"address","nodeType":"ElementaryTypeName","src":"3919:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1773,"mutability":"mutable","name":"value","nameLocation":"3944:5:10","nodeType":"VariableDeclaration","scope":1792,"src":"3936:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1772,"name":"uint256","nodeType":"ElementaryTypeName","src":"3936:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3918:32:10"},"returnParameters":{"id":1777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1776,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1792,"src":"3975:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1775,"name":"bool","nodeType":"ElementaryTypeName","src":"3975:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3974:6:10"},"scope":2141,"src":"3902:186:10","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2218],"body":{"id":1823,"nodeType":"Block","src":"4773:151:10","statements":[{"assignments":[1805],"declarations":[{"constant":false,"id":1805,"mutability":"mutable","name":"spender","nameLocation":"4791:7:10","nodeType":"VariableDeclaration","scope":1823,"src":"4783:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1804,"name":"address","nodeType":"ElementaryTypeName","src":"4783:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1808,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1806,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3731,"src":"4801:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4801:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4783:30:10"},{"expression":{"arguments":[{"id":1810,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1795,"src":"4839:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1811,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1805,"src":"4845:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1812,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1799,"src":"4854:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1809,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2140,"src":"4823:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4823:37:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1814,"nodeType":"ExpressionStatement","src":"4823:37:10"},{"expression":{"arguments":[{"id":1816,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1795,"src":"4880:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1817,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1797,"src":"4886:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1818,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1799,"src":"4890:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1815,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1871,"src":"4870:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4870:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1820,"nodeType":"ExpressionStatement","src":"4870:26:10"},{"expression":{"hexValue":"74727565","id":1821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4913:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1803,"id":1822,"nodeType":"Return","src":"4906:11:10"}]},"documentation":{"id":1793,"nodeType":"StructuredDocumentation","src":"4094:581:10","text":" @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":1824,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4689:12:10","nodeType":"FunctionDefinition","parameters":{"id":1800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1795,"mutability":"mutable","name":"from","nameLocation":"4710:4:10","nodeType":"VariableDeclaration","scope":1824,"src":"4702:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1794,"name":"address","nodeType":"ElementaryTypeName","src":"4702:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1797,"mutability":"mutable","name":"to","nameLocation":"4724:2:10","nodeType":"VariableDeclaration","scope":1824,"src":"4716:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1796,"name":"address","nodeType":"ElementaryTypeName","src":"4716:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1799,"mutability":"mutable","name":"value","nameLocation":"4736:5:10","nodeType":"VariableDeclaration","scope":1824,"src":"4728:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1798,"name":"uint256","nodeType":"ElementaryTypeName","src":"4728:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:41:10"},"returnParameters":{"id":1803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1802,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1824,"src":"4767:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1801,"name":"bool","nodeType":"ElementaryTypeName","src":"4767:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4766:6:10"},"scope":2141,"src":"4680:244:10","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1870,"nodeType":"Block","src":"5366:231:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1834,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1827,"src":"5380:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5396:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1836,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5388:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1835,"name":"address","nodeType":"ElementaryTypeName","src":"5388:7:10","typeDescriptions":{}}},"id":1838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5388:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5380:18:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1848,"nodeType":"IfStatement","src":"5376:86:10","trueBody":{"id":1847,"nodeType":"Block","src":"5400:62:10","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5448:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1842,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5440:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1841,"name":"address","nodeType":"ElementaryTypeName","src":"5440:7:10","typeDescriptions":{}}},"id":1844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5440:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1840,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"5421:18:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5421:30:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1846,"nodeType":"RevertStatement","src":"5414:37:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1849,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1829,"src":"5475:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5489:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1851,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5481:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1850,"name":"address","nodeType":"ElementaryTypeName","src":"5481:7:10","typeDescriptions":{}}},"id":1853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5481:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5475:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1863,"nodeType":"IfStatement","src":"5471:86:10","trueBody":{"id":1862,"nodeType":"Block","src":"5493:64:10","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5543:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1857,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5535:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1856,"name":"address","nodeType":"ElementaryTypeName","src":"5535:7:10","typeDescriptions":{}}},"id":1859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5535:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1855,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"5514:20:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5514:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1861,"nodeType":"RevertStatement","src":"5507:39:10"}]}},{"expression":{"arguments":[{"id":1865,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1827,"src":"5574:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1866,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1829,"src":"5580:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1867,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1831,"src":"5584:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1864,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1948,"src":"5566:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5566:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1869,"nodeType":"ExpressionStatement","src":"5566:24:10"}]},"documentation":{"id":1825,"nodeType":"StructuredDocumentation","src":"4930:362:10","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":1871,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5306:9:10","nodeType":"FunctionDefinition","parameters":{"id":1832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1827,"mutability":"mutable","name":"from","nameLocation":"5324:4:10","nodeType":"VariableDeclaration","scope":1871,"src":"5316:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1826,"name":"address","nodeType":"ElementaryTypeName","src":"5316:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1829,"mutability":"mutable","name":"to","nameLocation":"5338:2:10","nodeType":"VariableDeclaration","scope":1871,"src":"5330:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1828,"name":"address","nodeType":"ElementaryTypeName","src":"5330:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1831,"mutability":"mutable","name":"value","nameLocation":"5350:5:10","nodeType":"VariableDeclaration","scope":1871,"src":"5342:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1830,"name":"uint256","nodeType":"ElementaryTypeName","src":"5342:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5315:41:10"},"returnParameters":{"id":1833,"nodeType":"ParameterList","parameters":[],"src":"5366:0:10"},"scope":2141,"src":"5297:300:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1947,"nodeType":"Block","src":"5987:1032:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1881,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"6001:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6017:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1883,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6009:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1882,"name":"address","nodeType":"ElementaryTypeName","src":"6009:7:10","typeDescriptions":{}}},"id":1885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6009:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6001:18:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1918,"nodeType":"Block","src":"6175:362:10","statements":[{"assignments":[1893],"declarations":[{"constant":false,"id":1893,"mutability":"mutable","name":"fromBalance","nameLocation":"6197:11:10","nodeType":"VariableDeclaration","scope":1918,"src":"6189:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1892,"name":"uint256","nodeType":"ElementaryTypeName","src":"6189:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1897,"initialValue":{"baseExpression":{"id":1894,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1649,"src":"6211:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1896,"indexExpression":{"id":1895,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"6221:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6211:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6189:37:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1898,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1893,"src":"6244:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1899,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1878,"src":"6258:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6244:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1908,"nodeType":"IfStatement","src":"6240:115:10","trueBody":{"id":1907,"nodeType":"Block","src":"6265:90:10","statements":[{"errorCall":{"arguments":[{"id":1902,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"6315:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1903,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1893,"src":"6321:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1904,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1878,"src":"6334:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1901,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"6290:24:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6290:50:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1906,"nodeType":"RevertStatement","src":"6283:57:10"}]}},{"id":1917,"nodeType":"UncheckedBlock","src":"6368:159:10","statements":[{"expression":{"id":1915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1909,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1649,"src":"6475:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1911,"indexExpression":{"id":1910,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"6485:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6475:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1912,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1893,"src":"6493:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1913,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1878,"src":"6507:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6493:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6475:37:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1916,"nodeType":"ExpressionStatement","src":"6475:37:10"}]}]},"id":1919,"nodeType":"IfStatement","src":"5997:540:10","trueBody":{"id":1891,"nodeType":"Block","src":"6021:148:10","statements":[{"expression":{"id":1889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1887,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1657,"src":"6137:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1888,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1878,"src":"6153:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6137:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1890,"nodeType":"ExpressionStatement","src":"6137:21:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1920,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1876,"src":"6551:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6565:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1922,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6557:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1921,"name":"address","nodeType":"ElementaryTypeName","src":"6557:7:10","typeDescriptions":{}}},"id":1924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6557:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6551:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1939,"nodeType":"Block","src":"6766:206:10","statements":[{"id":1938,"nodeType":"UncheckedBlock","src":"6780:182:10","statements":[{"expression":{"id":1936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1932,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1649,"src":"6925:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1934,"indexExpression":{"id":1933,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1876,"src":"6935:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6925:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1935,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1878,"src":"6942:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6925:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1937,"nodeType":"ExpressionStatement","src":"6925:22:10"}]}]},"id":1940,"nodeType":"IfStatement","src":"6547:425:10","trueBody":{"id":1931,"nodeType":"Block","src":"6569:191:10","statements":[{"id":1930,"nodeType":"UncheckedBlock","src":"6583:167:10","statements":[{"expression":{"id":1928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1926,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1657,"src":"6714:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1927,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1878,"src":"6730:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6714:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1929,"nodeType":"ExpressionStatement","src":"6714:21:10"}]}]}},{"eventCall":{"arguments":[{"id":1942,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"6996:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1943,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1876,"src":"7002:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1944,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1878,"src":"7006:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1941,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2153,"src":"6987:8:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6987:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1946,"nodeType":"EmitStatement","src":"6982:30:10"}]},"documentation":{"id":1872,"nodeType":"StructuredDocumentation","src":"5603:304:10","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":1948,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"5921:7:10","nodeType":"FunctionDefinition","parameters":{"id":1879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1874,"mutability":"mutable","name":"from","nameLocation":"5937:4:10","nodeType":"VariableDeclaration","scope":1948,"src":"5929:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1873,"name":"address","nodeType":"ElementaryTypeName","src":"5929:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1876,"mutability":"mutable","name":"to","nameLocation":"5951:2:10","nodeType":"VariableDeclaration","scope":1948,"src":"5943:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1875,"name":"address","nodeType":"ElementaryTypeName","src":"5943:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1878,"mutability":"mutable","name":"value","nameLocation":"5963:5:10","nodeType":"VariableDeclaration","scope":1948,"src":"5955:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1877,"name":"uint256","nodeType":"ElementaryTypeName","src":"5955:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5928:41:10"},"returnParameters":{"id":1880,"nodeType":"ParameterList","parameters":[],"src":"5987:0:10"},"scope":2141,"src":"5912:1107:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1980,"nodeType":"Block","src":"7418:152:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1956,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1951,"src":"7432:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7451:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1958,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7443:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1957,"name":"address","nodeType":"ElementaryTypeName","src":"7443:7:10","typeDescriptions":{}}},"id":1960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7443:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7432:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1970,"nodeType":"IfStatement","src":"7428:91:10","trueBody":{"id":1969,"nodeType":"Block","src":"7455:64:10","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7505:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1964,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7497:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1963,"name":"address","nodeType":"ElementaryTypeName","src":"7497:7:10","typeDescriptions":{}}},"id":1966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7497:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1962,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"7476:20:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7476:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1968,"nodeType":"RevertStatement","src":"7469:39:10"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7544:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1973,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7536:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1972,"name":"address","nodeType":"ElementaryTypeName","src":"7536:7:10","typeDescriptions":{}}},"id":1975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7536:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1976,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1951,"src":"7548:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1977,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1953,"src":"7557:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1971,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1948,"src":"7528:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7528:35:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1979,"nodeType":"ExpressionStatement","src":"7528:35:10"}]},"documentation":{"id":1949,"nodeType":"StructuredDocumentation","src":"7025:332:10","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":1981,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7371:5:10","nodeType":"FunctionDefinition","parameters":{"id":1954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1951,"mutability":"mutable","name":"account","nameLocation":"7385:7:10","nodeType":"VariableDeclaration","scope":1981,"src":"7377:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1950,"name":"address","nodeType":"ElementaryTypeName","src":"7377:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1953,"mutability":"mutable","name":"value","nameLocation":"7402:5:10","nodeType":"VariableDeclaration","scope":1981,"src":"7394:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1952,"name":"uint256","nodeType":"ElementaryTypeName","src":"7394:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7376:32:10"},"returnParameters":{"id":1955,"nodeType":"ParameterList","parameters":[],"src":"7418:0:10"},"scope":2141,"src":"7362:208:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2013,"nodeType":"Block","src":"7944:150:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1989,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1984,"src":"7958:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7977:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1991,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7969:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1990,"name":"address","nodeType":"ElementaryTypeName","src":"7969:7:10","typeDescriptions":{}}},"id":1993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7969:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7958:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2003,"nodeType":"IfStatement","src":"7954:89:10","trueBody":{"id":2002,"nodeType":"Block","src":"7981:62:10","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8029:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1997,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8021:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1996,"name":"address","nodeType":"ElementaryTypeName","src":"8021:7:10","typeDescriptions":{}}},"id":1999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8021:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1995,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"8002:18:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8002:30:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2001,"nodeType":"RevertStatement","src":"7995:37:10"}]}},{"expression":{"arguments":[{"id":2005,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1984,"src":"8060:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":2008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8077:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2007,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8069:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2006,"name":"address","nodeType":"ElementaryTypeName","src":"8069:7:10","typeDescriptions":{}}},"id":2009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8069:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2010,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1986,"src":"8081:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2004,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1948,"src":"8052:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8052:35:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2012,"nodeType":"ExpressionStatement","src":"8052:35:10"}]},"documentation":{"id":1982,"nodeType":"StructuredDocumentation","src":"7576:307:10","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":2014,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"7897:5:10","nodeType":"FunctionDefinition","parameters":{"id":1987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1984,"mutability":"mutable","name":"account","nameLocation":"7911:7:10","nodeType":"VariableDeclaration","scope":2014,"src":"7903:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1983,"name":"address","nodeType":"ElementaryTypeName","src":"7903:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1986,"mutability":"mutable","name":"value","nameLocation":"7928:5:10","nodeType":"VariableDeclaration","scope":2014,"src":"7920:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1985,"name":"uint256","nodeType":"ElementaryTypeName","src":"7920:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7902:32:10"},"returnParameters":{"id":1988,"nodeType":"ParameterList","parameters":[],"src":"7944:0:10"},"scope":2141,"src":"7888:206:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2031,"nodeType":"Block","src":"8704:54:10","statements":[{"expression":{"arguments":[{"id":2025,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2017,"src":"8723:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2026,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2019,"src":"8730:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2027,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"8739:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":2028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8746:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2024,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[2032,2092],"referencedDeclaration":2092,"src":"8714:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":2029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8714:37:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2030,"nodeType":"ExpressionStatement","src":"8714:37:10"}]},"documentation":{"id":2015,"nodeType":"StructuredDocumentation","src":"8100:525:10","text":" @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":2032,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8639:8:10","nodeType":"FunctionDefinition","parameters":{"id":2022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2017,"mutability":"mutable","name":"owner","nameLocation":"8656:5:10","nodeType":"VariableDeclaration","scope":2032,"src":"8648:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2016,"name":"address","nodeType":"ElementaryTypeName","src":"8648:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2019,"mutability":"mutable","name":"spender","nameLocation":"8671:7:10","nodeType":"VariableDeclaration","scope":2032,"src":"8663:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2018,"name":"address","nodeType":"ElementaryTypeName","src":"8663:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2021,"mutability":"mutable","name":"value","nameLocation":"8688:5:10","nodeType":"VariableDeclaration","scope":2032,"src":"8680:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2020,"name":"uint256","nodeType":"ElementaryTypeName","src":"8680:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8647:47:10"},"returnParameters":{"id":2023,"nodeType":"ParameterList","parameters":[],"src":"8704:0:10"},"scope":2141,"src":"8630:128:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2091,"nodeType":"Block","src":"9703:334:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2044,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2035,"src":"9717:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9734:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2046,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9726:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2045,"name":"address","nodeType":"ElementaryTypeName","src":"9726:7:10","typeDescriptions":{}}},"id":2048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9726:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9717:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2058,"nodeType":"IfStatement","src":"9713:89:10","trueBody":{"id":2057,"nodeType":"Block","src":"9738:64:10","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9788:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2052,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9780:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2051,"name":"address","nodeType":"ElementaryTypeName","src":"9780:7:10","typeDescriptions":{}}},"id":2054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9780:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2050,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"9759:20:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9759:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2056,"nodeType":"RevertStatement","src":"9752:39:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2059,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2037,"src":"9815:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9834:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2061,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9826:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2060,"name":"address","nodeType":"ElementaryTypeName","src":"9826:7:10","typeDescriptions":{}}},"id":2063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9826:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9815:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2073,"nodeType":"IfStatement","src":"9811:90:10","trueBody":{"id":2072,"nodeType":"Block","src":"9838:63:10","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9887:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2067,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9879:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2066,"name":"address","nodeType":"ElementaryTypeName","src":"9879:7:10","typeDescriptions":{}}},"id":2069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9879:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2065,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"9859:19:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9859:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2071,"nodeType":"RevertStatement","src":"9852:38:10"}]}},{"expression":{"id":2080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2074,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1655,"src":"9910:11:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":2077,"indexExpression":{"id":2075,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2035,"src":"9922:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9910:18:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2078,"indexExpression":{"id":2076,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2037,"src":"9929:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9910:27:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2079,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2039,"src":"9940:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9910:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2081,"nodeType":"ExpressionStatement","src":"9910:35:10"},{"condition":{"id":2082,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"9959:9:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2090,"nodeType":"IfStatement","src":"9955:76:10","trueBody":{"id":2089,"nodeType":"Block","src":"9970:61:10","statements":[{"eventCall":{"arguments":[{"id":2084,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2035,"src":"9998:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2085,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2037,"src":"10005:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2086,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2039,"src":"10014:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2083,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2162,"src":"9989:8:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9989:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2088,"nodeType":"EmitStatement","src":"9984:36:10"}]}}]},"documentation":{"id":2033,"nodeType":"StructuredDocumentation","src":"8764:836:10","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":2092,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9614:8:10","nodeType":"FunctionDefinition","parameters":{"id":2042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2035,"mutability":"mutable","name":"owner","nameLocation":"9631:5:10","nodeType":"VariableDeclaration","scope":2092,"src":"9623:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2034,"name":"address","nodeType":"ElementaryTypeName","src":"9623:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2037,"mutability":"mutable","name":"spender","nameLocation":"9646:7:10","nodeType":"VariableDeclaration","scope":2092,"src":"9638:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2036,"name":"address","nodeType":"ElementaryTypeName","src":"9638:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2039,"mutability":"mutable","name":"value","nameLocation":"9663:5:10","nodeType":"VariableDeclaration","scope":2092,"src":"9655:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2038,"name":"uint256","nodeType":"ElementaryTypeName","src":"9655:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2041,"mutability":"mutable","name":"emitEvent","nameLocation":"9675:9:10","nodeType":"VariableDeclaration","scope":2092,"src":"9670:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2040,"name":"bool","nodeType":"ElementaryTypeName","src":"9670:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9622:63:10"},"returnParameters":{"id":2043,"nodeType":"ParameterList","parameters":[],"src":"9703:0:10"},"scope":2141,"src":"9605:432:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2139,"nodeType":"Block","src":"10408:387:10","statements":[{"assignments":[2103],"declarations":[{"constant":false,"id":2103,"mutability":"mutable","name":"currentAllowance","nameLocation":"10426:16:10","nodeType":"VariableDeclaration","scope":2139,"src":"10418:24:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2102,"name":"uint256","nodeType":"ElementaryTypeName","src":"10418:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2108,"initialValue":{"arguments":[{"id":2105,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2095,"src":"10455:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2106,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2097,"src":"10462:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2104,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1768,"src":"10445:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":2107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10445:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10418:52:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2109,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2103,"src":"10484:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"id":2112,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10508:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2111,"name":"uint256","nodeType":"ElementaryTypeName","src":"10508:7:10","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":2110,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10503:4:10","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10503:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":2114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10517:3:10","memberName":"max","nodeType":"MemberAccess","src":"10503:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10484:36:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2138,"nodeType":"IfStatement","src":"10480:309:10","trueBody":{"id":2137,"nodeType":"Block","src":"10522:267:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2116,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2103,"src":"10540:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2117,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2099,"src":"10559:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10540:24:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2126,"nodeType":"IfStatement","src":"10536:130:10","trueBody":{"id":2125,"nodeType":"Block","src":"10566:100:10","statements":[{"errorCall":{"arguments":[{"id":2120,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2097,"src":"10618:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2121,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2103,"src":"10627:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2122,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2099,"src":"10645:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2119,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":268,"src":"10591:26:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":2123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10591:60:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2124,"nodeType":"RevertStatement","src":"10584:67:10"}]}},{"id":2136,"nodeType":"UncheckedBlock","src":"10679:100:10","statements":[{"expression":{"arguments":[{"id":2128,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2095,"src":"10716:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2129,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2097,"src":"10723:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2130,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2103,"src":"10732:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2131,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2099,"src":"10751:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10732:24:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":2133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10758:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2127,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[2032,2092],"referencedDeclaration":2092,"src":"10707:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":2134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10707:57:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2135,"nodeType":"ExpressionStatement","src":"10707:57:10"}]}]}}]},"documentation":{"id":2093,"nodeType":"StructuredDocumentation","src":"10043:271:10","text":" @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":2140,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10328:15:10","nodeType":"FunctionDefinition","parameters":{"id":2100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2095,"mutability":"mutable","name":"owner","nameLocation":"10352:5:10","nodeType":"VariableDeclaration","scope":2140,"src":"10344:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2094,"name":"address","nodeType":"ElementaryTypeName","src":"10344:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2097,"mutability":"mutable","name":"spender","nameLocation":"10367:7:10","nodeType":"VariableDeclaration","scope":2140,"src":"10359:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2096,"name":"address","nodeType":"ElementaryTypeName","src":"10359:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2099,"mutability":"mutable","name":"value","nameLocation":"10384:5:10","nodeType":"VariableDeclaration","scope":2140,"src":"10376:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2098,"name":"uint256","nodeType":"ElementaryTypeName","src":"10376:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10343:47:10"},"returnParameters":{"id":2101,"nodeType":"ParameterList","parameters":[],"src":"10408:0:10"},"scope":2141,"src":"10319:476:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2142,"src":"1106:9691:10","usedErrors":[249,254,259,268,273,278],"usedEvents":[2153,2162]}],"src":"105:10693:10"},"id":10},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[2219]},"id":2220,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2143,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"106:25:11"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":2144,"nodeType":"StructuredDocumentation","src":"133:71:11","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":2219,"linearizedBaseContracts":[2219],"name":"IERC20","nameLocation":"215:6:11","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2145,"nodeType":"StructuredDocumentation","src":"228:158:11","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":2153,"name":"Transfer","nameLocation":"397:8:11","nodeType":"EventDefinition","parameters":{"id":2152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2147,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"422:4:11","nodeType":"VariableDeclaration","scope":2153,"src":"406:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2146,"name":"address","nodeType":"ElementaryTypeName","src":"406:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2149,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"444:2:11","nodeType":"VariableDeclaration","scope":2153,"src":"428:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2148,"name":"address","nodeType":"ElementaryTypeName","src":"428:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2151,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"456:5:11","nodeType":"VariableDeclaration","scope":2153,"src":"448:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2150,"name":"uint256","nodeType":"ElementaryTypeName","src":"448:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"405:57:11"},"src":"391:72:11"},{"anonymous":false,"documentation":{"id":2154,"nodeType":"StructuredDocumentation","src":"469:148:11","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":2162,"name":"Approval","nameLocation":"628:8:11","nodeType":"EventDefinition","parameters":{"id":2161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2156,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"653:5:11","nodeType":"VariableDeclaration","scope":2162,"src":"637:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2155,"name":"address","nodeType":"ElementaryTypeName","src":"637:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2158,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"676:7:11","nodeType":"VariableDeclaration","scope":2162,"src":"660:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2157,"name":"address","nodeType":"ElementaryTypeName","src":"660:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2160,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"693:5:11","nodeType":"VariableDeclaration","scope":2162,"src":"685:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2159,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"636:63:11"},"src":"622:78:11"},{"documentation":{"id":2163,"nodeType":"StructuredDocumentation","src":"706:65:11","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":2168,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"785:11:11","nodeType":"FunctionDefinition","parameters":{"id":2164,"nodeType":"ParameterList","parameters":[],"src":"796:2:11"},"returnParameters":{"id":2167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2166,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2168,"src":"822:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2165,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:9:11"},"scope":2219,"src":"776:55:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2169,"nodeType":"StructuredDocumentation","src":"837:71:11","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":2176,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"922:9:11","nodeType":"FunctionDefinition","parameters":{"id":2172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2171,"mutability":"mutable","name":"account","nameLocation":"940:7:11","nodeType":"VariableDeclaration","scope":2176,"src":"932:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2170,"name":"address","nodeType":"ElementaryTypeName","src":"932:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"931:17:11"},"returnParameters":{"id":2175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2174,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2176,"src":"972:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2173,"name":"uint256","nodeType":"ElementaryTypeName","src":"972:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"971:9:11"},"scope":2219,"src":"913:68:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2177,"nodeType":"StructuredDocumentation","src":"987:213:11","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":2186,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1214:8:11","nodeType":"FunctionDefinition","parameters":{"id":2182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2179,"mutability":"mutable","name":"to","nameLocation":"1231:2:11","nodeType":"VariableDeclaration","scope":2186,"src":"1223:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2178,"name":"address","nodeType":"ElementaryTypeName","src":"1223:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2181,"mutability":"mutable","name":"value","nameLocation":"1243:5:11","nodeType":"VariableDeclaration","scope":2186,"src":"1235:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2180,"name":"uint256","nodeType":"ElementaryTypeName","src":"1235:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1222:27:11"},"returnParameters":{"id":2185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2184,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2186,"src":"1268:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2183,"name":"bool","nodeType":"ElementaryTypeName","src":"1268:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1267:6:11"},"scope":2219,"src":"1205:69:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2187,"nodeType":"StructuredDocumentation","src":"1280:264:11","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":2196,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1558:9:11","nodeType":"FunctionDefinition","parameters":{"id":2192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2189,"mutability":"mutable","name":"owner","nameLocation":"1576:5:11","nodeType":"VariableDeclaration","scope":2196,"src":"1568:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2188,"name":"address","nodeType":"ElementaryTypeName","src":"1568:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2191,"mutability":"mutable","name":"spender","nameLocation":"1591:7:11","nodeType":"VariableDeclaration","scope":2196,"src":"1583:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2190,"name":"address","nodeType":"ElementaryTypeName","src":"1583:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1567:32:11"},"returnParameters":{"id":2195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2194,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2196,"src":"1623:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2193,"name":"uint256","nodeType":"ElementaryTypeName","src":"1623:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1622:9:11"},"scope":2219,"src":"1549:83:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2197,"nodeType":"StructuredDocumentation","src":"1638:667:11","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":2206,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2319:7:11","nodeType":"FunctionDefinition","parameters":{"id":2202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2199,"mutability":"mutable","name":"spender","nameLocation":"2335:7:11","nodeType":"VariableDeclaration","scope":2206,"src":"2327:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2198,"name":"address","nodeType":"ElementaryTypeName","src":"2327:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2201,"mutability":"mutable","name":"value","nameLocation":"2352:5:11","nodeType":"VariableDeclaration","scope":2206,"src":"2344:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2200,"name":"uint256","nodeType":"ElementaryTypeName","src":"2344:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2326:32:11"},"returnParameters":{"id":2205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2204,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2206,"src":"2377:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2203,"name":"bool","nodeType":"ElementaryTypeName","src":"2377:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2376:6:11"},"scope":2219,"src":"2310:73:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2207,"nodeType":"StructuredDocumentation","src":"2389:297:11","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":2218,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2700:12:11","nodeType":"FunctionDefinition","parameters":{"id":2214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2209,"mutability":"mutable","name":"from","nameLocation":"2721:4:11","nodeType":"VariableDeclaration","scope":2218,"src":"2713:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2208,"name":"address","nodeType":"ElementaryTypeName","src":"2713:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2211,"mutability":"mutable","name":"to","nameLocation":"2735:2:11","nodeType":"VariableDeclaration","scope":2218,"src":"2727:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2210,"name":"address","nodeType":"ElementaryTypeName","src":"2727:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2213,"mutability":"mutable","name":"value","nameLocation":"2747:5:11","nodeType":"VariableDeclaration","scope":2218,"src":"2739:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2212,"name":"uint256","nodeType":"ElementaryTypeName","src":"2739:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2712:41:11"},"returnParameters":{"id":2217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2216,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2218,"src":"2772:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2215,"name":"bool","nodeType":"ElementaryTypeName","src":"2772:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2771:6:11"},"scope":2219,"src":"2691:87:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2220,"src":"205:2575:11","usedErrors":[],"usedEvents":[2153,2162]}],"src":"106:2675:11"},"id":11},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[2219],"IERC20Metadata":[2245]},"id":2246,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2221,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"125:24:12"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":2223,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2246,"sourceUnit":2220,"src":"151:37:12","symbolAliases":[{"foreign":{"id":2222,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2219,"src":"159:6:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2225,"name":"IERC20","nameLocations":["306:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":2219,"src":"306:6:12"},"id":2226,"nodeType":"InheritanceSpecifier","src":"306:6:12"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":2224,"nodeType":"StructuredDocumentation","src":"190:87:12","text":" @dev Interface for the optional metadata functions from the ERC-20 standard."},"fullyImplemented":false,"id":2245,"linearizedBaseContracts":[2245,2219],"name":"IERC20Metadata","nameLocation":"288:14:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2227,"nodeType":"StructuredDocumentation","src":"319:54:12","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":2232,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"387:4:12","nodeType":"FunctionDefinition","parameters":{"id":2228,"nodeType":"ParameterList","parameters":[],"src":"391:2:12"},"returnParameters":{"id":2231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2230,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2232,"src":"417:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2229,"name":"string","nodeType":"ElementaryTypeName","src":"417:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"416:15:12"},"scope":2245,"src":"378:54:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2233,"nodeType":"StructuredDocumentation","src":"438:56:12","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":2238,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"508:6:12","nodeType":"FunctionDefinition","parameters":{"id":2234,"nodeType":"ParameterList","parameters":[],"src":"514:2:12"},"returnParameters":{"id":2237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2236,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2238,"src":"540:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2235,"name":"string","nodeType":"ElementaryTypeName","src":"540:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"539:15:12"},"scope":2245,"src":"499:56:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2239,"nodeType":"StructuredDocumentation","src":"561:65:12","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":2244,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"640:8:12","nodeType":"FunctionDefinition","parameters":{"id":2240,"nodeType":"ParameterList","parameters":[],"src":"648:2:12"},"returnParameters":{"id":2243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2242,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2244,"src":"674:5:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2241,"name":"uint8","nodeType":"ElementaryTypeName","src":"674:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"673:7:12"},"scope":2245,"src":"631:50:12","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2246,"src":"278:405:12","usedErrors":[],"usedEvents":[2153,2162]}],"src":"125:559:12"},"id":12},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"IERC1363":[229],"IERC20":[2219],"SafeERC20":[2709]},"id":2710,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2247,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:13"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":2249,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2710,"sourceUnit":2220,"src":"141:37:13","symbolAliases":[{"foreign":{"id":2248,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2219,"src":"149:6:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1363.sol","file":"../../../interfaces/IERC1363.sol","id":2251,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2710,"sourceUnit":230,"src":"179:58:13","symbolAliases":[{"foreign":{"id":2250,"name":"IERC1363","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"187:8:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":2252,"nodeType":"StructuredDocumentation","src":"239:458:13","text":" @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":2709,"linearizedBaseContracts":[2709],"name":"SafeERC20","nameLocation":"706:9:13","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2253,"nodeType":"StructuredDocumentation","src":"722:65:13","text":" @dev An operation with an ERC-20 token failed."},"errorSelector":"5274afe7","id":2257,"name":"SafeERC20FailedOperation","nameLocation":"798:24:13","nodeType":"ErrorDefinition","parameters":{"id":2256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2255,"mutability":"mutable","name":"token","nameLocation":"831:5:13","nodeType":"VariableDeclaration","scope":2257,"src":"823:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2254,"name":"address","nodeType":"ElementaryTypeName","src":"823:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"822:15:13"},"src":"792:46:13"},{"documentation":{"id":2258,"nodeType":"StructuredDocumentation","src":"844:71:13","text":" @dev Indicates a failed `decreaseAllowance` request."},"errorSelector":"e570110f","id":2266,"name":"SafeERC20FailedDecreaseAllowance","nameLocation":"926:32:13","nodeType":"ErrorDefinition","parameters":{"id":2265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2260,"mutability":"mutable","name":"spender","nameLocation":"967:7:13","nodeType":"VariableDeclaration","scope":2266,"src":"959:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2259,"name":"address","nodeType":"ElementaryTypeName","src":"959:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2262,"mutability":"mutable","name":"currentAllowance","nameLocation":"984:16:13","nodeType":"VariableDeclaration","scope":2266,"src":"976:24:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2261,"name":"uint256","nodeType":"ElementaryTypeName","src":"976:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2264,"mutability":"mutable","name":"requestedDecrease","nameLocation":"1010:17:13","nodeType":"VariableDeclaration","scope":2266,"src":"1002:25:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2263,"name":"uint256","nodeType":"ElementaryTypeName","src":"1002:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"958:70:13"},"src":"920:109:13"},{"body":{"id":2289,"nodeType":"Block","src":"1291:88:13","statements":[{"expression":{"arguments":[{"id":2278,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2270,"src":"1321:5:13","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2219","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":2281,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2270,"src":"1343:5:13","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2219","typeString":"contract IERC20"}},"id":2282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1349:8:13","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":2186,"src":"1343:14:13","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":2283,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2272,"src":"1360:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2284,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2274,"src":"1364:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2285,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1359:11:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":2279,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1328:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2280,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1332:10:13","memberName":"encodeCall","nodeType":"MemberAccess","src":"1328:14:13","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1328:43:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$2219","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2277,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"1301:19:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$2219_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":2287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1301:71:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2288,"nodeType":"ExpressionStatement","src":"1301:71:13"}]},"documentation":{"id":2267,"nodeType":"StructuredDocumentation","src":"1035:179:13","text":" @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":2290,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"1228:12:13","nodeType":"FunctionDefinition","parameters":{"id":2275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2270,"mutability":"mutable","name":"token","nameLocation":"1248:5:13","nodeType":"VariableDeclaration","scope":2290,"src":"1241:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2219","typeString":"contract IERC20"},"typeName":{"id":2269,"nodeType":"UserDefinedTypeName","pathNode":{"id":2268,"name":"IERC20","nameLocations":["1241:6:13"],"nodeType":"IdentifierPath","referencedDeclaration":2219,"src":"1241:6:13"},"referencedDeclaration":2219,"src":"1241:6:13","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2219","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2272,"mutability":"mutable","name":"to","nameLocation":"1263:2:13","nodeType":"VariableDeclaration","scope":2290,"src":"1255:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2271,"name":"address","nodeType":"ElementaryTypeName","src":"1255:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2274,"mutability":"mutable","name":"value","nameLocation":"1275:5:13","nodeType":"VariableDeclaration","scope":2290,"src":"1267:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2273,"name":"uint256","nodeType":"ElementaryTypeName","src":"1267:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1240:41:13"},"returnParameters":{"id":2276,"nodeType":"ParameterList","parameters":[],"src":"1291:0:13"},"scope":2709,"src":"1219:160:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2316,"nodeType":"Block","src":"1708:98:13","statements":[{"expression":{"arguments":[{"id":2304,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2294,"src":"1738:5:13","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2219","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":2307,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2294,"src":"1760:5:13","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2219","typeString":"contract IERC20"}},"id":2308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1766:12:13","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":2218,"src":"1760:18:13","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},{"components":[{"id":2309,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2296,"src":"1781:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2310,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2298,"src":"1787:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2311,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2300,"src":"1791:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2312,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1780:17:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}],"expression":{"id":2305,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1745:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2306,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1749:10:13","memberName":"encodeCall","nodeType":"MemberAccess","src":"1745:14:13","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1745:53:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$2219","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2303,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"1718:19:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$2219_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":2314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1718:81:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2315,"nodeType":"ExpressionStatement","src":"1718:81:13"}]},"documentation":{"id":2291,"nodeType":"StructuredDocumentation","src":"1385:228:13","text":" @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."},"id":2317,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1627:16:13","nodeType":"FunctionDefinition","parameters":{"id":2301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2294,"mutability":"mutable","name":"token","nameLocation":"1651:5:13","nodeType":"VariableDeclaration","scope":2317,"src":"1644:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2219","typeString":"contract IERC20"},"typeName":{"id":2293,"nodeType":"UserDefinedTypeName","pathNode":{"id":2292,"name":"IERC20","nameLocations":["1644:6:13"],"nodeType":"IdentifierPath","referencedDeclaration":2219,"src":"1644:6:13"},"referencedDeclaration":2219,"src":"1644:6:13","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2219","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2296,"mutability":"mutable","name":"from","nameLocation":"1666:4:13","nodeType":"VariableDeclaration","scope":2317,"src":"1658:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2295,"name":"address","nodeType":"ElementaryTypeName","src":"1658:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2298,"mutability":"mutable","name":"to","nameLocation":"1680:2:13","nodeType":"VariableDeclaration","scope":2317,"src":"1672:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2297,"name":"address","nodeType":"ElementaryTypeName","src":"1672:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2300,"mutability":"mutable","name":"value","nameLocation":"1692:5:13","nodeType":"VariableDeclaration","scope":2317,"src":"1684:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2299,"name":"uint256","nodeType":"ElementaryTypeName","src":"1684:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1643:55:13"},"returnParameters":{"id":2302,"nodeType":"ParameterList","parameters":[],"src":"1708:0:13"},"scope":2709,"src":"1618:188:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2342,"nodeType":"Block","src":"2033:99:13","statements":[{"expression":{"arguments":[{"id":2331,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2321,"src":"2074:5:13","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2219","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":2334,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2321,"src":"2096:5:13","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2219","typeString":"contract IERC20"}},"id":2335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2102:8:13","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":2186,"src":"2096:14:13","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":2336,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2323,"src":"2113:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2337,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2325,"src":"2117:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2338,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2112:11:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":2332,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2081:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2333,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2085:10:13","memberName":"encodeCall","nodeType":"MemberAccess","src":"2081:14:13","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2081:43:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$2219","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2330,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2708,"src":"2050:23:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$2219_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":2340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2050:75:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2329,"id":2341,"nodeType":"Return","src":"2043:82:13"}]},"documentation":{"id":2318,"nodeType":"StructuredDocumentation","src":"1812:126:13","text":" @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."},"id":2343,"implemented":true,"kind":"function","modifiers":[],"name":"trySafeTransfer","nameLocation":"1952:15:13","nodeType":"FunctionDefinition","parameters":{"id":2326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2321,"mutability":"mutable","name":"token","nameLocation":"1975:5:13","nodeType":"VariableDeclaration","scope":2343,"src":"1968:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2219","typeString":"contract IERC20"},"typeName":{"id":2320,"nodeType":"UserDefinedTypeName","pathNode":{"id":2319,"name":"IERC20","nameLocations":["1968:6:13"],"nodeType":"IdentifierPath","referencedDeclaration":2219,"src":"1968:6:13"},"referencedDeclaration":2219,"src":"1968:6:13","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2219","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2323,"mutability":"mutable","name":"to","nameLocation":"1990:2:13","nodeType":"VariableDeclaration","scope":2343,"src":"1982:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2322,"name":"address","nodeType":"ElementaryTypeName","src":"1982:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2325,"mutability":"mutable","name":"value","nameLocation":"2002:5:13","nodeType":"VariableDeclaration","scope":2343,"src":"1994:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2324,"name":"uint256","nodeType":"ElementaryTypeName","src":"1994:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1967:41:13"},"returnParameters":{"id":2329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2328,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2343,"src":"2027:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2327,"name":"bool","nodeType":"ElementaryTypeName","src":"2027:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2026:6:13"},"scope":2709,"src":"1943:189:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2371,"nodeType":"Block","src":"2381:109:13","statements":[{"expression":{"arguments":[{"id":2359,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2347,"src":"2422:5:13","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2219","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":2362,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2347,"src":"2444:5:13","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2219","typeString":"contract IERC20"}},"id":2363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2450:12:13","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":2218,"src":"2444:18:13","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},{"components":[{"id":2364,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"2465:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2365,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2351,"src":"2471:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2366,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2353,"src":"2475:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2367,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2464:17:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}],"expression":{"id":2360,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2429:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2361,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2433:10:13","memberName":"encodeCall","nodeType":"MemberAccess","src":"2429:14:13","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2429:53:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$2219","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2358,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2708,"src":"2398:23:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$2219_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":2369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2398:85:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2357,"id":2370,"nodeType":"Return","src":"2391:92:13"}]},"documentation":{"id":2344,"nodeType":"StructuredDocumentation","src":"2138:130:13","text":" @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."},"id":2372,"implemented":true,"kind":"function","modifiers":[],"name":"trySafeTransferFrom","nameLocation":"2282:19:13","nodeType":"FunctionDefinition","parameters":{"id":2354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2347,"mutability":"mutable","name":"token","nameLocation":"2309:5:13","nodeType":"VariableDeclaration","scope":2372,"src":"2302:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2219","typeString":"contract IERC20"},"typeName":{"id":2346,"nodeType":"UserDefinedTypeName","pathNode":{"id":2345,"name":"IERC20","nameLocations":["2302:6:13"],"nodeType":"IdentifierPath","referencedDeclaration":2219,"src":"2302:6:13"},"referencedDeclaration":2219,"src":"2302:6:13","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2219","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2349,"mutability":"mutable","name":"from","nameLocation":"2324:4:13","nodeType":"VariableDeclaration","scope":2372,"src":"2316:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2348,"name":"address","nodeType":"ElementaryTypeName","src":"2316:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2351,"mutability":"mutable","name":"to","nameLocation":"2338:2:13","nodeType":"VariableDeclaration","scope":2372,"src":"2330:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2350,"name":"address","nodeType":"ElementaryTypeName","src":"2330:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2353,"mutability":"mutable","name":"value","nameLocation":"2350:5:13","nodeType":"VariableDeclaration","scope":2372,"src":"2342:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2352,"name":"uint256","nodeType":"ElementaryTypeName","src":"2342:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2301:55:13"},"returnParameters":{"id":2357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2356,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2372,"src":"2375:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2355,"name":"bool","nodeType":"ElementaryTypeName","src":"2375:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2374:6:13"},"scope":2709,"src":"2273:217:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2402,"nodeType":"Block","src":"3232:139:13","statements":[{"assignments":[2384],"declarations":[{"constant":false,"id":2384,"mutability":"mutable","name":"oldAllowance","nameLocation":"3250:12:13","nodeType":"VariableDeclaration","scope":2402,"src":"3242:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2383,"name":"uint256","nodeType":"ElementaryTypeName","src":"3242:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2393,"initialValue":{"arguments":[{"arguments":[{"id":2389,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3289:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$2709","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$2709","typeString":"library SafeERC20"}],"id":2388,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3281:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2387,"name":"address","nodeType":"ElementaryTypeName","src":"3281:7:13","typeDescriptions":{}}},"id":2390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3281:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2391,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2378,"src":"3296:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2385,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2376,"src":"3265:5:13","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2219","typeString":"contract IERC20"}},"id":2386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3271:9:13","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":2196,"src":"3265:15:13","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":2392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3265:39:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3242:62:13"},{"expression":{"arguments":[{"id":2395,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2376,"src":"3327:5:13","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2219","typeString":"contract IERC20"}},{"id":2396,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2378,"src":"3334:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2397,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2384,"src":"3343:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2398,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2380,"src":"3358:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3343:20:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$2219","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2394,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2493,"src":"3314:12:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$2219_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":2400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3314:50:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2401,"nodeType":"ExpressionStatement","src":"3314:50:13"}]},"documentation":{"id":2373,"nodeType":"StructuredDocumentation","src":"2496:645:13","text":" @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."},"id":2403,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"3155:21:13","nodeType":"FunctionDefinition","parameters":{"id":2381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2376,"mutability":"mutable","name":"token","nameLocation":"3184:5:13","nodeType":"VariableDeclaration","scope":2403,"src":"3177:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2219","typeString":"contract IERC20"},"typeName":{"id":2375,"nodeType":"UserDefinedTypeName","pathNode":{"id":2374,"name":"IERC20","nameLocations":["3177:6:13"],"nodeType":"IdentifierPath","referencedDeclaration":2219,"src":"3177:6:13"},"referencedDeclaration":2219,"src":"3177:6:13","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2219","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2378,"mutability":"mutable","name":"spender","nameLocation":"3199:7:13","nodeType":"VariableDeclaration","scope":2403,"src":"3191:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2377,"name":"address","nodeType":"ElementaryTypeName","src":"3191:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2380,"mutability":"mutable","name":"value","nameLocation":"3216:5:13","nodeType":"VariableDeclaration","scope":2403,"src":"3208:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2379,"name":"uint256","nodeType":"ElementaryTypeName","src":"3208:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3176:46:13"},"returnParameters":{"id":2382,"nodeType":"ParameterList","parameters":[],"src":"3232:0:13"},"scope":2709,"src":"3146:225:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2445,"nodeType":"Block","src":"4137:370:13","statements":[{"id":2444,"nodeType":"UncheckedBlock","src":"4147:354:13","statements":[{"assignments":[2415],"declarations":[{"constant":false,"id":2415,"mutability":"mutable","name":"currentAllowance","nameLocation":"4179:16:13","nodeType":"VariableDeclaration","scope":2444,"src":"4171:24:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2414,"name":"uint256","nodeType":"ElementaryTypeName","src":"4171:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2424,"initialValue":{"arguments":[{"arguments":[{"id":2420,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4222:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$2709","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$2709","typeString":"library SafeERC20"}],"id":2419,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4214:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2418,"name":"address","nodeType":"ElementaryTypeName","src":"4214:7:13","typeDescriptions":{}}},"id":2421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4214:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2422,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"4229:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2416,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2407,"src":"4198:5:13","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2219","typeString":"contract IERC20"}},"id":2417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4204:9:13","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":2196,"src":"4198:15:13","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":2423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4198:39:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4171:66:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2425,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2415,"src":"4255:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2426,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2411,"src":"4274:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4255:36:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2435,"nodeType":"IfStatement","src":"4251:160:13","trueBody":{"id":2434,"nodeType":"Block","src":"4293:118:13","statements":[{"errorCall":{"arguments":[{"id":2429,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"4351:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2430,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2415,"src":"4360:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2431,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2411,"src":"4378:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2428,"name":"SafeERC20FailedDecreaseAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2266,"src":"4318:32:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":2432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4318:78:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2433,"nodeType":"RevertStatement","src":"4311:85:13"}]}},{"expression":{"arguments":[{"id":2437,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2407,"src":"4437:5:13","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2219","typeString":"contract IERC20"}},{"id":2438,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"4444:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2439,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2415,"src":"4453:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2440,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2411,"src":"4472:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4453:36:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$2219","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2436,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2493,"src":"4424:12:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$2219_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":2442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4424:66:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2443,"nodeType":"ExpressionStatement","src":"4424:66:13"}]}]},"documentation":{"id":2404,"nodeType":"StructuredDocumentation","src":"3377:657:13","text":" @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."},"id":2446,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"4048:21:13","nodeType":"FunctionDefinition","parameters":{"id":2412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2407,"mutability":"mutable","name":"token","nameLocation":"4077:5:13","nodeType":"VariableDeclaration","scope":2446,"src":"4070:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2219","typeString":"contract IERC20"},"typeName":{"id":2406,"nodeType":"UserDefinedTypeName","pathNode":{"id":2405,"name":"IERC20","nameLocations":["4070:6:13"],"nodeType":"IdentifierPath","referencedDeclaration":2219,"src":"4070:6:13"},"referencedDeclaration":2219,"src":"4070:6:13","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2219","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2409,"mutability":"mutable","name":"spender","nameLocation":"4092:7:13","nodeType":"VariableDeclaration","scope":2446,"src":"4084:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2408,"name":"address","nodeType":"ElementaryTypeName","src":"4084:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2411,"mutability":"mutable","name":"requestedDecrease","nameLocation":"4109:17:13","nodeType":"VariableDeclaration","scope":2446,"src":"4101:25:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2410,"name":"uint256","nodeType":"ElementaryTypeName","src":"4101:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4069:58:13"},"returnParameters":{"id":2413,"nodeType":"ParameterList","parameters":[],"src":"4137:0:13"},"scope":2709,"src":"4039:468:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2492,"nodeType":"Block","src":"5161:303:13","statements":[{"assignments":[2458],"declarations":[{"constant":false,"id":2458,"mutability":"mutable","name":"approvalCall","nameLocation":"5184:12:13","nodeType":"VariableDeclaration","scope":2492,"src":"5171:25:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2457,"name":"bytes","nodeType":"ElementaryTypeName","src":"5171:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2467,"initialValue":{"arguments":[{"expression":{"id":2461,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2450,"src":"5214:5:13","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2219","typeString":"contract IERC20"}},"id":2462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5220:7:13","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":2206,"src":"5214:13:13","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":2463,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"5230:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2464,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2454,"src":"5239:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2465,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5229:16:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":2459,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5199:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2460,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5203:10:13","memberName":"encodeCall","nodeType":"MemberAccess","src":"5199:14:13","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5199:47:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"5171:75:13"},{"condition":{"id":2472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5261:45:13","subExpression":{"arguments":[{"id":2469,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2450,"src":"5286:5:13","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2219","typeString":"contract IERC20"}},{"id":2470,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"5293:12:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$2219","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2468,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2708,"src":"5262:23:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$2219_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":2471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5262:44:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2491,"nodeType":"IfStatement","src":"5257:201:13","trueBody":{"id":2490,"nodeType":"Block","src":"5308:150:13","statements":[{"expression":{"arguments":[{"id":2474,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2450,"src":"5342:5:13","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2219","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":2477,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2450,"src":"5364:5:13","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2219","typeString":"contract IERC20"}},"id":2478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5370:7:13","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":2206,"src":"5364:13:13","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":2479,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"5380:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":2480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5389:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2481,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5379:12:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}],"expression":{"id":2475,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5349:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2476,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5353:10:13","memberName":"encodeCall","nodeType":"MemberAccess","src":"5349:14:13","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5349:43:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$2219","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2473,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"5322:19:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$2219_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":2483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5322:71:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2484,"nodeType":"ExpressionStatement","src":"5322:71:13"},{"expression":{"arguments":[{"id":2486,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2450,"src":"5427:5:13","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2219","typeString":"contract IERC20"}},{"id":2487,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"5434:12:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$2219","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2485,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"5407:19:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$2219_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":2488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5407:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2489,"nodeType":"ExpressionStatement","src":"5407:40:13"}]}}]},"documentation":{"id":2447,"nodeType":"StructuredDocumentation","src":"4513:566:13","text":" @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."},"id":2493,"implemented":true,"kind":"function","modifiers":[],"name":"forceApprove","nameLocation":"5093:12:13","nodeType":"FunctionDefinition","parameters":{"id":2455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2450,"mutability":"mutable","name":"token","nameLocation":"5113:5:13","nodeType":"VariableDeclaration","scope":2493,"src":"5106:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2219","typeString":"contract IERC20"},"typeName":{"id":2449,"nodeType":"UserDefinedTypeName","pathNode":{"id":2448,"name":"IERC20","nameLocations":["5106:6:13"],"nodeType":"IdentifierPath","referencedDeclaration":2219,"src":"5106:6:13"},"referencedDeclaration":2219,"src":"5106:6:13","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2219","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2452,"mutability":"mutable","name":"spender","nameLocation":"5128:7:13","nodeType":"VariableDeclaration","scope":2493,"src":"5120:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2451,"name":"address","nodeType":"ElementaryTypeName","src":"5120:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2454,"mutability":"mutable","name":"value","nameLocation":"5145:5:13","nodeType":"VariableDeclaration","scope":2493,"src":"5137:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2453,"name":"uint256","nodeType":"ElementaryTypeName","src":"5137:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5105:46:13"},"returnParameters":{"id":2456,"nodeType":"ParameterList","parameters":[],"src":"5161:0:13"},"scope":2709,"src":"5084:380:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2535,"nodeType":"Block","src":"5911:219:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2506,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2499,"src":"5925:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5928:4:13","memberName":"code","nodeType":"MemberAccess","src":"5925:7:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5933:6:13","memberName":"length","nodeType":"MemberAccess","src":"5925:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5943:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5925:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":2524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6011:39:13","subExpression":{"arguments":[{"id":2520,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2499,"src":"6034:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2521,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2501,"src":"6038:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2522,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2503,"src":"6045:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2518,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2497,"src":"6012:5:13","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},"id":2519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6018:15:13","memberName":"transferAndCall","nodeType":"MemberAccess","referencedDeclaration":180,"src":"6012:21:13","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,uint256,bytes memory) external returns (bool)"}},"id":2523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6012:38:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2533,"nodeType":"IfStatement","src":"6007:117:13","trueBody":{"id":2532,"nodeType":"Block","src":"6052:72:13","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":2528,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2497,"src":"6106:5:13","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}],"id":2527,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6098:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2526,"name":"address","nodeType":"ElementaryTypeName","src":"6098:7:13","typeDescriptions":{}}},"id":2529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6098:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2525,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2257,"src":"6073:24:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6073:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2531,"nodeType":"RevertStatement","src":"6066:47:13"}]}},"id":2534,"nodeType":"IfStatement","src":"5921:203:13","trueBody":{"id":2517,"nodeType":"Block","src":"5946:55:13","statements":[{"expression":{"arguments":[{"id":2512,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2497,"src":"5973:5:13","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},{"id":2513,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2499,"src":"5980:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2514,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2501,"src":"5984:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2511,"name":"safeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2290,"src":"5960:12:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$2219_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":2515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5960:30:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2516,"nodeType":"ExpressionStatement","src":"5960:30:13"}]}}]},"documentation":{"id":2494,"nodeType":"StructuredDocumentation","src":"5470:333:13","text":" @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."},"id":2536,"implemented":true,"kind":"function","modifiers":[],"name":"transferAndCallRelaxed","nameLocation":"5817:22:13","nodeType":"FunctionDefinition","parameters":{"id":2504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2497,"mutability":"mutable","name":"token","nameLocation":"5849:5:13","nodeType":"VariableDeclaration","scope":2536,"src":"5840:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"},"typeName":{"id":2496,"nodeType":"UserDefinedTypeName","pathNode":{"id":2495,"name":"IERC1363","nameLocations":["5840:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":229,"src":"5840:8:13"},"referencedDeclaration":229,"src":"5840:8:13","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":2499,"mutability":"mutable","name":"to","nameLocation":"5864:2:13","nodeType":"VariableDeclaration","scope":2536,"src":"5856:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2498,"name":"address","nodeType":"ElementaryTypeName","src":"5856:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2501,"mutability":"mutable","name":"value","nameLocation":"5876:5:13","nodeType":"VariableDeclaration","scope":2536,"src":"5868:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2500,"name":"uint256","nodeType":"ElementaryTypeName","src":"5868:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2503,"mutability":"mutable","name":"data","nameLocation":"5896:4:13","nodeType":"VariableDeclaration","scope":2536,"src":"5883:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2502,"name":"bytes","nodeType":"ElementaryTypeName","src":"5883:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5839:62:13"},"returnParameters":{"id":2505,"nodeType":"ParameterList","parameters":[],"src":"5911:0:13"},"scope":2709,"src":"5808:322:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2582,"nodeType":"Block","src":"6649:239:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2551,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2544,"src":"6663:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6666:4:13","memberName":"code","nodeType":"MemberAccess","src":"6663:7:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6671:6:13","memberName":"length","nodeType":"MemberAccess","src":"6663:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6681:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6663:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":2571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6759:49:13","subExpression":{"arguments":[{"id":2566,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2542,"src":"6786:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2567,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2544,"src":"6792:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2568,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2546,"src":"6796:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2569,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2548,"src":"6803:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2564,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2540,"src":"6760:5:13","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},"id":2565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6766:19:13","memberName":"transferFromAndCall","nodeType":"MemberAccess","referencedDeclaration":206,"src":"6760:25:13","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) external returns (bool)"}},"id":2570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6760:48:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2580,"nodeType":"IfStatement","src":"6755:127:13","trueBody":{"id":2579,"nodeType":"Block","src":"6810:72:13","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":2575,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2540,"src":"6864:5:13","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}],"id":2574,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6856:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2573,"name":"address","nodeType":"ElementaryTypeName","src":"6856:7:13","typeDescriptions":{}}},"id":2576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6856:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2572,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2257,"src":"6831:24:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6831:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2578,"nodeType":"RevertStatement","src":"6824:47:13"}]}},"id":2581,"nodeType":"IfStatement","src":"6659:223:13","trueBody":{"id":2563,"nodeType":"Block","src":"6684:65:13","statements":[{"expression":{"arguments":[{"id":2557,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2540,"src":"6715:5:13","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},{"id":2558,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2542,"src":"6722:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2559,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2544,"src":"6728:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2560,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2546,"src":"6732:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2556,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2317,"src":"6698:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$2219_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":2561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6698:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2562,"nodeType":"ExpressionStatement","src":"6698:40:13"}]}}]},"documentation":{"id":2537,"nodeType":"StructuredDocumentation","src":"6136:341:13","text":" @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."},"id":2583,"implemented":true,"kind":"function","modifiers":[],"name":"transferFromAndCallRelaxed","nameLocation":"6491:26:13","nodeType":"FunctionDefinition","parameters":{"id":2549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2540,"mutability":"mutable","name":"token","nameLocation":"6536:5:13","nodeType":"VariableDeclaration","scope":2583,"src":"6527:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"},"typeName":{"id":2539,"nodeType":"UserDefinedTypeName","pathNode":{"id":2538,"name":"IERC1363","nameLocations":["6527:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":229,"src":"6527:8:13"},"referencedDeclaration":229,"src":"6527:8:13","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":2542,"mutability":"mutable","name":"from","nameLocation":"6559:4:13","nodeType":"VariableDeclaration","scope":2583,"src":"6551:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2541,"name":"address","nodeType":"ElementaryTypeName","src":"6551:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2544,"mutability":"mutable","name":"to","nameLocation":"6581:2:13","nodeType":"VariableDeclaration","scope":2583,"src":"6573:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2543,"name":"address","nodeType":"ElementaryTypeName","src":"6573:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2546,"mutability":"mutable","name":"value","nameLocation":"6601:5:13","nodeType":"VariableDeclaration","scope":2583,"src":"6593:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2545,"name":"uint256","nodeType":"ElementaryTypeName","src":"6593:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2548,"mutability":"mutable","name":"data","nameLocation":"6629:4:13","nodeType":"VariableDeclaration","scope":2583,"src":"6616:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2547,"name":"bytes","nodeType":"ElementaryTypeName","src":"6616:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6517:122:13"},"returnParameters":{"id":2550,"nodeType":"ParameterList","parameters":[],"src":"6649:0:13"},"scope":2709,"src":"6482:406:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2625,"nodeType":"Block","src":"7655:218:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2596,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"7669:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7672:4:13","memberName":"code","nodeType":"MemberAccess","src":"7669:7:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7677:6:13","memberName":"length","nodeType":"MemberAccess","src":"7669:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7687:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7669:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":2614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7755:38:13","subExpression":{"arguments":[{"id":2610,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"7777:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2611,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2591,"src":"7781:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2612,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"7788:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2608,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2587,"src":"7756:5:13","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},"id":2609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7762:14:13","memberName":"approveAndCall","nodeType":"MemberAccess","referencedDeclaration":228,"src":"7756:20:13","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,uint256,bytes memory) external returns (bool)"}},"id":2613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7756:37:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2623,"nodeType":"IfStatement","src":"7751:116:13","trueBody":{"id":2622,"nodeType":"Block","src":"7795:72:13","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":2618,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2587,"src":"7849:5:13","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}],"id":2617,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7841:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2616,"name":"address","nodeType":"ElementaryTypeName","src":"7841:7:13","typeDescriptions":{}}},"id":2619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7841:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2615,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2257,"src":"7816:24:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7816:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2621,"nodeType":"RevertStatement","src":"7809:47:13"}]}},"id":2624,"nodeType":"IfStatement","src":"7665:202:13","trueBody":{"id":2607,"nodeType":"Block","src":"7690:55:13","statements":[{"expression":{"arguments":[{"id":2602,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2587,"src":"7717:5:13","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},{"id":2603,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"7724:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2604,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2591,"src":"7728:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2601,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2493,"src":"7704:12:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$2219_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":2605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7704:30:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2606,"nodeType":"ExpressionStatement","src":"7704:30:13"}]}}]},"documentation":{"id":2584,"nodeType":"StructuredDocumentation","src":"6894:654:13","text":" @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."},"id":2626,"implemented":true,"kind":"function","modifiers":[],"name":"approveAndCallRelaxed","nameLocation":"7562:21:13","nodeType":"FunctionDefinition","parameters":{"id":2594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2587,"mutability":"mutable","name":"token","nameLocation":"7593:5:13","nodeType":"VariableDeclaration","scope":2626,"src":"7584:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"},"typeName":{"id":2586,"nodeType":"UserDefinedTypeName","pathNode":{"id":2585,"name":"IERC1363","nameLocations":["7584:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":229,"src":"7584:8:13"},"referencedDeclaration":229,"src":"7584:8:13","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":2589,"mutability":"mutable","name":"to","nameLocation":"7608:2:13","nodeType":"VariableDeclaration","scope":2626,"src":"7600:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2588,"name":"address","nodeType":"ElementaryTypeName","src":"7600:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2591,"mutability":"mutable","name":"value","nameLocation":"7620:5:13","nodeType":"VariableDeclaration","scope":2626,"src":"7612:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2590,"name":"uint256","nodeType":"ElementaryTypeName","src":"7612:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2593,"mutability":"mutable","name":"data","nameLocation":"7640:4:13","nodeType":"VariableDeclaration","scope":2626,"src":"7627:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2592,"name":"bytes","nodeType":"ElementaryTypeName","src":"7627:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7583:62:13"},"returnParameters":{"id":2595,"nodeType":"ParameterList","parameters":[],"src":"7655:0:13"},"scope":2709,"src":"7553:320:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2666,"nodeType":"Block","src":"8440:650:13","statements":[{"assignments":[2636],"declarations":[{"constant":false,"id":2636,"mutability":"mutable","name":"returnSize","nameLocation":"8458:10:13","nodeType":"VariableDeclaration","scope":2666,"src":"8450:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2635,"name":"uint256","nodeType":"ElementaryTypeName","src":"8450:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2637,"nodeType":"VariableDeclarationStatement","src":"8450:18:13"},{"assignments":[2639],"declarations":[{"constant":false,"id":2639,"mutability":"mutable","name":"returnValue","nameLocation":"8486:11:13","nodeType":"VariableDeclaration","scope":2666,"src":"8478:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2638,"name":"uint256","nodeType":"ElementaryTypeName","src":"8478:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2640,"nodeType":"VariableDeclarationStatement","src":"8478:19:13"},{"AST":{"nodeType":"YulBlock","src":"8532:396:13","statements":[{"nodeType":"YulVariableDeclaration","src":"8546:75:13","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"8566:3:13"},"nodeType":"YulFunctionCall","src":"8566:5:13"},{"name":"token","nodeType":"YulIdentifier","src":"8573:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"8580:1:13","type":"","value":"0"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8587:4:13"},{"kind":"number","nodeType":"YulLiteral","src":"8593:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8583:3:13"},"nodeType":"YulFunctionCall","src":"8583:15:13"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8606:4:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8600:5:13"},"nodeType":"YulFunctionCall","src":"8600:11:13"},{"kind":"number","nodeType":"YulLiteral","src":"8613:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8616:4:13","type":"","value":"0x20"}],"functionName":{"name":"call","nodeType":"YulIdentifier","src":"8561:4:13"},"nodeType":"YulFunctionCall","src":"8561:60:13"},"variables":[{"name":"success","nodeType":"YulTypedName","src":"8550:7:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"8682:157:13","statements":[{"nodeType":"YulVariableDeclaration","src":"8700:22:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8717:4:13","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8711:5:13"},"nodeType":"YulFunctionCall","src":"8711:11:13"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"8704:3:13","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8754:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"8759:1:13","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"8762:14:13"},"nodeType":"YulFunctionCall","src":"8762:16:13"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"8739:14:13"},"nodeType":"YulFunctionCall","src":"8739:40:13"},"nodeType":"YulExpressionStatement","src":"8739:40:13"},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8803:3:13"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"8808:14:13"},"nodeType":"YulFunctionCall","src":"8808:16:13"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8796:6:13"},"nodeType":"YulFunctionCall","src":"8796:29:13"},"nodeType":"YulExpressionStatement","src":"8796:29:13"}]},"condition":{"arguments":[{"name":"success","nodeType":"YulIdentifier","src":"8673:7:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8666:6:13"},"nodeType":"YulFunctionCall","src":"8666:15:13"},"nodeType":"YulIf","src":"8663:176:13"},{"nodeType":"YulAssignment","src":"8852:30:13","value":{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"8866:14:13"},"nodeType":"YulFunctionCall","src":"8866:16:13"},"variableNames":[{"name":"returnSize","nodeType":"YulIdentifier","src":"8852:10:13"}]},{"nodeType":"YulAssignment","src":"8895:23:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8916:1:13","type":"","value":"0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8910:5:13"},"nodeType":"YulFunctionCall","src":"8910:8:13"},"variableNames":[{"name":"returnValue","nodeType":"YulIdentifier","src":"8895:11:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2632,"isOffset":false,"isSlot":false,"src":"8587:4:13","valueSize":1},{"declaration":2632,"isOffset":false,"isSlot":false,"src":"8606:4:13","valueSize":1},{"declaration":2636,"isOffset":false,"isSlot":false,"src":"8852:10:13","valueSize":1},{"declaration":2639,"isOffset":false,"isSlot":false,"src":"8895:11:13","valueSize":1},{"declaration":2630,"isOffset":false,"isSlot":false,"src":"8573:5:13","valueSize":1}],"flags":["memory-safe"],"id":2641,"nodeType":"InlineAssembly","src":"8507:421:13"},{"condition":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2642,"name":"returnSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2636,"src":"8942:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8956:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8942:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2653,"name":"returnValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2639,"src":"8994:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":2654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9009:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8994:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8942:68:13","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":2647,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2630,"src":"8968:5:13","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2219","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$2219","typeString":"contract IERC20"}],"id":2646,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8960:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2645,"name":"address","nodeType":"ElementaryTypeName","src":"8960:7:13","typeDescriptions":{}}},"id":2648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8960:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8975:4:13","memberName":"code","nodeType":"MemberAccess","src":"8960:19:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8980:6:13","memberName":"length","nodeType":"MemberAccess","src":"8960:26:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8990:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8960:31:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2665,"nodeType":"IfStatement","src":"8938:146:13","trueBody":{"id":2664,"nodeType":"Block","src":"9012:72:13","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":2660,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2630,"src":"9066:5:13","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2219","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$2219","typeString":"contract IERC20"}],"id":2659,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9058:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2658,"name":"address","nodeType":"ElementaryTypeName","src":"9058:7:13","typeDescriptions":{}}},"id":2661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9058:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2657,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2257,"src":"9033:24:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9033:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2663,"nodeType":"RevertStatement","src":"9026:47:13"}]}}]},"documentation":{"id":2627,"nodeType":"StructuredDocumentation","src":"7879:486:13","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."},"id":2667,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"8379:19:13","nodeType":"FunctionDefinition","parameters":{"id":2633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2630,"mutability":"mutable","name":"token","nameLocation":"8406:5:13","nodeType":"VariableDeclaration","scope":2667,"src":"8399:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2219","typeString":"contract IERC20"},"typeName":{"id":2629,"nodeType":"UserDefinedTypeName","pathNode":{"id":2628,"name":"IERC20","nameLocations":["8399:6:13"],"nodeType":"IdentifierPath","referencedDeclaration":2219,"src":"8399:6:13"},"referencedDeclaration":2219,"src":"8399:6:13","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2219","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2632,"mutability":"mutable","name":"data","nameLocation":"8426:4:13","nodeType":"VariableDeclaration","scope":2667,"src":"8413:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2631,"name":"bytes","nodeType":"ElementaryTypeName","src":"8413:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8398:33:13"},"returnParameters":{"id":2634,"nodeType":"ParameterList","parameters":[],"src":"8440:0:13"},"scope":2709,"src":"8370:720:13","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2707,"nodeType":"Block","src":"9681:391:13","statements":[{"assignments":[2679],"declarations":[{"constant":false,"id":2679,"mutability":"mutable","name":"success","nameLocation":"9696:7:13","nodeType":"VariableDeclaration","scope":2707,"src":"9691:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2678,"name":"bool","nodeType":"ElementaryTypeName","src":"9691:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2680,"nodeType":"VariableDeclarationStatement","src":"9691:12:13"},{"assignments":[2682],"declarations":[{"constant":false,"id":2682,"mutability":"mutable","name":"returnSize","nameLocation":"9721:10:13","nodeType":"VariableDeclaration","scope":2707,"src":"9713:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2681,"name":"uint256","nodeType":"ElementaryTypeName","src":"9713:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2683,"nodeType":"VariableDeclarationStatement","src":"9713:18:13"},{"assignments":[2685],"declarations":[{"constant":false,"id":2685,"mutability":"mutable","name":"returnValue","nameLocation":"9749:11:13","nodeType":"VariableDeclaration","scope":2707,"src":"9741:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2684,"name":"uint256","nodeType":"ElementaryTypeName","src":"9741:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2686,"nodeType":"VariableDeclarationStatement","src":"9741:19:13"},{"AST":{"nodeType":"YulBlock","src":"9795:174:13","statements":[{"nodeType":"YulAssignment","src":"9809:71:13","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"9825:3:13"},"nodeType":"YulFunctionCall","src":"9825:5:13"},{"name":"token","nodeType":"YulIdentifier","src":"9832:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"9839:1:13","type":"","value":"0"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"9846:4:13"},{"kind":"number","nodeType":"YulLiteral","src":"9852:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9842:3:13"},"nodeType":"YulFunctionCall","src":"9842:15:13"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"9865:4:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9859:5:13"},"nodeType":"YulFunctionCall","src":"9859:11:13"},{"kind":"number","nodeType":"YulLiteral","src":"9872:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9875:4:13","type":"","value":"0x20"}],"functionName":{"name":"call","nodeType":"YulIdentifier","src":"9820:4:13"},"nodeType":"YulFunctionCall","src":"9820:60:13"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"9809:7:13"}]},{"nodeType":"YulAssignment","src":"9893:30:13","value":{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"9907:14:13"},"nodeType":"YulFunctionCall","src":"9907:16:13"},"variableNames":[{"name":"returnSize","nodeType":"YulIdentifier","src":"9893:10:13"}]},{"nodeType":"YulAssignment","src":"9936:23:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9957:1:13","type":"","value":"0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9951:5:13"},"nodeType":"YulFunctionCall","src":"9951:8:13"},"variableNames":[{"name":"returnValue","nodeType":"YulIdentifier","src":"9936:11:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2673,"isOffset":false,"isSlot":false,"src":"9846:4:13","valueSize":1},{"declaration":2673,"isOffset":false,"isSlot":false,"src":"9865:4:13","valueSize":1},{"declaration":2682,"isOffset":false,"isSlot":false,"src":"9893:10:13","valueSize":1},{"declaration":2685,"isOffset":false,"isSlot":false,"src":"9936:11:13","valueSize":1},{"declaration":2679,"isOffset":false,"isSlot":false,"src":"9809:7:13","valueSize":1},{"declaration":2671,"isOffset":false,"isSlot":false,"src":"9832:5:13","valueSize":1}],"flags":["memory-safe"],"id":2687,"nodeType":"InlineAssembly","src":"9770:199:13"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2688,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2679,"src":"9985:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2689,"name":"returnSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"9997:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10011:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9997:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2700,"name":"returnValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"10048:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":2701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10063:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10048:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9997:67:13","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":2694,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2671,"src":"10023:5:13","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2219","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$2219","typeString":"contract IERC20"}],"id":2693,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10015:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2692,"name":"address","nodeType":"ElementaryTypeName","src":"10015:7:13","typeDescriptions":{}}},"id":2695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10015:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10030:4:13","memberName":"code","nodeType":"MemberAccess","src":"10015:19:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10035:6:13","memberName":"length","nodeType":"MemberAccess","src":"10015:26:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10044:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10015:30:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2704,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9996:69:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9985:80:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2677,"id":2706,"nodeType":"Return","src":"9978:87:13"}]},"documentation":{"id":2668,"nodeType":"StructuredDocumentation","src":"9096:491:13","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."},"id":2708,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturnBool","nameLocation":"9601:23:13","nodeType":"FunctionDefinition","parameters":{"id":2674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2671,"mutability":"mutable","name":"token","nameLocation":"9632:5:13","nodeType":"VariableDeclaration","scope":2708,"src":"9625:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2219","typeString":"contract IERC20"},"typeName":{"id":2670,"nodeType":"UserDefinedTypeName","pathNode":{"id":2669,"name":"IERC20","nameLocations":["9625:6:13"],"nodeType":"IdentifierPath","referencedDeclaration":2219,"src":"9625:6:13"},"referencedDeclaration":2219,"src":"9625:6:13","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2219","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2673,"mutability":"mutable","name":"data","nameLocation":"9652:4:13","nodeType":"VariableDeclaration","scope":2708,"src":"9639:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2672,"name":"bytes","nodeType":"ElementaryTypeName","src":"9639:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9624:33:13"},"returnParameters":{"id":2677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2676,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2708,"src":"9675:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2675,"name":"bool","nodeType":"ElementaryTypeName","src":"9675:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9674:6:13"},"scope":2709,"src":"9592:480:13","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":2710,"src":"698:9376:13","usedErrors":[2257,2266],"usedEvents":[]}],"src":"115:9960:13"},"id":13},"@openzeppelin/contracts/utils/Arrays.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Arrays.sol","exportedSymbols":{"Arrays":[3687],"Comparators":[3719],"Math":[6894],"SlotDerivation":[4000],"StorageSlot":[4124]},"id":3688,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2711,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"183:24:14"},{"absolutePath":"@openzeppelin/contracts/utils/Comparators.sol","file":"./Comparators.sol","id":2713,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3688,"sourceUnit":3720,"src":"209:46:14","symbolAliases":[{"foreign":{"id":2712,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3719,"src":"217:11:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/SlotDerivation.sol","file":"./SlotDerivation.sol","id":2715,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3688,"sourceUnit":4001,"src":"256:52:14","symbolAliases":[{"foreign":{"id":2714,"name":"SlotDerivation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4000,"src":"264:14:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":2717,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3688,"sourceUnit":4125,"src":"309:46:14","symbolAliases":[{"foreign":{"id":2716,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4124,"src":"317:11:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":2719,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3688,"sourceUnit":6895,"src":"356:37:14","symbolAliases":[{"foreign":{"id":2718,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6894,"src":"364:4:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Arrays","contractDependencies":[],"contractKind":"library","documentation":{"id":2720,"nodeType":"StructuredDocumentation","src":"395:63:14","text":" @dev Collection of functions related to array types."},"fullyImplemented":true,"id":3687,"linearizedBaseContracts":[3687],"name":"Arrays","nameLocation":"467:6:14","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2723,"libraryName":{"id":2721,"name":"SlotDerivation","nameLocations":["486:14:14"],"nodeType":"IdentifierPath","referencedDeclaration":4000,"src":"486:14:14"},"nodeType":"UsingForDirective","src":"480:33:14","typeName":{"id":2722,"name":"bytes32","nodeType":"ElementaryTypeName","src":"505:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"global":false,"id":2726,"libraryName":{"id":2724,"name":"StorageSlot","nameLocations":["524:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":4124,"src":"524:11:14"},"nodeType":"UsingForDirective","src":"518:30:14","typeName":{"id":2725,"name":"bytes32","nodeType":"ElementaryTypeName","src":"540:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"body":{"id":2758,"nodeType":"Block","src":"1628:83:14","statements":[{"expression":{"arguments":[{"arguments":[{"id":2748,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2730,"src":"1656:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":2747,"name":"_begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2983,"src":"1649:6:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) pure returns (uint256)"}},"id":2749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1649:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2751,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2730,"src":"1669:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":2750,"name":"_end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3003,"src":"1664:4:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) pure returns (uint256)"}},"id":2752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1664:11:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2753,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2740,"src":"1677:4:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":2746,"name":"_quickSort","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2972,"src":"1638:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$__$","typeString":"function (uint256,uint256,function (uint256,uint256) pure returns (bool)) pure"}},"id":2754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1638:44:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2755,"nodeType":"ExpressionStatement","src":"1638:44:14"},{"expression":{"id":2756,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2730,"src":"1699:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":2745,"id":2757,"nodeType":"Return","src":"1692:12:14"}]},"documentation":{"id":2727,"nodeType":"StructuredDocumentation","src":"554:915:14","text":" @dev Sort an array of uint256 (in memory) following the provided comparator function.\n This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n consume more gas than is available in a block, leading to potential DoS.\n IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way."},"id":2759,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"1483:4:14","nodeType":"FunctionDefinition","parameters":{"id":2741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2730,"mutability":"mutable","name":"array","nameLocation":"1514:5:14","nodeType":"VariableDeclaration","scope":2759,"src":"1497:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2728,"name":"uint256","nodeType":"ElementaryTypeName","src":"1497:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2729,"nodeType":"ArrayTypeName","src":"1497:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2740,"mutability":"mutable","name":"comp","nameLocation":"1576:4:14","nodeType":"VariableDeclaration","scope":2759,"src":"1529:51:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":2739,"nodeType":"FunctionTypeName","parameterTypes":{"id":2735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2732,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2739,"src":"1538:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2731,"name":"uint256","nodeType":"ElementaryTypeName","src":"1538:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2734,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2739,"src":"1547:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2733,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1537:18:14"},"returnParameterTypes":{"id":2738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2737,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2739,"src":"1570:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2736,"name":"bool","nodeType":"ElementaryTypeName","src":"1570:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1569:6:14"},"src":"1529:51:14","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"1487:99:14"},"returnParameters":{"id":2745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2744,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2759,"src":"1610:16:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2742,"name":"uint256","nodeType":"ElementaryTypeName","src":"1610:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2743,"nodeType":"ArrayTypeName","src":"1610:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1609:18:14"},"scope":3687,"src":"1474:237:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2777,"nodeType":"Block","src":"1894:66:14","statements":[{"expression":{"arguments":[{"id":2770,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2763,"src":"1909:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":2771,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3719,"src":"1916:11:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Comparators_$3719_$","typeString":"type(library Comparators)"}},"id":2772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1928:2:14","memberName":"lt","nodeType":"MemberAccess","referencedDeclaration":3704,"src":"1916:14:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":2769,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[2759,2778,2810,2831,2863,2884],"referencedDeclaration":2759,"src":"1904:4:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":2773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1904:27:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2774,"nodeType":"ExpressionStatement","src":"1904:27:14"},{"expression":{"id":2775,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2763,"src":"1948:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":2768,"id":2776,"nodeType":"Return","src":"1941:12:14"}]},"documentation":{"id":2760,"nodeType":"StructuredDocumentation","src":"1717:93:14","text":" @dev Variant of {sort} that sorts an array of uint256 in increasing order."},"id":2778,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"1824:4:14","nodeType":"FunctionDefinition","parameters":{"id":2764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2763,"mutability":"mutable","name":"array","nameLocation":"1846:5:14","nodeType":"VariableDeclaration","scope":2778,"src":"1829:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2761,"name":"uint256","nodeType":"ElementaryTypeName","src":"1829:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2762,"nodeType":"ArrayTypeName","src":"1829:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1828:24:14"},"returnParameters":{"id":2768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2767,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2778,"src":"1876:16:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2765,"name":"uint256","nodeType":"ElementaryTypeName","src":"1876:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2766,"nodeType":"ArrayTypeName","src":"1876:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1875:18:14"},"scope":3687,"src":"1815:145:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2809,"nodeType":"Block","src":"3040:97:14","statements":[{"expression":{"arguments":[{"arguments":[{"id":2800,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2782,"src":"3075:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":2799,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[3035,3047],"referencedDeclaration":3035,"src":"3055:19:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address[] memory) pure returns (uint256[] memory)"}},"id":2801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3055:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"arguments":[{"id":2803,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2792,"src":"3102:4:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"}],"id":2802,"name":"_castToUint256Comp","nodeType":"Identifier","overloadedDeclarations":[3073,3099],"referencedDeclaration":3073,"src":"3083:18:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$_$returns$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$","typeString":"function (function (address,address) pure returns (bool)) pure returns (function (uint256,uint256) pure returns (bool))"}},"id":2804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3083:24:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":2798,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[2759,2778,2810,2831,2863,2884],"referencedDeclaration":2759,"src":"3050:4:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":2805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3050:58:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2806,"nodeType":"ExpressionStatement","src":"3050:58:14"},{"expression":{"id":2807,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2782,"src":"3125:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":2797,"id":2808,"nodeType":"Return","src":"3118:12:14"}]},"documentation":{"id":2779,"nodeType":"StructuredDocumentation","src":"1966:915:14","text":" @dev Sort an array of address (in memory) following the provided comparator function.\n This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n consume more gas than is available in a block, leading to potential DoS.\n IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way."},"id":2810,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"2895:4:14","nodeType":"FunctionDefinition","parameters":{"id":2793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2782,"mutability":"mutable","name":"array","nameLocation":"2926:5:14","nodeType":"VariableDeclaration","scope":2810,"src":"2909:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2780,"name":"address","nodeType":"ElementaryTypeName","src":"2909:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2781,"nodeType":"ArrayTypeName","src":"2909:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2792,"mutability":"mutable","name":"comp","nameLocation":"2988:4:14","nodeType":"VariableDeclaration","scope":2810,"src":"2941:51:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"typeName":{"id":2791,"nodeType":"FunctionTypeName","parameterTypes":{"id":2787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2784,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2791,"src":"2950:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2783,"name":"address","nodeType":"ElementaryTypeName","src":"2950:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2786,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2791,"src":"2959:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2785,"name":"address","nodeType":"ElementaryTypeName","src":"2959:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2949:18:14"},"returnParameterTypes":{"id":2790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2789,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2791,"src":"2982:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2788,"name":"bool","nodeType":"ElementaryTypeName","src":"2982:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2981:6:14"},"src":"2941:51:14","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"2899:99:14"},"returnParameters":{"id":2797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2796,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2810,"src":"3022:16:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2794,"name":"address","nodeType":"ElementaryTypeName","src":"3022:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2795,"nodeType":"ArrayTypeName","src":"3022:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3021:18:14"},"scope":3687,"src":"2886:251:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2830,"nodeType":"Block","src":"3320:87:14","statements":[{"expression":{"arguments":[{"arguments":[{"id":2822,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2814,"src":"3355:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":2821,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[3035,3047],"referencedDeclaration":3035,"src":"3335:19:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address[] memory) pure returns (uint256[] memory)"}},"id":2823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3335:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":2824,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3719,"src":"3363:11:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Comparators_$3719_$","typeString":"type(library Comparators)"}},"id":2825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3375:2:14","memberName":"lt","nodeType":"MemberAccess","referencedDeclaration":3704,"src":"3363:14:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":2820,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[2759,2778,2810,2831,2863,2884],"referencedDeclaration":2759,"src":"3330:4:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":2826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3330:48:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2827,"nodeType":"ExpressionStatement","src":"3330:48:14"},{"expression":{"id":2828,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2814,"src":"3395:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":2819,"id":2829,"nodeType":"Return","src":"3388:12:14"}]},"documentation":{"id":2811,"nodeType":"StructuredDocumentation","src":"3143:93:14","text":" @dev Variant of {sort} that sorts an array of address in increasing order."},"id":2831,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"3250:4:14","nodeType":"FunctionDefinition","parameters":{"id":2815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2814,"mutability":"mutable","name":"array","nameLocation":"3272:5:14","nodeType":"VariableDeclaration","scope":2831,"src":"3255:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2812,"name":"address","nodeType":"ElementaryTypeName","src":"3255:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2813,"nodeType":"ArrayTypeName","src":"3255:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3254:24:14"},"returnParameters":{"id":2819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2818,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2831,"src":"3302:16:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2816,"name":"address","nodeType":"ElementaryTypeName","src":"3302:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2817,"nodeType":"ArrayTypeName","src":"3302:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3301:18:14"},"scope":3687,"src":"3241:166:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2862,"nodeType":"Block","src":"4487:97:14","statements":[{"expression":{"arguments":[{"arguments":[{"id":2853,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2835,"src":"4522:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":2852,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[3035,3047],"referencedDeclaration":3047,"src":"4502:19:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (bytes32[] memory) pure returns (uint256[] memory)"}},"id":2854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4502:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"arguments":[{"id":2856,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2845,"src":"4549:4:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"}],"id":2855,"name":"_castToUint256Comp","nodeType":"Identifier","overloadedDeclarations":[3073,3099],"referencedDeclaration":3099,"src":"4530:18:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$_$returns$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$","typeString":"function (function (bytes32,bytes32) pure returns (bool)) pure returns (function (uint256,uint256) pure returns (bool))"}},"id":2857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4530:24:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":2851,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[2759,2778,2810,2831,2863,2884],"referencedDeclaration":2759,"src":"4497:4:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":2858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4497:58:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2859,"nodeType":"ExpressionStatement","src":"4497:58:14"},{"expression":{"id":2860,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2835,"src":"4572:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":2850,"id":2861,"nodeType":"Return","src":"4565:12:14"}]},"documentation":{"id":2832,"nodeType":"StructuredDocumentation","src":"3413:915:14","text":" @dev Sort an array of bytes32 (in memory) following the provided comparator function.\n This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n consume more gas than is available in a block, leading to potential DoS.\n IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way."},"id":2863,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"4342:4:14","nodeType":"FunctionDefinition","parameters":{"id":2846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2835,"mutability":"mutable","name":"array","nameLocation":"4373:5:14","nodeType":"VariableDeclaration","scope":2863,"src":"4356:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2833,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4356:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2834,"nodeType":"ArrayTypeName","src":"4356:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":2845,"mutability":"mutable","name":"comp","nameLocation":"4435:4:14","nodeType":"VariableDeclaration","scope":2863,"src":"4388:51:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"typeName":{"id":2844,"nodeType":"FunctionTypeName","parameterTypes":{"id":2840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2837,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2844,"src":"4397:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2836,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4397:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2839,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2844,"src":"4406:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2838,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4406:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4396:18:14"},"returnParameterTypes":{"id":2843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2842,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2844,"src":"4429:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2841,"name":"bool","nodeType":"ElementaryTypeName","src":"4429:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4428:6:14"},"src":"4388:51:14","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"4346:99:14"},"returnParameters":{"id":2850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2849,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2863,"src":"4469:16:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2847,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4469:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2848,"nodeType":"ArrayTypeName","src":"4469:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4468:18:14"},"scope":3687,"src":"4333:251:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2883,"nodeType":"Block","src":"4767:87:14","statements":[{"expression":{"arguments":[{"arguments":[{"id":2875,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2867,"src":"4802:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":2874,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[3035,3047],"referencedDeclaration":3047,"src":"4782:19:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (bytes32[] memory) pure returns (uint256[] memory)"}},"id":2876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4782:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":2877,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3719,"src":"4810:11:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Comparators_$3719_$","typeString":"type(library Comparators)"}},"id":2878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4822:2:14","memberName":"lt","nodeType":"MemberAccess","referencedDeclaration":3704,"src":"4810:14:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":2873,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[2759,2778,2810,2831,2863,2884],"referencedDeclaration":2759,"src":"4777:4:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":2879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4777:48:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2880,"nodeType":"ExpressionStatement","src":"4777:48:14"},{"expression":{"id":2881,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2867,"src":"4842:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":2872,"id":2882,"nodeType":"Return","src":"4835:12:14"}]},"documentation":{"id":2864,"nodeType":"StructuredDocumentation","src":"4590:93:14","text":" @dev Variant of {sort} that sorts an array of bytes32 in increasing order."},"id":2884,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"4697:4:14","nodeType":"FunctionDefinition","parameters":{"id":2868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2867,"mutability":"mutable","name":"array","nameLocation":"4719:5:14","nodeType":"VariableDeclaration","scope":2884,"src":"4702:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2865,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4702:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2866,"nodeType":"ArrayTypeName","src":"4702:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4701:24:14"},"returnParameters":{"id":2872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2871,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2884,"src":"4749:16:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2869,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4749:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2870,"nodeType":"ArrayTypeName","src":"4749:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4748:18:14"},"scope":3687,"src":"4688:166:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2971,"nodeType":"Block","src":"5470:889:14","statements":[{"id":2970,"nodeType":"UncheckedBlock","src":"5480:873:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2902,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2889,"src":"5508:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2903,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2887,"src":"5514:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5508:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30783430","id":2905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5522:4:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"0x40"},"src":"5508:18:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2908,"nodeType":"IfStatement","src":"5504:31:14","trueBody":{"functionReturnParameters":2901,"id":2907,"nodeType":"Return","src":"5528:7:14"}},{"assignments":[2910],"declarations":[{"constant":false,"id":2910,"mutability":"mutable","name":"pivot","nameLocation":"5599:5:14","nodeType":"VariableDeclaration","scope":2970,"src":"5591:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2909,"name":"uint256","nodeType":"ElementaryTypeName","src":"5591:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2914,"initialValue":{"arguments":[{"id":2912,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2887,"src":"5614:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2911,"name":"_mload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3013,"src":"5607:6:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5607:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5591:29:14"},{"assignments":[2916],"declarations":[{"constant":false,"id":2916,"mutability":"mutable","name":"pos","nameLocation":"5715:3:14","nodeType":"VariableDeclaration","scope":2970,"src":"5707:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2915,"name":"uint256","nodeType":"ElementaryTypeName","src":"5707:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2918,"initialValue":{"id":2917,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2887,"src":"5721:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5707:19:14"},{"body":{"id":2949,"nodeType":"Block","src":"5795:331:14","statements":[{"condition":{"arguments":[{"arguments":[{"id":2934,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2920,"src":"5829:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2933,"name":"_mload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3013,"src":"5822:6:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5822:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2936,"name":"pivot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2910,"src":"5834:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2932,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2899,"src":"5817:4:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}},"id":2937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5817:23:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2948,"nodeType":"IfStatement","src":"5813:299:14","trueBody":{"id":2947,"nodeType":"Block","src":"5842:270:14","statements":[{"expression":{"id":2940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2938,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2916,"src":"6046:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"30783230","id":2939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6053:4:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"6046:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2941,"nodeType":"ExpressionStatement","src":"6046:11:14"},{"expression":{"arguments":[{"id":2943,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2916,"src":"6085:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2944,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2920,"src":"6090:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2942,"name":"_swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"6079:5:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6079:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2946,"nodeType":"ExpressionStatement","src":"6079:14:14"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2925,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2920,"src":"5773:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2926,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2889,"src":"5778:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5773:8:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2950,"initializationExpression":{"assignments":[2920],"declarations":[{"constant":false,"id":2920,"mutability":"mutable","name":"it","nameLocation":"5754:2:14","nodeType":"VariableDeclaration","scope":2950,"src":"5746:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2919,"name":"uint256","nodeType":"ElementaryTypeName","src":"5746:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2924,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2921,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2887,"src":"5759:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"30783230","id":2922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5767:4:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"5759:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5746:25:14"},"loopExpression":{"expression":{"id":2930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2928,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2920,"src":"5783:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"30783230","id":2929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5789:4:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"5783:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2931,"nodeType":"ExpressionStatement","src":"5783:10:14"},"nodeType":"ForStatement","src":"5741:385:14"},{"expression":{"arguments":[{"id":2952,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2887,"src":"6146:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2953,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2916,"src":"6153:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2951,"name":"_swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"6140:5:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6140:17:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2955,"nodeType":"ExpressionStatement","src":"6140:17:14"},{"expression":{"arguments":[{"id":2957,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2887,"src":"6207:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2958,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2916,"src":"6214:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2959,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2899,"src":"6219:4:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":2956,"name":"_quickSort","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2972,"src":"6196:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$__$","typeString":"function (uint256,uint256,function (uint256,uint256) pure returns (bool)) pure"}},"id":2960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6196:28:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2961,"nodeType":"ExpressionStatement","src":"6196:28:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2963,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2916,"src":"6284:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"30783230","id":2964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6290:4:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"6284:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2966,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2889,"src":"6296:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2967,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2899,"src":"6301:4:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":2962,"name":"_quickSort","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2972,"src":"6273:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$__$","typeString":"function (uint256,uint256,function (uint256,uint256) pure returns (bool)) pure"}},"id":2968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6273:33:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2969,"nodeType":"ExpressionStatement","src":"6273:33:14"}]}]},"documentation":{"id":2885,"nodeType":"StructuredDocumentation","src":"4860:491:14","text":" @dev Performs a quick sort of a segment of memory. The segment sorted starts at `begin` (inclusive), and stops\n at end (exclusive). Sorting follows the `comp` comparator.\n Invariant: `begin <= end`. This is the case when initially called by {sort} and is preserved in subcalls.\n IMPORTANT: Memory locations between `begin` and `end` are not validated/zeroed. This function should\n be used only if the limits are within a memory array."},"id":2972,"implemented":true,"kind":"function","modifiers":[],"name":"_quickSort","nameLocation":"5365:10:14","nodeType":"FunctionDefinition","parameters":{"id":2900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2887,"mutability":"mutable","name":"begin","nameLocation":"5384:5:14","nodeType":"VariableDeclaration","scope":2972,"src":"5376:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2886,"name":"uint256","nodeType":"ElementaryTypeName","src":"5376:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2889,"mutability":"mutable","name":"end","nameLocation":"5399:3:14","nodeType":"VariableDeclaration","scope":2972,"src":"5391:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2888,"name":"uint256","nodeType":"ElementaryTypeName","src":"5391:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2899,"mutability":"mutable","name":"comp","nameLocation":"5451:4:14","nodeType":"VariableDeclaration","scope":2972,"src":"5404:51:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":2898,"nodeType":"FunctionTypeName","parameterTypes":{"id":2894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2891,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2898,"src":"5413:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2890,"name":"uint256","nodeType":"ElementaryTypeName","src":"5413:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2893,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2898,"src":"5422:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2892,"name":"uint256","nodeType":"ElementaryTypeName","src":"5422:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5412:18:14"},"returnParameterTypes":{"id":2897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2896,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2898,"src":"5445:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2895,"name":"bool","nodeType":"ElementaryTypeName","src":"5445:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5444:6:14"},"src":"5404:51:14","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"5375:81:14"},"returnParameters":{"id":2901,"nodeType":"ParameterList","parameters":[],"src":"5470:0:14"},"scope":3687,"src":"5356:1003:14","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2982,"nodeType":"Block","src":"6532:88:14","statements":[{"AST":{"nodeType":"YulBlock","src":"6567:47:14","statements":[{"nodeType":"YulAssignment","src":"6581:23:14","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6592:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"6599:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6588:3:14"},"nodeType":"YulFunctionCall","src":"6588:16:14"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"6581:3:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2976,"isOffset":false,"isSlot":false,"src":"6592:5:14","valueSize":1},{"declaration":2979,"isOffset":false,"isSlot":false,"src":"6581:3:14","valueSize":1}],"flags":["memory-safe"],"id":2981,"nodeType":"InlineAssembly","src":"6542:72:14"}]},"documentation":{"id":2973,"nodeType":"StructuredDocumentation","src":"6365:87:14","text":" @dev Pointer to the memory location of the first element of `array`."},"id":2983,"implemented":true,"kind":"function","modifiers":[],"name":"_begin","nameLocation":"6466:6:14","nodeType":"FunctionDefinition","parameters":{"id":2977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2976,"mutability":"mutable","name":"array","nameLocation":"6490:5:14","nodeType":"VariableDeclaration","scope":2983,"src":"6473:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2974,"name":"uint256","nodeType":"ElementaryTypeName","src":"6473:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2975,"nodeType":"ArrayTypeName","src":"6473:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6472:24:14"},"returnParameters":{"id":2980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2979,"mutability":"mutable","name":"ptr","nameLocation":"6527:3:14","nodeType":"VariableDeclaration","scope":2983,"src":"6519:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2978,"name":"uint256","nodeType":"ElementaryTypeName","src":"6519:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6518:13:14"},"scope":3687,"src":"6457:163:14","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3002,"nodeType":"Block","src":"6892:93:14","statements":[{"id":3001,"nodeType":"UncheckedBlock","src":"6902:77:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2993,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2987,"src":"6940:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":2992,"name":"_begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2983,"src":"6933:6:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) pure returns (uint256)"}},"id":2994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6933:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2995,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2987,"src":"6949:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6955:6:14","memberName":"length","nodeType":"MemberAccess","src":"6949:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783230","id":2997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6964:4:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"6949:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6933:35:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2991,"id":3000,"nodeType":"Return","src":"6926:42:14"}]}]},"documentation":{"id":2984,"nodeType":"StructuredDocumentation","src":"6626:188:14","text":" @dev Pointer to the memory location of the first memory word (32bytes) after `array`. This is the memory word\n that comes just after the last element of the array."},"id":3003,"implemented":true,"kind":"function","modifiers":[],"name":"_end","nameLocation":"6828:4:14","nodeType":"FunctionDefinition","parameters":{"id":2988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2987,"mutability":"mutable","name":"array","nameLocation":"6850:5:14","nodeType":"VariableDeclaration","scope":3003,"src":"6833:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2985,"name":"uint256","nodeType":"ElementaryTypeName","src":"6833:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2986,"nodeType":"ArrayTypeName","src":"6833:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6832:24:14"},"returnParameters":{"id":2991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2990,"mutability":"mutable","name":"ptr","nameLocation":"6887:3:14","nodeType":"VariableDeclaration","scope":3003,"src":"6879:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2989,"name":"uint256","nodeType":"ElementaryTypeName","src":"6879:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6878:13:14"},"scope":3687,"src":"6819:166:14","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3012,"nodeType":"Block","src":"7136:68:14","statements":[{"AST":{"nodeType":"YulBlock","src":"7155:43:14","statements":[{"nodeType":"YulAssignment","src":"7169:19:14","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"7184:3:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7178:5:14"},"nodeType":"YulFunctionCall","src":"7178:10:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"7169:5:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3006,"isOffset":false,"isSlot":false,"src":"7184:3:14","valueSize":1},{"declaration":3009,"isOffset":false,"isSlot":false,"src":"7169:5:14","valueSize":1}],"id":3011,"nodeType":"InlineAssembly","src":"7146:52:14"}]},"documentation":{"id":3004,"nodeType":"StructuredDocumentation","src":"6991:74:14","text":" @dev Load memory word (as a uint256) at location `ptr`."},"id":3013,"implemented":true,"kind":"function","modifiers":[],"name":"_mload","nameLocation":"7079:6:14","nodeType":"FunctionDefinition","parameters":{"id":3007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3006,"mutability":"mutable","name":"ptr","nameLocation":"7094:3:14","nodeType":"VariableDeclaration","scope":3013,"src":"7086:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3005,"name":"uint256","nodeType":"ElementaryTypeName","src":"7086:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7085:13:14"},"returnParameters":{"id":3010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3009,"mutability":"mutable","name":"value","nameLocation":"7129:5:14","nodeType":"VariableDeclaration","scope":3013,"src":"7121:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3008,"name":"uint256","nodeType":"ElementaryTypeName","src":"7121:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7120:15:14"},"scope":3687,"src":"7070:134:14","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3022,"nodeType":"Block","src":"7348:178:14","statements":[{"AST":{"nodeType":"YulBlock","src":"7367:153:14","statements":[{"nodeType":"YulVariableDeclaration","src":"7381:25:14","value":{"arguments":[{"name":"ptr1","nodeType":"YulIdentifier","src":"7401:4:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7395:5:14"},"nodeType":"YulFunctionCall","src":"7395:11:14"},"variables":[{"name":"value1","nodeType":"YulTypedName","src":"7385:6:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7419:25:14","value":{"arguments":[{"name":"ptr2","nodeType":"YulIdentifier","src":"7439:4:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7433:5:14"},"nodeType":"YulFunctionCall","src":"7433:11:14"},"variables":[{"name":"value2","nodeType":"YulTypedName","src":"7423:6:14","type":""}]},{"expression":{"arguments":[{"name":"ptr1","nodeType":"YulIdentifier","src":"7464:4:14"},{"name":"value2","nodeType":"YulIdentifier","src":"7470:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7457:6:14"},"nodeType":"YulFunctionCall","src":"7457:20:14"},"nodeType":"YulExpressionStatement","src":"7457:20:14"},{"expression":{"arguments":[{"name":"ptr2","nodeType":"YulIdentifier","src":"7497:4:14"},{"name":"value1","nodeType":"YulIdentifier","src":"7503:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7490:6:14"},"nodeType":"YulFunctionCall","src":"7490:20:14"},"nodeType":"YulExpressionStatement","src":"7490:20:14"}]},"evmVersion":"paris","externalReferences":[{"declaration":3016,"isOffset":false,"isSlot":false,"src":"7401:4:14","valueSize":1},{"declaration":3016,"isOffset":false,"isSlot":false,"src":"7464:4:14","valueSize":1},{"declaration":3018,"isOffset":false,"isSlot":false,"src":"7439:4:14","valueSize":1},{"declaration":3018,"isOffset":false,"isSlot":false,"src":"7497:4:14","valueSize":1}],"id":3021,"nodeType":"InlineAssembly","src":"7358:162:14"}]},"documentation":{"id":3014,"nodeType":"StructuredDocumentation","src":"7210:77:14","text":" @dev Swaps the elements memory location `ptr1` and `ptr2`."},"id":3023,"implemented":true,"kind":"function","modifiers":[],"name":"_swap","nameLocation":"7301:5:14","nodeType":"FunctionDefinition","parameters":{"id":3019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3016,"mutability":"mutable","name":"ptr1","nameLocation":"7315:4:14","nodeType":"VariableDeclaration","scope":3023,"src":"7307:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3015,"name":"uint256","nodeType":"ElementaryTypeName","src":"7307:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3018,"mutability":"mutable","name":"ptr2","nameLocation":"7329:4:14","nodeType":"VariableDeclaration","scope":3023,"src":"7321:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3017,"name":"uint256","nodeType":"ElementaryTypeName","src":"7321:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7306:28:14"},"returnParameters":{"id":3020,"nodeType":"ParameterList","parameters":[],"src":"7348:0:14"},"scope":3687,"src":"7292:234:14","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3034,"nodeType":"Block","src":"7713:64:14","statements":[{"AST":{"nodeType":"YulBlock","src":"7732:39:14","statements":[{"nodeType":"YulAssignment","src":"7746:15:14","value":{"name":"input","nodeType":"YulIdentifier","src":"7756:5:14"},"variableNames":[{"name":"output","nodeType":"YulIdentifier","src":"7746:6:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3027,"isOffset":false,"isSlot":false,"src":"7756:5:14","valueSize":1},{"declaration":3031,"isOffset":false,"isSlot":false,"src":"7746:6:14","valueSize":1}],"id":3033,"nodeType":"InlineAssembly","src":"7723:48:14"}]},"documentation":{"id":3024,"nodeType":"StructuredDocumentation","src":"7532:76:14","text":"@dev Helper: low level cast address memory array to uint256 memory array"},"id":3035,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Array","nameLocation":"7622:19:14","nodeType":"FunctionDefinition","parameters":{"id":3028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3027,"mutability":"mutable","name":"input","nameLocation":"7659:5:14","nodeType":"VariableDeclaration","scope":3035,"src":"7642:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3025,"name":"address","nodeType":"ElementaryTypeName","src":"7642:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3026,"nodeType":"ArrayTypeName","src":"7642:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"7641:24:14"},"returnParameters":{"id":3032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3031,"mutability":"mutable","name":"output","nameLocation":"7705:6:14","nodeType":"VariableDeclaration","scope":3035,"src":"7688:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3029,"name":"uint256","nodeType":"ElementaryTypeName","src":"7688:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3030,"nodeType":"ArrayTypeName","src":"7688:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"7687:25:14"},"scope":3687,"src":"7613:164:14","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3046,"nodeType":"Block","src":"7964:64:14","statements":[{"AST":{"nodeType":"YulBlock","src":"7983:39:14","statements":[{"nodeType":"YulAssignment","src":"7997:15:14","value":{"name":"input","nodeType":"YulIdentifier","src":"8007:5:14"},"variableNames":[{"name":"output","nodeType":"YulIdentifier","src":"7997:6:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3039,"isOffset":false,"isSlot":false,"src":"8007:5:14","valueSize":1},{"declaration":3043,"isOffset":false,"isSlot":false,"src":"7997:6:14","valueSize":1}],"id":3045,"nodeType":"InlineAssembly","src":"7974:48:14"}]},"documentation":{"id":3036,"nodeType":"StructuredDocumentation","src":"7783:76:14","text":"@dev Helper: low level cast bytes32 memory array to uint256 memory array"},"id":3047,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Array","nameLocation":"7873:19:14","nodeType":"FunctionDefinition","parameters":{"id":3040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3039,"mutability":"mutable","name":"input","nameLocation":"7910:5:14","nodeType":"VariableDeclaration","scope":3047,"src":"7893:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3037,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7893:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3038,"nodeType":"ArrayTypeName","src":"7893:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7892:24:14"},"returnParameters":{"id":3044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3043,"mutability":"mutable","name":"output","nameLocation":"7956:6:14","nodeType":"VariableDeclaration","scope":3047,"src":"7939:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3041,"name":"uint256","nodeType":"ElementaryTypeName","src":"7939:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3042,"nodeType":"ArrayTypeName","src":"7939:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"7938:25:14"},"scope":3687,"src":"7864:164:14","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3072,"nodeType":"Block","src":"8290:64:14","statements":[{"AST":{"nodeType":"YulBlock","src":"8309:39:14","statements":[{"nodeType":"YulAssignment","src":"8323:15:14","value":{"name":"input","nodeType":"YulIdentifier","src":"8333:5:14"},"variableNames":[{"name":"output","nodeType":"YulIdentifier","src":"8323:6:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3058,"isOffset":false,"isSlot":false,"src":"8333:5:14","valueSize":1},{"declaration":3069,"isOffset":false,"isSlot":false,"src":"8323:6:14","valueSize":1}],"id":3071,"nodeType":"InlineAssembly","src":"8300:48:14"}]},"documentation":{"id":3048,"nodeType":"StructuredDocumentation","src":"8034:78:14","text":"@dev Helper: low level cast address comp function to uint256 comp function"},"id":3073,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Comp","nameLocation":"8126:18:14","nodeType":"FunctionDefinition","parameters":{"id":3059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3058,"mutability":"mutable","name":"input","nameLocation":"8201:5:14","nodeType":"VariableDeclaration","scope":3073,"src":"8154:52:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"typeName":{"id":3057,"nodeType":"FunctionTypeName","parameterTypes":{"id":3053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3050,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3057,"src":"8163:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3049,"name":"address","nodeType":"ElementaryTypeName","src":"8163:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3052,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3057,"src":"8172:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3051,"name":"address","nodeType":"ElementaryTypeName","src":"8172:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8162:18:14"},"returnParameterTypes":{"id":3056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3055,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3057,"src":"8195:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3054,"name":"bool","nodeType":"ElementaryTypeName","src":"8195:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8194:6:14"},"src":"8154:52:14","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8144:68:14"},"returnParameters":{"id":3070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3069,"mutability":"mutable","name":"output","nameLocation":"8282:6:14","nodeType":"VariableDeclaration","scope":3073,"src":"8235:53:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":3068,"nodeType":"FunctionTypeName","parameterTypes":{"id":3064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3061,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3068,"src":"8244:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3060,"name":"uint256","nodeType":"ElementaryTypeName","src":"8244:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3063,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3068,"src":"8253:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3062,"name":"uint256","nodeType":"ElementaryTypeName","src":"8253:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8243:18:14"},"returnParameterTypes":{"id":3067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3066,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3068,"src":"8276:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3065,"name":"bool","nodeType":"ElementaryTypeName","src":"8276:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8275:6:14"},"src":"8235:53:14","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8234:55:14"},"scope":3687,"src":"8117:237:14","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3098,"nodeType":"Block","src":"8616:64:14","statements":[{"AST":{"nodeType":"YulBlock","src":"8635:39:14","statements":[{"nodeType":"YulAssignment","src":"8649:15:14","value":{"name":"input","nodeType":"YulIdentifier","src":"8659:5:14"},"variableNames":[{"name":"output","nodeType":"YulIdentifier","src":"8649:6:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3084,"isOffset":false,"isSlot":false,"src":"8659:5:14","valueSize":1},{"declaration":3095,"isOffset":false,"isSlot":false,"src":"8649:6:14","valueSize":1}],"id":3097,"nodeType":"InlineAssembly","src":"8626:48:14"}]},"documentation":{"id":3074,"nodeType":"StructuredDocumentation","src":"8360:78:14","text":"@dev Helper: low level cast bytes32 comp function to uint256 comp function"},"id":3099,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Comp","nameLocation":"8452:18:14","nodeType":"FunctionDefinition","parameters":{"id":3085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3084,"mutability":"mutable","name":"input","nameLocation":"8527:5:14","nodeType":"VariableDeclaration","scope":3099,"src":"8480:52:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"typeName":{"id":3083,"nodeType":"FunctionTypeName","parameterTypes":{"id":3079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3076,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3083,"src":"8489:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3075,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8489:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3078,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3083,"src":"8498:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3077,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8498:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8488:18:14"},"returnParameterTypes":{"id":3082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3081,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3083,"src":"8521:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3080,"name":"bool","nodeType":"ElementaryTypeName","src":"8521:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8520:6:14"},"src":"8480:52:14","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8470:68:14"},"returnParameters":{"id":3096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3095,"mutability":"mutable","name":"output","nameLocation":"8608:6:14","nodeType":"VariableDeclaration","scope":3099,"src":"8561:53:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":3094,"nodeType":"FunctionTypeName","parameterTypes":{"id":3090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3087,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3094,"src":"8570:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3086,"name":"uint256","nodeType":"ElementaryTypeName","src":"8570:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3089,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3094,"src":"8579:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3088,"name":"uint256","nodeType":"ElementaryTypeName","src":"8579:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8569:18:14"},"returnParameterTypes":{"id":3093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3092,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3094,"src":"8602:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3091,"name":"bool","nodeType":"ElementaryTypeName","src":"8602:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8601:6:14"},"src":"8561:53:14","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8560:55:14"},"scope":3687,"src":"8443:237:14","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3181,"nodeType":"Block","src":"9405:834:14","statements":[{"assignments":[3111],"declarations":[{"constant":false,"id":3111,"mutability":"mutable","name":"low","nameLocation":"9423:3:14","nodeType":"VariableDeclaration","scope":3181,"src":"9415:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3110,"name":"uint256","nodeType":"ElementaryTypeName","src":"9415:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3113,"initialValue":{"hexValue":"30","id":3112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9429:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9415:15:14"},{"assignments":[3115],"declarations":[{"constant":false,"id":3115,"mutability":"mutable","name":"high","nameLocation":"9448:4:14","nodeType":"VariableDeclaration","scope":3181,"src":"9440:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3114,"name":"uint256","nodeType":"ElementaryTypeName","src":"9440:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3118,"initialValue":{"expression":{"id":3116,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3103,"src":"9455:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":3117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9461:6:14","memberName":"length","nodeType":"MemberAccess","src":"9455:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9440:27:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3119,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3115,"src":"9482:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9490:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9482:9:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3125,"nodeType":"IfStatement","src":"9478:48:14","trueBody":{"id":3124,"nodeType":"Block","src":"9493:33:14","statements":[{"expression":{"hexValue":"30","id":3122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9514:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3109,"id":3123,"nodeType":"Return","src":"9507:8:14"}]}},{"body":{"id":3157,"nodeType":"Block","src":"9555:423:14","statements":[{"assignments":[3130],"declarations":[{"constant":false,"id":3130,"mutability":"mutable","name":"mid","nameLocation":"9577:3:14","nodeType":"VariableDeclaration","scope":3157,"src":"9569:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3129,"name":"uint256","nodeType":"ElementaryTypeName","src":"9569:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3136,"initialValue":{"arguments":[{"id":3133,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3111,"src":"9596:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3134,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3115,"src":"9601:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3131,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6894,"src":"9583:4:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6894_$","typeString":"type(library Math)"}},"id":3132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9588:7:14","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":5623,"src":"9583:12:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9583:23:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9569:37:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3138,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3103,"src":"9844:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"id":3139,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3130,"src":"9851:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3137,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3462,3488,3514,3540,3566],"referencedDeclaration":3514,"src":"9831:12:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$4015_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":3140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9831:24:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4015_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":3141,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9856:5:14","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":4014,"src":"9831:30:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3142,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3105,"src":"9864:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9831:40:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3155,"nodeType":"Block","src":"9922:46:14","statements":[{"expression":{"id":3153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3149,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3111,"src":"9940:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3150,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3130,"src":"9946:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9952:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9946:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9940:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3154,"nodeType":"ExpressionStatement","src":"9940:13:14"}]},"id":3156,"nodeType":"IfStatement","src":"9827:141:14","trueBody":{"id":3148,"nodeType":"Block","src":"9873:43:14","statements":[{"expression":{"id":3146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3144,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3115,"src":"9891:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3145,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3130,"src":"9898:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9891:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3147,"nodeType":"ExpressionStatement","src":"9891:10:14"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3126,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3111,"src":"9543:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3127,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3115,"src":"9549:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9543:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3158,"nodeType":"WhileStatement","src":"9536:442:14"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3159,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3111,"src":"10095:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10101:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10095:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3163,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3103,"src":"10119:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3164,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3111,"src":"10126:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10132:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10126:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3162,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3462,3488,3514,3540,3566],"referencedDeclaration":3514,"src":"10106:12:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$4015_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":3167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10106:28:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4015_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":3168,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10135:5:14","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":4014,"src":"10106:34:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3169,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3105,"src":"10144:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10106:45:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10095:56:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3179,"nodeType":"Block","src":"10198:35:14","statements":[{"expression":{"id":3177,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3111,"src":"10219:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3109,"id":3178,"nodeType":"Return","src":"10212:10:14"}]},"id":3180,"nodeType":"IfStatement","src":"10091:142:14","trueBody":{"id":3176,"nodeType":"Block","src":"10153:39:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3172,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3111,"src":"10174:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10180:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10174:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3109,"id":3175,"nodeType":"Return","src":"10167:14:14"}]}}]},"documentation":{"id":3100,"nodeType":"StructuredDocumentation","src":"8686:616:14","text":" @dev Searches a sorted `array` and returns the first index that contains\n a value greater or equal to `element`. If no such index exists (i.e. all\n values in the array are strictly less than `element`), the array length is\n returned. Time complexity O(log n).\n NOTE: The `array` is expected to be sorted in ascending order, and to\n contain no repeated elements.\n IMPORTANT: Deprecated. This implementation behaves as {lowerBound} but lacks\n support for repeated elements in the array. The {lowerBound} function should\n be used instead."},"id":3182,"implemented":true,"kind":"function","modifiers":[],"name":"findUpperBound","nameLocation":"9316:14:14","nodeType":"FunctionDefinition","parameters":{"id":3106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3103,"mutability":"mutable","name":"array","nameLocation":"9349:5:14","nodeType":"VariableDeclaration","scope":3182,"src":"9331:23:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3101,"name":"uint256","nodeType":"ElementaryTypeName","src":"9331:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3102,"nodeType":"ArrayTypeName","src":"9331:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3105,"mutability":"mutable","name":"element","nameLocation":"9364:7:14","nodeType":"VariableDeclaration","scope":3182,"src":"9356:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3104,"name":"uint256","nodeType":"ElementaryTypeName","src":"9356:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9330:42:14"},"returnParameters":{"id":3109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3108,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3182,"src":"9396:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3107,"name":"uint256","nodeType":"ElementaryTypeName","src":"9396:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9395:9:14"},"scope":3687,"src":"9307:932:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3245,"nodeType":"Block","src":"10756:709:14","statements":[{"assignments":[3194],"declarations":[{"constant":false,"id":3194,"mutability":"mutable","name":"low","nameLocation":"10774:3:14","nodeType":"VariableDeclaration","scope":3245,"src":"10766:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3193,"name":"uint256","nodeType":"ElementaryTypeName","src":"10766:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3196,"initialValue":{"hexValue":"30","id":3195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10780:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10766:15:14"},{"assignments":[3198],"declarations":[{"constant":false,"id":3198,"mutability":"mutable","name":"high","nameLocation":"10799:4:14","nodeType":"VariableDeclaration","scope":3245,"src":"10791:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3197,"name":"uint256","nodeType":"ElementaryTypeName","src":"10791:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3201,"initialValue":{"expression":{"id":3199,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"10806:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":3200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10812:6:14","memberName":"length","nodeType":"MemberAccess","src":"10806:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10791:27:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3202,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3198,"src":"10833:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10841:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10833:9:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3208,"nodeType":"IfStatement","src":"10829:48:14","trueBody":{"id":3207,"nodeType":"Block","src":"10844:33:14","statements":[{"expression":{"hexValue":"30","id":3205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10865:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3192,"id":3206,"nodeType":"Return","src":"10858:8:14"}]}},{"body":{"id":3241,"nodeType":"Block","src":"10906:532:14","statements":[{"assignments":[3213],"declarations":[{"constant":false,"id":3213,"mutability":"mutable","name":"mid","nameLocation":"10928:3:14","nodeType":"VariableDeclaration","scope":3241,"src":"10920:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3212,"name":"uint256","nodeType":"ElementaryTypeName","src":"10920:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3219,"initialValue":{"arguments":[{"id":3216,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"10947:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3217,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3198,"src":"10952:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3214,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6894,"src":"10934:4:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6894_$","typeString":"type(library Math)"}},"id":3215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10939:7:14","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":5623,"src":"10934:12:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10934:23:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10920:37:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3221,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"11195:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"id":3222,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3213,"src":"11202:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3220,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3462,3488,3514,3540,3566],"referencedDeclaration":3514,"src":"11182:12:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$4015_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":3223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11182:24:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4015_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":3224,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11207:5:14","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":4014,"src":"11182:30:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3225,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3188,"src":"11215:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11182:40:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3239,"nodeType":"Block","src":"11385:43:14","statements":[{"expression":{"id":3237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3235,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3198,"src":"11403:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3236,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3213,"src":"11410:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11403:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3238,"nodeType":"ExpressionStatement","src":"11403:10:14"}]},"id":3240,"nodeType":"IfStatement","src":"11178:250:14","trueBody":{"id":3234,"nodeType":"Block","src":"11224:155:14","statements":[{"id":3233,"nodeType":"UncheckedBlock","src":"11301:64:14","statements":[{"expression":{"id":3231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3227,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"11333:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3228,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3213,"src":"11339:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11345:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11339:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11333:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3232,"nodeType":"ExpressionStatement","src":"11333:13:14"}]}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3209,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"10894:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3210,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3198,"src":"10900:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10894:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3242,"nodeType":"WhileStatement","src":"10887:551:14"},{"expression":{"id":3243,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"11455:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3192,"id":3244,"nodeType":"Return","src":"11448:10:14"}]},"documentation":{"id":3183,"nodeType":"StructuredDocumentation","src":"10245:412:14","text":" @dev Searches an `array` sorted in ascending order and returns the first\n index that contains a value greater or equal than `element`. If no such index\n exists (i.e. all values in the array are strictly less than `element`), the array\n length is returned. Time complexity O(log n).\n See C++'s https://en.cppreference.com/w/cpp/algorithm/lower_bound[lower_bound]."},"id":3246,"implemented":true,"kind":"function","modifiers":[],"name":"lowerBound","nameLocation":"10671:10:14","nodeType":"FunctionDefinition","parameters":{"id":3189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3186,"mutability":"mutable","name":"array","nameLocation":"10700:5:14","nodeType":"VariableDeclaration","scope":3246,"src":"10682:23:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3184,"name":"uint256","nodeType":"ElementaryTypeName","src":"10682:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3185,"nodeType":"ArrayTypeName","src":"10682:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3188,"mutability":"mutable","name":"element","nameLocation":"10715:7:14","nodeType":"VariableDeclaration","scope":3246,"src":"10707:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3187,"name":"uint256","nodeType":"ElementaryTypeName","src":"10707:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10681:42:14"},"returnParameters":{"id":3192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3191,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3246,"src":"10747:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3190,"name":"uint256","nodeType":"ElementaryTypeName","src":"10747:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10746:9:14"},"scope":3687,"src":"10662:803:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3309,"nodeType":"Block","src":"11982:709:14","statements":[{"assignments":[3258],"declarations":[{"constant":false,"id":3258,"mutability":"mutable","name":"low","nameLocation":"12000:3:14","nodeType":"VariableDeclaration","scope":3309,"src":"11992:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3257,"name":"uint256","nodeType":"ElementaryTypeName","src":"11992:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3260,"initialValue":{"hexValue":"30","id":3259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12006:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11992:15:14"},{"assignments":[3262],"declarations":[{"constant":false,"id":3262,"mutability":"mutable","name":"high","nameLocation":"12025:4:14","nodeType":"VariableDeclaration","scope":3309,"src":"12017:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3261,"name":"uint256","nodeType":"ElementaryTypeName","src":"12017:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3265,"initialValue":{"expression":{"id":3263,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3250,"src":"12032:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":3264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12038:6:14","memberName":"length","nodeType":"MemberAccess","src":"12032:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12017:27:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3266,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3262,"src":"12059:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12059:9:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3272,"nodeType":"IfStatement","src":"12055:48:14","trueBody":{"id":3271,"nodeType":"Block","src":"12070:33:14","statements":[{"expression":{"hexValue":"30","id":3269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12091:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3256,"id":3270,"nodeType":"Return","src":"12084:8:14"}]}},{"body":{"id":3305,"nodeType":"Block","src":"12132:532:14","statements":[{"assignments":[3277],"declarations":[{"constant":false,"id":3277,"mutability":"mutable","name":"mid","nameLocation":"12154:3:14","nodeType":"VariableDeclaration","scope":3305,"src":"12146:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3276,"name":"uint256","nodeType":"ElementaryTypeName","src":"12146:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3283,"initialValue":{"arguments":[{"id":3280,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3258,"src":"12173:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3281,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3262,"src":"12178:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3278,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6894,"src":"12160:4:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6894_$","typeString":"type(library Math)"}},"id":3279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12165:7:14","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":5623,"src":"12160:12:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12160:23:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12146:37:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3285,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3250,"src":"12421:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"id":3286,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3277,"src":"12428:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3284,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3462,3488,3514,3540,3566],"referencedDeclaration":3514,"src":"12408:12:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$4015_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":3287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12408:24:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4015_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":3288,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12433:5:14","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":4014,"src":"12408:30:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3289,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3252,"src":"12441:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12408:40:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3303,"nodeType":"Block","src":"12499:155:14","statements":[{"id":3302,"nodeType":"UncheckedBlock","src":"12576:64:14","statements":[{"expression":{"id":3300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3296,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3258,"src":"12608:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3297,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3277,"src":"12614:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12620:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12614:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12608:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3301,"nodeType":"ExpressionStatement","src":"12608:13:14"}]}]},"id":3304,"nodeType":"IfStatement","src":"12404:250:14","trueBody":{"id":3295,"nodeType":"Block","src":"12450:43:14","statements":[{"expression":{"id":3293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3291,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3262,"src":"12468:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3292,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3277,"src":"12475:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12468:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3294,"nodeType":"ExpressionStatement","src":"12468:10:14"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3273,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3258,"src":"12120:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3274,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3262,"src":"12126:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12120:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3306,"nodeType":"WhileStatement","src":"12113:551:14"},{"expression":{"id":3307,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3258,"src":"12681:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3256,"id":3308,"nodeType":"Return","src":"12674:10:14"}]},"documentation":{"id":3247,"nodeType":"StructuredDocumentation","src":"11471:412:14","text":" @dev Searches an `array` sorted in ascending order and returns the first\n index that contains a value strictly greater than `element`. If no such index\n exists (i.e. all values in the array are strictly less than `element`), the array\n length is returned. Time complexity O(log n).\n See C++'s https://en.cppreference.com/w/cpp/algorithm/upper_bound[upper_bound]."},"id":3310,"implemented":true,"kind":"function","modifiers":[],"name":"upperBound","nameLocation":"11897:10:14","nodeType":"FunctionDefinition","parameters":{"id":3253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3250,"mutability":"mutable","name":"array","nameLocation":"11926:5:14","nodeType":"VariableDeclaration","scope":3310,"src":"11908:23:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3248,"name":"uint256","nodeType":"ElementaryTypeName","src":"11908:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3249,"nodeType":"ArrayTypeName","src":"11908:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3252,"mutability":"mutable","name":"element","nameLocation":"11941:7:14","nodeType":"VariableDeclaration","scope":3310,"src":"11933:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3251,"name":"uint256","nodeType":"ElementaryTypeName","src":"11933:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11907:42:14"},"returnParameters":{"id":3256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3255,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3310,"src":"11973:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3254,"name":"uint256","nodeType":"ElementaryTypeName","src":"11973:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11972:9:14"},"scope":3687,"src":"11888:803:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3372,"nodeType":"Block","src":"12875:709:14","statements":[{"assignments":[3322],"declarations":[{"constant":false,"id":3322,"mutability":"mutable","name":"low","nameLocation":"12893:3:14","nodeType":"VariableDeclaration","scope":3372,"src":"12885:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3321,"name":"uint256","nodeType":"ElementaryTypeName","src":"12885:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3324,"initialValue":{"hexValue":"30","id":3323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12899:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12885:15:14"},{"assignments":[3326],"declarations":[{"constant":false,"id":3326,"mutability":"mutable","name":"high","nameLocation":"12918:4:14","nodeType":"VariableDeclaration","scope":3372,"src":"12910:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3325,"name":"uint256","nodeType":"ElementaryTypeName","src":"12910:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3329,"initialValue":{"expression":{"id":3327,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3314,"src":"12925:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12931:6:14","memberName":"length","nodeType":"MemberAccess","src":"12925:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12910:27:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3330,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3326,"src":"12952:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12960:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12952:9:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3336,"nodeType":"IfStatement","src":"12948:48:14","trueBody":{"id":3335,"nodeType":"Block","src":"12963:33:14","statements":[{"expression":{"hexValue":"30","id":3333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12984:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3320,"id":3334,"nodeType":"Return","src":"12977:8:14"}]}},{"body":{"id":3368,"nodeType":"Block","src":"13025:532:14","statements":[{"assignments":[3341],"declarations":[{"constant":false,"id":3341,"mutability":"mutable","name":"mid","nameLocation":"13047:3:14","nodeType":"VariableDeclaration","scope":3368,"src":"13039:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3340,"name":"uint256","nodeType":"ElementaryTypeName","src":"13039:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3347,"initialValue":{"arguments":[{"id":3344,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3322,"src":"13066:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3345,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3326,"src":"13071:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3342,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6894,"src":"13053:4:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6894_$","typeString":"type(library Math)"}},"id":3343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13058:7:14","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":5623,"src":"13053:12:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13053:23:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13039:37:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3349,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3314,"src":"13320:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":3350,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3341,"src":"13327:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3348,"name":"unsafeMemoryAccess","nodeType":"Identifier","overloadedDeclarations":[3579,3592,3605,3618,3631],"referencedDeclaration":3605,"src":"13301:18:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":3351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13301:30:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3352,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3316,"src":"13334:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13301:40:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3366,"nodeType":"Block","src":"13504:43:14","statements":[{"expression":{"id":3364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3362,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3326,"src":"13522:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3363,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3341,"src":"13529:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13522:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3365,"nodeType":"ExpressionStatement","src":"13522:10:14"}]},"id":3367,"nodeType":"IfStatement","src":"13297:250:14","trueBody":{"id":3361,"nodeType":"Block","src":"13343:155:14","statements":[{"id":3360,"nodeType":"UncheckedBlock","src":"13420:64:14","statements":[{"expression":{"id":3358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3354,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3322,"src":"13452:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3355,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3341,"src":"13458:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13464:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13458:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13452:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3359,"nodeType":"ExpressionStatement","src":"13452:13:14"}]}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3337,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3322,"src":"13013:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3338,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3326,"src":"13019:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13013:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3369,"nodeType":"WhileStatement","src":"13006:551:14"},{"expression":{"id":3370,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3322,"src":"13574:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3320,"id":3371,"nodeType":"Return","src":"13567:10:14"}]},"documentation":{"id":3311,"nodeType":"StructuredDocumentation","src":"12697:74:14","text":" @dev Same as {lowerBound}, but with an array in memory."},"id":3373,"implemented":true,"kind":"function","modifiers":[],"name":"lowerBoundMemory","nameLocation":"12785:16:14","nodeType":"FunctionDefinition","parameters":{"id":3317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3314,"mutability":"mutable","name":"array","nameLocation":"12819:5:14","nodeType":"VariableDeclaration","scope":3373,"src":"12802:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3312,"name":"uint256","nodeType":"ElementaryTypeName","src":"12802:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3313,"nodeType":"ArrayTypeName","src":"12802:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3316,"mutability":"mutable","name":"element","nameLocation":"12834:7:14","nodeType":"VariableDeclaration","scope":3373,"src":"12826:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3315,"name":"uint256","nodeType":"ElementaryTypeName","src":"12826:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12801:41:14"},"returnParameters":{"id":3320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3319,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3373,"src":"12866:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3318,"name":"uint256","nodeType":"ElementaryTypeName","src":"12866:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12865:9:14"},"scope":3687,"src":"12776:808:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3435,"nodeType":"Block","src":"13768:709:14","statements":[{"assignments":[3385],"declarations":[{"constant":false,"id":3385,"mutability":"mutable","name":"low","nameLocation":"13786:3:14","nodeType":"VariableDeclaration","scope":3435,"src":"13778:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3384,"name":"uint256","nodeType":"ElementaryTypeName","src":"13778:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3387,"initialValue":{"hexValue":"30","id":3386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13792:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13778:15:14"},{"assignments":[3389],"declarations":[{"constant":false,"id":3389,"mutability":"mutable","name":"high","nameLocation":"13811:4:14","nodeType":"VariableDeclaration","scope":3435,"src":"13803:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3388,"name":"uint256","nodeType":"ElementaryTypeName","src":"13803:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3392,"initialValue":{"expression":{"id":3390,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3377,"src":"13818:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13824:6:14","memberName":"length","nodeType":"MemberAccess","src":"13818:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13803:27:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3393,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3389,"src":"13845:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13853:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13845:9:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3399,"nodeType":"IfStatement","src":"13841:48:14","trueBody":{"id":3398,"nodeType":"Block","src":"13856:33:14","statements":[{"expression":{"hexValue":"30","id":3396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13877:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3383,"id":3397,"nodeType":"Return","src":"13870:8:14"}]}},{"body":{"id":3431,"nodeType":"Block","src":"13918:532:14","statements":[{"assignments":[3404],"declarations":[{"constant":false,"id":3404,"mutability":"mutable","name":"mid","nameLocation":"13940:3:14","nodeType":"VariableDeclaration","scope":3431,"src":"13932:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3403,"name":"uint256","nodeType":"ElementaryTypeName","src":"13932:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3410,"initialValue":{"arguments":[{"id":3407,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3385,"src":"13959:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3408,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3389,"src":"13964:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3405,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6894,"src":"13946:4:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6894_$","typeString":"type(library Math)"}},"id":3406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13951:7:14","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":5623,"src":"13946:12:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13946:23:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13932:37:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3412,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3377,"src":"14213:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":3413,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3404,"src":"14220:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3411,"name":"unsafeMemoryAccess","nodeType":"Identifier","overloadedDeclarations":[3579,3592,3605,3618,3631],"referencedDeclaration":3605,"src":"14194:18:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":3414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14194:30:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3415,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"14227:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14194:40:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3429,"nodeType":"Block","src":"14285:155:14","statements":[{"id":3428,"nodeType":"UncheckedBlock","src":"14362:64:14","statements":[{"expression":{"id":3426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3422,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3385,"src":"14394:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3423,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3404,"src":"14400:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14406:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14400:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14394:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3427,"nodeType":"ExpressionStatement","src":"14394:13:14"}]}]},"id":3430,"nodeType":"IfStatement","src":"14190:250:14","trueBody":{"id":3421,"nodeType":"Block","src":"14236:43:14","statements":[{"expression":{"id":3419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3417,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3389,"src":"14254:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3418,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3404,"src":"14261:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14254:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3420,"nodeType":"ExpressionStatement","src":"14254:10:14"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3400,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3385,"src":"13906:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3401,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3389,"src":"13912:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13906:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3432,"nodeType":"WhileStatement","src":"13899:551:14"},{"expression":{"id":3433,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3385,"src":"14467:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3383,"id":3434,"nodeType":"Return","src":"14460:10:14"}]},"documentation":{"id":3374,"nodeType":"StructuredDocumentation","src":"13590:74:14","text":" @dev Same as {upperBound}, but with an array in memory."},"id":3436,"implemented":true,"kind":"function","modifiers":[],"name":"upperBoundMemory","nameLocation":"13678:16:14","nodeType":"FunctionDefinition","parameters":{"id":3380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3377,"mutability":"mutable","name":"array","nameLocation":"13712:5:14","nodeType":"VariableDeclaration","scope":3436,"src":"13695:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3375,"name":"uint256","nodeType":"ElementaryTypeName","src":"13695:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3376,"nodeType":"ArrayTypeName","src":"13695:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3379,"mutability":"mutable","name":"element","nameLocation":"13727:7:14","nodeType":"VariableDeclaration","scope":3436,"src":"13719:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3378,"name":"uint256","nodeType":"ElementaryTypeName","src":"13719:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13694:41:14"},"returnParameters":{"id":3383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3382,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3436,"src":"13759:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3381,"name":"uint256","nodeType":"ElementaryTypeName","src":"13759:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13758:9:14"},"scope":3687,"src":"13669:808:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3461,"nodeType":"Block","src":"14793:167:14","statements":[{"assignments":[3449],"declarations":[{"constant":false,"id":3449,"mutability":"mutable","name":"slot","nameLocation":"14811:4:14","nodeType":"VariableDeclaration","scope":3461,"src":"14803:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3448,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14803:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3450,"nodeType":"VariableDeclarationStatement","src":"14803:12:14"},{"AST":{"nodeType":"YulBlock","src":"14850:40:14","statements":[{"nodeType":"YulAssignment","src":"14864:16:14","value":{"name":"arr.slot","nodeType":"YulIdentifier","src":"14872:8:14"},"variableNames":[{"name":"slot","nodeType":"YulIdentifier","src":"14864:4:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3440,"isOffset":false,"isSlot":true,"src":"14872:8:14","suffix":"slot","valueSize":1},{"declaration":3449,"isOffset":false,"isSlot":false,"src":"14864:4:14","valueSize":1}],"flags":["memory-safe"],"id":3451,"nodeType":"InlineAssembly","src":"14825:65:14"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":3456,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3442,"src":"14932:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3452,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3449,"src":"14906:4:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14911:11:14","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":3915,"src":"14906:16:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":3454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14906:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14925:6:14","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":3905,"src":"14906:25:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":3457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14906:30:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14937:14:14","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":4035,"src":"14906:45:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$4006_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":3459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14906:47:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$4006_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"functionReturnParameters":3447,"id":3460,"nodeType":"Return","src":"14899:54:14"}]},"documentation":{"id":3437,"nodeType":"StructuredDocumentation","src":"14483:191:14","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":3462,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"14688:12:14","nodeType":"FunctionDefinition","parameters":{"id":3443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3440,"mutability":"mutable","name":"arr","nameLocation":"14719:3:14","nodeType":"VariableDeclaration","scope":3462,"src":"14701:21:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3438,"name":"address","nodeType":"ElementaryTypeName","src":"14701:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3439,"nodeType":"ArrayTypeName","src":"14701:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3442,"mutability":"mutable","name":"pos","nameLocation":"14732:3:14","nodeType":"VariableDeclaration","scope":3462,"src":"14724:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3441,"name":"uint256","nodeType":"ElementaryTypeName","src":"14724:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14700:36:14"},"returnParameters":{"id":3447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3446,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3462,"src":"14760:31:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$4006_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":3445,"nodeType":"UserDefinedTypeName","pathNode":{"id":3444,"name":"StorageSlot.AddressSlot","nameLocations":["14760:11:14","14772:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":4006,"src":"14760:23:14"},"referencedDeclaration":4006,"src":"14760:23:14","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$4006_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"14759:33:14"},"scope":3687,"src":"14679:281:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3487,"nodeType":"Block","src":"15276:167:14","statements":[{"assignments":[3475],"declarations":[{"constant":false,"id":3475,"mutability":"mutable","name":"slot","nameLocation":"15294:4:14","nodeType":"VariableDeclaration","scope":3487,"src":"15286:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3474,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15286:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3476,"nodeType":"VariableDeclarationStatement","src":"15286:12:14"},{"AST":{"nodeType":"YulBlock","src":"15333:40:14","statements":[{"nodeType":"YulAssignment","src":"15347:16:14","value":{"name":"arr.slot","nodeType":"YulIdentifier","src":"15355:8:14"},"variableNames":[{"name":"slot","nodeType":"YulIdentifier","src":"15347:4:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3466,"isOffset":false,"isSlot":true,"src":"15355:8:14","suffix":"slot","valueSize":1},{"declaration":3475,"isOffset":false,"isSlot":false,"src":"15347:4:14","valueSize":1}],"flags":["memory-safe"],"id":3477,"nodeType":"InlineAssembly","src":"15308:65:14"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":3482,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3468,"src":"15415:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3478,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3475,"src":"15389:4:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15394:11:14","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":3915,"src":"15389:16:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":3480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15389:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15408:6:14","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":3905,"src":"15389:25:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":3483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15389:30:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15420:14:14","memberName":"getBytes32Slot","nodeType":"MemberAccess","referencedDeclaration":4057,"src":"15389:45:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Bytes32Slot_$4012_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.Bytes32Slot storage pointer)"}},"id":3485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15389:47:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$4012_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot storage pointer"}},"functionReturnParameters":3473,"id":3486,"nodeType":"Return","src":"15382:54:14"}]},"documentation":{"id":3463,"nodeType":"StructuredDocumentation","src":"14966:191:14","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":3488,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"15171:12:14","nodeType":"FunctionDefinition","parameters":{"id":3469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3466,"mutability":"mutable","name":"arr","nameLocation":"15202:3:14","nodeType":"VariableDeclaration","scope":3488,"src":"15184:21:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3464,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15184:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3465,"nodeType":"ArrayTypeName","src":"15184:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3468,"mutability":"mutable","name":"pos","nameLocation":"15215:3:14","nodeType":"VariableDeclaration","scope":3488,"src":"15207:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3467,"name":"uint256","nodeType":"ElementaryTypeName","src":"15207:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15183:36:14"},"returnParameters":{"id":3473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3472,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3488,"src":"15243:31:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$4012_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":3471,"nodeType":"UserDefinedTypeName","pathNode":{"id":3470,"name":"StorageSlot.Bytes32Slot","nameLocations":["15243:11:14","15255:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":4012,"src":"15243:23:14"},"referencedDeclaration":4012,"src":"15243:23:14","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$4012_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"15242:33:14"},"scope":3687,"src":"15162:281:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3513,"nodeType":"Block","src":"15759:167:14","statements":[{"assignments":[3501],"declarations":[{"constant":false,"id":3501,"mutability":"mutable","name":"slot","nameLocation":"15777:4:14","nodeType":"VariableDeclaration","scope":3513,"src":"15769:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3500,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15769:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3502,"nodeType":"VariableDeclarationStatement","src":"15769:12:14"},{"AST":{"nodeType":"YulBlock","src":"15816:40:14","statements":[{"nodeType":"YulAssignment","src":"15830:16:14","value":{"name":"arr.slot","nodeType":"YulIdentifier","src":"15838:8:14"},"variableNames":[{"name":"slot","nodeType":"YulIdentifier","src":"15830:4:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3492,"isOffset":false,"isSlot":true,"src":"15838:8:14","suffix":"slot","valueSize":1},{"declaration":3501,"isOffset":false,"isSlot":false,"src":"15830:4:14","valueSize":1}],"flags":["memory-safe"],"id":3503,"nodeType":"InlineAssembly","src":"15791:65:14"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":3508,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3494,"src":"15898:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3504,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3501,"src":"15872:4:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15877:11:14","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":3915,"src":"15872:16:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":3506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15872:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15891:6:14","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":3905,"src":"15872:25:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":3509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15872:30:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15903:14:14","memberName":"getUint256Slot","nodeType":"MemberAccess","referencedDeclaration":4068,"src":"15872:45:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Uint256Slot_$4015_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":3511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15872:47:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4015_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"functionReturnParameters":3499,"id":3512,"nodeType":"Return","src":"15865:54:14"}]},"documentation":{"id":3489,"nodeType":"StructuredDocumentation","src":"15449:191:14","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":3514,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"15654:12:14","nodeType":"FunctionDefinition","parameters":{"id":3495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3492,"mutability":"mutable","name":"arr","nameLocation":"15685:3:14","nodeType":"VariableDeclaration","scope":3514,"src":"15667:21:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3490,"name":"uint256","nodeType":"ElementaryTypeName","src":"15667:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3491,"nodeType":"ArrayTypeName","src":"15667:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3494,"mutability":"mutable","name":"pos","nameLocation":"15698:3:14","nodeType":"VariableDeclaration","scope":3514,"src":"15690:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3493,"name":"uint256","nodeType":"ElementaryTypeName","src":"15690:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15666:36:14"},"returnParameters":{"id":3499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3498,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3514,"src":"15726:31:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4015_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":3497,"nodeType":"UserDefinedTypeName","pathNode":{"id":3496,"name":"StorageSlot.Uint256Slot","nameLocations":["15726:11:14","15738:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":4015,"src":"15726:23:14"},"referencedDeclaration":4015,"src":"15726:23:14","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4015_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"15725:33:14"},"scope":3687,"src":"15645:281:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3539,"nodeType":"Block","src":"16238:165:14","statements":[{"assignments":[3527],"declarations":[{"constant":false,"id":3527,"mutability":"mutable","name":"slot","nameLocation":"16256:4:14","nodeType":"VariableDeclaration","scope":3539,"src":"16248:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3526,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16248:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3528,"nodeType":"VariableDeclarationStatement","src":"16248:12:14"},{"AST":{"nodeType":"YulBlock","src":"16295:40:14","statements":[{"nodeType":"YulAssignment","src":"16309:16:14","value":{"name":"arr.slot","nodeType":"YulIdentifier","src":"16317:8:14"},"variableNames":[{"name":"slot","nodeType":"YulIdentifier","src":"16309:4:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3518,"isOffset":false,"isSlot":true,"src":"16317:8:14","suffix":"slot","valueSize":1},{"declaration":3527,"isOffset":false,"isSlot":false,"src":"16309:4:14","valueSize":1}],"flags":["memory-safe"],"id":3529,"nodeType":"InlineAssembly","src":"16270:65:14"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":3534,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3520,"src":"16377:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3530,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3527,"src":"16351:4:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16356:11:14","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":3915,"src":"16351:16:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":3532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16351:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16370:6:14","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":3905,"src":"16351:25:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":3535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16351:30:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16382:12:14","memberName":"getBytesSlot","nodeType":"MemberAccess","referencedDeclaration":4112,"src":"16351:43:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_BytesSlot_$4024_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.BytesSlot storage pointer)"}},"id":3537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16351:45:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$4024_storage_ptr","typeString":"struct StorageSlot.BytesSlot storage pointer"}},"functionReturnParameters":3525,"id":3538,"nodeType":"Return","src":"16344:52:14"}]},"documentation":{"id":3515,"nodeType":"StructuredDocumentation","src":"15932:191:14","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":3540,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"16137:12:14","nodeType":"FunctionDefinition","parameters":{"id":3521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3518,"mutability":"mutable","name":"arr","nameLocation":"16166:3:14","nodeType":"VariableDeclaration","scope":3540,"src":"16150:19:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":3516,"name":"bytes","nodeType":"ElementaryTypeName","src":"16150:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":3517,"nodeType":"ArrayTypeName","src":"16150:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":3520,"mutability":"mutable","name":"pos","nameLocation":"16179:3:14","nodeType":"VariableDeclaration","scope":3540,"src":"16171:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3519,"name":"uint256","nodeType":"ElementaryTypeName","src":"16171:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16149:34:14"},"returnParameters":{"id":3525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3524,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3540,"src":"16207:29:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$4024_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":3523,"nodeType":"UserDefinedTypeName","pathNode":{"id":3522,"name":"StorageSlot.BytesSlot","nameLocations":["16207:11:14","16219:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":4024,"src":"16207:21:14"},"referencedDeclaration":4024,"src":"16207:21:14","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$4024_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"16206:31:14"},"scope":3687,"src":"16128:275:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3565,"nodeType":"Block","src":"16717:166:14","statements":[{"assignments":[3553],"declarations":[{"constant":false,"id":3553,"mutability":"mutable","name":"slot","nameLocation":"16735:4:14","nodeType":"VariableDeclaration","scope":3565,"src":"16727:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3552,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16727:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3554,"nodeType":"VariableDeclarationStatement","src":"16727:12:14"},{"AST":{"nodeType":"YulBlock","src":"16774:40:14","statements":[{"nodeType":"YulAssignment","src":"16788:16:14","value":{"name":"arr.slot","nodeType":"YulIdentifier","src":"16796:8:14"},"variableNames":[{"name":"slot","nodeType":"YulIdentifier","src":"16788:4:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3544,"isOffset":false,"isSlot":true,"src":"16796:8:14","suffix":"slot","valueSize":1},{"declaration":3553,"isOffset":false,"isSlot":false,"src":"16788:4:14","valueSize":1}],"flags":["memory-safe"],"id":3555,"nodeType":"InlineAssembly","src":"16749:65:14"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":3560,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3546,"src":"16856:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3556,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3553,"src":"16830:4:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16835:11:14","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":3915,"src":"16830:16:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":3558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16830:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16849:6:14","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":3905,"src":"16830:25:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":3561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16830:30:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16861:13:14","memberName":"getStringSlot","nodeType":"MemberAccess","referencedDeclaration":4090,"src":"16830:44:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_StringSlot_$4021_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.StringSlot storage pointer)"}},"id":3563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16830:46:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$4021_storage_ptr","typeString":"struct StorageSlot.StringSlot storage pointer"}},"functionReturnParameters":3551,"id":3564,"nodeType":"Return","src":"16823:53:14"}]},"documentation":{"id":3541,"nodeType":"StructuredDocumentation","src":"16409:191:14","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":3566,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"16614:12:14","nodeType":"FunctionDefinition","parameters":{"id":3547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3544,"mutability":"mutable","name":"arr","nameLocation":"16644:3:14","nodeType":"VariableDeclaration","scope":3566,"src":"16627:20:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":3542,"name":"string","nodeType":"ElementaryTypeName","src":"16627:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":3543,"nodeType":"ArrayTypeName","src":"16627:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":3546,"mutability":"mutable","name":"pos","nameLocation":"16657:3:14","nodeType":"VariableDeclaration","scope":3566,"src":"16649:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3545,"name":"uint256","nodeType":"ElementaryTypeName","src":"16649:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16626:35:14"},"returnParameters":{"id":3551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3550,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3566,"src":"16685:30:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$4021_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":3549,"nodeType":"UserDefinedTypeName","pathNode":{"id":3548,"name":"StorageSlot.StringSlot","nameLocations":["16685:11:14","16697:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":4021,"src":"16685:22:14"},"referencedDeclaration":4021,"src":"16685:22:14","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$4021_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"16684:32:14"},"scope":3687,"src":"16605:278:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3578,"nodeType":"Block","src":"17184:98:14","statements":[{"AST":{"nodeType":"YulBlock","src":"17203:73:14","statements":[{"nodeType":"YulAssignment","src":"17217:49:14","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nodeType":"YulIdentifier","src":"17238:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"17243:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17234:3:14"},"nodeType":"YulFunctionCall","src":"17234:14:14"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17254:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"17259:4:14","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"17250:3:14"},"nodeType":"YulFunctionCall","src":"17250:14:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17230:3:14"},"nodeType":"YulFunctionCall","src":"17230:35:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17224:5:14"},"nodeType":"YulFunctionCall","src":"17224:42:14"},"variableNames":[{"name":"res","nodeType":"YulIdentifier","src":"17217:3:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3570,"isOffset":false,"isSlot":false,"src":"17238:3:14","valueSize":1},{"declaration":3572,"isOffset":false,"isSlot":false,"src":"17254:3:14","valueSize":1},{"declaration":3575,"isOffset":false,"isSlot":false,"src":"17217:3:14","valueSize":1}],"id":3577,"nodeType":"InlineAssembly","src":"17194:82:14"}]},"documentation":{"id":3567,"nodeType":"StructuredDocumentation","src":"16889:191:14","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":3579,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"17094:18:14","nodeType":"FunctionDefinition","parameters":{"id":3573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3570,"mutability":"mutable","name":"arr","nameLocation":"17130:3:14","nodeType":"VariableDeclaration","scope":3579,"src":"17113:20:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3568,"name":"address","nodeType":"ElementaryTypeName","src":"17113:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3569,"nodeType":"ArrayTypeName","src":"17113:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3572,"mutability":"mutable","name":"pos","nameLocation":"17143:3:14","nodeType":"VariableDeclaration","scope":3579,"src":"17135:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3571,"name":"uint256","nodeType":"ElementaryTypeName","src":"17135:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17112:35:14"},"returnParameters":{"id":3576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3575,"mutability":"mutable","name":"res","nameLocation":"17179:3:14","nodeType":"VariableDeclaration","scope":3579,"src":"17171:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3574,"name":"address","nodeType":"ElementaryTypeName","src":"17171:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"17170:13:14"},"scope":3687,"src":"17085:197:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3591,"nodeType":"Block","src":"17583:98:14","statements":[{"AST":{"nodeType":"YulBlock","src":"17602:73:14","statements":[{"nodeType":"YulAssignment","src":"17616:49:14","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nodeType":"YulIdentifier","src":"17637:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"17642:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17633:3:14"},"nodeType":"YulFunctionCall","src":"17633:14:14"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17653:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"17658:4:14","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"17649:3:14"},"nodeType":"YulFunctionCall","src":"17649:14:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17629:3:14"},"nodeType":"YulFunctionCall","src":"17629:35:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17623:5:14"},"nodeType":"YulFunctionCall","src":"17623:42:14"},"variableNames":[{"name":"res","nodeType":"YulIdentifier","src":"17616:3:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3583,"isOffset":false,"isSlot":false,"src":"17637:3:14","valueSize":1},{"declaration":3585,"isOffset":false,"isSlot":false,"src":"17653:3:14","valueSize":1},{"declaration":3588,"isOffset":false,"isSlot":false,"src":"17616:3:14","valueSize":1}],"id":3590,"nodeType":"InlineAssembly","src":"17593:82:14"}]},"documentation":{"id":3580,"nodeType":"StructuredDocumentation","src":"17288:191:14","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":3592,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"17493:18:14","nodeType":"FunctionDefinition","parameters":{"id":3586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3583,"mutability":"mutable","name":"arr","nameLocation":"17529:3:14","nodeType":"VariableDeclaration","scope":3592,"src":"17512:20:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3581,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17512:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3582,"nodeType":"ArrayTypeName","src":"17512:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3585,"mutability":"mutable","name":"pos","nameLocation":"17542:3:14","nodeType":"VariableDeclaration","scope":3592,"src":"17534:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3584,"name":"uint256","nodeType":"ElementaryTypeName","src":"17534:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17511:35:14"},"returnParameters":{"id":3589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3588,"mutability":"mutable","name":"res","nameLocation":"17578:3:14","nodeType":"VariableDeclaration","scope":3592,"src":"17570:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3587,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17570:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"17569:13:14"},"scope":3687,"src":"17484:197:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3604,"nodeType":"Block","src":"17982:98:14","statements":[{"AST":{"nodeType":"YulBlock","src":"18001:73:14","statements":[{"nodeType":"YulAssignment","src":"18015:49:14","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nodeType":"YulIdentifier","src":"18036:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"18041:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18032:3:14"},"nodeType":"YulFunctionCall","src":"18032:14:14"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18052:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"18057:4:14","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"18048:3:14"},"nodeType":"YulFunctionCall","src":"18048:14:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18028:3:14"},"nodeType":"YulFunctionCall","src":"18028:35:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18022:5:14"},"nodeType":"YulFunctionCall","src":"18022:42:14"},"variableNames":[{"name":"res","nodeType":"YulIdentifier","src":"18015:3:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3596,"isOffset":false,"isSlot":false,"src":"18036:3:14","valueSize":1},{"declaration":3598,"isOffset":false,"isSlot":false,"src":"18052:3:14","valueSize":1},{"declaration":3601,"isOffset":false,"isSlot":false,"src":"18015:3:14","valueSize":1}],"id":3603,"nodeType":"InlineAssembly","src":"17992:82:14"}]},"documentation":{"id":3593,"nodeType":"StructuredDocumentation","src":"17687:191:14","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":3605,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"17892:18:14","nodeType":"FunctionDefinition","parameters":{"id":3599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3596,"mutability":"mutable","name":"arr","nameLocation":"17928:3:14","nodeType":"VariableDeclaration","scope":3605,"src":"17911:20:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3594,"name":"uint256","nodeType":"ElementaryTypeName","src":"17911:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3595,"nodeType":"ArrayTypeName","src":"17911:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3598,"mutability":"mutable","name":"pos","nameLocation":"17941:3:14","nodeType":"VariableDeclaration","scope":3605,"src":"17933:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3597,"name":"uint256","nodeType":"ElementaryTypeName","src":"17933:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17910:35:14"},"returnParameters":{"id":3602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3601,"mutability":"mutable","name":"res","nameLocation":"17977:3:14","nodeType":"VariableDeclaration","scope":3605,"src":"17969:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3600,"name":"uint256","nodeType":"ElementaryTypeName","src":"17969:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17968:13:14"},"scope":3687,"src":"17883:197:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3617,"nodeType":"Block","src":"18384:98:14","statements":[{"AST":{"nodeType":"YulBlock","src":"18403:73:14","statements":[{"nodeType":"YulAssignment","src":"18417:49:14","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nodeType":"YulIdentifier","src":"18438:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"18443:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18434:3:14"},"nodeType":"YulFunctionCall","src":"18434:14:14"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18454:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"18459:4:14","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"18450:3:14"},"nodeType":"YulFunctionCall","src":"18450:14:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18430:3:14"},"nodeType":"YulFunctionCall","src":"18430:35:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18424:5:14"},"nodeType":"YulFunctionCall","src":"18424:42:14"},"variableNames":[{"name":"res","nodeType":"YulIdentifier","src":"18417:3:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3609,"isOffset":false,"isSlot":false,"src":"18438:3:14","valueSize":1},{"declaration":3611,"isOffset":false,"isSlot":false,"src":"18454:3:14","valueSize":1},{"declaration":3614,"isOffset":false,"isSlot":false,"src":"18417:3:14","valueSize":1}],"id":3616,"nodeType":"InlineAssembly","src":"18394:82:14"}]},"documentation":{"id":3606,"nodeType":"StructuredDocumentation","src":"18086:191:14","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":3618,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"18291:18:14","nodeType":"FunctionDefinition","parameters":{"id":3612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3609,"mutability":"mutable","name":"arr","nameLocation":"18325:3:14","nodeType":"VariableDeclaration","scope":3618,"src":"18310:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":3607,"name":"bytes","nodeType":"ElementaryTypeName","src":"18310:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":3608,"nodeType":"ArrayTypeName","src":"18310:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":3611,"mutability":"mutable","name":"pos","nameLocation":"18338:3:14","nodeType":"VariableDeclaration","scope":3618,"src":"18330:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3610,"name":"uint256","nodeType":"ElementaryTypeName","src":"18330:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18309:33:14"},"returnParameters":{"id":3615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3614,"mutability":"mutable","name":"res","nameLocation":"18379:3:14","nodeType":"VariableDeclaration","scope":3618,"src":"18366:16:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3613,"name":"bytes","nodeType":"ElementaryTypeName","src":"18366:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18365:18:14"},"scope":3687,"src":"18282:200:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3630,"nodeType":"Block","src":"18788:98:14","statements":[{"AST":{"nodeType":"YulBlock","src":"18807:73:14","statements":[{"nodeType":"YulAssignment","src":"18821:49:14","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nodeType":"YulIdentifier","src":"18842:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"18847:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18838:3:14"},"nodeType":"YulFunctionCall","src":"18838:14:14"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18858:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"18863:4:14","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"18854:3:14"},"nodeType":"YulFunctionCall","src":"18854:14:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18834:3:14"},"nodeType":"YulFunctionCall","src":"18834:35:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18828:5:14"},"nodeType":"YulFunctionCall","src":"18828:42:14"},"variableNames":[{"name":"res","nodeType":"YulIdentifier","src":"18821:3:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3622,"isOffset":false,"isSlot":false,"src":"18842:3:14","valueSize":1},{"declaration":3624,"isOffset":false,"isSlot":false,"src":"18858:3:14","valueSize":1},{"declaration":3627,"isOffset":false,"isSlot":false,"src":"18821:3:14","valueSize":1}],"id":3629,"nodeType":"InlineAssembly","src":"18798:82:14"}]},"documentation":{"id":3619,"nodeType":"StructuredDocumentation","src":"18488:191:14","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":3631,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"18693:18:14","nodeType":"FunctionDefinition","parameters":{"id":3625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3622,"mutability":"mutable","name":"arr","nameLocation":"18728:3:14","nodeType":"VariableDeclaration","scope":3631,"src":"18712:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":3620,"name":"string","nodeType":"ElementaryTypeName","src":"18712:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":3621,"nodeType":"ArrayTypeName","src":"18712:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":3624,"mutability":"mutable","name":"pos","nameLocation":"18741:3:14","nodeType":"VariableDeclaration","scope":3631,"src":"18733:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3623,"name":"uint256","nodeType":"ElementaryTypeName","src":"18733:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18711:34:14"},"returnParameters":{"id":3628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3627,"mutability":"mutable","name":"res","nameLocation":"18783:3:14","nodeType":"VariableDeclaration","scope":3631,"src":"18769:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3626,"name":"string","nodeType":"ElementaryTypeName","src":"18769:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"18768:19:14"},"scope":3687,"src":"18684:202:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3641,"nodeType":"Block","src":"19202:88:14","statements":[{"AST":{"nodeType":"YulBlock","src":"19237:47:14","statements":[{"expression":{"arguments":[{"name":"array.slot","nodeType":"YulIdentifier","src":"19258:10:14"},{"name":"len","nodeType":"YulIdentifier","src":"19270:3:14"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"19251:6:14"},"nodeType":"YulFunctionCall","src":"19251:23:14"},"nodeType":"YulExpressionStatement","src":"19251:23:14"}]},"evmVersion":"paris","externalReferences":[{"declaration":3635,"isOffset":false,"isSlot":true,"src":"19258:10:14","suffix":"slot","valueSize":1},{"declaration":3637,"isOffset":false,"isSlot":false,"src":"19270:3:14","valueSize":1}],"flags":["memory-safe"],"id":3640,"nodeType":"InlineAssembly","src":"19212:72:14"}]},"documentation":{"id":3632,"nodeType":"StructuredDocumentation","src":"18892:233:14","text":" @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":3642,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"19139:15:14","nodeType":"FunctionDefinition","parameters":{"id":3638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3635,"mutability":"mutable","name":"array","nameLocation":"19173:5:14","nodeType":"VariableDeclaration","scope":3642,"src":"19155:23:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3633,"name":"address","nodeType":"ElementaryTypeName","src":"19155:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3634,"nodeType":"ArrayTypeName","src":"19155:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3637,"mutability":"mutable","name":"len","nameLocation":"19188:3:14","nodeType":"VariableDeclaration","scope":3642,"src":"19180:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3636,"name":"uint256","nodeType":"ElementaryTypeName","src":"19180:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19154:38:14"},"returnParameters":{"id":3639,"nodeType":"ParameterList","parameters":[],"src":"19202:0:14"},"scope":3687,"src":"19130:160:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3652,"nodeType":"Block","src":"19606:88:14","statements":[{"AST":{"nodeType":"YulBlock","src":"19641:47:14","statements":[{"expression":{"arguments":[{"name":"array.slot","nodeType":"YulIdentifier","src":"19662:10:14"},{"name":"len","nodeType":"YulIdentifier","src":"19674:3:14"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"19655:6:14"},"nodeType":"YulFunctionCall","src":"19655:23:14"},"nodeType":"YulExpressionStatement","src":"19655:23:14"}]},"evmVersion":"paris","externalReferences":[{"declaration":3646,"isOffset":false,"isSlot":true,"src":"19662:10:14","suffix":"slot","valueSize":1},{"declaration":3648,"isOffset":false,"isSlot":false,"src":"19674:3:14","valueSize":1}],"flags":["memory-safe"],"id":3651,"nodeType":"InlineAssembly","src":"19616:72:14"}]},"documentation":{"id":3643,"nodeType":"StructuredDocumentation","src":"19296:233:14","text":" @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":3653,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"19543:15:14","nodeType":"FunctionDefinition","parameters":{"id":3649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3646,"mutability":"mutable","name":"array","nameLocation":"19577:5:14","nodeType":"VariableDeclaration","scope":3653,"src":"19559:23:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3644,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19559:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3645,"nodeType":"ArrayTypeName","src":"19559:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3648,"mutability":"mutable","name":"len","nameLocation":"19592:3:14","nodeType":"VariableDeclaration","scope":3653,"src":"19584:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3647,"name":"uint256","nodeType":"ElementaryTypeName","src":"19584:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19558:38:14"},"returnParameters":{"id":3650,"nodeType":"ParameterList","parameters":[],"src":"19606:0:14"},"scope":3687,"src":"19534:160:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3663,"nodeType":"Block","src":"20010:88:14","statements":[{"AST":{"nodeType":"YulBlock","src":"20045:47:14","statements":[{"expression":{"arguments":[{"name":"array.slot","nodeType":"YulIdentifier","src":"20066:10:14"},{"name":"len","nodeType":"YulIdentifier","src":"20078:3:14"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"20059:6:14"},"nodeType":"YulFunctionCall","src":"20059:23:14"},"nodeType":"YulExpressionStatement","src":"20059:23:14"}]},"evmVersion":"paris","externalReferences":[{"declaration":3657,"isOffset":false,"isSlot":true,"src":"20066:10:14","suffix":"slot","valueSize":1},{"declaration":3659,"isOffset":false,"isSlot":false,"src":"20078:3:14","valueSize":1}],"flags":["memory-safe"],"id":3662,"nodeType":"InlineAssembly","src":"20020:72:14"}]},"documentation":{"id":3654,"nodeType":"StructuredDocumentation","src":"19700:233:14","text":" @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":3664,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"19947:15:14","nodeType":"FunctionDefinition","parameters":{"id":3660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3657,"mutability":"mutable","name":"array","nameLocation":"19981:5:14","nodeType":"VariableDeclaration","scope":3664,"src":"19963:23:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3655,"name":"uint256","nodeType":"ElementaryTypeName","src":"19963:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3656,"nodeType":"ArrayTypeName","src":"19963:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3659,"mutability":"mutable","name":"len","nameLocation":"19996:3:14","nodeType":"VariableDeclaration","scope":3664,"src":"19988:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3658,"name":"uint256","nodeType":"ElementaryTypeName","src":"19988:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19962:38:14"},"returnParameters":{"id":3661,"nodeType":"ParameterList","parameters":[],"src":"20010:0:14"},"scope":3687,"src":"19938:160:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3674,"nodeType":"Block","src":"20412:88:14","statements":[{"AST":{"nodeType":"YulBlock","src":"20447:47:14","statements":[{"expression":{"arguments":[{"name":"array.slot","nodeType":"YulIdentifier","src":"20468:10:14"},{"name":"len","nodeType":"YulIdentifier","src":"20480:3:14"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"20461:6:14"},"nodeType":"YulFunctionCall","src":"20461:23:14"},"nodeType":"YulExpressionStatement","src":"20461:23:14"}]},"evmVersion":"paris","externalReferences":[{"declaration":3668,"isOffset":false,"isSlot":true,"src":"20468:10:14","suffix":"slot","valueSize":1},{"declaration":3670,"isOffset":false,"isSlot":false,"src":"20480:3:14","valueSize":1}],"flags":["memory-safe"],"id":3673,"nodeType":"InlineAssembly","src":"20422:72:14"}]},"documentation":{"id":3665,"nodeType":"StructuredDocumentation","src":"20104:233:14","text":" @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":3675,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"20351:15:14","nodeType":"FunctionDefinition","parameters":{"id":3671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3668,"mutability":"mutable","name":"array","nameLocation":"20383:5:14","nodeType":"VariableDeclaration","scope":3675,"src":"20367:21:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":3666,"name":"bytes","nodeType":"ElementaryTypeName","src":"20367:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":3667,"nodeType":"ArrayTypeName","src":"20367:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":3670,"mutability":"mutable","name":"len","nameLocation":"20398:3:14","nodeType":"VariableDeclaration","scope":3675,"src":"20390:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3669,"name":"uint256","nodeType":"ElementaryTypeName","src":"20390:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20366:36:14"},"returnParameters":{"id":3672,"nodeType":"ParameterList","parameters":[],"src":"20412:0:14"},"scope":3687,"src":"20342:158:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3685,"nodeType":"Block","src":"20815:88:14","statements":[{"AST":{"nodeType":"YulBlock","src":"20850:47:14","statements":[{"expression":{"arguments":[{"name":"array.slot","nodeType":"YulIdentifier","src":"20871:10:14"},{"name":"len","nodeType":"YulIdentifier","src":"20883:3:14"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"20864:6:14"},"nodeType":"YulFunctionCall","src":"20864:23:14"},"nodeType":"YulExpressionStatement","src":"20864:23:14"}]},"evmVersion":"paris","externalReferences":[{"declaration":3679,"isOffset":false,"isSlot":true,"src":"20871:10:14","suffix":"slot","valueSize":1},{"declaration":3681,"isOffset":false,"isSlot":false,"src":"20883:3:14","valueSize":1}],"flags":["memory-safe"],"id":3684,"nodeType":"InlineAssembly","src":"20825:72:14"}]},"documentation":{"id":3676,"nodeType":"StructuredDocumentation","src":"20506:233:14","text":" @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":3686,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"20753:15:14","nodeType":"FunctionDefinition","parameters":{"id":3682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3679,"mutability":"mutable","name":"array","nameLocation":"20786:5:14","nodeType":"VariableDeclaration","scope":3686,"src":"20769:22:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":3677,"name":"string","nodeType":"ElementaryTypeName","src":"20769:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":3678,"nodeType":"ArrayTypeName","src":"20769:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":3681,"mutability":"mutable","name":"len","nameLocation":"20801:3:14","nodeType":"VariableDeclaration","scope":3686,"src":"20793:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3680,"name":"uint256","nodeType":"ElementaryTypeName","src":"20793:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20768:37:14"},"returnParameters":{"id":3683,"nodeType":"ParameterList","parameters":[],"src":"20815:0:14"},"scope":3687,"src":"20744:159:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":3688,"src":"459:20446:14","usedErrors":[],"usedEvents":[]}],"src":"183:20723:14"},"id":14},"@openzeppelin/contracts/utils/Comparators.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Comparators.sol","exportedSymbols":{"Comparators":[3719]},"id":3720,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3689,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:15"},{"abstract":false,"baseContracts":[],"canonicalName":"Comparators","contractDependencies":[],"contractKind":"library","documentation":{"id":3690,"nodeType":"StructuredDocumentation","src":"131:92:15","text":" @dev Provides a set of functions to compare values.\n _Available since v5.1._"},"fullyImplemented":true,"id":3719,"linearizedBaseContracts":[3719],"name":"Comparators","nameLocation":"232:11:15","nodeType":"ContractDefinition","nodes":[{"body":{"id":3703,"nodeType":"Block","src":"313:29:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3699,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3692,"src":"330:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3700,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3694,"src":"334:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"330:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3698,"id":3702,"nodeType":"Return","src":"323:12:15"}]},"id":3704,"implemented":true,"kind":"function","modifiers":[],"name":"lt","nameLocation":"259:2:15","nodeType":"FunctionDefinition","parameters":{"id":3695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3692,"mutability":"mutable","name":"a","nameLocation":"270:1:15","nodeType":"VariableDeclaration","scope":3704,"src":"262:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3691,"name":"uint256","nodeType":"ElementaryTypeName","src":"262:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3694,"mutability":"mutable","name":"b","nameLocation":"281:1:15","nodeType":"VariableDeclaration","scope":3704,"src":"273:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3693,"name":"uint256","nodeType":"ElementaryTypeName","src":"273:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"261:22:15"},"returnParameters":{"id":3698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3697,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3704,"src":"307:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3696,"name":"bool","nodeType":"ElementaryTypeName","src":"307:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"306:6:15"},"scope":3719,"src":"250:92:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3717,"nodeType":"Block","src":"411:29:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3713,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3706,"src":"428:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3714,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3708,"src":"432:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"428:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3712,"id":3716,"nodeType":"Return","src":"421:12:15"}]},"id":3718,"implemented":true,"kind":"function","modifiers":[],"name":"gt","nameLocation":"357:2:15","nodeType":"FunctionDefinition","parameters":{"id":3709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3706,"mutability":"mutable","name":"a","nameLocation":"368:1:15","nodeType":"VariableDeclaration","scope":3718,"src":"360:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3705,"name":"uint256","nodeType":"ElementaryTypeName","src":"360:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3708,"mutability":"mutable","name":"b","nameLocation":"379:1:15","nodeType":"VariableDeclaration","scope":3718,"src":"371:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3707,"name":"uint256","nodeType":"ElementaryTypeName","src":"371:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"359:22:15"},"returnParameters":{"id":3712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3711,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3718,"src":"405:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3710,"name":"bool","nodeType":"ElementaryTypeName","src":"405:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"404:6:15"},"scope":3719,"src":"348:92:15","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3720,"src":"224:218:15","usedErrors":[],"usedEvents":[]}],"src":"105:338:15"},"id":15},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[3749]},"id":3750,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3721,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:16"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":3722,"nodeType":"StructuredDocumentation","src":"127:496:16","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":3749,"linearizedBaseContracts":[3749],"name":"Context","nameLocation":"642:7:16","nodeType":"ContractDefinition","nodes":[{"body":{"id":3730,"nodeType":"Block","src":"718:34:16","statements":[{"expression":{"expression":{"id":3727,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:16","memberName":"sender","nodeType":"MemberAccess","src":"735:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3726,"id":3729,"nodeType":"Return","src":"728:17:16"}]},"id":3731,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:16","nodeType":"FunctionDefinition","parameters":{"id":3723,"nodeType":"ParameterList","parameters":[],"src":"675:2:16"},"returnParameters":{"id":3726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3725,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3731,"src":"709:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3724,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:16"},"scope":3749,"src":"656:96:16","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3739,"nodeType":"Block","src":"825:32:16","statements":[{"expression":{"expression":{"id":3736,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:16","memberName":"data","nodeType":"MemberAccess","src":"842:8:16","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":3735,"id":3738,"nodeType":"Return","src":"835:15:16"}]},"id":3740,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:16","nodeType":"FunctionDefinition","parameters":{"id":3732,"nodeType":"ParameterList","parameters":[],"src":"775:2:16"},"returnParameters":{"id":3735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3734,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3740,"src":"809:14:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3733,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:16"},"scope":3749,"src":"758:99:16","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3747,"nodeType":"Block","src":"935:25:16","statements":[{"expression":{"hexValue":"30","id":3745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3744,"id":3746,"nodeType":"Return","src":"945:8:16"}]},"id":3748,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:16","nodeType":"FunctionDefinition","parameters":{"id":3741,"nodeType":"ParameterList","parameters":[],"src":"892:2:16"},"returnParameters":{"id":3744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3743,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3748,"src":"926:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3742,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:16"},"scope":3749,"src":"863:97:16","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":3750,"src":"624:338:16","usedErrors":[],"usedEvents":[]}],"src":"101:862:16"},"id":16},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[3801]},"id":3802,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3751,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:17"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":3752,"nodeType":"StructuredDocumentation","src":"125:489:17","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":3801,"linearizedBaseContracts":[3801],"name":"Panic","nameLocation":"665:5:17","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":3753,"nodeType":"StructuredDocumentation","src":"677:36:17","text":"@dev generic / unspecified error"},"id":3756,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:17","nodeType":"VariableDeclaration","scope":3801,"src":"718:40:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3754,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":3755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":3757,"nodeType":"StructuredDocumentation","src":"764:37:17","text":"@dev used by the assert() builtin"},"id":3760,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:17","nodeType":"VariableDeclaration","scope":3801,"src":"806:39:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3758,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":3759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":3761,"nodeType":"StructuredDocumentation","src":"851:41:17","text":"@dev arithmetic underflow or overflow"},"id":3764,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:17","nodeType":"VariableDeclaration","scope":3801,"src":"897:47:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3762,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":3763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:17","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":3765,"nodeType":"StructuredDocumentation","src":"950:35:17","text":"@dev division or modulo by zero"},"id":3768,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:17","nodeType":"VariableDeclaration","scope":3801,"src":"990:49:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3766,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":3767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:17","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":3769,"nodeType":"StructuredDocumentation","src":"1045:30:17","text":"@dev enum conversion error"},"id":3772,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:17","nodeType":"VariableDeclaration","scope":3801,"src":"1080:54:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3770,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":3771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:17","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":3773,"nodeType":"StructuredDocumentation","src":"1140:36:17","text":"@dev invalid encoding in storage"},"id":3776,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:17","nodeType":"VariableDeclaration","scope":3801,"src":"1181:55:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3774,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":3775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:17","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":3777,"nodeType":"StructuredDocumentation","src":"1242:24:17","text":"@dev empty array pop"},"id":3780,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:17","nodeType":"VariableDeclaration","scope":3801,"src":"1271:48:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3778,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":3779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:17","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":3781,"nodeType":"StructuredDocumentation","src":"1325:35:17","text":"@dev array out of bounds access"},"id":3784,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:17","nodeType":"VariableDeclaration","scope":3801,"src":"1365:52:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3782,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":3783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:17","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":3785,"nodeType":"StructuredDocumentation","src":"1423:65:17","text":"@dev resource error (too large allocation or too large array)"},"id":3788,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:17","nodeType":"VariableDeclaration","scope":3801,"src":"1493:47:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3786,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":3787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:17","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":3789,"nodeType":"StructuredDocumentation","src":"1546:42:17","text":"@dev calling invalid internal function"},"id":3792,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:17","nodeType":"VariableDeclaration","scope":3801,"src":"1593:58:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3790,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":3791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:17","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":3799,"nodeType":"Block","src":"1819:151:17","statements":[{"AST":{"nodeType":"YulBlock","src":"1854:110:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1875:4:17","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1881:10:17","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1868:6:17"},"nodeType":"YulFunctionCall","src":"1868:24:17"},"nodeType":"YulExpressionStatement","src":"1868:24:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1912:4:17","type":"","value":"0x20"},{"name":"code","nodeType":"YulIdentifier","src":"1918:4:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1905:6:17"},"nodeType":"YulFunctionCall","src":"1905:18:17"},"nodeType":"YulExpressionStatement","src":"1905:18:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1943:4:17","type":"","value":"0x1c"},{"kind":"number","nodeType":"YulLiteral","src":"1949:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1936:6:17"},"nodeType":"YulFunctionCall","src":"1936:18:17"},"nodeType":"YulExpressionStatement","src":"1936:18:17"}]},"evmVersion":"paris","externalReferences":[{"declaration":3795,"isOffset":false,"isSlot":false,"src":"1918:4:17","valueSize":1}],"flags":["memory-safe"],"id":3798,"nodeType":"InlineAssembly","src":"1829:135:17"}]},"documentation":{"id":3793,"nodeType":"StructuredDocumentation","src":"1658:113:17","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":3800,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:17","nodeType":"FunctionDefinition","parameters":{"id":3796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3795,"mutability":"mutable","name":"code","nameLocation":"1799:4:17","nodeType":"VariableDeclaration","scope":3800,"src":"1791:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3794,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:17"},"returnParameters":{"id":3797,"nodeType":"ParameterList","parameters":[],"src":"1819:0:17"},"scope":3801,"src":"1776:194:17","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3802,"src":"657:1315:17","usedErrors":[],"usedEvents":[]}],"src":"99:1874:17"},"id":17},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[3870]},"id":3871,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3803,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:18"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":3804,"nodeType":"StructuredDocumentation","src":"135:894:18","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":3870,"linearizedBaseContracts":[3870],"name":"ReentrancyGuard","nameLocation":"1048:15:18","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":3807,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1843:11:18","nodeType":"VariableDeclaration","scope":3870,"src":"1818:40:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3805,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":3806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1857:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":3810,"mutability":"constant","name":"ENTERED","nameLocation":"1889:7:18","nodeType":"VariableDeclaration","scope":3870,"src":"1864:36:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3808,"name":"uint256","nodeType":"ElementaryTypeName","src":"1864:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":3809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1899:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":3812,"mutability":"mutable","name":"_status","nameLocation":"1923:7:18","nodeType":"VariableDeclaration","scope":3870,"src":"1907:23:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3811,"name":"uint256","nodeType":"ElementaryTypeName","src":"1907:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"documentation":{"id":3813,"nodeType":"StructuredDocumentation","src":"1937:52:18","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":3815,"name":"ReentrancyGuardReentrantCall","nameLocation":"2000:28:18","nodeType":"ErrorDefinition","parameters":{"id":3814,"nodeType":"ParameterList","parameters":[],"src":"2028:2:18"},"src":"1994:37:18"},{"body":{"id":3822,"nodeType":"Block","src":"2051:38:18","statements":[{"expression":{"id":3820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3818,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3812,"src":"2061:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3819,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3807,"src":"2071:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2061:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3821,"nodeType":"ExpressionStatement","src":"2061:21:18"}]},"id":3823,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3816,"nodeType":"ParameterList","parameters":[],"src":"2048:2:18"},"returnParameters":{"id":3817,"nodeType":"ParameterList","parameters":[],"src":"2051:0:18"},"scope":3870,"src":"2037:52:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3833,"nodeType":"Block","src":"2490:79:18","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3826,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3850,"src":"2500:19:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2500:21:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3828,"nodeType":"ExpressionStatement","src":"2500:21:18"},{"id":3829,"nodeType":"PlaceholderStatement","src":"2531:1:18"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3830,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3858,"src":"2542:18:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2542:20:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3832,"nodeType":"ExpressionStatement","src":"2542:20:18"}]},"documentation":{"id":3824,"nodeType":"StructuredDocumentation","src":"2095:366:18","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":3834,"name":"nonReentrant","nameLocation":"2475:12:18","nodeType":"ModifierDefinition","parameters":{"id":3825,"nodeType":"ParameterList","parameters":[],"src":"2487:2:18"},"src":"2466:103:18","virtual":false,"visibility":"internal"},{"body":{"id":3849,"nodeType":"Block","src":"2614:268:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3837,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3812,"src":"2702:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3838,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3810,"src":"2713:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2702:18:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3844,"nodeType":"IfStatement","src":"2698:86:18","trueBody":{"id":3843,"nodeType":"Block","src":"2722:62:18","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3840,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3815,"src":"2743:28:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2743:30:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3842,"nodeType":"RevertStatement","src":"2736:37:18"}]}},{"expression":{"id":3847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3845,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3812,"src":"2858:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3846,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3810,"src":"2868:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2858:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3848,"nodeType":"ExpressionStatement","src":"2858:17:18"}]},"id":3850,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2584:19:18","nodeType":"FunctionDefinition","parameters":{"id":3835,"nodeType":"ParameterList","parameters":[],"src":"2603:2:18"},"returnParameters":{"id":3836,"nodeType":"ParameterList","parameters":[],"src":"2614:0:18"},"scope":3870,"src":"2575:307:18","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":3857,"nodeType":"Block","src":"2926:170:18","statements":[{"expression":{"id":3855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3853,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3812,"src":"3068:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3854,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3807,"src":"3078:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3068:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3856,"nodeType":"ExpressionStatement","src":"3068:21:18"}]},"id":3858,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2897:18:18","nodeType":"FunctionDefinition","parameters":{"id":3851,"nodeType":"ParameterList","parameters":[],"src":"2915:2:18"},"returnParameters":{"id":3852,"nodeType":"ParameterList","parameters":[],"src":"2926:0:18"},"scope":3870,"src":"2888:208:18","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":3868,"nodeType":"Block","src":"3339:42:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3864,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3812,"src":"3356:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3865,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3810,"src":"3367:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3356:18:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3863,"id":3867,"nodeType":"Return","src":"3349:25:18"}]},"documentation":{"id":3859,"nodeType":"StructuredDocumentation","src":"3102:168:18","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":3869,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3284:23:18","nodeType":"FunctionDefinition","parameters":{"id":3860,"nodeType":"ParameterList","parameters":[],"src":"3307:2:18"},"returnParameters":{"id":3863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3862,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3869,"src":"3333:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3861,"name":"bool","nodeType":"ElementaryTypeName","src":"3333:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3332:6:18"},"scope":3870,"src":"3275:106:18","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":3871,"src":"1030:2353:18","usedErrors":[3815],"usedEvents":[]}],"src":"109:3275:18"},"id":18},"@openzeppelin/contracts/utils/SlotDerivation.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/SlotDerivation.sol","exportedSymbols":{"SlotDerivation":[4000]},"id":4001,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3872,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"199:24:19"},{"abstract":false,"baseContracts":[],"canonicalName":"SlotDerivation","contractDependencies":[],"contractKind":"library","documentation":{"id":3873,"nodeType":"StructuredDocumentation","src":"225:1373:19","text":" @dev Library for computing storage (and transient storage) locations from namespaces and deriving slots\n corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by\n the solidity language / compiler.\n See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.].\n Example usage:\n ```solidity\n contract Example {\n     // Add the library methods\n     using StorageSlot for bytes32;\n     using SlotDerivation for bytes32;\n     // Declare a namespace\n     string private constant _NAMESPACE = \"<namespace>\"; // eg. OpenZeppelin.Slot\n     function setValueInNamespace(uint256 key, address newValue) internal {\n         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;\n     }\n     function getValueInNamespace(uint256 key) internal view returns (address) {\n         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;\n     }\n }\n ```\n TIP: Consider using this library along with {StorageSlot}.\n NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking\n upgrade safety will ignore the slots accessed through this library.\n _Available since v5.1._"},"fullyImplemented":true,"id":4000,"linearizedBaseContracts":[4000],"name":"SlotDerivation","nameLocation":"1607:14:19","nodeType":"ContractDefinition","nodes":[{"body":{"id":3882,"nodeType":"Block","src":"1790:194:19","statements":[{"AST":{"nodeType":"YulBlock","src":"1825:153:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1846:4:19","type":"","value":"0x00"},{"arguments":[{"arguments":[{"arguments":[{"name":"namespace","nodeType":"YulIdentifier","src":"1870:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"1881:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1866:3:19"},"nodeType":"YulFunctionCall","src":"1866:20:19"},{"arguments":[{"name":"namespace","nodeType":"YulIdentifier","src":"1894:9:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1888:5:19"},"nodeType":"YulFunctionCall","src":"1888:16:19"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1856:9:19"},"nodeType":"YulFunctionCall","src":"1856:49:19"},{"kind":"number","nodeType":"YulLiteral","src":"1907:1:19","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1852:3:19"},"nodeType":"YulFunctionCall","src":"1852:57:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1839:6:19"},"nodeType":"YulFunctionCall","src":"1839:71:19"},"nodeType":"YulExpressionStatement","src":"1839:71:19"},{"nodeType":"YulAssignment","src":"1923:45:19","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1945:4:19","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1951:4:19","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1935:9:19"},"nodeType":"YulFunctionCall","src":"1935:21:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1962:4:19","type":"","value":"0xff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1958:3:19"},"nodeType":"YulFunctionCall","src":"1958:9:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1931:3:19"},"nodeType":"YulFunctionCall","src":"1931:37:19"},"variableNames":[{"name":"slot","nodeType":"YulIdentifier","src":"1923:4:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3876,"isOffset":false,"isSlot":false,"src":"1870:9:19","valueSize":1},{"declaration":3876,"isOffset":false,"isSlot":false,"src":"1894:9:19","valueSize":1},{"declaration":3879,"isOffset":false,"isSlot":false,"src":"1923:4:19","valueSize":1}],"flags":["memory-safe"],"id":3881,"nodeType":"InlineAssembly","src":"1800:178:19"}]},"documentation":{"id":3874,"nodeType":"StructuredDocumentation","src":"1628:74:19","text":" @dev Derive an ERC-7201 slot from a string (namespace)."},"id":3883,"implemented":true,"kind":"function","modifiers":[],"name":"erc7201Slot","nameLocation":"1716:11:19","nodeType":"FunctionDefinition","parameters":{"id":3877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3876,"mutability":"mutable","name":"namespace","nameLocation":"1742:9:19","nodeType":"VariableDeclaration","scope":3883,"src":"1728:23:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3875,"name":"string","nodeType":"ElementaryTypeName","src":"1728:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1727:25:19"},"returnParameters":{"id":3880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3879,"mutability":"mutable","name":"slot","nameLocation":"1784:4:19","nodeType":"VariableDeclaration","scope":3883,"src":"1776:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3878,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1776:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1775:14:19"},"scope":4000,"src":"1707:277:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3904,"nodeType":"Block","src":"2176:86:19","statements":[{"id":3903,"nodeType":"UncheckedBlock","src":"2186:70:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3897,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3886,"src":"2233:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3896,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2225:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3895,"name":"uint256","nodeType":"ElementaryTypeName","src":"2225:7:19","typeDescriptions":{}}},"id":3898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2225:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3899,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3888,"src":"2241:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2225:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3894,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2217:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3893,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2217:7:19","typeDescriptions":{}}},"id":3901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2217:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3892,"id":3902,"nodeType":"Return","src":"2210:35:19"}]}]},"documentation":{"id":3884,"nodeType":"StructuredDocumentation","src":"1990:99:19","text":" @dev Add an offset to a slot to get the n-th element of a structure or an array."},"id":3905,"implemented":true,"kind":"function","modifiers":[],"name":"offset","nameLocation":"2103:6:19","nodeType":"FunctionDefinition","parameters":{"id":3889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3886,"mutability":"mutable","name":"slot","nameLocation":"2118:4:19","nodeType":"VariableDeclaration","scope":3905,"src":"2110:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3885,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2110:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3888,"mutability":"mutable","name":"pos","nameLocation":"2132:3:19","nodeType":"VariableDeclaration","scope":3905,"src":"2124:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3887,"name":"uint256","nodeType":"ElementaryTypeName","src":"2124:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2109:27:19"},"returnParameters":{"id":3892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3891,"mutability":"mutable","name":"result","nameLocation":"2168:6:19","nodeType":"VariableDeclaration","scope":3905,"src":"2160:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3890,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2160:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2159:16:19"},"scope":4000,"src":"2094:168:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3914,"nodeType":"Block","src":"2465:127:19","statements":[{"AST":{"nodeType":"YulBlock","src":"2500:86:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2521:4:19","type":"","value":"0x00"},{"name":"slot","nodeType":"YulIdentifier","src":"2527:4:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2514:6:19"},"nodeType":"YulFunctionCall","src":"2514:18:19"},"nodeType":"YulExpressionStatement","src":"2514:18:19"},{"nodeType":"YulAssignment","src":"2545:31:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2565:4:19","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"2571:4:19","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2555:9:19"},"nodeType":"YulFunctionCall","src":"2555:21:19"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2545:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3911,"isOffset":false,"isSlot":false,"src":"2545:6:19","valueSize":1},{"declaration":3908,"isOffset":false,"isSlot":false,"src":"2527:4:19","valueSize":1}],"flags":["memory-safe"],"id":3913,"nodeType":"InlineAssembly","src":"2475:111:19"}]},"documentation":{"id":3906,"nodeType":"StructuredDocumentation","src":"2268:118:19","text":" @dev Derive the location of the first element in an array from the slot where the length is stored."},"id":3915,"implemented":true,"kind":"function","modifiers":[],"name":"deriveArray","nameLocation":"2400:11:19","nodeType":"FunctionDefinition","parameters":{"id":3909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3908,"mutability":"mutable","name":"slot","nameLocation":"2420:4:19","nodeType":"VariableDeclaration","scope":3915,"src":"2412:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3907,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2412:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2411:14:19"},"returnParameters":{"id":3912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3911,"mutability":"mutable","name":"result","nameLocation":"2457:6:19","nodeType":"VariableDeclaration","scope":3915,"src":"2449:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3910,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2449:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2448:16:19"},"scope":4000,"src":"2391:201:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3926,"nodeType":"Block","src":"2770:179:19","statements":[{"AST":{"nodeType":"YulBlock","src":"2805:138:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2826:4:19","type":"","value":"0x00"},{"arguments":[{"name":"key","nodeType":"YulIdentifier","src":"2836:3:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2845:2:19","type":"","value":"96"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2853:1:19","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2849:3:19"},"nodeType":"YulFunctionCall","src":"2849:6:19"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2841:3:19"},"nodeType":"YulFunctionCall","src":"2841:15:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2832:3:19"},"nodeType":"YulFunctionCall","src":"2832:25:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2819:6:19"},"nodeType":"YulFunctionCall","src":"2819:39:19"},"nodeType":"YulExpressionStatement","src":"2819:39:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2878:4:19","type":"","value":"0x20"},{"name":"slot","nodeType":"YulIdentifier","src":"2884:4:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2871:6:19"},"nodeType":"YulFunctionCall","src":"2871:18:19"},"nodeType":"YulExpressionStatement","src":"2871:18:19"},{"nodeType":"YulAssignment","src":"2902:31:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2922:4:19","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"2928:4:19","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2912:9:19"},"nodeType":"YulFunctionCall","src":"2912:21:19"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2902:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3920,"isOffset":false,"isSlot":false,"src":"2836:3:19","valueSize":1},{"declaration":3923,"isOffset":false,"isSlot":false,"src":"2902:6:19","valueSize":1},{"declaration":3918,"isOffset":false,"isSlot":false,"src":"2884:4:19","valueSize":1}],"flags":["memory-safe"],"id":3925,"nodeType":"InlineAssembly","src":"2780:163:19"}]},"documentation":{"id":3916,"nodeType":"StructuredDocumentation","src":"2598:78:19","text":" @dev Derive the location of a mapping element from the key."},"id":3927,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"2690:13:19","nodeType":"FunctionDefinition","parameters":{"id":3921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3918,"mutability":"mutable","name":"slot","nameLocation":"2712:4:19","nodeType":"VariableDeclaration","scope":3927,"src":"2704:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3917,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2704:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3920,"mutability":"mutable","name":"key","nameLocation":"2726:3:19","nodeType":"VariableDeclaration","scope":3927,"src":"2718:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3919,"name":"address","nodeType":"ElementaryTypeName","src":"2718:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2703:27:19"},"returnParameters":{"id":3924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3923,"mutability":"mutable","name":"result","nameLocation":"2762:6:19","nodeType":"VariableDeclaration","scope":3927,"src":"2754:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3922,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2754:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2753:16:19"},"scope":4000,"src":"2681:268:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3938,"nodeType":"Block","src":"3124:173:19","statements":[{"AST":{"nodeType":"YulBlock","src":"3159:132:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3180:4:19","type":"","value":"0x00"},{"arguments":[{"arguments":[{"name":"key","nodeType":"YulIdentifier","src":"3200:3:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3193:6:19"},"nodeType":"YulFunctionCall","src":"3193:11:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3186:6:19"},"nodeType":"YulFunctionCall","src":"3186:19:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3173:6:19"},"nodeType":"YulFunctionCall","src":"3173:33:19"},"nodeType":"YulExpressionStatement","src":"3173:33:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3226:4:19","type":"","value":"0x20"},{"name":"slot","nodeType":"YulIdentifier","src":"3232:4:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3219:6:19"},"nodeType":"YulFunctionCall","src":"3219:18:19"},"nodeType":"YulExpressionStatement","src":"3219:18:19"},{"nodeType":"YulAssignment","src":"3250:31:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3270:4:19","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"3276:4:19","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3260:9:19"},"nodeType":"YulFunctionCall","src":"3260:21:19"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3250:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3932,"isOffset":false,"isSlot":false,"src":"3200:3:19","valueSize":1},{"declaration":3935,"isOffset":false,"isSlot":false,"src":"3250:6:19","valueSize":1},{"declaration":3930,"isOffset":false,"isSlot":false,"src":"3232:4:19","valueSize":1}],"flags":["memory-safe"],"id":3937,"nodeType":"InlineAssembly","src":"3134:157:19"}]},"documentation":{"id":3928,"nodeType":"StructuredDocumentation","src":"2955:78:19","text":" @dev Derive the location of a mapping element from the key."},"id":3939,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"3047:13:19","nodeType":"FunctionDefinition","parameters":{"id":3933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3930,"mutability":"mutable","name":"slot","nameLocation":"3069:4:19","nodeType":"VariableDeclaration","scope":3939,"src":"3061:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3929,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3061:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3932,"mutability":"mutable","name":"key","nameLocation":"3080:3:19","nodeType":"VariableDeclaration","scope":3939,"src":"3075:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3931,"name":"bool","nodeType":"ElementaryTypeName","src":"3075:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3060:24:19"},"returnParameters":{"id":3936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3935,"mutability":"mutable","name":"result","nameLocation":"3116:6:19","nodeType":"VariableDeclaration","scope":3939,"src":"3108:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3934,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3108:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3107:16:19"},"scope":4000,"src":"3038:259:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3950,"nodeType":"Block","src":"3475:157:19","statements":[{"AST":{"nodeType":"YulBlock","src":"3510:116:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3531:4:19","type":"","value":"0x00"},{"name":"key","nodeType":"YulIdentifier","src":"3537:3:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3524:6:19"},"nodeType":"YulFunctionCall","src":"3524:17:19"},"nodeType":"YulExpressionStatement","src":"3524:17:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3561:4:19","type":"","value":"0x20"},{"name":"slot","nodeType":"YulIdentifier","src":"3567:4:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3554:6:19"},"nodeType":"YulFunctionCall","src":"3554:18:19"},"nodeType":"YulExpressionStatement","src":"3554:18:19"},{"nodeType":"YulAssignment","src":"3585:31:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3605:4:19","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"3611:4:19","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3595:9:19"},"nodeType":"YulFunctionCall","src":"3595:21:19"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3585:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3944,"isOffset":false,"isSlot":false,"src":"3537:3:19","valueSize":1},{"declaration":3947,"isOffset":false,"isSlot":false,"src":"3585:6:19","valueSize":1},{"declaration":3942,"isOffset":false,"isSlot":false,"src":"3567:4:19","valueSize":1}],"flags":["memory-safe"],"id":3949,"nodeType":"InlineAssembly","src":"3485:141:19"}]},"documentation":{"id":3940,"nodeType":"StructuredDocumentation","src":"3303:78:19","text":" @dev Derive the location of a mapping element from the key."},"id":3951,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"3395:13:19","nodeType":"FunctionDefinition","parameters":{"id":3945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3942,"mutability":"mutable","name":"slot","nameLocation":"3417:4:19","nodeType":"VariableDeclaration","scope":3951,"src":"3409:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3941,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3409:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3944,"mutability":"mutable","name":"key","nameLocation":"3431:3:19","nodeType":"VariableDeclaration","scope":3951,"src":"3423:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3943,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3423:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3408:27:19"},"returnParameters":{"id":3948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3947,"mutability":"mutable","name":"result","nameLocation":"3467:6:19","nodeType":"VariableDeclaration","scope":3951,"src":"3459:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3946,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3459:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3458:16:19"},"scope":4000,"src":"3386:246:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3962,"nodeType":"Block","src":"3810:157:19","statements":[{"AST":{"nodeType":"YulBlock","src":"3845:116:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3866:4:19","type":"","value":"0x00"},{"name":"key","nodeType":"YulIdentifier","src":"3872:3:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3859:6:19"},"nodeType":"YulFunctionCall","src":"3859:17:19"},"nodeType":"YulExpressionStatement","src":"3859:17:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3896:4:19","type":"","value":"0x20"},{"name":"slot","nodeType":"YulIdentifier","src":"3902:4:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3889:6:19"},"nodeType":"YulFunctionCall","src":"3889:18:19"},"nodeType":"YulExpressionStatement","src":"3889:18:19"},{"nodeType":"YulAssignment","src":"3920:31:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3940:4:19","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"3946:4:19","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3930:9:19"},"nodeType":"YulFunctionCall","src":"3930:21:19"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3920:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3956,"isOffset":false,"isSlot":false,"src":"3872:3:19","valueSize":1},{"declaration":3959,"isOffset":false,"isSlot":false,"src":"3920:6:19","valueSize":1},{"declaration":3954,"isOffset":false,"isSlot":false,"src":"3902:4:19","valueSize":1}],"flags":["memory-safe"],"id":3961,"nodeType":"InlineAssembly","src":"3820:141:19"}]},"documentation":{"id":3952,"nodeType":"StructuredDocumentation","src":"3638:78:19","text":" @dev Derive the location of a mapping element from the key."},"id":3963,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"3730:13:19","nodeType":"FunctionDefinition","parameters":{"id":3957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3954,"mutability":"mutable","name":"slot","nameLocation":"3752:4:19","nodeType":"VariableDeclaration","scope":3963,"src":"3744:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3953,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3744:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3956,"mutability":"mutable","name":"key","nameLocation":"3766:3:19","nodeType":"VariableDeclaration","scope":3963,"src":"3758:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3955,"name":"uint256","nodeType":"ElementaryTypeName","src":"3758:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3743:27:19"},"returnParameters":{"id":3960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3959,"mutability":"mutable","name":"result","nameLocation":"3802:6:19","nodeType":"VariableDeclaration","scope":3963,"src":"3794:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3958,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3794:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3793:16:19"},"scope":4000,"src":"3721:246:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3974,"nodeType":"Block","src":"4144:157:19","statements":[{"AST":{"nodeType":"YulBlock","src":"4179:116:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4200:4:19","type":"","value":"0x00"},{"name":"key","nodeType":"YulIdentifier","src":"4206:3:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4193:6:19"},"nodeType":"YulFunctionCall","src":"4193:17:19"},"nodeType":"YulExpressionStatement","src":"4193:17:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4230:4:19","type":"","value":"0x20"},{"name":"slot","nodeType":"YulIdentifier","src":"4236:4:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4223:6:19"},"nodeType":"YulFunctionCall","src":"4223:18:19"},"nodeType":"YulExpressionStatement","src":"4223:18:19"},{"nodeType":"YulAssignment","src":"4254:31:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4274:4:19","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"4280:4:19","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"4264:9:19"},"nodeType":"YulFunctionCall","src":"4264:21:19"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4254:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3968,"isOffset":false,"isSlot":false,"src":"4206:3:19","valueSize":1},{"declaration":3971,"isOffset":false,"isSlot":false,"src":"4254:6:19","valueSize":1},{"declaration":3966,"isOffset":false,"isSlot":false,"src":"4236:4:19","valueSize":1}],"flags":["memory-safe"],"id":3973,"nodeType":"InlineAssembly","src":"4154:141:19"}]},"documentation":{"id":3964,"nodeType":"StructuredDocumentation","src":"3973:78:19","text":" @dev Derive the location of a mapping element from the key."},"id":3975,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"4065:13:19","nodeType":"FunctionDefinition","parameters":{"id":3969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3966,"mutability":"mutable","name":"slot","nameLocation":"4087:4:19","nodeType":"VariableDeclaration","scope":3975,"src":"4079:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3965,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4079:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3968,"mutability":"mutable","name":"key","nameLocation":"4100:3:19","nodeType":"VariableDeclaration","scope":3975,"src":"4093:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3967,"name":"int256","nodeType":"ElementaryTypeName","src":"4093:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"4078:26:19"},"returnParameters":{"id":3972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3971,"mutability":"mutable","name":"result","nameLocation":"4136:6:19","nodeType":"VariableDeclaration","scope":3975,"src":"4128:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3970,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4128:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4127:16:19"},"scope":4000,"src":"4056:245:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3986,"nodeType":"Block","src":"4485:326:19","statements":[{"AST":{"nodeType":"YulBlock","src":"4520:285:19","statements":[{"nodeType":"YulVariableDeclaration","src":"4534:24:19","value":{"arguments":[{"name":"key","nodeType":"YulIdentifier","src":"4554:3:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4548:5:19"},"nodeType":"YulFunctionCall","src":"4548:10:19"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4538:6:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4571:27:19","value":{"arguments":[{"name":"key","nodeType":"YulIdentifier","src":"4588:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"4593:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4584:3:19"},"nodeType":"YulFunctionCall","src":"4584:14:19"},"variables":[{"name":"begin","nodeType":"YulTypedName","src":"4575:5:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4611:29:19","value":{"arguments":[{"name":"begin","nodeType":"YulIdentifier","src":"4626:5:19"},{"name":"length","nodeType":"YulIdentifier","src":"4633:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4622:3:19"},"nodeType":"YulFunctionCall","src":"4622:18:19"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"4615:3:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4653:23:19","value":{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"4672:3:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4666:5:19"},"nodeType":"YulFunctionCall","src":"4666:10:19"},"variables":[{"name":"cache","nodeType":"YulTypedName","src":"4657:5:19","type":""}]},{"expression":{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"4696:3:19"},{"name":"slot","nodeType":"YulIdentifier","src":"4701:4:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4689:6:19"},"nodeType":"YulFunctionCall","src":"4689:17:19"},"nodeType":"YulExpressionStatement","src":"4689:17:19"},{"nodeType":"YulAssignment","src":"4719:45:19","value":{"arguments":[{"name":"begin","nodeType":"YulIdentifier","src":"4739:5:19"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4750:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"4758:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4746:3:19"},"nodeType":"YulFunctionCall","src":"4746:17:19"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"4729:9:19"},"nodeType":"YulFunctionCall","src":"4729:35:19"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4719:6:19"}]},{"expression":{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"4784:3:19"},{"name":"cache","nodeType":"YulIdentifier","src":"4789:5:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4777:6:19"},"nodeType":"YulFunctionCall","src":"4777:18:19"},"nodeType":"YulExpressionStatement","src":"4777:18:19"}]},"evmVersion":"paris","externalReferences":[{"declaration":3980,"isOffset":false,"isSlot":false,"src":"4554:3:19","valueSize":1},{"declaration":3980,"isOffset":false,"isSlot":false,"src":"4588:3:19","valueSize":1},{"declaration":3983,"isOffset":false,"isSlot":false,"src":"4719:6:19","valueSize":1},{"declaration":3978,"isOffset":false,"isSlot":false,"src":"4701:4:19","valueSize":1}],"flags":["memory-safe"],"id":3985,"nodeType":"InlineAssembly","src":"4495:310:19"}]},"documentation":{"id":3976,"nodeType":"StructuredDocumentation","src":"4307:78:19","text":" @dev Derive the location of a mapping element from the key."},"id":3987,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"4399:13:19","nodeType":"FunctionDefinition","parameters":{"id":3981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3978,"mutability":"mutable","name":"slot","nameLocation":"4421:4:19","nodeType":"VariableDeclaration","scope":3987,"src":"4413:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3977,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4413:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3980,"mutability":"mutable","name":"key","nameLocation":"4441:3:19","nodeType":"VariableDeclaration","scope":3987,"src":"4427:17:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3979,"name":"string","nodeType":"ElementaryTypeName","src":"4427:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4412:33:19"},"returnParameters":{"id":3984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3983,"mutability":"mutable","name":"result","nameLocation":"4477:6:19","nodeType":"VariableDeclaration","scope":3987,"src":"4469:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3982,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4469:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4468:16:19"},"scope":4000,"src":"4390:421:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3998,"nodeType":"Block","src":"4994:326:19","statements":[{"AST":{"nodeType":"YulBlock","src":"5029:285:19","statements":[{"nodeType":"YulVariableDeclaration","src":"5043:24:19","value":{"arguments":[{"name":"key","nodeType":"YulIdentifier","src":"5063:3:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5057:5:19"},"nodeType":"YulFunctionCall","src":"5057:10:19"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5047:6:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5080:27:19","value":{"arguments":[{"name":"key","nodeType":"YulIdentifier","src":"5097:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"5102:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5093:3:19"},"nodeType":"YulFunctionCall","src":"5093:14:19"},"variables":[{"name":"begin","nodeType":"YulTypedName","src":"5084:5:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5120:29:19","value":{"arguments":[{"name":"begin","nodeType":"YulIdentifier","src":"5135:5:19"},{"name":"length","nodeType":"YulIdentifier","src":"5142:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5131:3:19"},"nodeType":"YulFunctionCall","src":"5131:18:19"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"5124:3:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5162:23:19","value":{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"5181:3:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5175:5:19"},"nodeType":"YulFunctionCall","src":"5175:10:19"},"variables":[{"name":"cache","nodeType":"YulTypedName","src":"5166:5:19","type":""}]},{"expression":{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"5205:3:19"},{"name":"slot","nodeType":"YulIdentifier","src":"5210:4:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5198:6:19"},"nodeType":"YulFunctionCall","src":"5198:17:19"},"nodeType":"YulExpressionStatement","src":"5198:17:19"},{"nodeType":"YulAssignment","src":"5228:45:19","value":{"arguments":[{"name":"begin","nodeType":"YulIdentifier","src":"5248:5:19"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5259:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"5267:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5255:3:19"},"nodeType":"YulFunctionCall","src":"5255:17:19"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"5238:9:19"},"nodeType":"YulFunctionCall","src":"5238:35:19"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"5228:6:19"}]},{"expression":{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"5293:3:19"},{"name":"cache","nodeType":"YulIdentifier","src":"5298:5:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5286:6:19"},"nodeType":"YulFunctionCall","src":"5286:18:19"},"nodeType":"YulExpressionStatement","src":"5286:18:19"}]},"evmVersion":"paris","externalReferences":[{"declaration":3992,"isOffset":false,"isSlot":false,"src":"5063:3:19","valueSize":1},{"declaration":3992,"isOffset":false,"isSlot":false,"src":"5097:3:19","valueSize":1},{"declaration":3995,"isOffset":false,"isSlot":false,"src":"5228:6:19","valueSize":1},{"declaration":3990,"isOffset":false,"isSlot":false,"src":"5210:4:19","valueSize":1}],"flags":["memory-safe"],"id":3997,"nodeType":"InlineAssembly","src":"5004:310:19"}]},"documentation":{"id":3988,"nodeType":"StructuredDocumentation","src":"4817:78:19","text":" @dev Derive the location of a mapping element from the key."},"id":3999,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"4909:13:19","nodeType":"FunctionDefinition","parameters":{"id":3993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3990,"mutability":"mutable","name":"slot","nameLocation":"4931:4:19","nodeType":"VariableDeclaration","scope":3999,"src":"4923:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3989,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4923:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3992,"mutability":"mutable","name":"key","nameLocation":"4950:3:19","nodeType":"VariableDeclaration","scope":3999,"src":"4937:16:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3991,"name":"bytes","nodeType":"ElementaryTypeName","src":"4937:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4922:32:19"},"returnParameters":{"id":3996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3995,"mutability":"mutable","name":"result","nameLocation":"4986:6:19","nodeType":"VariableDeclaration","scope":3999,"src":"4978:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3994,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4978:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4977:16:19"},"scope":4000,"src":"4900:420:19","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4001,"src":"1599:3723:19","usedErrors":[],"usedEvents":[]}],"src":"199:5124:19"},"id":19},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[4124]},"id":4125,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4002,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:20"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":4003,"nodeType":"StructuredDocumentation","src":"219:1187:20","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."},"fullyImplemented":true,"id":4124,"linearizedBaseContracts":[4124],"name":"StorageSlot","nameLocation":"1415:11:20","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":4006,"members":[{"constant":false,"id":4005,"mutability":"mutable","name":"value","nameLocation":"1470:5:20","nodeType":"VariableDeclaration","scope":4006,"src":"1462:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4004,"name":"address","nodeType":"ElementaryTypeName","src":"1462:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1440:11:20","nodeType":"StructDefinition","scope":4124,"src":"1433:49:20","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":4009,"members":[{"constant":false,"id":4008,"mutability":"mutable","name":"value","nameLocation":"1522:5:20","nodeType":"VariableDeclaration","scope":4009,"src":"1517:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4007,"name":"bool","nodeType":"ElementaryTypeName","src":"1517:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1495:11:20","nodeType":"StructDefinition","scope":4124,"src":"1488:46:20","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":4012,"members":[{"constant":false,"id":4011,"mutability":"mutable","name":"value","nameLocation":"1577:5:20","nodeType":"VariableDeclaration","scope":4012,"src":"1569:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4010,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1569:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1547:11:20","nodeType":"StructDefinition","scope":4124,"src":"1540:49:20","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":4015,"members":[{"constant":false,"id":4014,"mutability":"mutable","name":"value","nameLocation":"1632:5:20","nodeType":"VariableDeclaration","scope":4015,"src":"1624:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4013,"name":"uint256","nodeType":"ElementaryTypeName","src":"1624:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1602:11:20","nodeType":"StructDefinition","scope":4124,"src":"1595:49:20","visibility":"public"},{"canonicalName":"StorageSlot.Int256Slot","id":4018,"members":[{"constant":false,"id":4017,"mutability":"mutable","name":"value","nameLocation":"1685:5:20","nodeType":"VariableDeclaration","scope":4018,"src":"1678:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4016,"name":"int256","nodeType":"ElementaryTypeName","src":"1678:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"name":"Int256Slot","nameLocation":"1657:10:20","nodeType":"StructDefinition","scope":4124,"src":"1650:47:20","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":4021,"members":[{"constant":false,"id":4020,"mutability":"mutable","name":"value","nameLocation":"1738:5:20","nodeType":"VariableDeclaration","scope":4021,"src":"1731:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":4019,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1710:10:20","nodeType":"StructDefinition","scope":4124,"src":"1703:47:20","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":4024,"members":[{"constant":false,"id":4023,"mutability":"mutable","name":"value","nameLocation":"1789:5:20","nodeType":"VariableDeclaration","scope":4024,"src":"1783:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":4022,"name":"bytes","nodeType":"ElementaryTypeName","src":"1783:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1763:9:20","nodeType":"StructDefinition","scope":4124,"src":"1756:45:20","visibility":"public"},{"body":{"id":4034,"nodeType":"Block","src":"1983:79:20","statements":[{"AST":{"nodeType":"YulBlock","src":"2018:38:20","statements":[{"nodeType":"YulAssignment","src":"2032:14:20","value":{"name":"slot","nodeType":"YulIdentifier","src":"2042:4:20"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2032:6:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4031,"isOffset":false,"isSlot":true,"src":"2032:6:20","suffix":"slot","valueSize":1},{"declaration":4027,"isOffset":false,"isSlot":false,"src":"2042:4:20","valueSize":1}],"flags":["memory-safe"],"id":4033,"nodeType":"InlineAssembly","src":"1993:63:20"}]},"documentation":{"id":4025,"nodeType":"StructuredDocumentation","src":"1807:87:20","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":4035,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1908:14:20","nodeType":"FunctionDefinition","parameters":{"id":4028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4027,"mutability":"mutable","name":"slot","nameLocation":"1931:4:20","nodeType":"VariableDeclaration","scope":4035,"src":"1923:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4026,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1923:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1922:14:20"},"returnParameters":{"id":4032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4031,"mutability":"mutable","name":"r","nameLocation":"1980:1:20","nodeType":"VariableDeclaration","scope":4035,"src":"1960:21:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$4006_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":4030,"nodeType":"UserDefinedTypeName","pathNode":{"id":4029,"name":"AddressSlot","nameLocations":["1960:11:20"],"nodeType":"IdentifierPath","referencedDeclaration":4006,"src":"1960:11:20"},"referencedDeclaration":4006,"src":"1960:11:20","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$4006_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1959:23:20"},"scope":4124,"src":"1899:163:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4045,"nodeType":"Block","src":"2243:79:20","statements":[{"AST":{"nodeType":"YulBlock","src":"2278:38:20","statements":[{"nodeType":"YulAssignment","src":"2292:14:20","value":{"name":"slot","nodeType":"YulIdentifier","src":"2302:4:20"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2292:6:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4042,"isOffset":false,"isSlot":true,"src":"2292:6:20","suffix":"slot","valueSize":1},{"declaration":4038,"isOffset":false,"isSlot":false,"src":"2302:4:20","valueSize":1}],"flags":["memory-safe"],"id":4044,"nodeType":"InlineAssembly","src":"2253:63:20"}]},"documentation":{"id":4036,"nodeType":"StructuredDocumentation","src":"2068:86:20","text":" @dev Returns a `BooleanSlot` with member `value` located at `slot`."},"id":4046,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2168:14:20","nodeType":"FunctionDefinition","parameters":{"id":4039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4038,"mutability":"mutable","name":"slot","nameLocation":"2191:4:20","nodeType":"VariableDeclaration","scope":4046,"src":"2183:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4037,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2183:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2182:14:20"},"returnParameters":{"id":4043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4042,"mutability":"mutable","name":"r","nameLocation":"2240:1:20","nodeType":"VariableDeclaration","scope":4046,"src":"2220:21:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$4009_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":4041,"nodeType":"UserDefinedTypeName","pathNode":{"id":4040,"name":"BooleanSlot","nameLocations":["2220:11:20"],"nodeType":"IdentifierPath","referencedDeclaration":4009,"src":"2220:11:20"},"referencedDeclaration":4009,"src":"2220:11:20","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$4009_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2219:23:20"},"scope":4124,"src":"2159:163:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4056,"nodeType":"Block","src":"2503:79:20","statements":[{"AST":{"nodeType":"YulBlock","src":"2538:38:20","statements":[{"nodeType":"YulAssignment","src":"2552:14:20","value":{"name":"slot","nodeType":"YulIdentifier","src":"2562:4:20"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2552:6:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4053,"isOffset":false,"isSlot":true,"src":"2552:6:20","suffix":"slot","valueSize":1},{"declaration":4049,"isOffset":false,"isSlot":false,"src":"2562:4:20","valueSize":1}],"flags":["memory-safe"],"id":4055,"nodeType":"InlineAssembly","src":"2513:63:20"}]},"documentation":{"id":4047,"nodeType":"StructuredDocumentation","src":"2328:86:20","text":" @dev Returns a `Bytes32Slot` with member `value` located at `slot`."},"id":4057,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2428:14:20","nodeType":"FunctionDefinition","parameters":{"id":4050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4049,"mutability":"mutable","name":"slot","nameLocation":"2451:4:20","nodeType":"VariableDeclaration","scope":4057,"src":"2443:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4048,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2443:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2442:14:20"},"returnParameters":{"id":4054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4053,"mutability":"mutable","name":"r","nameLocation":"2500:1:20","nodeType":"VariableDeclaration","scope":4057,"src":"2480:21:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$4012_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":4052,"nodeType":"UserDefinedTypeName","pathNode":{"id":4051,"name":"Bytes32Slot","nameLocations":["2480:11:20"],"nodeType":"IdentifierPath","referencedDeclaration":4012,"src":"2480:11:20"},"referencedDeclaration":4012,"src":"2480:11:20","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$4012_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2479:23:20"},"scope":4124,"src":"2419:163:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4067,"nodeType":"Block","src":"2763:79:20","statements":[{"AST":{"nodeType":"YulBlock","src":"2798:38:20","statements":[{"nodeType":"YulAssignment","src":"2812:14:20","value":{"name":"slot","nodeType":"YulIdentifier","src":"2822:4:20"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2812:6:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4064,"isOffset":false,"isSlot":true,"src":"2812:6:20","suffix":"slot","valueSize":1},{"declaration":4060,"isOffset":false,"isSlot":false,"src":"2822:4:20","valueSize":1}],"flags":["memory-safe"],"id":4066,"nodeType":"InlineAssembly","src":"2773:63:20"}]},"documentation":{"id":4058,"nodeType":"StructuredDocumentation","src":"2588:86:20","text":" @dev Returns a `Uint256Slot` with member `value` located at `slot`."},"id":4068,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2688:14:20","nodeType":"FunctionDefinition","parameters":{"id":4061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4060,"mutability":"mutable","name":"slot","nameLocation":"2711:4:20","nodeType":"VariableDeclaration","scope":4068,"src":"2703:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4059,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2703:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2702:14:20"},"returnParameters":{"id":4065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4064,"mutability":"mutable","name":"r","nameLocation":"2760:1:20","nodeType":"VariableDeclaration","scope":4068,"src":"2740:21:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4015_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":4063,"nodeType":"UserDefinedTypeName","pathNode":{"id":4062,"name":"Uint256Slot","nameLocations":["2740:11:20"],"nodeType":"IdentifierPath","referencedDeclaration":4015,"src":"2740:11:20"},"referencedDeclaration":4015,"src":"2740:11:20","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4015_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2739:23:20"},"scope":4124,"src":"2679:163:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4078,"nodeType":"Block","src":"3020:79:20","statements":[{"AST":{"nodeType":"YulBlock","src":"3055:38:20","statements":[{"nodeType":"YulAssignment","src":"3069:14:20","value":{"name":"slot","nodeType":"YulIdentifier","src":"3079:4:20"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3069:6:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4075,"isOffset":false,"isSlot":true,"src":"3069:6:20","suffix":"slot","valueSize":1},{"declaration":4071,"isOffset":false,"isSlot":false,"src":"3079:4:20","valueSize":1}],"flags":["memory-safe"],"id":4077,"nodeType":"InlineAssembly","src":"3030:63:20"}]},"documentation":{"id":4069,"nodeType":"StructuredDocumentation","src":"2848:85:20","text":" @dev Returns a `Int256Slot` with member `value` located at `slot`."},"id":4079,"implemented":true,"kind":"function","modifiers":[],"name":"getInt256Slot","nameLocation":"2947:13:20","nodeType":"FunctionDefinition","parameters":{"id":4072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4071,"mutability":"mutable","name":"slot","nameLocation":"2969:4:20","nodeType":"VariableDeclaration","scope":4079,"src":"2961:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4070,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2961:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2960:14:20"},"returnParameters":{"id":4076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4075,"mutability":"mutable","name":"r","nameLocation":"3017:1:20","nodeType":"VariableDeclaration","scope":4079,"src":"2998:20:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$4018_storage_ptr","typeString":"struct StorageSlot.Int256Slot"},"typeName":{"id":4074,"nodeType":"UserDefinedTypeName","pathNode":{"id":4073,"name":"Int256Slot","nameLocations":["2998:10:20"],"nodeType":"IdentifierPath","referencedDeclaration":4018,"src":"2998:10:20"},"referencedDeclaration":4018,"src":"2998:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$4018_storage_ptr","typeString":"struct StorageSlot.Int256Slot"}},"visibility":"internal"}],"src":"2997:22:20"},"scope":4124,"src":"2938:161:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4089,"nodeType":"Block","src":"3277:79:20","statements":[{"AST":{"nodeType":"YulBlock","src":"3312:38:20","statements":[{"nodeType":"YulAssignment","src":"3326:14:20","value":{"name":"slot","nodeType":"YulIdentifier","src":"3336:4:20"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3326:6:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4086,"isOffset":false,"isSlot":true,"src":"3326:6:20","suffix":"slot","valueSize":1},{"declaration":4082,"isOffset":false,"isSlot":false,"src":"3336:4:20","valueSize":1}],"flags":["memory-safe"],"id":4088,"nodeType":"InlineAssembly","src":"3287:63:20"}]},"documentation":{"id":4080,"nodeType":"StructuredDocumentation","src":"3105:85:20","text":" @dev Returns a `StringSlot` with member `value` located at `slot`."},"id":4090,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3204:13:20","nodeType":"FunctionDefinition","parameters":{"id":4083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4082,"mutability":"mutable","name":"slot","nameLocation":"3226:4:20","nodeType":"VariableDeclaration","scope":4090,"src":"3218:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4081,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3218:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3217:14:20"},"returnParameters":{"id":4087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4086,"mutability":"mutable","name":"r","nameLocation":"3274:1:20","nodeType":"VariableDeclaration","scope":4090,"src":"3255:20:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$4021_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":4085,"nodeType":"UserDefinedTypeName","pathNode":{"id":4084,"name":"StringSlot","nameLocations":["3255:10:20"],"nodeType":"IdentifierPath","referencedDeclaration":4021,"src":"3255:10:20"},"referencedDeclaration":4021,"src":"3255:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$4021_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3254:22:20"},"scope":4124,"src":"3195:161:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4100,"nodeType":"Block","src":"3558:85:20","statements":[{"AST":{"nodeType":"YulBlock","src":"3593:44:20","statements":[{"nodeType":"YulAssignment","src":"3607:20:20","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"3617:10:20"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3607:6:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4097,"isOffset":false,"isSlot":true,"src":"3607:6:20","suffix":"slot","valueSize":1},{"declaration":4093,"isOffset":false,"isSlot":true,"src":"3617:10:20","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":4099,"nodeType":"InlineAssembly","src":"3568:69:20"}]},"documentation":{"id":4091,"nodeType":"StructuredDocumentation","src":"3362:101:20","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":4101,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3477:13:20","nodeType":"FunctionDefinition","parameters":{"id":4094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4093,"mutability":"mutable","name":"store","nameLocation":"3506:5:20","nodeType":"VariableDeclaration","scope":4101,"src":"3491:20:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":4092,"name":"string","nodeType":"ElementaryTypeName","src":"3491:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3490:22:20"},"returnParameters":{"id":4098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4097,"mutability":"mutable","name":"r","nameLocation":"3555:1:20","nodeType":"VariableDeclaration","scope":4101,"src":"3536:20:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$4021_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":4096,"nodeType":"UserDefinedTypeName","pathNode":{"id":4095,"name":"StringSlot","nameLocations":["3536:10:20"],"nodeType":"IdentifierPath","referencedDeclaration":4021,"src":"3536:10:20"},"referencedDeclaration":4021,"src":"3536:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$4021_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3535:22:20"},"scope":4124,"src":"3468:175:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4111,"nodeType":"Block","src":"3818:79:20","statements":[{"AST":{"nodeType":"YulBlock","src":"3853:38:20","statements":[{"nodeType":"YulAssignment","src":"3867:14:20","value":{"name":"slot","nodeType":"YulIdentifier","src":"3877:4:20"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3867:6:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4108,"isOffset":false,"isSlot":true,"src":"3867:6:20","suffix":"slot","valueSize":1},{"declaration":4104,"isOffset":false,"isSlot":false,"src":"3877:4:20","valueSize":1}],"flags":["memory-safe"],"id":4110,"nodeType":"InlineAssembly","src":"3828:63:20"}]},"documentation":{"id":4102,"nodeType":"StructuredDocumentation","src":"3649:84:20","text":" @dev Returns a `BytesSlot` with member `value` located at `slot`."},"id":4112,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3747:12:20","nodeType":"FunctionDefinition","parameters":{"id":4105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4104,"mutability":"mutable","name":"slot","nameLocation":"3768:4:20","nodeType":"VariableDeclaration","scope":4112,"src":"3760:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4103,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3760:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3759:14:20"},"returnParameters":{"id":4109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4108,"mutability":"mutable","name":"r","nameLocation":"3815:1:20","nodeType":"VariableDeclaration","scope":4112,"src":"3797:19:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$4024_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":4107,"nodeType":"UserDefinedTypeName","pathNode":{"id":4106,"name":"BytesSlot","nameLocations":["3797:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":4024,"src":"3797:9:20"},"referencedDeclaration":4024,"src":"3797:9:20","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$4024_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3796:21:20"},"scope":4124,"src":"3738:159:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4122,"nodeType":"Block","src":"4094:85:20","statements":[{"AST":{"nodeType":"YulBlock","src":"4129:44:20","statements":[{"nodeType":"YulAssignment","src":"4143:20:20","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"4153:10:20"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"4143:6:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4119,"isOffset":false,"isSlot":true,"src":"4143:6:20","suffix":"slot","valueSize":1},{"declaration":4115,"isOffset":false,"isSlot":true,"src":"4153:10:20","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":4121,"nodeType":"InlineAssembly","src":"4104:69:20"}]},"documentation":{"id":4113,"nodeType":"StructuredDocumentation","src":"3903:99:20","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":4123,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"4016:12:20","nodeType":"FunctionDefinition","parameters":{"id":4116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4115,"mutability":"mutable","name":"store","nameLocation":"4043:5:20","nodeType":"VariableDeclaration","scope":4123,"src":"4029:19:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":4114,"name":"bytes","nodeType":"ElementaryTypeName","src":"4029:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4028:21:20"},"returnParameters":{"id":4120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4119,"mutability":"mutable","name":"r","nameLocation":"4091:1:20","nodeType":"VariableDeclaration","scope":4123,"src":"4073:19:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$4024_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":4118,"nodeType":"UserDefinedTypeName","pathNode":{"id":4117,"name":"BytesSlot","nameLocations":["4073:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":4024,"src":"4073:9:20"},"referencedDeclaration":4024,"src":"4073:9:20","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$4024_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"4072:21:20"},"scope":4124,"src":"4007:172:20","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4125,"src":"1407:2774:20","usedErrors":[],"usedEvents":[]}],"src":"193:3989:20"},"id":20},"@openzeppelin/contracts/utils/cryptography/Hashes.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/Hashes.sol","exportedSymbols":{"Hashes":[4164]},"id":4165,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4126,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:21"},{"abstract":false,"baseContracts":[],"canonicalName":"Hashes","contractDependencies":[],"contractKind":"library","documentation":{"id":4127,"nodeType":"StructuredDocumentation","src":"139:81:21","text":" @dev Library of standard hash functions.\n _Available since v5.1._"},"fullyImplemented":true,"id":4164,"linearizedBaseContracts":[4164],"name":"Hashes","nameLocation":"229:6:21","nodeType":"ContractDefinition","nodes":[{"body":{"id":4150,"nodeType":"Block","src":"588:83:21","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4137,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4130,"src":"605:1:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4138,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4132,"src":"609:1:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"605:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":4145,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4132,"src":"659:1:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4146,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4130,"src":"662:1:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4144,"name":"efficientKeccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"640:18:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":4147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"640:24:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"605:59:21","trueExpression":{"arguments":[{"id":4141,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4130,"src":"632:1:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4142,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4132,"src":"635:1:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4140,"name":"efficientKeccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"613:18:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":4143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"613:24:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4136,"id":4149,"nodeType":"Return","src":"598:66:21"}]},"documentation":{"id":4128,"nodeType":"StructuredDocumentation","src":"242:257:21","text":" @dev Commutative Keccak256 hash of a sorted pair of bytes32. Frequently used when working with merkle proofs.\n NOTE: Equivalent to the `standardNodeHash` in our https://github.com/OpenZeppelin/merkle-tree[JavaScript library]."},"id":4151,"implemented":true,"kind":"function","modifiers":[],"name":"commutativeKeccak256","nameLocation":"513:20:21","nodeType":"FunctionDefinition","parameters":{"id":4133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4130,"mutability":"mutable","name":"a","nameLocation":"542:1:21","nodeType":"VariableDeclaration","scope":4151,"src":"534:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4129,"name":"bytes32","nodeType":"ElementaryTypeName","src":"534:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4132,"mutability":"mutable","name":"b","nameLocation":"553:1:21","nodeType":"VariableDeclaration","scope":4151,"src":"545:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4131,"name":"bytes32","nodeType":"ElementaryTypeName","src":"545:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"533:22:21"},"returnParameters":{"id":4136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4135,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4151,"src":"579:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4134,"name":"bytes32","nodeType":"ElementaryTypeName","src":"579:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"578:9:21"},"scope":4164,"src":"504:167:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4162,"nodeType":"Block","src":"879:151:21","statements":[{"AST":{"nodeType":"YulBlock","src":"914:110:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"935:4:21","type":"","value":"0x00"},{"name":"a","nodeType":"YulIdentifier","src":"941:1:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"928:6:21"},"nodeType":"YulFunctionCall","src":"928:15:21"},"nodeType":"YulExpressionStatement","src":"928:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"963:4:21","type":"","value":"0x20"},{"name":"b","nodeType":"YulIdentifier","src":"969:1:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"956:6:21"},"nodeType":"YulFunctionCall","src":"956:15:21"},"nodeType":"YulExpressionStatement","src":"956:15:21"},{"nodeType":"YulAssignment","src":"984:30:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1003:4:21","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1009:4:21","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"993:9:21"},"nodeType":"YulFunctionCall","src":"993:21:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"984:5:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4154,"isOffset":false,"isSlot":false,"src":"941:1:21","valueSize":1},{"declaration":4156,"isOffset":false,"isSlot":false,"src":"969:1:21","valueSize":1},{"declaration":4159,"isOffset":false,"isSlot":false,"src":"984:5:21","valueSize":1}],"flags":["memory-safe"],"id":4161,"nodeType":"InlineAssembly","src":"889:135:21"}]},"documentation":{"id":4152,"nodeType":"StructuredDocumentation","src":"677:109:21","text":" @dev Implementation of keccak256(abi.encode(a, b)) that doesn't allocate or expand memory."},"id":4163,"implemented":true,"kind":"function","modifiers":[],"name":"efficientKeccak256","nameLocation":"800:18:21","nodeType":"FunctionDefinition","parameters":{"id":4157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4154,"mutability":"mutable","name":"a","nameLocation":"827:1:21","nodeType":"VariableDeclaration","scope":4163,"src":"819:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4153,"name":"bytes32","nodeType":"ElementaryTypeName","src":"819:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4156,"mutability":"mutable","name":"b","nameLocation":"838:1:21","nodeType":"VariableDeclaration","scope":4163,"src":"830:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4155,"name":"bytes32","nodeType":"ElementaryTypeName","src":"830:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"818:22:21"},"returnParameters":{"id":4160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4159,"mutability":"mutable","name":"value","nameLocation":"872:5:21","nodeType":"VariableDeclaration","scope":4163,"src":"864:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4158,"name":"bytes32","nodeType":"ElementaryTypeName","src":"864:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"863:15:21"},"scope":4164,"src":"791:239:21","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4165,"src":"221:811:21","usedErrors":[],"usedEvents":[]}],"src":"113:920:21"},"id":21},"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","exportedSymbols":{"Hashes":[4164],"MerkleProof":[5237]},"id":5238,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4166,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"206:24:22"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/Hashes.sol","file":"./Hashes.sol","id":4168,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5238,"sourceUnit":4165,"src":"232:36:22","symbolAliases":[{"foreign":{"id":4167,"name":"Hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4164,"src":"240:6:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MerkleProof","contractDependencies":[],"contractKind":"library","documentation":{"id":4169,"nodeType":"StructuredDocumentation","src":"270:1082:22","text":" @dev These functions deal with verification of Merkle Tree proofs.\n The tree and the proofs can be generated using our\n https://github.com/OpenZeppelin/merkle-tree[JavaScript library].\n You will find a quickstart guide in the readme.\n WARNING: You should avoid using leaf values that are 64 bytes long prior to\n hashing, or use a hash function other than keccak256 for hashing leaves.\n This is because the concatenation of a sorted pair of internal nodes in\n the Merkle tree could be reinterpreted as a leaf value.\n OpenZeppelin's JavaScript library generates Merkle trees that are safe\n against this attack out of the box.\n IMPORTANT: Consider memory side-effects when using custom hashing functions\n that access memory in an unsafe way.\n NOTE: This library supports proof verification for merkle trees built using\n custom _commutative_ hashing functions (i.e. `H(a, b) == H(b, a)`). Proving\n leaf inclusion in trees built using non-commutative hashing functions requires\n additional logic that is not supported by this library."},"fullyImplemented":true,"id":5237,"linearizedBaseContracts":[5237],"name":"MerkleProof","nameLocation":"1361:11:22","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4170,"nodeType":"StructuredDocumentation","src":"1379:60:22","text":"@dev The multiproof provided is not valid."},"errorSelector":"35140492","id":4172,"name":"MerkleProofInvalidMultiproof","nameLocation":"1450:28:22","nodeType":"ErrorDefinition","parameters":{"id":4171,"nodeType":"ParameterList","parameters":[],"src":"1478:2:22"},"src":"1444:37:22"},{"body":{"id":4192,"nodeType":"Block","src":"1999:57:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4186,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4176,"src":"2029:5:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":4187,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4180,"src":"2036:4:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4185,"name":"processProof","nodeType":"Identifier","overloadedDeclarations":[4234,4316],"referencedDeclaration":4234,"src":"2016:12:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory,bytes32) pure returns (bytes32)"}},"id":4188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2016:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4189,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4178,"src":"2045:4:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2016:33:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4184,"id":4191,"nodeType":"Return","src":"2009:40:22"}]},"documentation":{"id":4173,"nodeType":"StructuredDocumentation","src":"1487:410:22","text":" @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n defined by `root`. For this, a `proof` must be provided, containing\n sibling hashes on the branch from the leaf to the root of the tree. Each\n pair of leaves and each pair of pre-images are assumed to be sorted.\n This version handles proofs in memory with the default hashing function."},"id":4193,"implemented":true,"kind":"function","modifiers":[],"name":"verify","nameLocation":"1911:6:22","nodeType":"FunctionDefinition","parameters":{"id":4181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4176,"mutability":"mutable","name":"proof","nameLocation":"1935:5:22","nodeType":"VariableDeclaration","scope":4193,"src":"1918:22:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4174,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1918:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4175,"nodeType":"ArrayTypeName","src":"1918:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4178,"mutability":"mutable","name":"root","nameLocation":"1950:4:22","nodeType":"VariableDeclaration","scope":4193,"src":"1942:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4177,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1942:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4180,"mutability":"mutable","name":"leaf","nameLocation":"1964:4:22","nodeType":"VariableDeclaration","scope":4193,"src":"1956:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4179,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1956:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1917:52:22"},"returnParameters":{"id":4184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4183,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4193,"src":"1993:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4182,"name":"bool","nodeType":"ElementaryTypeName","src":"1993:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1992:6:22"},"scope":5237,"src":"1902:154:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4233,"nodeType":"Block","src":"2549:216:22","statements":[{"assignments":[4205],"declarations":[{"constant":false,"id":4205,"mutability":"mutable","name":"computedHash","nameLocation":"2567:12:22","nodeType":"VariableDeclaration","scope":4233,"src":"2559:20:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4204,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2559:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4207,"initialValue":{"id":4206,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4199,"src":"2582:4:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2559:27:22"},{"body":{"id":4229,"nodeType":"Block","src":"2639:91:22","statements":[{"expression":{"id":4227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4219,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4205,"src":"2653:12:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4222,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4205,"src":"2696:12:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":4223,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4197,"src":"2710:5:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4225,"indexExpression":{"id":4224,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4209,"src":"2716:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2710:8:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":4220,"name":"Hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4164,"src":"2668:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Hashes_$4164_$","typeString":"type(library Hashes)"}},"id":4221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2675:20:22","memberName":"commutativeKeccak256","nodeType":"MemberAccess","referencedDeclaration":4151,"src":"2668:27:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":4226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2668:51:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2653:66:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4228,"nodeType":"ExpressionStatement","src":"2653:66:22"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4212,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4209,"src":"2616:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4213,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4197,"src":"2620:5:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2626:6:22","memberName":"length","nodeType":"MemberAccess","src":"2620:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2616:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4230,"initializationExpression":{"assignments":[4209],"declarations":[{"constant":false,"id":4209,"mutability":"mutable","name":"i","nameLocation":"2609:1:22","nodeType":"VariableDeclaration","scope":4230,"src":"2601:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4208,"name":"uint256","nodeType":"ElementaryTypeName","src":"2601:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4211,"initialValue":{"hexValue":"30","id":4210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2613:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2601:13:22"},"loopExpression":{"expression":{"id":4217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2634:3:22","subExpression":{"id":4216,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4209,"src":"2634:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4218,"nodeType":"ExpressionStatement","src":"2634:3:22"},"nodeType":"ForStatement","src":"2596:134:22"},{"expression":{"id":4231,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4205,"src":"2746:12:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4203,"id":4232,"nodeType":"Return","src":"2739:19:22"}]},"documentation":{"id":4194,"nodeType":"StructuredDocumentation","src":"2062:390:22","text":" @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n hash matches the root of the tree. When processing the proof, the pairs\n of leaves & pre-images are assumed to be sorted.\n This version handles proofs in memory with the default hashing function."},"id":4234,"implemented":true,"kind":"function","modifiers":[],"name":"processProof","nameLocation":"2466:12:22","nodeType":"FunctionDefinition","parameters":{"id":4200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4197,"mutability":"mutable","name":"proof","nameLocation":"2496:5:22","nodeType":"VariableDeclaration","scope":4234,"src":"2479:22:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4195,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2479:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4196,"nodeType":"ArrayTypeName","src":"2479:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4199,"mutability":"mutable","name":"leaf","nameLocation":"2511:4:22","nodeType":"VariableDeclaration","scope":4234,"src":"2503:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4198,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2503:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2478:38:22"},"returnParameters":{"id":4203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4202,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4234,"src":"2540:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4201,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2540:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2539:9:22"},"scope":5237,"src":"2457:308:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4265,"nodeType":"Block","src":"3376:65:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4258,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4238,"src":"3406:5:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":4259,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4242,"src":"3413:4:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4260,"name":"hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4252,"src":"3419:6:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}],"id":4257,"name":"processProof","nodeType":"Identifier","overloadedDeclarations":[4234,4316],"referencedDeclaration":4316,"src":"3393:12:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory,bytes32,function (bytes32,bytes32) view returns (bytes32)) view returns (bytes32)"}},"id":4261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3393:33:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4262,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4240,"src":"3430:4:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3393:41:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4256,"id":4264,"nodeType":"Return","src":"3386:48:22"}]},"documentation":{"id":4235,"nodeType":"StructuredDocumentation","src":"2771:407:22","text":" @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n defined by `root`. For this, a `proof` must be provided, containing\n sibling hashes on the branch from the leaf to the root of the tree. Each\n pair of leaves and each pair of pre-images are assumed to be sorted.\n This version handles proofs in memory with a custom hashing function."},"id":4266,"implemented":true,"kind":"function","modifiers":[],"name":"verify","nameLocation":"3192:6:22","nodeType":"FunctionDefinition","parameters":{"id":4253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4238,"mutability":"mutable","name":"proof","nameLocation":"3225:5:22","nodeType":"VariableDeclaration","scope":4266,"src":"3208:22:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4236,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3208:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4237,"nodeType":"ArrayTypeName","src":"3208:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4240,"mutability":"mutable","name":"root","nameLocation":"3248:4:22","nodeType":"VariableDeclaration","scope":4266,"src":"3240:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4239,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3240:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4242,"mutability":"mutable","name":"leaf","nameLocation":"3270:4:22","nodeType":"VariableDeclaration","scope":4266,"src":"3262:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4241,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3262:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4252,"mutability":"mutable","name":"hasher","nameLocation":"3334:6:22","nodeType":"VariableDeclaration","scope":4266,"src":"3284:56:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"typeName":{"id":4251,"nodeType":"FunctionTypeName","parameterTypes":{"id":4247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4244,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4251,"src":"3293:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4243,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3293:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4246,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4251,"src":"3302:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4245,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3302:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3292:18:22"},"returnParameterTypes":{"id":4250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4249,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4251,"src":"3325:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4248,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3325:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3324:9:22"},"src":"3284:56:22","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"visibility":"internal"},"visibility":"internal"}],"src":"3198:148:22"},"returnParameters":{"id":4256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4255,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4266,"src":"3370:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4254,"name":"bool","nodeType":"ElementaryTypeName","src":"3370:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3369:6:22"},"scope":5237,"src":"3183:258:22","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4315,"nodeType":"Block","src":"4019:195:22","statements":[{"assignments":[4288],"declarations":[{"constant":false,"id":4288,"mutability":"mutable","name":"computedHash","nameLocation":"4037:12:22","nodeType":"VariableDeclaration","scope":4315,"src":"4029:20:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4287,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4029:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4290,"initialValue":{"id":4289,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4272,"src":"4052:4:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4029:27:22"},{"body":{"id":4311,"nodeType":"Block","src":"4109:70:22","statements":[{"expression":{"id":4309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4302,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4288,"src":"4123:12:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4304,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4288,"src":"4145:12:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":4305,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4270,"src":"4159:5:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4307,"indexExpression":{"id":4306,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4292,"src":"4165:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4159:8:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4303,"name":"hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4282,"src":"4138:6:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}},"id":4308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4138:30:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4123:45:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4310,"nodeType":"ExpressionStatement","src":"4123:45:22"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4295,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4292,"src":"4086:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4296,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4270,"src":"4090:5:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4096:6:22","memberName":"length","nodeType":"MemberAccess","src":"4090:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4086:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4312,"initializationExpression":{"assignments":[4292],"declarations":[{"constant":false,"id":4292,"mutability":"mutable","name":"i","nameLocation":"4079:1:22","nodeType":"VariableDeclaration","scope":4312,"src":"4071:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4291,"name":"uint256","nodeType":"ElementaryTypeName","src":"4071:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4294,"initialValue":{"hexValue":"30","id":4293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4083:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4071:13:22"},"loopExpression":{"expression":{"id":4300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4104:3:22","subExpression":{"id":4299,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4292,"src":"4104:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4301,"nodeType":"ExpressionStatement","src":"4104:3:22"},"nodeType":"ForStatement","src":"4066:113:22"},{"expression":{"id":4313,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4288,"src":"4195:12:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4286,"id":4314,"nodeType":"Return","src":"4188:19:22"}]},"documentation":{"id":4267,"nodeType":"StructuredDocumentation","src":"3447:387:22","text":" @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n hash matches the root of the tree. When processing the proof, the pairs\n of leaves & pre-images are assumed to be sorted.\n This version handles proofs in memory with a custom hashing function."},"id":4316,"implemented":true,"kind":"function","modifiers":[],"name":"processProof","nameLocation":"3848:12:22","nodeType":"FunctionDefinition","parameters":{"id":4283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4270,"mutability":"mutable","name":"proof","nameLocation":"3887:5:22","nodeType":"VariableDeclaration","scope":4316,"src":"3870:22:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4268,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3870:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4269,"nodeType":"ArrayTypeName","src":"3870:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4272,"mutability":"mutable","name":"leaf","nameLocation":"3910:4:22","nodeType":"VariableDeclaration","scope":4316,"src":"3902:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4271,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3902:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4282,"mutability":"mutable","name":"hasher","nameLocation":"3974:6:22","nodeType":"VariableDeclaration","scope":4316,"src":"3924:56:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"typeName":{"id":4281,"nodeType":"FunctionTypeName","parameterTypes":{"id":4277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4274,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4281,"src":"3933:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4273,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3933:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4276,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4281,"src":"3942:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4275,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3942:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3932:18:22"},"returnParameterTypes":{"id":4280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4279,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4281,"src":"3965:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4278,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3965:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3964:9:22"},"src":"3924:56:22","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"visibility":"internal"},"visibility":"internal"}],"src":"3860:126:22"},"returnParameters":{"id":4286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4285,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4316,"src":"4010:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4284,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4010:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4009:9:22"},"scope":5237,"src":"3839:375:22","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4336,"nodeType":"Block","src":"4744:65:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4330,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4320,"src":"4782:5:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":4331,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4324,"src":"4789:4:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4329,"name":"processProofCalldata","nodeType":"Identifier","overloadedDeclarations":[4378,4460],"referencedDeclaration":4378,"src":"4761:20:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32[] calldata,bytes32) pure returns (bytes32)"}},"id":4332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4761:33:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4333,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4322,"src":"4798:4:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4761:41:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4328,"id":4335,"nodeType":"Return","src":"4754:48:22"}]},"documentation":{"id":4317,"nodeType":"StructuredDocumentation","src":"4220:412:22","text":" @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n defined by `root`. For this, a `proof` must be provided, containing\n sibling hashes on the branch from the leaf to the root of the tree. Each\n pair of leaves and each pair of pre-images are assumed to be sorted.\n This version handles proofs in calldata with the default hashing function."},"id":4337,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCalldata","nameLocation":"4646:14:22","nodeType":"FunctionDefinition","parameters":{"id":4325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4320,"mutability":"mutable","name":"proof","nameLocation":"4680:5:22","nodeType":"VariableDeclaration","scope":4337,"src":"4661:24:22","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4318,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4661:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4319,"nodeType":"ArrayTypeName","src":"4661:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4322,"mutability":"mutable","name":"root","nameLocation":"4695:4:22","nodeType":"VariableDeclaration","scope":4337,"src":"4687:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4321,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4687:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4324,"mutability":"mutable","name":"leaf","nameLocation":"4709:4:22","nodeType":"VariableDeclaration","scope":4337,"src":"4701:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4323,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4701:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4660:54:22"},"returnParameters":{"id":4328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4327,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4337,"src":"4738:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4326,"name":"bool","nodeType":"ElementaryTypeName","src":"4738:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4737:6:22"},"scope":5237,"src":"4637:172:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4377,"nodeType":"Block","src":"5314:216:22","statements":[{"assignments":[4349],"declarations":[{"constant":false,"id":4349,"mutability":"mutable","name":"computedHash","nameLocation":"5332:12:22","nodeType":"VariableDeclaration","scope":4377,"src":"5324:20:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4348,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5324:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4351,"initialValue":{"id":4350,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4343,"src":"5347:4:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"5324:27:22"},{"body":{"id":4373,"nodeType":"Block","src":"5404:91:22","statements":[{"expression":{"id":4371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4363,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4349,"src":"5418:12:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4366,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4349,"src":"5461:12:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":4367,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4341,"src":"5475:5:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":4369,"indexExpression":{"id":4368,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4353,"src":"5481:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5475:8:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":4364,"name":"Hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4164,"src":"5433:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Hashes_$4164_$","typeString":"type(library Hashes)"}},"id":4365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5440:20:22","memberName":"commutativeKeccak256","nodeType":"MemberAccess","referencedDeclaration":4151,"src":"5433:27:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":4370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5433:51:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5418:66:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4372,"nodeType":"ExpressionStatement","src":"5418:66:22"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4356,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4353,"src":"5381:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4357,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4341,"src":"5385:5:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":4358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5391:6:22","memberName":"length","nodeType":"MemberAccess","src":"5385:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5381:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4374,"initializationExpression":{"assignments":[4353],"declarations":[{"constant":false,"id":4353,"mutability":"mutable","name":"i","nameLocation":"5374:1:22","nodeType":"VariableDeclaration","scope":4374,"src":"5366:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4352,"name":"uint256","nodeType":"ElementaryTypeName","src":"5366:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4355,"initialValue":{"hexValue":"30","id":4354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5378:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5366:13:22"},"loopExpression":{"expression":{"id":4361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5399:3:22","subExpression":{"id":4360,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4353,"src":"5399:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4362,"nodeType":"ExpressionStatement","src":"5399:3:22"},"nodeType":"ForStatement","src":"5361:134:22"},{"expression":{"id":4375,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4349,"src":"5511:12:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4347,"id":4376,"nodeType":"Return","src":"5504:19:22"}]},"documentation":{"id":4338,"nodeType":"StructuredDocumentation","src":"4815:392:22","text":" @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n hash matches the root of the tree. When processing the proof, the pairs\n of leaves & pre-images are assumed to be sorted.\n This version handles proofs in calldata with the default hashing function."},"id":4378,"implemented":true,"kind":"function","modifiers":[],"name":"processProofCalldata","nameLocation":"5221:20:22","nodeType":"FunctionDefinition","parameters":{"id":4344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4341,"mutability":"mutable","name":"proof","nameLocation":"5261:5:22","nodeType":"VariableDeclaration","scope":4378,"src":"5242:24:22","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4339,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5242:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4340,"nodeType":"ArrayTypeName","src":"5242:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4343,"mutability":"mutable","name":"leaf","nameLocation":"5276:4:22","nodeType":"VariableDeclaration","scope":4378,"src":"5268:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4342,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5268:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5241:40:22"},"returnParameters":{"id":4347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4346,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4378,"src":"5305:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4345,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5305:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5304:9:22"},"scope":5237,"src":"5212:318:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4409,"nodeType":"Block","src":"6153:73:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4402,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4382,"src":"6191:5:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":4403,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4386,"src":"6198:4:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4404,"name":"hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4396,"src":"6204:6:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}],"id":4401,"name":"processProofCalldata","nodeType":"Identifier","overloadedDeclarations":[4378,4460],"referencedDeclaration":4460,"src":"6170:20:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_bytes32_$_t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$_$returns$_t_bytes32_$","typeString":"function (bytes32[] calldata,bytes32,function (bytes32,bytes32) view returns (bytes32)) view returns (bytes32)"}},"id":4405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6170:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4406,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4384,"src":"6215:4:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6170:49:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4400,"id":4408,"nodeType":"Return","src":"6163:56:22"}]},"documentation":{"id":4379,"nodeType":"StructuredDocumentation","src":"5536:409:22","text":" @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n defined by `root`. For this, a `proof` must be provided, containing\n sibling hashes on the branch from the leaf to the root of the tree. Each\n pair of leaves and each pair of pre-images are assumed to be sorted.\n This version handles proofs in calldata with a custom hashing function."},"id":4410,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCalldata","nameLocation":"5959:14:22","nodeType":"FunctionDefinition","parameters":{"id":4397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4382,"mutability":"mutable","name":"proof","nameLocation":"6002:5:22","nodeType":"VariableDeclaration","scope":4410,"src":"5983:24:22","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4380,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5983:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4381,"nodeType":"ArrayTypeName","src":"5983:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4384,"mutability":"mutable","name":"root","nameLocation":"6025:4:22","nodeType":"VariableDeclaration","scope":4410,"src":"6017:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4383,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6017:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4386,"mutability":"mutable","name":"leaf","nameLocation":"6047:4:22","nodeType":"VariableDeclaration","scope":4410,"src":"6039:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4385,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6039:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4396,"mutability":"mutable","name":"hasher","nameLocation":"6111:6:22","nodeType":"VariableDeclaration","scope":4410,"src":"6061:56:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"typeName":{"id":4395,"nodeType":"FunctionTypeName","parameterTypes":{"id":4391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4388,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4395,"src":"6070:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4387,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6070:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4390,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4395,"src":"6079:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4389,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6079:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6069:18:22"},"returnParameterTypes":{"id":4394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4393,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4395,"src":"6102:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4392,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6102:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6101:9:22"},"src":"6061:56:22","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"visibility":"internal"},"visibility":"internal"}],"src":"5973:150:22"},"returnParameters":{"id":4400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4399,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4410,"src":"6147:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4398,"name":"bool","nodeType":"ElementaryTypeName","src":"6147:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6146:6:22"},"scope":5237,"src":"5950:276:22","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4459,"nodeType":"Block","src":"6816:195:22","statements":[{"assignments":[4432],"declarations":[{"constant":false,"id":4432,"mutability":"mutable","name":"computedHash","nameLocation":"6834:12:22","nodeType":"VariableDeclaration","scope":4459,"src":"6826:20:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4431,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6826:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4434,"initialValue":{"id":4433,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4416,"src":"6849:4:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6826:27:22"},{"body":{"id":4455,"nodeType":"Block","src":"6906:70:22","statements":[{"expression":{"id":4453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4446,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4432,"src":"6920:12:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4448,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4432,"src":"6942:12:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":4449,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4414,"src":"6956:5:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":4451,"indexExpression":{"id":4450,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4436,"src":"6962:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6956:8:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4447,"name":"hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4426,"src":"6935:6:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}},"id":4452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6935:30:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6920:45:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4454,"nodeType":"ExpressionStatement","src":"6920:45:22"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4439,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4436,"src":"6883:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4440,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4414,"src":"6887:5:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":4441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6893:6:22","memberName":"length","nodeType":"MemberAccess","src":"6887:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6883:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4456,"initializationExpression":{"assignments":[4436],"declarations":[{"constant":false,"id":4436,"mutability":"mutable","name":"i","nameLocation":"6876:1:22","nodeType":"VariableDeclaration","scope":4456,"src":"6868:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4435,"name":"uint256","nodeType":"ElementaryTypeName","src":"6868:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4438,"initialValue":{"hexValue":"30","id":4437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6880:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6868:13:22"},"loopExpression":{"expression":{"id":4444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6901:3:22","subExpression":{"id":4443,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4436,"src":"6901:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4445,"nodeType":"ExpressionStatement","src":"6901:3:22"},"nodeType":"ForStatement","src":"6863:113:22"},{"expression":{"id":4457,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4432,"src":"6992:12:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4430,"id":4458,"nodeType":"Return","src":"6985:19:22"}]},"documentation":{"id":4411,"nodeType":"StructuredDocumentation","src":"6232:389:22","text":" @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n hash matches the root of the tree. When processing the proof, the pairs\n of leaves & pre-images are assumed to be sorted.\n This version handles proofs in calldata with a custom hashing function."},"id":4460,"implemented":true,"kind":"function","modifiers":[],"name":"processProofCalldata","nameLocation":"6635:20:22","nodeType":"FunctionDefinition","parameters":{"id":4427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4414,"mutability":"mutable","name":"proof","nameLocation":"6684:5:22","nodeType":"VariableDeclaration","scope":4460,"src":"6665:24:22","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4412,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6665:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4413,"nodeType":"ArrayTypeName","src":"6665:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4416,"mutability":"mutable","name":"leaf","nameLocation":"6707:4:22","nodeType":"VariableDeclaration","scope":4460,"src":"6699:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4415,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6699:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4426,"mutability":"mutable","name":"hasher","nameLocation":"6771:6:22","nodeType":"VariableDeclaration","scope":4460,"src":"6721:56:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"typeName":{"id":4425,"nodeType":"FunctionTypeName","parameterTypes":{"id":4421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4418,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4425,"src":"6730:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4417,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6730:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4420,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4425,"src":"6739:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4419,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6739:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6729:18:22"},"returnParameterTypes":{"id":4424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4423,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4425,"src":"6762:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4422,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6762:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6761:9:22"},"src":"6721:56:22","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"visibility":"internal"},"visibility":"internal"}],"src":"6655:128:22"},"returnParameters":{"id":4430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4429,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4460,"src":"6807:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4428,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6807:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6806:9:22"},"scope":5237,"src":"6626:385:22","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4485,"nodeType":"Block","src":"7797:76:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4478,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4464,"src":"7832:5:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":4479,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4467,"src":"7839:10:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},{"id":4480,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4472,"src":"7851:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":4477,"name":"processMultiProof","nodeType":"Identifier","overloadedDeclarations":[4644,4848],"referencedDeclaration":4644,"src":"7814:17:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory,bool[] memory,bytes32[] memory) pure returns (bytes32)"}},"id":4481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7814:44:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4482,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4469,"src":"7862:4:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7814:52:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4476,"id":4484,"nodeType":"Return","src":"7807:59:22"}]},"documentation":{"id":4461,"nodeType":"StructuredDocumentation","src":"7017:593:22","text":" @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n This version handles multiproofs in memory with the default hashing function.\n CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n NOTE: Consider the case where `root == proof[0] && leaves.length == 0` as it will return `true`.\n The `leaves` must be validated independently. See {processMultiProof}."},"id":4486,"implemented":true,"kind":"function","modifiers":[],"name":"multiProofVerify","nameLocation":"7624:16:22","nodeType":"FunctionDefinition","parameters":{"id":4473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4464,"mutability":"mutable","name":"proof","nameLocation":"7667:5:22","nodeType":"VariableDeclaration","scope":4486,"src":"7650:22:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4462,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7650:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4463,"nodeType":"ArrayTypeName","src":"7650:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4467,"mutability":"mutable","name":"proofFlags","nameLocation":"7696:10:22","nodeType":"VariableDeclaration","scope":4486,"src":"7682:24:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":4465,"name":"bool","nodeType":"ElementaryTypeName","src":"7682:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4466,"nodeType":"ArrayTypeName","src":"7682:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":4469,"mutability":"mutable","name":"root","nameLocation":"7724:4:22","nodeType":"VariableDeclaration","scope":4486,"src":"7716:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4468,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7716:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4472,"mutability":"mutable","name":"leaves","nameLocation":"7755:6:22","nodeType":"VariableDeclaration","scope":4486,"src":"7738:23:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4470,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7738:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4471,"nodeType":"ArrayTypeName","src":"7738:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7640:127:22"},"returnParameters":{"id":4476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4475,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4486,"src":"7791:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4474,"name":"bool","nodeType":"ElementaryTypeName","src":"7791:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7790:6:22"},"scope":5237,"src":"7615:258:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4643,"nodeType":"Block","src":"9159:2104:22","statements":[{"assignments":[4502],"declarations":[{"constant":false,"id":4502,"mutability":"mutable","name":"leavesLen","nameLocation":"9551:9:22","nodeType":"VariableDeclaration","scope":4643,"src":"9543:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4501,"name":"uint256","nodeType":"ElementaryTypeName","src":"9543:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4505,"initialValue":{"expression":{"id":4503,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"9563:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9570:6:22","memberName":"length","nodeType":"MemberAccess","src":"9563:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9543:33:22"},{"assignments":[4507],"declarations":[{"constant":false,"id":4507,"mutability":"mutable","name":"proofFlagsLen","nameLocation":"9594:13:22","nodeType":"VariableDeclaration","scope":4643,"src":"9586:21:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4506,"name":"uint256","nodeType":"ElementaryTypeName","src":"9586:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4510,"initialValue":{"expression":{"id":4508,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4493,"src":"9610:10:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":4509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9621:6:22","memberName":"length","nodeType":"MemberAccess","src":"9610:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9586:41:22"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4511,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4502,"src":"9675:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":4512,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"9687:5:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9693:6:22","memberName":"length","nodeType":"MemberAccess","src":"9687:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9675:24:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4515,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4507,"src":"9703:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9719:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9703:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9675:45:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4523,"nodeType":"IfStatement","src":"9671:113:22","trueBody":{"id":4522,"nodeType":"Block","src":"9722:62:22","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4519,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4172,"src":"9743:28:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9743:30:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4521,"nodeType":"RevertStatement","src":"9736:37:22"}]}},{"assignments":[4528],"declarations":[{"constant":false,"id":4528,"mutability":"mutable","name":"hashes","nameLocation":"10045:6:22","nodeType":"VariableDeclaration","scope":4643,"src":"10028:23:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4526,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10028:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4527,"nodeType":"ArrayTypeName","src":"10028:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":4534,"initialValue":{"arguments":[{"id":4532,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4507,"src":"10068:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4531,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"10054:13:22","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":4529,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10058:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4530,"nodeType":"ArrayTypeName","src":"10058:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":4533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10054:28:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10028:54:22"},{"assignments":[4536],"declarations":[{"constant":false,"id":4536,"mutability":"mutable","name":"leafPos","nameLocation":"10100:7:22","nodeType":"VariableDeclaration","scope":4643,"src":"10092:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4535,"name":"uint256","nodeType":"ElementaryTypeName","src":"10092:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4538,"initialValue":{"hexValue":"30","id":4537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10110:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10092:19:22"},{"assignments":[4540],"declarations":[{"constant":false,"id":4540,"mutability":"mutable","name":"hashPos","nameLocation":"10129:7:22","nodeType":"VariableDeclaration","scope":4643,"src":"10121:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4539,"name":"uint256","nodeType":"ElementaryTypeName","src":"10121:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4542,"initialValue":{"hexValue":"30","id":4541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10139:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10121:19:22"},{"assignments":[4544],"declarations":[{"constant":false,"id":4544,"mutability":"mutable","name":"proofPos","nameLocation":"10158:8:22","nodeType":"VariableDeclaration","scope":4643,"src":"10150:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4543,"name":"uint256","nodeType":"ElementaryTypeName","src":"10150:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4546,"initialValue":{"hexValue":"30","id":4545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10169:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10150:20:22"},{"body":{"id":4606,"nodeType":"Block","src":"10590:310:22","statements":[{"assignments":[4558],"declarations":[{"constant":false,"id":4558,"mutability":"mutable","name":"a","nameLocation":"10612:1:22","nodeType":"VariableDeclaration","scope":4606,"src":"10604:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4557,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10604:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4571,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4559,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4536,"src":"10616:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4560,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4502,"src":"10626:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10616:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":4566,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4528,"src":"10658:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4569,"indexExpression":{"id":4568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10665:9:22","subExpression":{"id":4567,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4540,"src":"10665:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10658:17:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10616:59:22","trueExpression":{"baseExpression":{"id":4562,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"10638:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4565,"indexExpression":{"id":4564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10645:9:22","subExpression":{"id":4563,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4536,"src":"10645:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10638:17:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"10604:71:22"},{"assignments":[4573],"declarations":[{"constant":false,"id":4573,"mutability":"mutable","name":"b","nameLocation":"10697:1:22","nodeType":"VariableDeclaration","scope":4606,"src":"10689:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4572,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10689:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4595,"initialValue":{"condition":{"baseExpression":{"id":4574,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4493,"src":"10701:10:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":4576,"indexExpression":{"id":4575,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4548,"src":"10712:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10701:13:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":4590,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"10813:5:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4593,"indexExpression":{"id":4592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10819:10:22","subExpression":{"id":4591,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4544,"src":"10819:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10813:17:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10701:129:22","trueExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4577,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4536,"src":"10734:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4578,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4502,"src":"10744:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10734:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":4584,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4528,"src":"10776:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4587,"indexExpression":{"id":4586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10783:9:22","subExpression":{"id":4585,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4540,"src":"10783:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10776:17:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10734:59:22","trueExpression":{"baseExpression":{"id":4580,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"10756:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4583,"indexExpression":{"id":4582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10763:9:22","subExpression":{"id":4581,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4536,"src":"10763:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10756:17:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":4589,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10733:61:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"10689:141:22"},{"expression":{"id":4604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4596,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4528,"src":"10844:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4598,"indexExpression":{"id":4597,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4548,"src":"10851:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10844:9:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4601,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4558,"src":"10884:1:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4602,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4573,"src":"10887:1:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":4599,"name":"Hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4164,"src":"10856:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Hashes_$4164_$","typeString":"type(library Hashes)"}},"id":4600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10863:20:22","memberName":"commutativeKeccak256","nodeType":"MemberAccess","referencedDeclaration":4151,"src":"10856:27:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":4603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10856:33:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"10844:45:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4605,"nodeType":"ExpressionStatement","src":"10844:45:22"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4551,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4548,"src":"10566:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4552,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4507,"src":"10570:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10566:17:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4607,"initializationExpression":{"assignments":[4548],"declarations":[{"constant":false,"id":4548,"mutability":"mutable","name":"i","nameLocation":"10559:1:22","nodeType":"VariableDeclaration","scope":4607,"src":"10551:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4547,"name":"uint256","nodeType":"ElementaryTypeName","src":"10551:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4550,"initialValue":{"hexValue":"30","id":4549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10563:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10551:13:22"},"loopExpression":{"expression":{"id":4555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10585:3:22","subExpression":{"id":4554,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4548,"src":"10585:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4556,"nodeType":"ExpressionStatement","src":"10585:3:22"},"nodeType":"ForStatement","src":"10546:354:22"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4608,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4507,"src":"10914:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10930:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10914:17:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4628,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4502,"src":"11155:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11167:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11155:13:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4640,"nodeType":"Block","src":"11217:40:22","statements":[{"expression":{"baseExpression":{"id":4636,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"11238:5:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4638,"indexExpression":{"hexValue":"30","id":4637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11244:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11238:8:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4500,"id":4639,"nodeType":"Return","src":"11231:15:22"}]},"id":4641,"nodeType":"IfStatement","src":"11151:106:22","trueBody":{"id":4635,"nodeType":"Block","src":"11170:41:22","statements":[{"expression":{"baseExpression":{"id":4631,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"11191:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4633,"indexExpression":{"hexValue":"30","id":4632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11198:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11191:9:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4500,"id":4634,"nodeType":"Return","src":"11184:16:22"}]}},"id":4642,"nodeType":"IfStatement","src":"10910:347:22","trueBody":{"id":4627,"nodeType":"Block","src":"10933:212:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4611,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4544,"src":"10951:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":4612,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"10963:5:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10969:6:22","memberName":"length","nodeType":"MemberAccess","src":"10963:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10951:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4619,"nodeType":"IfStatement","src":"10947:100:22","trueBody":{"id":4618,"nodeType":"Block","src":"10977:70:22","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4615,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4172,"src":"11002:28:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11002:30:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4617,"nodeType":"RevertStatement","src":"10995:37:22"}]}},{"id":4626,"nodeType":"UncheckedBlock","src":"11060:75:22","statements":[{"expression":{"baseExpression":{"id":4620,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4528,"src":"11095:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4624,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4621,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4507,"src":"11102:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11118:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11102:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11095:25:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4500,"id":4625,"nodeType":"Return","src":"11088:32:22"}]}]}}]},"documentation":{"id":4487,"nodeType":"StructuredDocumentation","src":"7879:1100:22","text":" @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n respectively.\n This version handles multiproofs in memory with the default hashing function.\n CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n NOTE: The _empty set_ (i.e. the case where `proof.length == 1 && leaves.length == 0`) is considered a no-op,\n and therefore a valid multiproof (i.e. it returns `proof[0]`). Consider disallowing this case if you're not\n validating the leaves elsewhere."},"id":4644,"implemented":true,"kind":"function","modifiers":[],"name":"processMultiProof","nameLocation":"8993:17:22","nodeType":"FunctionDefinition","parameters":{"id":4497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4490,"mutability":"mutable","name":"proof","nameLocation":"9037:5:22","nodeType":"VariableDeclaration","scope":4644,"src":"9020:22:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4488,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9020:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4489,"nodeType":"ArrayTypeName","src":"9020:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4493,"mutability":"mutable","name":"proofFlags","nameLocation":"9066:10:22","nodeType":"VariableDeclaration","scope":4644,"src":"9052:24:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":4491,"name":"bool","nodeType":"ElementaryTypeName","src":"9052:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4492,"nodeType":"ArrayTypeName","src":"9052:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":4496,"mutability":"mutable","name":"leaves","nameLocation":"9103:6:22","nodeType":"VariableDeclaration","scope":4644,"src":"9086:23:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4494,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9086:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4495,"nodeType":"ArrayTypeName","src":"9086:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"9010:105:22"},"returnParameters":{"id":4500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4499,"mutability":"mutable","name":"merkleRoot","nameLocation":"9147:10:22","nodeType":"VariableDeclaration","scope":4644,"src":"9139:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4498,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9139:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9138:20:22"},"scope":5237,"src":"8984:2279:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4680,"nodeType":"Block","src":"12112:84:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4672,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4648,"src":"12147:5:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":4673,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4651,"src":"12154:10:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},{"id":4674,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4656,"src":"12166:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":4675,"name":"hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4666,"src":"12174:6:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}],"id":4671,"name":"processMultiProof","nodeType":"Identifier","overloadedDeclarations":[4644,4848],"referencedDeclaration":4848,"src":"12129:17:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory,bool[] memory,bytes32[] memory,function (bytes32,bytes32) view returns (bytes32)) view returns (bytes32)"}},"id":4676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12129:52:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4677,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4653,"src":"12185:4:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"12129:60:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4670,"id":4679,"nodeType":"Return","src":"12122:67:22"}]},"documentation":{"id":4645,"nodeType":"StructuredDocumentation","src":"11269:590:22","text":" @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n This version handles multiproofs in memory with a custom hashing function.\n CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n NOTE: Consider the case where `root == proof[0] && leaves.length == 0` as it will return `true`.\n The `leaves` must be validated independently. See {processMultiProof}."},"id":4681,"implemented":true,"kind":"function","modifiers":[],"name":"multiProofVerify","nameLocation":"11873:16:22","nodeType":"FunctionDefinition","parameters":{"id":4667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4648,"mutability":"mutable","name":"proof","nameLocation":"11916:5:22","nodeType":"VariableDeclaration","scope":4681,"src":"11899:22:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4646,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11899:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4647,"nodeType":"ArrayTypeName","src":"11899:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4651,"mutability":"mutable","name":"proofFlags","nameLocation":"11945:10:22","nodeType":"VariableDeclaration","scope":4681,"src":"11931:24:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":4649,"name":"bool","nodeType":"ElementaryTypeName","src":"11931:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4650,"nodeType":"ArrayTypeName","src":"11931:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":4653,"mutability":"mutable","name":"root","nameLocation":"11973:4:22","nodeType":"VariableDeclaration","scope":4681,"src":"11965:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4652,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11965:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4656,"mutability":"mutable","name":"leaves","nameLocation":"12004:6:22","nodeType":"VariableDeclaration","scope":4681,"src":"11987:23:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4654,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11987:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4655,"nodeType":"ArrayTypeName","src":"11987:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4666,"mutability":"mutable","name":"hasher","nameLocation":"12070:6:22","nodeType":"VariableDeclaration","scope":4681,"src":"12020:56:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"typeName":{"id":4665,"nodeType":"FunctionTypeName","parameterTypes":{"id":4661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4658,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4665,"src":"12029:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4657,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12029:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4660,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4665,"src":"12038:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4659,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12038:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12028:18:22"},"returnParameterTypes":{"id":4664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4663,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4665,"src":"12061:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4662,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12061:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12060:9:22"},"src":"12020:56:22","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"visibility":"internal"},"visibility":"internal"}],"src":"11889:193:22"},"returnParameters":{"id":4670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4669,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4681,"src":"12106:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4668,"name":"bool","nodeType":"ElementaryTypeName","src":"12106:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12105:6:22"},"scope":5237,"src":"11864:332:22","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4847,"nodeType":"Block","src":"13545:2083:22","statements":[{"assignments":[4707],"declarations":[{"constant":false,"id":4707,"mutability":"mutable","name":"leavesLen","nameLocation":"13937:9:22","nodeType":"VariableDeclaration","scope":4847,"src":"13929:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4706,"name":"uint256","nodeType":"ElementaryTypeName","src":"13929:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4710,"initialValue":{"expression":{"id":4708,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4691,"src":"13949:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13956:6:22","memberName":"length","nodeType":"MemberAccess","src":"13949:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13929:33:22"},{"assignments":[4712],"declarations":[{"constant":false,"id":4712,"mutability":"mutable","name":"proofFlagsLen","nameLocation":"13980:13:22","nodeType":"VariableDeclaration","scope":4847,"src":"13972:21:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4711,"name":"uint256","nodeType":"ElementaryTypeName","src":"13972:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4715,"initialValue":{"expression":{"id":4713,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4688,"src":"13996:10:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":4714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14007:6:22","memberName":"length","nodeType":"MemberAccess","src":"13996:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13972:41:22"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4716,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4707,"src":"14061:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":4717,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4685,"src":"14073:5:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14079:6:22","memberName":"length","nodeType":"MemberAccess","src":"14073:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14061:24:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4720,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4712,"src":"14089:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14105:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14089:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14061:45:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4728,"nodeType":"IfStatement","src":"14057:113:22","trueBody":{"id":4727,"nodeType":"Block","src":"14108:62:22","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4724,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4172,"src":"14129:28:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14129:30:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4726,"nodeType":"RevertStatement","src":"14122:37:22"}]}},{"assignments":[4733],"declarations":[{"constant":false,"id":4733,"mutability":"mutable","name":"hashes","nameLocation":"14431:6:22","nodeType":"VariableDeclaration","scope":4847,"src":"14414:23:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4731,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14414:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4732,"nodeType":"ArrayTypeName","src":"14414:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":4739,"initialValue":{"arguments":[{"id":4737,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4712,"src":"14454:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4736,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"14440:13:22","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":4734,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14444:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4735,"nodeType":"ArrayTypeName","src":"14444:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":4738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14440:28:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"14414:54:22"},{"assignments":[4741],"declarations":[{"constant":false,"id":4741,"mutability":"mutable","name":"leafPos","nameLocation":"14486:7:22","nodeType":"VariableDeclaration","scope":4847,"src":"14478:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4740,"name":"uint256","nodeType":"ElementaryTypeName","src":"14478:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4743,"initialValue":{"hexValue":"30","id":4742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14496:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14478:19:22"},{"assignments":[4745],"declarations":[{"constant":false,"id":4745,"mutability":"mutable","name":"hashPos","nameLocation":"14515:7:22","nodeType":"VariableDeclaration","scope":4847,"src":"14507:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4744,"name":"uint256","nodeType":"ElementaryTypeName","src":"14507:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4747,"initialValue":{"hexValue":"30","id":4746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14525:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14507:19:22"},{"assignments":[4749],"declarations":[{"constant":false,"id":4749,"mutability":"mutable","name":"proofPos","nameLocation":"14544:8:22","nodeType":"VariableDeclaration","scope":4847,"src":"14536:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4748,"name":"uint256","nodeType":"ElementaryTypeName","src":"14536:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4751,"initialValue":{"hexValue":"30","id":4750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14555:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14536:20:22"},{"body":{"id":4810,"nodeType":"Block","src":"14976:289:22","statements":[{"assignments":[4763],"declarations":[{"constant":false,"id":4763,"mutability":"mutable","name":"a","nameLocation":"14998:1:22","nodeType":"VariableDeclaration","scope":4810,"src":"14990:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4762,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14990:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4776,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4764,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4741,"src":"15002:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4765,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4707,"src":"15012:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15002:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":4771,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4733,"src":"15044:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4774,"indexExpression":{"id":4773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"15051:9:22","subExpression":{"id":4772,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4745,"src":"15051:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15044:17:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"15002:59:22","trueExpression":{"baseExpression":{"id":4767,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4691,"src":"15024:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4770,"indexExpression":{"id":4769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"15031:9:22","subExpression":{"id":4768,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4741,"src":"15031:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15024:17:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"14990:71:22"},{"assignments":[4778],"declarations":[{"constant":false,"id":4778,"mutability":"mutable","name":"b","nameLocation":"15083:1:22","nodeType":"VariableDeclaration","scope":4810,"src":"15075:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4777,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15075:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4800,"initialValue":{"condition":{"baseExpression":{"id":4779,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4688,"src":"15087:10:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":4781,"indexExpression":{"id":4780,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4753,"src":"15098:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15087:13:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":4795,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4685,"src":"15199:5:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4798,"indexExpression":{"id":4797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"15205:10:22","subExpression":{"id":4796,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4749,"src":"15205:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15199:17:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"15087:129:22","trueExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4782,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4741,"src":"15120:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4783,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4707,"src":"15130:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15120:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":4789,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4733,"src":"15162:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4792,"indexExpression":{"id":4791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"15169:9:22","subExpression":{"id":4790,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4745,"src":"15169:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15162:17:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"15120:59:22","trueExpression":{"baseExpression":{"id":4785,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4691,"src":"15142:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4788,"indexExpression":{"id":4787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"15149:9:22","subExpression":{"id":4786,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4741,"src":"15149:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15142:17:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":4794,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15119:61:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"15075:141:22"},{"expression":{"id":4808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4801,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4733,"src":"15230:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4803,"indexExpression":{"id":4802,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4753,"src":"15237:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15230:9:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4805,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4763,"src":"15249:1:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4806,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4778,"src":"15252:1:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4804,"name":"hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4701,"src":"15242:6:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}},"id":4807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15242:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"15230:24:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4809,"nodeType":"ExpressionStatement","src":"15230:24:22"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4756,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4753,"src":"14952:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4757,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4712,"src":"14956:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14952:17:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4811,"initializationExpression":{"assignments":[4753],"declarations":[{"constant":false,"id":4753,"mutability":"mutable","name":"i","nameLocation":"14945:1:22","nodeType":"VariableDeclaration","scope":4811,"src":"14937:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4752,"name":"uint256","nodeType":"ElementaryTypeName","src":"14937:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4755,"initialValue":{"hexValue":"30","id":4754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14949:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14937:13:22"},"loopExpression":{"expression":{"id":4760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"14971:3:22","subExpression":{"id":4759,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4753,"src":"14971:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4761,"nodeType":"ExpressionStatement","src":"14971:3:22"},"nodeType":"ForStatement","src":"14932:333:22"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4812,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4712,"src":"15279:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15295:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15279:17:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4832,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4707,"src":"15520:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15532:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15520:13:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4844,"nodeType":"Block","src":"15582:40:22","statements":[{"expression":{"baseExpression":{"id":4840,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4685,"src":"15603:5:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4842,"indexExpression":{"hexValue":"30","id":4841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15609:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15603:8:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4705,"id":4843,"nodeType":"Return","src":"15596:15:22"}]},"id":4845,"nodeType":"IfStatement","src":"15516:106:22","trueBody":{"id":4839,"nodeType":"Block","src":"15535:41:22","statements":[{"expression":{"baseExpression":{"id":4835,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4691,"src":"15556:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4837,"indexExpression":{"hexValue":"30","id":4836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15563:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15556:9:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4705,"id":4838,"nodeType":"Return","src":"15549:16:22"}]}},"id":4846,"nodeType":"IfStatement","src":"15275:347:22","trueBody":{"id":4831,"nodeType":"Block","src":"15298:212:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4815,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4749,"src":"15316:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":4816,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4685,"src":"15328:5:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15334:6:22","memberName":"length","nodeType":"MemberAccess","src":"15328:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15316:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4823,"nodeType":"IfStatement","src":"15312:100:22","trueBody":{"id":4822,"nodeType":"Block","src":"15342:70:22","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4819,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4172,"src":"15367:28:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15367:30:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4821,"nodeType":"RevertStatement","src":"15360:37:22"}]}},{"id":4830,"nodeType":"UncheckedBlock","src":"15425:75:22","statements":[{"expression":{"baseExpression":{"id":4824,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4733,"src":"15460:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4828,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4825,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4712,"src":"15467:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15483:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15467:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15460:25:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4705,"id":4829,"nodeType":"Return","src":"15453:32:22"}]}]}}]},"documentation":{"id":4682,"nodeType":"StructuredDocumentation","src":"12202:1097:22","text":" @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n respectively.\n This version handles multiproofs in memory with a custom hashing function.\n CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n NOTE: The _empty set_ (i.e. the case where `proof.length == 1 && leaves.length == 0`) is considered a no-op,\n and therefore a valid multiproof (i.e. it returns `proof[0]`). Consider disallowing this case if you're not\n validating the leaves elsewhere."},"id":4848,"implemented":true,"kind":"function","modifiers":[],"name":"processMultiProof","nameLocation":"13313:17:22","nodeType":"FunctionDefinition","parameters":{"id":4702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4685,"mutability":"mutable","name":"proof","nameLocation":"13357:5:22","nodeType":"VariableDeclaration","scope":4848,"src":"13340:22:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4683,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13340:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4684,"nodeType":"ArrayTypeName","src":"13340:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4688,"mutability":"mutable","name":"proofFlags","nameLocation":"13386:10:22","nodeType":"VariableDeclaration","scope":4848,"src":"13372:24:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":4686,"name":"bool","nodeType":"ElementaryTypeName","src":"13372:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4687,"nodeType":"ArrayTypeName","src":"13372:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":4691,"mutability":"mutable","name":"leaves","nameLocation":"13423:6:22","nodeType":"VariableDeclaration","scope":4848,"src":"13406:23:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4689,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13406:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4690,"nodeType":"ArrayTypeName","src":"13406:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4701,"mutability":"mutable","name":"hasher","nameLocation":"13489:6:22","nodeType":"VariableDeclaration","scope":4848,"src":"13439:56:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"typeName":{"id":4700,"nodeType":"FunctionTypeName","parameterTypes":{"id":4696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4693,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4700,"src":"13448:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4692,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13448:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4695,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4700,"src":"13457:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4694,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13457:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13447:18:22"},"returnParameterTypes":{"id":4699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4698,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4700,"src":"13480:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4697,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13480:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13479:9:22"},"src":"13439:56:22","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"visibility":"internal"},"visibility":"internal"}],"src":"13330:171:22"},"returnParameters":{"id":4705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4704,"mutability":"mutable","name":"merkleRoot","nameLocation":"13533:10:22","nodeType":"VariableDeclaration","scope":4848,"src":"13525:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4703,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13525:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13524:20:22"},"scope":5237,"src":"13304:2324:22","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4873,"nodeType":"Block","src":"16436:84:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4866,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4852,"src":"16479:5:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":4867,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4855,"src":"16486:10:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},{"id":4868,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4860,"src":"16498:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":4865,"name":"processMultiProofCalldata","nodeType":"Identifier","overloadedDeclarations":[5032,5236],"referencedDeclaration":5032,"src":"16453:25:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_array$_t_bool_$dyn_calldata_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes32[] calldata,bool[] calldata,bytes32[] memory) pure returns (bytes32)"}},"id":4869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16453:52:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4870,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4857,"src":"16509:4:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"16453:60:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4864,"id":4872,"nodeType":"Return","src":"16446:67:22"}]},"documentation":{"id":4849,"nodeType":"StructuredDocumentation","src":"15634:603:22","text":" @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n This version handles multiproofs in calldata with the default hashing function.\n CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n NOTE: Consider the case where `root == proof[0] && leaves.length == 0` as it will return `true`.\n The `leaves` must be validated independently. See {processMultiProofCalldata}."},"id":4874,"implemented":true,"kind":"function","modifiers":[],"name":"multiProofVerifyCalldata","nameLocation":"16251:24:22","nodeType":"FunctionDefinition","parameters":{"id":4861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4852,"mutability":"mutable","name":"proof","nameLocation":"16304:5:22","nodeType":"VariableDeclaration","scope":4874,"src":"16285:24:22","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4850,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16285:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4851,"nodeType":"ArrayTypeName","src":"16285:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4855,"mutability":"mutable","name":"proofFlags","nameLocation":"16335:10:22","nodeType":"VariableDeclaration","scope":4874,"src":"16319:26:22","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":4853,"name":"bool","nodeType":"ElementaryTypeName","src":"16319:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4854,"nodeType":"ArrayTypeName","src":"16319:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":4857,"mutability":"mutable","name":"root","nameLocation":"16363:4:22","nodeType":"VariableDeclaration","scope":4874,"src":"16355:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4856,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16355:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4860,"mutability":"mutable","name":"leaves","nameLocation":"16394:6:22","nodeType":"VariableDeclaration","scope":4874,"src":"16377:23:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4858,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16377:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4859,"nodeType":"ArrayTypeName","src":"16377:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"16275:131:22"},"returnParameters":{"id":4864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4863,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4874,"src":"16430:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4862,"name":"bool","nodeType":"ElementaryTypeName","src":"16430:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"16429:6:22"},"scope":5237,"src":"16242:278:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5031,"nodeType":"Block","src":"17820:2104:22","statements":[{"assignments":[4890],"declarations":[{"constant":false,"id":4890,"mutability":"mutable","name":"leavesLen","nameLocation":"18212:9:22","nodeType":"VariableDeclaration","scope":5031,"src":"18204:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4889,"name":"uint256","nodeType":"ElementaryTypeName","src":"18204:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4893,"initialValue":{"expression":{"id":4891,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4884,"src":"18224:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18231:6:22","memberName":"length","nodeType":"MemberAccess","src":"18224:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18204:33:22"},{"assignments":[4895],"declarations":[{"constant":false,"id":4895,"mutability":"mutable","name":"proofFlagsLen","nameLocation":"18255:13:22","nodeType":"VariableDeclaration","scope":5031,"src":"18247:21:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4894,"name":"uint256","nodeType":"ElementaryTypeName","src":"18247:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4898,"initialValue":{"expression":{"id":4896,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4881,"src":"18271:10:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},"id":4897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18282:6:22","memberName":"length","nodeType":"MemberAccess","src":"18271:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18247:41:22"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4899,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4890,"src":"18336:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":4900,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4878,"src":"18348:5:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":4901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18354:6:22","memberName":"length","nodeType":"MemberAccess","src":"18348:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18336:24:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4903,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4895,"src":"18364:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18380:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"18364:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18336:45:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4911,"nodeType":"IfStatement","src":"18332:113:22","trueBody":{"id":4910,"nodeType":"Block","src":"18383:62:22","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4907,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4172,"src":"18404:28:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18404:30:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4909,"nodeType":"RevertStatement","src":"18397:37:22"}]}},{"assignments":[4916],"declarations":[{"constant":false,"id":4916,"mutability":"mutable","name":"hashes","nameLocation":"18706:6:22","nodeType":"VariableDeclaration","scope":5031,"src":"18689:23:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4914,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18689:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4915,"nodeType":"ArrayTypeName","src":"18689:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":4922,"initialValue":{"arguments":[{"id":4920,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4895,"src":"18729:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4919,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"18715:13:22","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":4917,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18719:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4918,"nodeType":"ArrayTypeName","src":"18719:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":4921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18715:28:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"18689:54:22"},{"assignments":[4924],"declarations":[{"constant":false,"id":4924,"mutability":"mutable","name":"leafPos","nameLocation":"18761:7:22","nodeType":"VariableDeclaration","scope":5031,"src":"18753:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4923,"name":"uint256","nodeType":"ElementaryTypeName","src":"18753:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4926,"initialValue":{"hexValue":"30","id":4925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18771:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"18753:19:22"},{"assignments":[4928],"declarations":[{"constant":false,"id":4928,"mutability":"mutable","name":"hashPos","nameLocation":"18790:7:22","nodeType":"VariableDeclaration","scope":5031,"src":"18782:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4927,"name":"uint256","nodeType":"ElementaryTypeName","src":"18782:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4930,"initialValue":{"hexValue":"30","id":4929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18800:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"18782:19:22"},{"assignments":[4932],"declarations":[{"constant":false,"id":4932,"mutability":"mutable","name":"proofPos","nameLocation":"18819:8:22","nodeType":"VariableDeclaration","scope":5031,"src":"18811:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4931,"name":"uint256","nodeType":"ElementaryTypeName","src":"18811:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4934,"initialValue":{"hexValue":"30","id":4933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18830:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"18811:20:22"},{"body":{"id":4994,"nodeType":"Block","src":"19251:310:22","statements":[{"assignments":[4946],"declarations":[{"constant":false,"id":4946,"mutability":"mutable","name":"a","nameLocation":"19273:1:22","nodeType":"VariableDeclaration","scope":4994,"src":"19265:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4945,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19265:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4959,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4947,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4924,"src":"19277:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4948,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4890,"src":"19287:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19277:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":4954,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4916,"src":"19319:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4957,"indexExpression":{"id":4956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"19326:9:22","subExpression":{"id":4955,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4928,"src":"19326:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19319:17:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"19277:59:22","trueExpression":{"baseExpression":{"id":4950,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4884,"src":"19299:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4953,"indexExpression":{"id":4952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"19306:9:22","subExpression":{"id":4951,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4924,"src":"19306:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19299:17:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"19265:71:22"},{"assignments":[4961],"declarations":[{"constant":false,"id":4961,"mutability":"mutable","name":"b","nameLocation":"19358:1:22","nodeType":"VariableDeclaration","scope":4994,"src":"19350:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4960,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19350:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4983,"initialValue":{"condition":{"baseExpression":{"id":4962,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4881,"src":"19362:10:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},"id":4964,"indexExpression":{"id":4963,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4936,"src":"19373:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19362:13:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":4978,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4878,"src":"19474:5:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":4981,"indexExpression":{"id":4980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"19480:10:22","subExpression":{"id":4979,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4932,"src":"19480:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19474:17:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"19362:129:22","trueExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4965,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4924,"src":"19395:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4966,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4890,"src":"19405:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19395:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":4972,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4916,"src":"19437:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4975,"indexExpression":{"id":4974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"19444:9:22","subExpression":{"id":4973,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4928,"src":"19444:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19437:17:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"19395:59:22","trueExpression":{"baseExpression":{"id":4968,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4884,"src":"19417:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4971,"indexExpression":{"id":4970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"19424:9:22","subExpression":{"id":4969,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4924,"src":"19424:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19417:17:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":4977,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"19394:61:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"19350:141:22"},{"expression":{"id":4992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4984,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4916,"src":"19505:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":4986,"indexExpression":{"id":4985,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4936,"src":"19512:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"19505:9:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4989,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4946,"src":"19545:1:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4990,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4961,"src":"19548:1:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":4987,"name":"Hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4164,"src":"19517:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Hashes_$4164_$","typeString":"type(library Hashes)"}},"id":4988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19524:20:22","memberName":"commutativeKeccak256","nodeType":"MemberAccess","referencedDeclaration":4151,"src":"19517:27:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":4991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19517:33:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"19505:45:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4993,"nodeType":"ExpressionStatement","src":"19505:45:22"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4939,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4936,"src":"19227:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4940,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4895,"src":"19231:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19227:17:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4995,"initializationExpression":{"assignments":[4936],"declarations":[{"constant":false,"id":4936,"mutability":"mutable","name":"i","nameLocation":"19220:1:22","nodeType":"VariableDeclaration","scope":4995,"src":"19212:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4935,"name":"uint256","nodeType":"ElementaryTypeName","src":"19212:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4938,"initialValue":{"hexValue":"30","id":4937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19224:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"19212:13:22"},"loopExpression":{"expression":{"id":4943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"19246:3:22","subExpression":{"id":4942,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4936,"src":"19246:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4944,"nodeType":"ExpressionStatement","src":"19246:3:22"},"nodeType":"ForStatement","src":"19207:354:22"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4996,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4895,"src":"19575:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19591:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"19575:17:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5016,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4890,"src":"19816:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19828:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"19816:13:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5028,"nodeType":"Block","src":"19878:40:22","statements":[{"expression":{"baseExpression":{"id":5024,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4878,"src":"19899:5:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":5026,"indexExpression":{"hexValue":"30","id":5025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19905:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19899:8:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4888,"id":5027,"nodeType":"Return","src":"19892:15:22"}]},"id":5029,"nodeType":"IfStatement","src":"19812:106:22","trueBody":{"id":5023,"nodeType":"Block","src":"19831:41:22","statements":[{"expression":{"baseExpression":{"id":5019,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4884,"src":"19852:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":5021,"indexExpression":{"hexValue":"30","id":5020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19859:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19852:9:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4888,"id":5022,"nodeType":"Return","src":"19845:16:22"}]}},"id":5030,"nodeType":"IfStatement","src":"19571:347:22","trueBody":{"id":5015,"nodeType":"Block","src":"19594:212:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4999,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4932,"src":"19612:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":5000,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4878,"src":"19624:5:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":5001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19630:6:22","memberName":"length","nodeType":"MemberAccess","src":"19624:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19612:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5007,"nodeType":"IfStatement","src":"19608:100:22","trueBody":{"id":5006,"nodeType":"Block","src":"19638:70:22","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5003,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4172,"src":"19663:28:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19663:30:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5005,"nodeType":"RevertStatement","src":"19656:37:22"}]}},{"id":5014,"nodeType":"UncheckedBlock","src":"19721:75:22","statements":[{"expression":{"baseExpression":{"id":5008,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4916,"src":"19756:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":5012,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5009,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4895,"src":"19763:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19779:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"19763:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19756:25:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4888,"id":5013,"nodeType":"Return","src":"19749:32:22"}]}]}}]},"documentation":{"id":4875,"nodeType":"StructuredDocumentation","src":"16526:1102:22","text":" @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n respectively.\n This version handles multiproofs in calldata with the default hashing function.\n CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n NOTE: The _empty set_ (i.e. the case where `proof.length == 1 && leaves.length == 0`) is considered a no-op,\n and therefore a valid multiproof (i.e. it returns `proof[0]`). Consider disallowing this case if you're not\n validating the leaves elsewhere."},"id":5032,"implemented":true,"kind":"function","modifiers":[],"name":"processMultiProofCalldata","nameLocation":"17642:25:22","nodeType":"FunctionDefinition","parameters":{"id":4885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4878,"mutability":"mutable","name":"proof","nameLocation":"17696:5:22","nodeType":"VariableDeclaration","scope":5032,"src":"17677:24:22","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4876,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17677:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4877,"nodeType":"ArrayTypeName","src":"17677:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4881,"mutability":"mutable","name":"proofFlags","nameLocation":"17727:10:22","nodeType":"VariableDeclaration","scope":5032,"src":"17711:26:22","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":4879,"name":"bool","nodeType":"ElementaryTypeName","src":"17711:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4880,"nodeType":"ArrayTypeName","src":"17711:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":4884,"mutability":"mutable","name":"leaves","nameLocation":"17764:6:22","nodeType":"VariableDeclaration","scope":5032,"src":"17747:23:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4882,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17747:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4883,"nodeType":"ArrayTypeName","src":"17747:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"17667:109:22"},"returnParameters":{"id":4888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4887,"mutability":"mutable","name":"merkleRoot","nameLocation":"17808:10:22","nodeType":"VariableDeclaration","scope":5032,"src":"17800:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4886,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17800:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"17799:20:22"},"scope":5237,"src":"17633:2291:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5068,"nodeType":"Block","src":"20795:92:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":5066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5060,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5036,"src":"20838:5:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":5061,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5039,"src":"20845:10:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},{"id":5062,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5044,"src":"20857:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":5063,"name":"hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5054,"src":"20865:6:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}],"id":5059,"name":"processMultiProofCalldata","nodeType":"Identifier","overloadedDeclarations":[5032,5236],"referencedDeclaration":5236,"src":"20812:25:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_array$_t_bool_$dyn_calldata_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$_$returns$_t_bytes32_$","typeString":"function (bytes32[] calldata,bool[] calldata,bytes32[] memory,function (bytes32,bytes32) view returns (bytes32)) view returns (bytes32)"}},"id":5064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20812:60:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5065,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5041,"src":"20876:4:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"20812:68:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5058,"id":5067,"nodeType":"Return","src":"20805:75:22"}]},"documentation":{"id":5033,"nodeType":"StructuredDocumentation","src":"19930:600:22","text":" @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n This version handles multiproofs in calldata with a custom hashing function.\n CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n NOTE: Consider the case where `root == proof[0] && leaves.length == 0` as it will return `true`.\n The `leaves` must be validated independently. See {processMultiProofCalldata}."},"id":5069,"implemented":true,"kind":"function","modifiers":[],"name":"multiProofVerifyCalldata","nameLocation":"20544:24:22","nodeType":"FunctionDefinition","parameters":{"id":5055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5036,"mutability":"mutable","name":"proof","nameLocation":"20597:5:22","nodeType":"VariableDeclaration","scope":5069,"src":"20578:24:22","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5034,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20578:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5035,"nodeType":"ArrayTypeName","src":"20578:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":5039,"mutability":"mutable","name":"proofFlags","nameLocation":"20628:10:22","nodeType":"VariableDeclaration","scope":5069,"src":"20612:26:22","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":5037,"name":"bool","nodeType":"ElementaryTypeName","src":"20612:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5038,"nodeType":"ArrayTypeName","src":"20612:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":5041,"mutability":"mutable","name":"root","nameLocation":"20656:4:22","nodeType":"VariableDeclaration","scope":5069,"src":"20648:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5040,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20648:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5044,"mutability":"mutable","name":"leaves","nameLocation":"20687:6:22","nodeType":"VariableDeclaration","scope":5069,"src":"20670:23:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5042,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20670:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5043,"nodeType":"ArrayTypeName","src":"20670:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":5054,"mutability":"mutable","name":"hasher","nameLocation":"20753:6:22","nodeType":"VariableDeclaration","scope":5069,"src":"20703:56:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"typeName":{"id":5053,"nodeType":"FunctionTypeName","parameterTypes":{"id":5049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5046,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5053,"src":"20712:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5045,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20712:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5048,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5053,"src":"20721:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5047,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20721:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"20711:18:22"},"returnParameterTypes":{"id":5052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5051,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5053,"src":"20744:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5050,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20744:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"20743:9:22"},"src":"20703:56:22","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"visibility":"internal"},"visibility":"internal"}],"src":"20568:197:22"},"returnParameters":{"id":5058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5057,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5069,"src":"20789:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5056,"name":"bool","nodeType":"ElementaryTypeName","src":"20789:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20788:6:22"},"scope":5237,"src":"20535:352:22","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5235,"nodeType":"Block","src":"22250:2083:22","statements":[{"assignments":[5095],"declarations":[{"constant":false,"id":5095,"mutability":"mutable","name":"leavesLen","nameLocation":"22642:9:22","nodeType":"VariableDeclaration","scope":5235,"src":"22634:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5094,"name":"uint256","nodeType":"ElementaryTypeName","src":"22634:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5098,"initialValue":{"expression":{"id":5096,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5079,"src":"22654:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":5097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22661:6:22","memberName":"length","nodeType":"MemberAccess","src":"22654:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"22634:33:22"},{"assignments":[5100],"declarations":[{"constant":false,"id":5100,"mutability":"mutable","name":"proofFlagsLen","nameLocation":"22685:13:22","nodeType":"VariableDeclaration","scope":5235,"src":"22677:21:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5099,"name":"uint256","nodeType":"ElementaryTypeName","src":"22677:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5103,"initialValue":{"expression":{"id":5101,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5076,"src":"22701:10:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},"id":5102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22712:6:22","memberName":"length","nodeType":"MemberAccess","src":"22701:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"22677:41:22"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5104,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5095,"src":"22766:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":5105,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5073,"src":"22778:5:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":5106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22784:6:22","memberName":"length","nodeType":"MemberAccess","src":"22778:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22766:24:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5108,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5100,"src":"22794:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":5109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22810:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22794:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22766:45:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5116,"nodeType":"IfStatement","src":"22762:113:22","trueBody":{"id":5115,"nodeType":"Block","src":"22813:62:22","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5112,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4172,"src":"22834:28:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22834:30:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5114,"nodeType":"RevertStatement","src":"22827:37:22"}]}},{"assignments":[5121],"declarations":[{"constant":false,"id":5121,"mutability":"mutable","name":"hashes","nameLocation":"23136:6:22","nodeType":"VariableDeclaration","scope":5235,"src":"23119:23:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5119,"name":"bytes32","nodeType":"ElementaryTypeName","src":"23119:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5120,"nodeType":"ArrayTypeName","src":"23119:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":5127,"initialValue":{"arguments":[{"id":5125,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5100,"src":"23159:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5124,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"23145:13:22","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":5122,"name":"bytes32","nodeType":"ElementaryTypeName","src":"23149:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5123,"nodeType":"ArrayTypeName","src":"23149:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":5126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23145:28:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"23119:54:22"},{"assignments":[5129],"declarations":[{"constant":false,"id":5129,"mutability":"mutable","name":"leafPos","nameLocation":"23191:7:22","nodeType":"VariableDeclaration","scope":5235,"src":"23183:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5128,"name":"uint256","nodeType":"ElementaryTypeName","src":"23183:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5131,"initialValue":{"hexValue":"30","id":5130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23201:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23183:19:22"},{"assignments":[5133],"declarations":[{"constant":false,"id":5133,"mutability":"mutable","name":"hashPos","nameLocation":"23220:7:22","nodeType":"VariableDeclaration","scope":5235,"src":"23212:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5132,"name":"uint256","nodeType":"ElementaryTypeName","src":"23212:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5135,"initialValue":{"hexValue":"30","id":5134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23230:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23212:19:22"},{"assignments":[5137],"declarations":[{"constant":false,"id":5137,"mutability":"mutable","name":"proofPos","nameLocation":"23249:8:22","nodeType":"VariableDeclaration","scope":5235,"src":"23241:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5136,"name":"uint256","nodeType":"ElementaryTypeName","src":"23241:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5139,"initialValue":{"hexValue":"30","id":5138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23260:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23241:20:22"},{"body":{"id":5198,"nodeType":"Block","src":"23681:289:22","statements":[{"assignments":[5151],"declarations":[{"constant":false,"id":5151,"mutability":"mutable","name":"a","nameLocation":"23703:1:22","nodeType":"VariableDeclaration","scope":5198,"src":"23695:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5150,"name":"bytes32","nodeType":"ElementaryTypeName","src":"23695:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5164,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5152,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5129,"src":"23707:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5153,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5095,"src":"23717:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23707:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":5159,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5121,"src":"23749:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":5162,"indexExpression":{"id":5161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"23756:9:22","subExpression":{"id":5160,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5133,"src":"23756:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23749:17:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"23707:59:22","trueExpression":{"baseExpression":{"id":5155,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5079,"src":"23729:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":5158,"indexExpression":{"id":5157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"23736:9:22","subExpression":{"id":5156,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5129,"src":"23736:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23729:17:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"23695:71:22"},{"assignments":[5166],"declarations":[{"constant":false,"id":5166,"mutability":"mutable","name":"b","nameLocation":"23788:1:22","nodeType":"VariableDeclaration","scope":5198,"src":"23780:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5165,"name":"bytes32","nodeType":"ElementaryTypeName","src":"23780:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5188,"initialValue":{"condition":{"baseExpression":{"id":5167,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5076,"src":"23792:10:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},"id":5169,"indexExpression":{"id":5168,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5141,"src":"23803:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23792:13:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":5183,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5073,"src":"23904:5:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":5186,"indexExpression":{"id":5185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"23910:10:22","subExpression":{"id":5184,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5137,"src":"23910:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23904:17:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"23792:129:22","trueExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5170,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5129,"src":"23825:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5171,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5095,"src":"23835:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23825:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":5177,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5121,"src":"23867:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":5180,"indexExpression":{"id":5179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"23874:9:22","subExpression":{"id":5178,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5133,"src":"23874:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23867:17:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"23825:59:22","trueExpression":{"baseExpression":{"id":5173,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5079,"src":"23847:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":5176,"indexExpression":{"id":5175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"23854:9:22","subExpression":{"id":5174,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5129,"src":"23854:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23847:17:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":5182,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"23824:61:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"23780:141:22"},{"expression":{"id":5196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5189,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5121,"src":"23935:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":5191,"indexExpression":{"id":5190,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5141,"src":"23942:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"23935:9:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5193,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5151,"src":"23954:1:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5194,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5166,"src":"23957:1:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5192,"name":"hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5089,"src":"23947:6:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}},"id":5195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23947:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"23935:24:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5197,"nodeType":"ExpressionStatement","src":"23935:24:22"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5144,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5141,"src":"23657:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5145,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5100,"src":"23661:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23657:17:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5199,"initializationExpression":{"assignments":[5141],"declarations":[{"constant":false,"id":5141,"mutability":"mutable","name":"i","nameLocation":"23650:1:22","nodeType":"VariableDeclaration","scope":5199,"src":"23642:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5140,"name":"uint256","nodeType":"ElementaryTypeName","src":"23642:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5143,"initialValue":{"hexValue":"30","id":5142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23654:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23642:13:22"},"loopExpression":{"expression":{"id":5148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"23676:3:22","subExpression":{"id":5147,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5141,"src":"23676:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5149,"nodeType":"ExpressionStatement","src":"23676:3:22"},"nodeType":"ForStatement","src":"23637:333:22"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5200,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5100,"src":"23984:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24000:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"23984:17:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5220,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5095,"src":"24225:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24237:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"24225:13:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5232,"nodeType":"Block","src":"24287:40:22","statements":[{"expression":{"baseExpression":{"id":5228,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5073,"src":"24308:5:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":5230,"indexExpression":{"hexValue":"30","id":5229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24314:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24308:8:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":5093,"id":5231,"nodeType":"Return","src":"24301:15:22"}]},"id":5233,"nodeType":"IfStatement","src":"24221:106:22","trueBody":{"id":5227,"nodeType":"Block","src":"24240:41:22","statements":[{"expression":{"baseExpression":{"id":5223,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5079,"src":"24261:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":5225,"indexExpression":{"hexValue":"30","id":5224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24268:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24261:9:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":5093,"id":5226,"nodeType":"Return","src":"24254:16:22"}]}},"id":5234,"nodeType":"IfStatement","src":"23980:347:22","trueBody":{"id":5219,"nodeType":"Block","src":"24003:212:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5203,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5137,"src":"24021:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":5204,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5073,"src":"24033:5:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":5205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24039:6:22","memberName":"length","nodeType":"MemberAccess","src":"24033:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24021:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5211,"nodeType":"IfStatement","src":"24017:100:22","trueBody":{"id":5210,"nodeType":"Block","src":"24047:70:22","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5207,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4172,"src":"24072:28:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24072:30:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5209,"nodeType":"RevertStatement","src":"24065:37:22"}]}},{"id":5218,"nodeType":"UncheckedBlock","src":"24130:75:22","statements":[{"expression":{"baseExpression":{"id":5212,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5121,"src":"24165:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":5216,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5213,"name":"proofFlagsLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5100,"src":"24172:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24188:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24172:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24165:25:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":5093,"id":5217,"nodeType":"Return","src":"24158:32:22"}]}]}}]},"documentation":{"id":5070,"nodeType":"StructuredDocumentation","src":"20893:1099:22","text":" @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n respectively.\n This version handles multiproofs in calldata with a custom hashing function.\n CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n NOTE: The _empty set_ (i.e. the case where `proof.length == 1 && leaves.length == 0`) is considered a no-op,\n and therefore a valid multiproof (i.e. it returns `proof[0]`). Consider disallowing this case if you're not\n validating the leaves elsewhere."},"id":5236,"implemented":true,"kind":"function","modifiers":[],"name":"processMultiProofCalldata","nameLocation":"22006:25:22","nodeType":"FunctionDefinition","parameters":{"id":5090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5073,"mutability":"mutable","name":"proof","nameLocation":"22060:5:22","nodeType":"VariableDeclaration","scope":5236,"src":"22041:24:22","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5071,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22041:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5072,"nodeType":"ArrayTypeName","src":"22041:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":5076,"mutability":"mutable","name":"proofFlags","nameLocation":"22091:10:22","nodeType":"VariableDeclaration","scope":5236,"src":"22075:26:22","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":5074,"name":"bool","nodeType":"ElementaryTypeName","src":"22075:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5075,"nodeType":"ArrayTypeName","src":"22075:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":5079,"mutability":"mutable","name":"leaves","nameLocation":"22128:6:22","nodeType":"VariableDeclaration","scope":5236,"src":"22111:23:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5077,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22111:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5078,"nodeType":"ArrayTypeName","src":"22111:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":5089,"mutability":"mutable","name":"hasher","nameLocation":"22194:6:22","nodeType":"VariableDeclaration","scope":5236,"src":"22144:56:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"typeName":{"id":5088,"nodeType":"FunctionTypeName","parameterTypes":{"id":5084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5081,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5088,"src":"22153:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5080,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22153:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5083,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5088,"src":"22162:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5082,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22162:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"22152:18:22"},"returnParameterTypes":{"id":5087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5086,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5088,"src":"22185:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5085,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22185:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"22184:9:22"},"src":"22144:56:22","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"visibility":"internal"},"visibility":"internal"}],"src":"22031:175:22"},"returnParameters":{"id":5093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5092,"mutability":"mutable","name":"merkleRoot","nameLocation":"22238:10:22","nodeType":"VariableDeclaration","scope":5236,"src":"22230:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5091,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22230:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"22229:20:22"},"scope":5237,"src":"21997:2336:22","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":5238,"src":"1353:22982:22","usedErrors":[4172],"usedEvents":[]}],"src":"206:24130:22"},"id":22},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[5261],"IERC165":[5273]},"id":5262,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5239,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:23"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":5241,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5262,"sourceUnit":5274,"src":"140:38:23","symbolAliases":[{"foreign":{"id":5240,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5273,"src":"148:7:23","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5243,"name":"IERC165","nameLocations":["688:7:23"],"nodeType":"IdentifierPath","referencedDeclaration":5273,"src":"688:7:23"},"id":5244,"nodeType":"InheritanceSpecifier","src":"688:7:23"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":5242,"nodeType":"StructuredDocumentation","src":"180:479:23","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":5261,"linearizedBaseContracts":[5261,5273],"name":"ERC165","nameLocation":"678:6:23","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[5272],"body":{"id":5259,"nodeType":"Block","src":"812:64:23","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":5257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5252,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5247,"src":"829:11:23","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":5254,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5273,"src":"849:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$5273_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$5273_$","typeString":"type(contract IERC165)"}],"id":5253,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"844:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"844:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$5273","typeString":"type(contract IERC165)"}},"id":5256,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"858:11:23","memberName":"interfaceId","nodeType":"MemberAccess","src":"844:25:23","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"829:40:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5251,"id":5258,"nodeType":"Return","src":"822:47:23"}]},"documentation":{"id":5245,"nodeType":"StructuredDocumentation","src":"702:23:23","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":5260,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"739:17:23","nodeType":"FunctionDefinition","parameters":{"id":5248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5247,"mutability":"mutable","name":"interfaceId","nameLocation":"764:11:23","nodeType":"VariableDeclaration","scope":5260,"src":"757:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":5246,"name":"bytes4","nodeType":"ElementaryTypeName","src":"757:6:23","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"756:20:23"},"returnParameters":{"id":5251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5250,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5260,"src":"806:4:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5249,"name":"bool","nodeType":"ElementaryTypeName","src":"806:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"805:6:23"},"scope":5261,"src":"730:146:23","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":5262,"src":"660:218:23","usedErrors":[],"usedEvents":[]}],"src":"114:765:23"},"id":23},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[5273]},"id":5274,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5263,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"115:25:24"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":5264,"nodeType":"StructuredDocumentation","src":"142:280:24","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":5273,"linearizedBaseContracts":[5273],"name":"IERC165","nameLocation":"433:7:24","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5265,"nodeType":"StructuredDocumentation","src":"447:340:24","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":5272,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"801:17:24","nodeType":"FunctionDefinition","parameters":{"id":5268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5267,"mutability":"mutable","name":"interfaceId","nameLocation":"826:11:24","nodeType":"VariableDeclaration","scope":5272,"src":"819:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":5266,"name":"bytes4","nodeType":"ElementaryTypeName","src":"819:6:24","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"818:20:24"},"returnParameters":{"id":5271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5270,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5272,"src":"862:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5269,"name":"bool","nodeType":"ElementaryTypeName","src":"862:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"861:6:24"},"scope":5273,"src":"792:76:24","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":5274,"src":"423:447:24","usedErrors":[],"usedEvents":[]}],"src":"115:756:24"},"id":24},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[6894],"Panic":[3801],"SafeCast":[8659]},"id":6895,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5275,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:25"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":5277,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6895,"sourceUnit":3802,"src":"129:35:25","symbolAliases":[{"foreign":{"id":5276,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"137:5:25","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":5279,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6895,"sourceUnit":8660,"src":"165:40:25","symbolAliases":[{"foreign":{"id":5278,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8659,"src":"173:8:25","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":5280,"nodeType":"StructuredDocumentation","src":"207:73:25","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":6894,"linearizedBaseContracts":[6894],"name":"Math","nameLocation":"289:4:25","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":5285,"members":[{"id":5281,"name":"Floor","nameLocation":"324:5:25","nodeType":"EnumValue","src":"324:5:25"},{"id":5282,"name":"Ceil","nameLocation":"367:4:25","nodeType":"EnumValue","src":"367:4:25"},{"id":5283,"name":"Trunc","nameLocation":"409:5:25","nodeType":"EnumValue","src":"409:5:25"},{"id":5284,"name":"Expand","nameLocation":"439:6:25","nodeType":"EnumValue","src":"439:6:25"}],"name":"Rounding","nameLocation":"305:8:25","nodeType":"EnumDefinition","src":"300:169:25"},{"body":{"id":5298,"nodeType":"Block","src":"731:112:25","statements":[{"AST":{"nodeType":"YulBlock","src":"766:71:25","statements":[{"nodeType":"YulAssignment","src":"780:16:25","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"791:1:25"},{"name":"b","nodeType":"YulIdentifier","src":"794:1:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"787:3:25"},"nodeType":"YulFunctionCall","src":"787:9:25"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"780:3:25"}]},{"nodeType":"YulAssignment","src":"809:18:25","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"820:3:25"},{"name":"a","nodeType":"YulIdentifier","src":"825:1:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"817:2:25"},"nodeType":"YulFunctionCall","src":"817:10:25"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"809:4:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5288,"isOffset":false,"isSlot":false,"src":"791:1:25","valueSize":1},{"declaration":5288,"isOffset":false,"isSlot":false,"src":"825:1:25","valueSize":1},{"declaration":5290,"isOffset":false,"isSlot":false,"src":"794:1:25","valueSize":1},{"declaration":5293,"isOffset":false,"isSlot":false,"src":"809:4:25","valueSize":1},{"declaration":5295,"isOffset":false,"isSlot":false,"src":"780:3:25","valueSize":1},{"declaration":5295,"isOffset":false,"isSlot":false,"src":"820:3:25","valueSize":1}],"flags":["memory-safe"],"id":5297,"nodeType":"InlineAssembly","src":"741:96:25"}]},"documentation":{"id":5286,"nodeType":"StructuredDocumentation","src":"475:163:25","text":" @dev Return the 512-bit addition of two uint256.\n The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low."},"id":5299,"implemented":true,"kind":"function","modifiers":[],"name":"add512","nameLocation":"652:6:25","nodeType":"FunctionDefinition","parameters":{"id":5291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5288,"mutability":"mutable","name":"a","nameLocation":"667:1:25","nodeType":"VariableDeclaration","scope":5299,"src":"659:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5287,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5290,"mutability":"mutable","name":"b","nameLocation":"678:1:25","nodeType":"VariableDeclaration","scope":5299,"src":"670:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5289,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"658:22:25"},"returnParameters":{"id":5296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5293,"mutability":"mutable","name":"high","nameLocation":"712:4:25","nodeType":"VariableDeclaration","scope":5299,"src":"704:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5292,"name":"uint256","nodeType":"ElementaryTypeName","src":"704:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5295,"mutability":"mutable","name":"low","nameLocation":"726:3:25","nodeType":"VariableDeclaration","scope":5299,"src":"718:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5294,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"703:27:25"},"scope":6894,"src":"643:200:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5312,"nodeType":"Block","src":"1115:462:25","statements":[{"AST":{"nodeType":"YulBlock","src":"1437:134:25","statements":[{"nodeType":"YulVariableDeclaration","src":"1451:30:25","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"1468:1:25"},{"name":"b","nodeType":"YulIdentifier","src":"1471:1:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1478:1:25","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1474:3:25"},"nodeType":"YulFunctionCall","src":"1474:6:25"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"1461:6:25"},"nodeType":"YulFunctionCall","src":"1461:20:25"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"1455:2:25","type":""}]},{"nodeType":"YulAssignment","src":"1494:16:25","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"1505:1:25"},{"name":"b","nodeType":"YulIdentifier","src":"1508:1:25"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1501:3:25"},"nodeType":"YulFunctionCall","src":"1501:9:25"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"1494:3:25"}]},{"nodeType":"YulAssignment","src":"1523:38:25","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"1539:2:25"},{"name":"low","nodeType":"YulIdentifier","src":"1543:3:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1535:3:25"},"nodeType":"YulFunctionCall","src":"1535:12:25"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"1552:2:25"},{"name":"low","nodeType":"YulIdentifier","src":"1556:3:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1549:2:25"},"nodeType":"YulFunctionCall","src":"1549:11:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1531:3:25"},"nodeType":"YulFunctionCall","src":"1531:30:25"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"1523:4:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5302,"isOffset":false,"isSlot":false,"src":"1468:1:25","valueSize":1},{"declaration":5302,"isOffset":false,"isSlot":false,"src":"1505:1:25","valueSize":1},{"declaration":5304,"isOffset":false,"isSlot":false,"src":"1471:1:25","valueSize":1},{"declaration":5304,"isOffset":false,"isSlot":false,"src":"1508:1:25","valueSize":1},{"declaration":5307,"isOffset":false,"isSlot":false,"src":"1523:4:25","valueSize":1},{"declaration":5309,"isOffset":false,"isSlot":false,"src":"1494:3:25","valueSize":1},{"declaration":5309,"isOffset":false,"isSlot":false,"src":"1543:3:25","valueSize":1},{"declaration":5309,"isOffset":false,"isSlot":false,"src":"1556:3:25","valueSize":1}],"flags":["memory-safe"],"id":5311,"nodeType":"InlineAssembly","src":"1412:159:25"}]},"documentation":{"id":5300,"nodeType":"StructuredDocumentation","src":"849:173:25","text":" @dev Return the 512-bit multiplication of two uint256.\n The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low."},"id":5313,"implemented":true,"kind":"function","modifiers":[],"name":"mul512","nameLocation":"1036:6:25","nodeType":"FunctionDefinition","parameters":{"id":5305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5302,"mutability":"mutable","name":"a","nameLocation":"1051:1:25","nodeType":"VariableDeclaration","scope":5313,"src":"1043:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5301,"name":"uint256","nodeType":"ElementaryTypeName","src":"1043:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5304,"mutability":"mutable","name":"b","nameLocation":"1062:1:25","nodeType":"VariableDeclaration","scope":5313,"src":"1054:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5303,"name":"uint256","nodeType":"ElementaryTypeName","src":"1054:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:22:25"},"returnParameters":{"id":5310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5307,"mutability":"mutable","name":"high","nameLocation":"1096:4:25","nodeType":"VariableDeclaration","scope":5313,"src":"1088:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5306,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5309,"mutability":"mutable","name":"low","nameLocation":"1110:3:25","nodeType":"VariableDeclaration","scope":5313,"src":"1102:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5308,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1087:27:25"},"scope":6894,"src":"1027:550:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5347,"nodeType":"Block","src":"1784:149:25","statements":[{"id":5346,"nodeType":"UncheckedBlock","src":"1794:133:25","statements":[{"assignments":[5326],"declarations":[{"constant":false,"id":5326,"mutability":"mutable","name":"c","nameLocation":"1826:1:25","nodeType":"VariableDeclaration","scope":5346,"src":"1818:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5325,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5330,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5327,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5316,"src":"1830:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5328,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5318,"src":"1834:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1830:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1818:17:25"},{"expression":{"id":5335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5331,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5321,"src":"1849:7:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5332,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5326,"src":"1859:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":5333,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5316,"src":"1864:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1859:6:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1849:16:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5336,"nodeType":"ExpressionStatement","src":"1849:16:25"},{"expression":{"id":5344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5337,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5323,"src":"1879:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5338,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5326,"src":"1888:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":5341,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5321,"src":"1908:7:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5339,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8659,"src":"1892:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8659_$","typeString":"type(library SafeCast)"}},"id":5340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1901:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8658,"src":"1892:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1892:24:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1888:28:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1879:37:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5345,"nodeType":"ExpressionStatement","src":"1879:37:25"}]}]},"documentation":{"id":5314,"nodeType":"StructuredDocumentation","src":"1583:105:25","text":" @dev Returns the addition of two unsigned integers, with a success flag (no overflow)."},"id":5348,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"1702:6:25","nodeType":"FunctionDefinition","parameters":{"id":5319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5316,"mutability":"mutable","name":"a","nameLocation":"1717:1:25","nodeType":"VariableDeclaration","scope":5348,"src":"1709:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5315,"name":"uint256","nodeType":"ElementaryTypeName","src":"1709:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5318,"mutability":"mutable","name":"b","nameLocation":"1728:1:25","nodeType":"VariableDeclaration","scope":5348,"src":"1720:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5317,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1708:22:25"},"returnParameters":{"id":5324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5321,"mutability":"mutable","name":"success","nameLocation":"1759:7:25","nodeType":"VariableDeclaration","scope":5348,"src":"1754:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5320,"name":"bool","nodeType":"ElementaryTypeName","src":"1754:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5323,"mutability":"mutable","name":"result","nameLocation":"1776:6:25","nodeType":"VariableDeclaration","scope":5348,"src":"1768:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5322,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1753:30:25"},"scope":6894,"src":"1693:240:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5382,"nodeType":"Block","src":"2143:149:25","statements":[{"id":5381,"nodeType":"UncheckedBlock","src":"2153:133:25","statements":[{"assignments":[5361],"declarations":[{"constant":false,"id":5361,"mutability":"mutable","name":"c","nameLocation":"2185:1:25","nodeType":"VariableDeclaration","scope":5381,"src":"2177:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5360,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5365,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5362,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5351,"src":"2189:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5363,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5353,"src":"2193:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2189:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:17:25"},{"expression":{"id":5370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5366,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5356,"src":"2208:7:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5367,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5361,"src":"2218:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":5368,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5351,"src":"2223:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2218:6:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2208:16:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5371,"nodeType":"ExpressionStatement","src":"2208:16:25"},{"expression":{"id":5379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5372,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5358,"src":"2238:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5373,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5361,"src":"2247:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":5376,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5356,"src":"2267:7:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5374,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8659,"src":"2251:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8659_$","typeString":"type(library SafeCast)"}},"id":5375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2260:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8658,"src":"2251:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2251:24:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2247:28:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2238:37:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5380,"nodeType":"ExpressionStatement","src":"2238:37:25"}]}]},"documentation":{"id":5349,"nodeType":"StructuredDocumentation","src":"1939:108:25","text":" @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow)."},"id":5383,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"2061:6:25","nodeType":"FunctionDefinition","parameters":{"id":5354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5351,"mutability":"mutable","name":"a","nameLocation":"2076:1:25","nodeType":"VariableDeclaration","scope":5383,"src":"2068:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5350,"name":"uint256","nodeType":"ElementaryTypeName","src":"2068:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5353,"mutability":"mutable","name":"b","nameLocation":"2087:1:25","nodeType":"VariableDeclaration","scope":5383,"src":"2079:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5352,"name":"uint256","nodeType":"ElementaryTypeName","src":"2079:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2067:22:25"},"returnParameters":{"id":5359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5356,"mutability":"mutable","name":"success","nameLocation":"2118:7:25","nodeType":"VariableDeclaration","scope":5383,"src":"2113:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5355,"name":"bool","nodeType":"ElementaryTypeName","src":"2113:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5358,"mutability":"mutable","name":"result","nameLocation":"2135:6:25","nodeType":"VariableDeclaration","scope":5383,"src":"2127:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5357,"name":"uint256","nodeType":"ElementaryTypeName","src":"2127:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2112:30:25"},"scope":6894,"src":"2052:240:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5412,"nodeType":"Block","src":"2505:391:25","statements":[{"id":5411,"nodeType":"UncheckedBlock","src":"2515:375:25","statements":[{"assignments":[5396],"declarations":[{"constant":false,"id":5396,"mutability":"mutable","name":"c","nameLocation":"2547:1:25","nodeType":"VariableDeclaration","scope":5411,"src":"2539:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5395,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5400,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5397,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5386,"src":"2551:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5398,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5388,"src":"2555:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2551:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2539:17:25"},{"AST":{"nodeType":"YulBlock","src":"2595:188:25","statements":[{"nodeType":"YulAssignment","src":"2727:42:25","value":{"arguments":[{"arguments":[{"arguments":[{"name":"c","nodeType":"YulIdentifier","src":"2748:1:25"},{"name":"a","nodeType":"YulIdentifier","src":"2751:1:25"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2744:3:25"},"nodeType":"YulFunctionCall","src":"2744:9:25"},{"name":"b","nodeType":"YulIdentifier","src":"2755:1:25"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2741:2:25"},"nodeType":"YulFunctionCall","src":"2741:16:25"},{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"2766:1:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2759:6:25"},"nodeType":"YulFunctionCall","src":"2759:9:25"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2738:2:25"},"nodeType":"YulFunctionCall","src":"2738:31:25"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"2727:7:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5386,"isOffset":false,"isSlot":false,"src":"2751:1:25","valueSize":1},{"declaration":5386,"isOffset":false,"isSlot":false,"src":"2766:1:25","valueSize":1},{"declaration":5388,"isOffset":false,"isSlot":false,"src":"2755:1:25","valueSize":1},{"declaration":5396,"isOffset":false,"isSlot":false,"src":"2748:1:25","valueSize":1},{"declaration":5391,"isOffset":false,"isSlot":false,"src":"2727:7:25","valueSize":1}],"flags":["memory-safe"],"id":5401,"nodeType":"InlineAssembly","src":"2570:213:25"},{"expression":{"id":5409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5402,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5393,"src":"2842:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5403,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5396,"src":"2851:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":5406,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5391,"src":"2871:7:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5404,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8659,"src":"2855:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8659_$","typeString":"type(library SafeCast)"}},"id":5405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8658,"src":"2855:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:24:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2851:28:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2842:37:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5410,"nodeType":"ExpressionStatement","src":"2842:37:25"}]}]},"documentation":{"id":5384,"nodeType":"StructuredDocumentation","src":"2298:111:25","text":" @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow)."},"id":5413,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"2423:6:25","nodeType":"FunctionDefinition","parameters":{"id":5389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5386,"mutability":"mutable","name":"a","nameLocation":"2438:1:25","nodeType":"VariableDeclaration","scope":5413,"src":"2430:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5385,"name":"uint256","nodeType":"ElementaryTypeName","src":"2430:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5388,"mutability":"mutable","name":"b","nameLocation":"2449:1:25","nodeType":"VariableDeclaration","scope":5413,"src":"2441:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5387,"name":"uint256","nodeType":"ElementaryTypeName","src":"2441:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2429:22:25"},"returnParameters":{"id":5394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5391,"mutability":"mutable","name":"success","nameLocation":"2480:7:25","nodeType":"VariableDeclaration","scope":5413,"src":"2475:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5390,"name":"bool","nodeType":"ElementaryTypeName","src":"2475:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5393,"mutability":"mutable","name":"result","nameLocation":"2497:6:25","nodeType":"VariableDeclaration","scope":5413,"src":"2489:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5392,"name":"uint256","nodeType":"ElementaryTypeName","src":"2489:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2474:30:25"},"scope":6894,"src":"2414:482:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5433,"nodeType":"Block","src":"3111:231:25","statements":[{"id":5432,"nodeType":"UncheckedBlock","src":"3121:215:25","statements":[{"expression":{"id":5429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5425,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5421,"src":"3145:7:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5426,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5418,"src":"3155:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3159:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3155:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3145:15:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5430,"nodeType":"ExpressionStatement","src":"3145:15:25"},{"AST":{"nodeType":"YulBlock","src":"3199:127:25","statements":[{"nodeType":"YulAssignment","src":"3293:19:25","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"3307:1:25"},{"name":"b","nodeType":"YulIdentifier","src":"3310:1:25"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3303:3:25"},"nodeType":"YulFunctionCall","src":"3303:9:25"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3293:6:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5416,"isOffset":false,"isSlot":false,"src":"3307:1:25","valueSize":1},{"declaration":5418,"isOffset":false,"isSlot":false,"src":"3310:1:25","valueSize":1},{"declaration":5423,"isOffset":false,"isSlot":false,"src":"3293:6:25","valueSize":1}],"flags":["memory-safe"],"id":5431,"nodeType":"InlineAssembly","src":"3174:152:25"}]}]},"documentation":{"id":5414,"nodeType":"StructuredDocumentation","src":"2902:113:25","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":5434,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"3029:6:25","nodeType":"FunctionDefinition","parameters":{"id":5419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5416,"mutability":"mutable","name":"a","nameLocation":"3044:1:25","nodeType":"VariableDeclaration","scope":5434,"src":"3036:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5415,"name":"uint256","nodeType":"ElementaryTypeName","src":"3036:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5418,"mutability":"mutable","name":"b","nameLocation":"3055:1:25","nodeType":"VariableDeclaration","scope":5434,"src":"3047:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5417,"name":"uint256","nodeType":"ElementaryTypeName","src":"3047:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3035:22:25"},"returnParameters":{"id":5424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5421,"mutability":"mutable","name":"success","nameLocation":"3086:7:25","nodeType":"VariableDeclaration","scope":5434,"src":"3081:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5420,"name":"bool","nodeType":"ElementaryTypeName","src":"3081:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5423,"mutability":"mutable","name":"result","nameLocation":"3103:6:25","nodeType":"VariableDeclaration","scope":5434,"src":"3095:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5422,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3080:30:25"},"scope":6894,"src":"3020:322:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5454,"nodeType":"Block","src":"3567:231:25","statements":[{"id":5453,"nodeType":"UncheckedBlock","src":"3577:215:25","statements":[{"expression":{"id":5450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5446,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5442,"src":"3601:7:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5447,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5439,"src":"3611:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3615:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3611:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3601:15:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5451,"nodeType":"ExpressionStatement","src":"3601:15:25"},{"AST":{"nodeType":"YulBlock","src":"3655:127:25","statements":[{"nodeType":"YulAssignment","src":"3749:19:25","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"3763:1:25"},{"name":"b","nodeType":"YulIdentifier","src":"3766:1:25"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"3759:3:25"},"nodeType":"YulFunctionCall","src":"3759:9:25"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3749:6:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5437,"isOffset":false,"isSlot":false,"src":"3763:1:25","valueSize":1},{"declaration":5439,"isOffset":false,"isSlot":false,"src":"3766:1:25","valueSize":1},{"declaration":5444,"isOffset":false,"isSlot":false,"src":"3749:6:25","valueSize":1}],"flags":["memory-safe"],"id":5452,"nodeType":"InlineAssembly","src":"3630:152:25"}]}]},"documentation":{"id":5435,"nodeType":"StructuredDocumentation","src":"3348:123:25","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":5455,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"3485:6:25","nodeType":"FunctionDefinition","parameters":{"id":5440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5437,"mutability":"mutable","name":"a","nameLocation":"3500:1:25","nodeType":"VariableDeclaration","scope":5455,"src":"3492:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5436,"name":"uint256","nodeType":"ElementaryTypeName","src":"3492:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5439,"mutability":"mutable","name":"b","nameLocation":"3511:1:25","nodeType":"VariableDeclaration","scope":5455,"src":"3503:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5438,"name":"uint256","nodeType":"ElementaryTypeName","src":"3503:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3491:22:25"},"returnParameters":{"id":5445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5442,"mutability":"mutable","name":"success","nameLocation":"3542:7:25","nodeType":"VariableDeclaration","scope":5455,"src":"3537:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5441,"name":"bool","nodeType":"ElementaryTypeName","src":"3537:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5444,"mutability":"mutable","name":"result","nameLocation":"3559:6:25","nodeType":"VariableDeclaration","scope":5455,"src":"3551:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5443,"name":"uint256","nodeType":"ElementaryTypeName","src":"3551:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3536:30:25"},"scope":6894,"src":"3476:322:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5484,"nodeType":"Block","src":"3989:122:25","statements":[{"assignments":[5466,5468],"declarations":[{"constant":false,"id":5466,"mutability":"mutable","name":"success","nameLocation":"4005:7:25","nodeType":"VariableDeclaration","scope":5484,"src":"4000:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5465,"name":"bool","nodeType":"ElementaryTypeName","src":"4000:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5468,"mutability":"mutable","name":"result","nameLocation":"4022:6:25","nodeType":"VariableDeclaration","scope":5484,"src":"4014:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5467,"name":"uint256","nodeType":"ElementaryTypeName","src":"4014:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5473,"initialValue":{"arguments":[{"id":5470,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"4039:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5471,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5460,"src":"4042:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5469,"name":"tryAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5348,"src":"4032:6:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":5472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3999:45:25"},{"expression":{"arguments":[{"id":5475,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5466,"src":"4069:7:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":5476,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5468,"src":"4078:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":5479,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4091:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5478,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":5477,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4086:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4086:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":5481,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4100:3:25","memberName":"max","nodeType":"MemberAccess","src":"4086:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5474,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5562,"src":"4061:7:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":5482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4061:43:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5464,"id":5483,"nodeType":"Return","src":"4054:50:25"}]},"documentation":{"id":5456,"nodeType":"StructuredDocumentation","src":"3804:103:25","text":" @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":5485,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingAdd","nameLocation":"3921:13:25","nodeType":"FunctionDefinition","parameters":{"id":5461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5458,"mutability":"mutable","name":"a","nameLocation":"3943:1:25","nodeType":"VariableDeclaration","scope":5485,"src":"3935:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5457,"name":"uint256","nodeType":"ElementaryTypeName","src":"3935:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5460,"mutability":"mutable","name":"b","nameLocation":"3954:1:25","nodeType":"VariableDeclaration","scope":5485,"src":"3946:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5459,"name":"uint256","nodeType":"ElementaryTypeName","src":"3946:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3934:22:25"},"returnParameters":{"id":5464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5463,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5485,"src":"3980:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5462,"name":"uint256","nodeType":"ElementaryTypeName","src":"3980:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3979:9:25"},"scope":6894,"src":"3912:199:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5504,"nodeType":"Block","src":"4294:73:25","statements":[{"assignments":[null,5496],"declarations":[null,{"constant":false,"id":5496,"mutability":"mutable","name":"result","nameLocation":"4315:6:25","nodeType":"VariableDeclaration","scope":5504,"src":"4307:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5495,"name":"uint256","nodeType":"ElementaryTypeName","src":"4307:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5501,"initialValue":{"arguments":[{"id":5498,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5488,"src":"4332:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5499,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5490,"src":"4335:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5497,"name":"trySub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5383,"src":"4325:6:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":5500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4325:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4304:33:25"},{"expression":{"id":5502,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5496,"src":"4354:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5494,"id":5503,"nodeType":"Return","src":"4347:13:25"}]},"documentation":{"id":5486,"nodeType":"StructuredDocumentation","src":"4117:95:25","text":" @dev Unsigned saturating subtraction, bounds to zero instead of overflowing."},"id":5505,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingSub","nameLocation":"4226:13:25","nodeType":"FunctionDefinition","parameters":{"id":5491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5488,"mutability":"mutable","name":"a","nameLocation":"4248:1:25","nodeType":"VariableDeclaration","scope":5505,"src":"4240:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5487,"name":"uint256","nodeType":"ElementaryTypeName","src":"4240:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5490,"mutability":"mutable","name":"b","nameLocation":"4259:1:25","nodeType":"VariableDeclaration","scope":5505,"src":"4251:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5489,"name":"uint256","nodeType":"ElementaryTypeName","src":"4251:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4239:22:25"},"returnParameters":{"id":5494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5493,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5505,"src":"4285:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5492,"name":"uint256","nodeType":"ElementaryTypeName","src":"4285:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4284:9:25"},"scope":6894,"src":"4217:150:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5534,"nodeType":"Block","src":"4564:122:25","statements":[{"assignments":[5516,5518],"declarations":[{"constant":false,"id":5516,"mutability":"mutable","name":"success","nameLocation":"4580:7:25","nodeType":"VariableDeclaration","scope":5534,"src":"4575:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5515,"name":"bool","nodeType":"ElementaryTypeName","src":"4575:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5518,"mutability":"mutable","name":"result","nameLocation":"4597:6:25","nodeType":"VariableDeclaration","scope":5534,"src":"4589:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5517,"name":"uint256","nodeType":"ElementaryTypeName","src":"4589:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5523,"initialValue":{"arguments":[{"id":5520,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5508,"src":"4614:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5521,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5510,"src":"4617:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5519,"name":"tryMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5413,"src":"4607:6:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":5522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4607:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4574:45:25"},{"expression":{"arguments":[{"id":5525,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5516,"src":"4644:7:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":5526,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5518,"src":"4653:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":5529,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4666:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5528,"name":"uint256","nodeType":"ElementaryTypeName","src":"4666:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":5527,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4661:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4661:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":5531,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4675:3:25","memberName":"max","nodeType":"MemberAccess","src":"4661:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5524,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5562,"src":"4636:7:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":5532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4636:43:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5514,"id":5533,"nodeType":"Return","src":"4629:50:25"}]},"documentation":{"id":5506,"nodeType":"StructuredDocumentation","src":"4373:109:25","text":" @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":5535,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingMul","nameLocation":"4496:13:25","nodeType":"FunctionDefinition","parameters":{"id":5511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5508,"mutability":"mutable","name":"a","nameLocation":"4518:1:25","nodeType":"VariableDeclaration","scope":5535,"src":"4510:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5507,"name":"uint256","nodeType":"ElementaryTypeName","src":"4510:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5510,"mutability":"mutable","name":"b","nameLocation":"4529:1:25","nodeType":"VariableDeclaration","scope":5535,"src":"4521:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5509,"name":"uint256","nodeType":"ElementaryTypeName","src":"4521:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4509:22:25"},"returnParameters":{"id":5514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5513,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5535,"src":"4555:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5512,"name":"uint256","nodeType":"ElementaryTypeName","src":"4555:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4554:9:25"},"scope":6894,"src":"4487:199:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5561,"nodeType":"Block","src":"5158:207:25","statements":[{"id":5560,"nodeType":"UncheckedBlock","src":"5168:191:25","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5547,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5542,"src":"5306:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5548,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5540,"src":"5312:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5549,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5542,"src":"5316:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5312:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5551,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5311:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":5554,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5538,"src":"5337:9:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5552,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8659,"src":"5321:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8659_$","typeString":"type(library SafeCast)"}},"id":5553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5330:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8658,"src":"5321:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5321:26:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5311:36:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5557,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5310:38:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5306:42:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5546,"id":5559,"nodeType":"Return","src":"5299:49:25"}]}]},"documentation":{"id":5536,"nodeType":"StructuredDocumentation","src":"4692:374:25","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":5562,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"5080:7:25","nodeType":"FunctionDefinition","parameters":{"id":5543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5538,"mutability":"mutable","name":"condition","nameLocation":"5093:9:25","nodeType":"VariableDeclaration","scope":5562,"src":"5088:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5537,"name":"bool","nodeType":"ElementaryTypeName","src":"5088:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5540,"mutability":"mutable","name":"a","nameLocation":"5112:1:25","nodeType":"VariableDeclaration","scope":5562,"src":"5104:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5539,"name":"uint256","nodeType":"ElementaryTypeName","src":"5104:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5542,"mutability":"mutable","name":"b","nameLocation":"5123:1:25","nodeType":"VariableDeclaration","scope":5562,"src":"5115:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5541,"name":"uint256","nodeType":"ElementaryTypeName","src":"5115:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5087:38:25"},"returnParameters":{"id":5546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5545,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5562,"src":"5149:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5544,"name":"uint256","nodeType":"ElementaryTypeName","src":"5149:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5148:9:25"},"scope":6894,"src":"5071:294:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5580,"nodeType":"Block","src":"5502:44:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5573,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5565,"src":"5527:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5574,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5567,"src":"5531:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5527:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":5576,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5565,"src":"5534:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5577,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5567,"src":"5537:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5572,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5562,"src":"5519:7:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":5578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5519:20:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5571,"id":5579,"nodeType":"Return","src":"5512:27:25"}]},"documentation":{"id":5563,"nodeType":"StructuredDocumentation","src":"5371:59:25","text":" @dev Returns the largest of two numbers."},"id":5581,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"5444:3:25","nodeType":"FunctionDefinition","parameters":{"id":5568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5565,"mutability":"mutable","name":"a","nameLocation":"5456:1:25","nodeType":"VariableDeclaration","scope":5581,"src":"5448:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5564,"name":"uint256","nodeType":"ElementaryTypeName","src":"5448:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5567,"mutability":"mutable","name":"b","nameLocation":"5467:1:25","nodeType":"VariableDeclaration","scope":5581,"src":"5459:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5566,"name":"uint256","nodeType":"ElementaryTypeName","src":"5459:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5447:22:25"},"returnParameters":{"id":5571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5570,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5581,"src":"5493:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5569,"name":"uint256","nodeType":"ElementaryTypeName","src":"5493:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5492:9:25"},"scope":6894,"src":"5435:111:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5599,"nodeType":"Block","src":"5684:44:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5592,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5584,"src":"5709:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5593,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5586,"src":"5713:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5709:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":5595,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5584,"src":"5716:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5596,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5586,"src":"5719:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5591,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5562,"src":"5701:7:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":5597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5701:20:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5590,"id":5598,"nodeType":"Return","src":"5694:27:25"}]},"documentation":{"id":5582,"nodeType":"StructuredDocumentation","src":"5552:60:25","text":" @dev Returns the smallest of two numbers."},"id":5600,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"5626:3:25","nodeType":"FunctionDefinition","parameters":{"id":5587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5584,"mutability":"mutable","name":"a","nameLocation":"5638:1:25","nodeType":"VariableDeclaration","scope":5600,"src":"5630:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5583,"name":"uint256","nodeType":"ElementaryTypeName","src":"5630:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5586,"mutability":"mutable","name":"b","nameLocation":"5649:1:25","nodeType":"VariableDeclaration","scope":5600,"src":"5641:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5585,"name":"uint256","nodeType":"ElementaryTypeName","src":"5641:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5629:22:25"},"returnParameters":{"id":5590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5589,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5600,"src":"5675:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5588,"name":"uint256","nodeType":"ElementaryTypeName","src":"5675:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:9:25"},"scope":6894,"src":"5617:111:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5622,"nodeType":"Block","src":"5912:82:25","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5610,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5603,"src":"5967:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":5611,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5605,"src":"5971:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5967:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5613,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5966:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5614,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5603,"src":"5977:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5615,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5605,"src":"5981:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5977:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5617,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5976:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":5618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5986:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5976:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5966:21:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5609,"id":5621,"nodeType":"Return","src":"5959:28:25"}]},"documentation":{"id":5601,"nodeType":"StructuredDocumentation","src":"5734:102:25","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":5623,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"5850:7:25","nodeType":"FunctionDefinition","parameters":{"id":5606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5603,"mutability":"mutable","name":"a","nameLocation":"5866:1:25","nodeType":"VariableDeclaration","scope":5623,"src":"5858:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5602,"name":"uint256","nodeType":"ElementaryTypeName","src":"5858:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5605,"mutability":"mutable","name":"b","nameLocation":"5877:1:25","nodeType":"VariableDeclaration","scope":5623,"src":"5869:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5604,"name":"uint256","nodeType":"ElementaryTypeName","src":"5869:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5857:22:25"},"returnParameters":{"id":5609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5608,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5623,"src":"5903:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5607,"name":"uint256","nodeType":"ElementaryTypeName","src":"5903:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5902:9:25"},"scope":6894,"src":"5841:153:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5663,"nodeType":"Block","src":"6286:633:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5633,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5628,"src":"6300:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6305:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6300:6:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5644,"nodeType":"IfStatement","src":"6296:150:25","trueBody":{"id":5643,"nodeType":"Block","src":"6308:138:25","statements":[{"expression":{"arguments":[{"expression":{"id":5639,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"6412:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3801_$","typeString":"type(library Panic)"}},"id":5640,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6418:16:25","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":3768,"src":"6412:22:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5636,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"6400:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3801_$","typeString":"type(library Panic)"}},"id":5638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6406:5:25","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":3800,"src":"6400:11:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6400:35:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5642,"nodeType":"ExpressionStatement","src":"6400:35:25"}]}},{"id":5662,"nodeType":"UncheckedBlock","src":"6829:84:25","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5647,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5626,"src":"6876:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6880:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6876:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5645,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8659,"src":"6860:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8659_$","typeString":"type(library SafeCast)"}},"id":5646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6869:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8658,"src":"6860:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6860:22:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5651,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5626,"src":"6887:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6891:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6887:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5654,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6886:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5655,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5628,"src":"6896:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6886:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":5657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6900:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6886:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5659,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6885:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6860:42:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5632,"id":5661,"nodeType":"Return","src":"6853:49:25"}]}]},"documentation":{"id":5624,"nodeType":"StructuredDocumentation","src":"6000:210:25","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":5664,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"6224:7:25","nodeType":"FunctionDefinition","parameters":{"id":5629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5626,"mutability":"mutable","name":"a","nameLocation":"6240:1:25","nodeType":"VariableDeclaration","scope":5664,"src":"6232:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5625,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5628,"mutability":"mutable","name":"b","nameLocation":"6251:1:25","nodeType":"VariableDeclaration","scope":5664,"src":"6243:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5627,"name":"uint256","nodeType":"ElementaryTypeName","src":"6243:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6231:22:25"},"returnParameters":{"id":5632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5631,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5664,"src":"6277:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5630,"name":"uint256","nodeType":"ElementaryTypeName","src":"6277:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6276:9:25"},"scope":6894,"src":"6215:704:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5799,"nodeType":"Block","src":"7340:3585:25","statements":[{"id":5798,"nodeType":"UncheckedBlock","src":"7350:3569:25","statements":[{"assignments":[5677,5679],"declarations":[{"constant":false,"id":5677,"mutability":"mutable","name":"high","nameLocation":"7383:4:25","nodeType":"VariableDeclaration","scope":5798,"src":"7375:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5676,"name":"uint256","nodeType":"ElementaryTypeName","src":"7375:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5679,"mutability":"mutable","name":"low","nameLocation":"7397:3:25","nodeType":"VariableDeclaration","scope":5798,"src":"7389:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5678,"name":"uint256","nodeType":"ElementaryTypeName","src":"7389:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5684,"initialValue":{"arguments":[{"id":5681,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5667,"src":"7411:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5682,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5669,"src":"7414:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5680,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5313,"src":"7404:6:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":5683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7404:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"7374:42:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5685,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5677,"src":"7498:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7506:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7498:9:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5693,"nodeType":"IfStatement","src":"7494:365:25","trueBody":{"id":5692,"nodeType":"Block","src":"7509:350:25","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5688,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5679,"src":"7827:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5689,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5671,"src":"7833:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7827:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5675,"id":5691,"nodeType":"Return","src":"7820:24:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5694,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5671,"src":"7969:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":5695,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5677,"src":"7984:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7969:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5712,"nodeType":"IfStatement","src":"7965:142:25","trueBody":{"id":5711,"nodeType":"Block","src":"7990:117:25","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5701,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5671,"src":"8028:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8043:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8028:16:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":5704,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"8046:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3801_$","typeString":"type(library Panic)"}},"id":5705,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8052:16:25","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":3768,"src":"8046:22:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5706,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"8070:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3801_$","typeString":"type(library Panic)"}},"id":5707,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8076:14:25","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":3764,"src":"8070:20:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5700,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5562,"src":"8020:7:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":5708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8020:71:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5697,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"8008:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3801_$","typeString":"type(library Panic)"}},"id":5699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8014:5:25","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":3800,"src":"8008:11:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8008:84:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5710,"nodeType":"ExpressionStatement","src":"8008:84:25"}]}},{"assignments":[5714],"declarations":[{"constant":false,"id":5714,"mutability":"mutable","name":"remainder","nameLocation":"8367:9:25","nodeType":"VariableDeclaration","scope":5798,"src":"8359:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5713,"name":"uint256","nodeType":"ElementaryTypeName","src":"8359:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5715,"nodeType":"VariableDeclarationStatement","src":"8359:17:25"},{"AST":{"nodeType":"YulBlock","src":"8415:283:25","statements":[{"nodeType":"YulAssignment","src":"8484:38:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8504:1:25"},{"name":"y","nodeType":"YulIdentifier","src":"8507:1:25"},{"name":"denominator","nodeType":"YulIdentifier","src":"8510:11:25"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"8497:6:25"},"nodeType":"YulFunctionCall","src":"8497:25:25"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"8484:9:25"}]},{"nodeType":"YulAssignment","src":"8604:37:25","value":{"arguments":[{"name":"high","nodeType":"YulIdentifier","src":"8616:4:25"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"8625:9:25"},{"name":"low","nodeType":"YulIdentifier","src":"8636:3:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8622:2:25"},"nodeType":"YulFunctionCall","src":"8622:18:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8612:3:25"},"nodeType":"YulFunctionCall","src":"8612:29:25"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"8604:4:25"}]},{"nodeType":"YulAssignment","src":"8658:26:25","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"8669:3:25"},{"name":"remainder","nodeType":"YulIdentifier","src":"8674:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8665:3:25"},"nodeType":"YulFunctionCall","src":"8665:19:25"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"8658:3:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5671,"isOffset":false,"isSlot":false,"src":"8510:11:25","valueSize":1},{"declaration":5677,"isOffset":false,"isSlot":false,"src":"8604:4:25","valueSize":1},{"declaration":5677,"isOffset":false,"isSlot":false,"src":"8616:4:25","valueSize":1},{"declaration":5679,"isOffset":false,"isSlot":false,"src":"8636:3:25","valueSize":1},{"declaration":5679,"isOffset":false,"isSlot":false,"src":"8658:3:25","valueSize":1},{"declaration":5679,"isOffset":false,"isSlot":false,"src":"8669:3:25","valueSize":1},{"declaration":5714,"isOffset":false,"isSlot":false,"src":"8484:9:25","valueSize":1},{"declaration":5714,"isOffset":false,"isSlot":false,"src":"8625:9:25","valueSize":1},{"declaration":5714,"isOffset":false,"isSlot":false,"src":"8674:9:25","valueSize":1},{"declaration":5667,"isOffset":false,"isSlot":false,"src":"8504:1:25","valueSize":1},{"declaration":5669,"isOffset":false,"isSlot":false,"src":"8507:1:25","valueSize":1}],"flags":["memory-safe"],"id":5716,"nodeType":"InlineAssembly","src":"8390:308:25"},{"assignments":[5718],"declarations":[{"constant":false,"id":5718,"mutability":"mutable","name":"twos","nameLocation":"8910:4:25","nodeType":"VariableDeclaration","scope":5798,"src":"8902:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5717,"name":"uint256","nodeType":"ElementaryTypeName","src":"8902:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5725,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5719,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5671,"src":"8917:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":5720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8932:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5721,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5671,"src":"8936:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8932:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5723,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8931:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8917:31:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8902:46:25"},{"AST":{"nodeType":"YulBlock","src":"8987:359:25","statements":[{"nodeType":"YulAssignment","src":"9052:37:25","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"9071:11:25"},{"name":"twos","nodeType":"YulIdentifier","src":"9084:4:25"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9067:3:25"},"nodeType":"YulFunctionCall","src":"9067:22:25"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"9052:11:25"}]},{"nodeType":"YulAssignment","src":"9153:21:25","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"9164:3:25"},{"name":"twos","nodeType":"YulIdentifier","src":"9169:4:25"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9160:3:25"},"nodeType":"YulFunctionCall","src":"9160:14:25"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"9153:3:25"}]},{"nodeType":"YulAssignment","src":"9293:39:25","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9313:1:25","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"9316:4:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9309:3:25"},"nodeType":"YulFunctionCall","src":"9309:12:25"},{"name":"twos","nodeType":"YulIdentifier","src":"9323:4:25"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9305:3:25"},"nodeType":"YulFunctionCall","src":"9305:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"9330:1:25","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9301:3:25"},"nodeType":"YulFunctionCall","src":"9301:31:25"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"9293:4:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5671,"isOffset":false,"isSlot":false,"src":"9052:11:25","valueSize":1},{"declaration":5671,"isOffset":false,"isSlot":false,"src":"9071:11:25","valueSize":1},{"declaration":5679,"isOffset":false,"isSlot":false,"src":"9153:3:25","valueSize":1},{"declaration":5679,"isOffset":false,"isSlot":false,"src":"9164:3:25","valueSize":1},{"declaration":5718,"isOffset":false,"isSlot":false,"src":"9084:4:25","valueSize":1},{"declaration":5718,"isOffset":false,"isSlot":false,"src":"9169:4:25","valueSize":1},{"declaration":5718,"isOffset":false,"isSlot":false,"src":"9293:4:25","valueSize":1},{"declaration":5718,"isOffset":false,"isSlot":false,"src":"9316:4:25","valueSize":1},{"declaration":5718,"isOffset":false,"isSlot":false,"src":"9323:4:25","valueSize":1}],"flags":["memory-safe"],"id":5726,"nodeType":"InlineAssembly","src":"8962:384:25"},{"expression":{"id":5731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5727,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5679,"src":"9409:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5728,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5677,"src":"9416:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5729,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5718,"src":"9423:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9416:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9409:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5732,"nodeType":"ExpressionStatement","src":"9409:18:25"},{"assignments":[5734],"declarations":[{"constant":false,"id":5734,"mutability":"mutable","name":"inverse","nameLocation":"9770:7:25","nodeType":"VariableDeclaration","scope":5798,"src":"9762:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5733,"name":"uint256","nodeType":"ElementaryTypeName","src":"9762:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5741,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":5735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9781:1:25","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5736,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5671,"src":"9785:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9781:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5738,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9780:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":5739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9800:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9780:21:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9762:39:25"},{"expression":{"id":5748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5742,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5734,"src":"10018:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10029:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5744,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5671,"src":"10033:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5745,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5734,"src":"10047:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10033:21:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10029:25:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10018:36:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5749,"nodeType":"ExpressionStatement","src":"10018:36:25"},{"expression":{"id":5756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5750,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5734,"src":"10088:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10099:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5752,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5671,"src":"10103:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5753,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5734,"src":"10117:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:21:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10099:25:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10088:36:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5757,"nodeType":"ExpressionStatement","src":"10088:36:25"},{"expression":{"id":5764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5758,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5734,"src":"10160:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10171:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5760,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5671,"src":"10175:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5761,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5734,"src":"10189:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10175:21:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10171:25:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10160:36:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5765,"nodeType":"ExpressionStatement","src":"10160:36:25"},{"expression":{"id":5772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5766,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5734,"src":"10231:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10242:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5768,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5671,"src":"10246:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5769,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5734,"src":"10260:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10246:21:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10242:25:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10231:36:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5773,"nodeType":"ExpressionStatement","src":"10231:36:25"},{"expression":{"id":5780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5774,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5734,"src":"10304:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10315:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5776,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5671,"src":"10319:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5777,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5734,"src":"10333:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10319:21:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10315:25:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10304:36:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5781,"nodeType":"ExpressionStatement","src":"10304:36:25"},{"expression":{"id":5788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5782,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5734,"src":"10378:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10389:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5784,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5671,"src":"10393:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5785,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5734,"src":"10407:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10393:21:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10389:25:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10378:36:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5789,"nodeType":"ExpressionStatement","src":"10378:36:25"},{"expression":{"id":5794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5790,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5674,"src":"10859:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5791,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5679,"src":"10868:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5792,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5734,"src":"10874:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10868:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10859:22:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5795,"nodeType":"ExpressionStatement","src":"10859:22:25"},{"expression":{"id":5796,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5674,"src":"10902:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5675,"id":5797,"nodeType":"Return","src":"10895:13:25"}]}]},"documentation":{"id":5665,"nodeType":"StructuredDocumentation","src":"6925:312:25","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":5800,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"7251:6:25","nodeType":"FunctionDefinition","parameters":{"id":5672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5667,"mutability":"mutable","name":"x","nameLocation":"7266:1:25","nodeType":"VariableDeclaration","scope":5800,"src":"7258:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5666,"name":"uint256","nodeType":"ElementaryTypeName","src":"7258:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5669,"mutability":"mutable","name":"y","nameLocation":"7277:1:25","nodeType":"VariableDeclaration","scope":5800,"src":"7269:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5668,"name":"uint256","nodeType":"ElementaryTypeName","src":"7269:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5671,"mutability":"mutable","name":"denominator","nameLocation":"7288:11:25","nodeType":"VariableDeclaration","scope":5800,"src":"7280:19:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5670,"name":"uint256","nodeType":"ElementaryTypeName","src":"7280:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7257:43:25"},"returnParameters":{"id":5675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5674,"mutability":"mutable","name":"result","nameLocation":"7332:6:25","nodeType":"VariableDeclaration","scope":5800,"src":"7324:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5673,"name":"uint256","nodeType":"ElementaryTypeName","src":"7324:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7323:16:25"},"scope":6894,"src":"7242:3683:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5836,"nodeType":"Block","src":"11164:128:25","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5816,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5803,"src":"11188:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5817,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5805,"src":"11191:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5818,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5807,"src":"11194:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5815,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[5800,5837],"referencedDeclaration":5800,"src":"11181:6:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":5819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11181:25:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5823,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5810,"src":"11242:8:25","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5285","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$5285","typeString":"enum Math.Rounding"}],"id":5822,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6893,"src":"11225:16:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$5285_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11225:26:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5826,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5803,"src":"11262:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5827,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5805,"src":"11265:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5828,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5807,"src":"11268:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5825,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"11255:6:25","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":5829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11255:25:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11283:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11255:29:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11225:59:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5820,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8659,"src":"11209:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8659_$","typeString":"type(library SafeCast)"}},"id":5821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11218:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8658,"src":"11209:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11209:76:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11181:104:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5814,"id":5835,"nodeType":"Return","src":"11174:111:25"}]},"documentation":{"id":5801,"nodeType":"StructuredDocumentation","src":"10931:118:25","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":5837,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"11063:6:25","nodeType":"FunctionDefinition","parameters":{"id":5811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5803,"mutability":"mutable","name":"x","nameLocation":"11078:1:25","nodeType":"VariableDeclaration","scope":5837,"src":"11070:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5802,"name":"uint256","nodeType":"ElementaryTypeName","src":"11070:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5805,"mutability":"mutable","name":"y","nameLocation":"11089:1:25","nodeType":"VariableDeclaration","scope":5837,"src":"11081:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5804,"name":"uint256","nodeType":"ElementaryTypeName","src":"11081:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5807,"mutability":"mutable","name":"denominator","nameLocation":"11100:11:25","nodeType":"VariableDeclaration","scope":5837,"src":"11092:19:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5806,"name":"uint256","nodeType":"ElementaryTypeName","src":"11092:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5810,"mutability":"mutable","name":"rounding","nameLocation":"11122:8:25","nodeType":"VariableDeclaration","scope":5837,"src":"11113:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5285","typeString":"enum Math.Rounding"},"typeName":{"id":5809,"nodeType":"UserDefinedTypeName","pathNode":{"id":5808,"name":"Rounding","nameLocations":["11113:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":5285,"src":"11113:8:25"},"referencedDeclaration":5285,"src":"11113:8:25","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5285","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11069:62:25"},"returnParameters":{"id":5814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5813,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5837,"src":"11155:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5812,"name":"uint256","nodeType":"ElementaryTypeName","src":"11155:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11154:9:25"},"scope":6894,"src":"11054:238:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5886,"nodeType":"Block","src":"11500:245:25","statements":[{"id":5885,"nodeType":"UncheckedBlock","src":"11510:229:25","statements":[{"assignments":[5850,5852],"declarations":[{"constant":false,"id":5850,"mutability":"mutable","name":"high","nameLocation":"11543:4:25","nodeType":"VariableDeclaration","scope":5885,"src":"11535:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5849,"name":"uint256","nodeType":"ElementaryTypeName","src":"11535:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5852,"mutability":"mutable","name":"low","nameLocation":"11557:3:25","nodeType":"VariableDeclaration","scope":5885,"src":"11549:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5851,"name":"uint256","nodeType":"ElementaryTypeName","src":"11549:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5857,"initialValue":{"arguments":[{"id":5854,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5840,"src":"11571:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5855,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5842,"src":"11574:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5853,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5313,"src":"11564:6:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":5856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11564:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11534:42:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5858,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5850,"src":"11594:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11602:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":5860,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5844,"src":"11607:1:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11602:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11594:14:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5871,"nodeType":"IfStatement","src":"11590:86:25","trueBody":{"id":5870,"nodeType":"Block","src":"11610:66:25","statements":[{"expression":{"arguments":[{"expression":{"id":5866,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"11640:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3801_$","typeString":"type(library Panic)"}},"id":5867,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11646:14:25","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":3764,"src":"11640:20:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5863,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"11628:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3801_$","typeString":"type(library Panic)"}},"id":5865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11634:5:25","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":3800,"src":"11628:11:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:33:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5869,"nodeType":"ExpressionStatement","src":"11628:33:25"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5872,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5850,"src":"11697:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":5875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":5873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11706:3:25","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5874,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5844,"src":"11712:1:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11706:7:25","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":5876,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11705:9:25","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"11697:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5878,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11696:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5879,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5852,"src":"11719:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5880,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5844,"src":"11726:1:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11719:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5882,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11718:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11696:32:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5848,"id":5884,"nodeType":"Return","src":"11689:39:25"}]}]},"documentation":{"id":5838,"nodeType":"StructuredDocumentation","src":"11298:111:25","text":" @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256."},"id":5887,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11423:6:25","nodeType":"FunctionDefinition","parameters":{"id":5845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5840,"mutability":"mutable","name":"x","nameLocation":"11438:1:25","nodeType":"VariableDeclaration","scope":5887,"src":"11430:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5839,"name":"uint256","nodeType":"ElementaryTypeName","src":"11430:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5842,"mutability":"mutable","name":"y","nameLocation":"11449:1:25","nodeType":"VariableDeclaration","scope":5887,"src":"11441:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5841,"name":"uint256","nodeType":"ElementaryTypeName","src":"11441:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5844,"mutability":"mutable","name":"n","nameLocation":"11458:1:25","nodeType":"VariableDeclaration","scope":5887,"src":"11452:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5843,"name":"uint8","nodeType":"ElementaryTypeName","src":"11452:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"11429:31:25"},"returnParameters":{"id":5848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5847,"mutability":"mutable","name":"result","nameLocation":"11492:6:25","nodeType":"VariableDeclaration","scope":5887,"src":"11484:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5846,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:16:25"},"scope":6894,"src":"11414:331:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5925,"nodeType":"Block","src":"11963:113:25","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5903,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5890,"src":"11987:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5904,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5892,"src":"11990:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5905,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5894,"src":"11993:1:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":5902,"name":"mulShr","nodeType":"Identifier","overloadedDeclarations":[5887,5926],"referencedDeclaration":5887,"src":"11980:6:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint8) pure returns (uint256)"}},"id":5906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11980:15:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5910,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5897,"src":"12031:8:25","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5285","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$5285","typeString":"enum Math.Rounding"}],"id":5909,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6893,"src":"12014:16:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$5285_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12014:26:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5913,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5890,"src":"12051:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5914,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5892,"src":"12054:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12057:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":5916,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5894,"src":"12062:1:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12057:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5912,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"12044:6:25","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":5918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12044:20:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12044:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12014:54:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5907,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8659,"src":"11998:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8659_$","typeString":"type(library SafeCast)"}},"id":5908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12007:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8658,"src":"11998:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11998:71:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11980:89:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5901,"id":5924,"nodeType":"Return","src":"11973:96:25"}]},"documentation":{"id":5888,"nodeType":"StructuredDocumentation","src":"11751:109:25","text":" @dev Calculates x * y >> n with full precision, following the selected rounding direction."},"id":5926,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11874:6:25","nodeType":"FunctionDefinition","parameters":{"id":5898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5890,"mutability":"mutable","name":"x","nameLocation":"11889:1:25","nodeType":"VariableDeclaration","scope":5926,"src":"11881:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5889,"name":"uint256","nodeType":"ElementaryTypeName","src":"11881:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5892,"mutability":"mutable","name":"y","nameLocation":"11900:1:25","nodeType":"VariableDeclaration","scope":5926,"src":"11892:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5891,"name":"uint256","nodeType":"ElementaryTypeName","src":"11892:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5894,"mutability":"mutable","name":"n","nameLocation":"11909:1:25","nodeType":"VariableDeclaration","scope":5926,"src":"11903:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5893,"name":"uint8","nodeType":"ElementaryTypeName","src":"11903:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5897,"mutability":"mutable","name":"rounding","nameLocation":"11921:8:25","nodeType":"VariableDeclaration","scope":5926,"src":"11912:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5285","typeString":"enum Math.Rounding"},"typeName":{"id":5896,"nodeType":"UserDefinedTypeName","pathNode":{"id":5895,"name":"Rounding","nameLocations":["11912:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":5285,"src":"11912:8:25"},"referencedDeclaration":5285,"src":"11912:8:25","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5285","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11880:50:25"},"returnParameters":{"id":5901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5900,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5926,"src":"11954:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5899,"name":"uint256","nodeType":"ElementaryTypeName","src":"11954:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11953:9:25"},"scope":6894,"src":"11865:211:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6022,"nodeType":"Block","src":"12710:1849:25","statements":[{"id":6021,"nodeType":"UncheckedBlock","src":"12720:1833:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5936,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5931,"src":"12748:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12753:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12748:6:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5941,"nodeType":"IfStatement","src":"12744:20:25","trueBody":{"expression":{"hexValue":"30","id":5939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":5935,"id":5940,"nodeType":"Return","src":"12756:8:25"}},{"assignments":[5943],"declarations":[{"constant":false,"id":5943,"mutability":"mutable","name":"remainder","nameLocation":"13243:9:25","nodeType":"VariableDeclaration","scope":6021,"src":"13235:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5942,"name":"uint256","nodeType":"ElementaryTypeName","src":"13235:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5947,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5944,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5929,"src":"13255:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":5945,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5931,"src":"13259:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13255:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13235:25:25"},{"assignments":[5949],"declarations":[{"constant":false,"id":5949,"mutability":"mutable","name":"gcd","nameLocation":"13282:3:25","nodeType":"VariableDeclaration","scope":6021,"src":"13274:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5948,"name":"uint256","nodeType":"ElementaryTypeName","src":"13274:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5951,"initialValue":{"id":5950,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5931,"src":"13288:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13274:15:25"},{"assignments":[5953],"declarations":[{"constant":false,"id":5953,"mutability":"mutable","name":"x","nameLocation":"13432:1:25","nodeType":"VariableDeclaration","scope":6021,"src":"13425:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5952,"name":"int256","nodeType":"ElementaryTypeName","src":"13425:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":5955,"initialValue":{"hexValue":"30","id":5954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13436:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13425:12:25"},{"assignments":[5957],"declarations":[{"constant":false,"id":5957,"mutability":"mutable","name":"y","nameLocation":"13458:1:25","nodeType":"VariableDeclaration","scope":6021,"src":"13451:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5956,"name":"int256","nodeType":"ElementaryTypeName","src":"13451:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":5959,"initialValue":{"hexValue":"31","id":5958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13462:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"13451:12:25"},{"body":{"id":5996,"nodeType":"Block","src":"13501:882:25","statements":[{"assignments":[5964],"declarations":[{"constant":false,"id":5964,"mutability":"mutable","name":"quotient","nameLocation":"13527:8:25","nodeType":"VariableDeclaration","scope":5996,"src":"13519:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5963,"name":"uint256","nodeType":"ElementaryTypeName","src":"13519:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5968,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5965,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5949,"src":"13538:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5966,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5943,"src":"13544:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13538:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13519:34:25"},{"expression":{"id":5979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":5969,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5949,"src":"13573:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5970,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5943,"src":"13578:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5971,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13572:16:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":5972,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5943,"src":"13678:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5973,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5949,"src":"13923:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5974,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5943,"src":"13929:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5975,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5964,"src":"13941:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13929:20:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13923:26:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5978,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13591:376:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"13572:395:25","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5980,"nodeType":"ExpressionStatement","src":"13572:395:25"},{"expression":{"id":5994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":5981,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5953,"src":"13987:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":5982,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5957,"src":"13990:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5983,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13986:6:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":5984,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5957,"src":"14072:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5985,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5953,"src":"14326:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5986,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5957,"src":"14330:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":5989,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5964,"src":"14341:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5988,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14334:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5987,"name":"int256","nodeType":"ElementaryTypeName","src":"14334:6:25","typeDescriptions":{}}},"id":5990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14334:16:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14330:20:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14326:24:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5993,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13995:373:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"13986:382:25","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5995,"nodeType":"ExpressionStatement","src":"13986:382:25"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5960,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5943,"src":"13485:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13498:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13485:14:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5997,"nodeType":"WhileStatement","src":"13478:905:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5998,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5949,"src":"14401:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":5999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14408:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14401:8:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6003,"nodeType":"IfStatement","src":"14397:22:25","trueBody":{"expression":{"hexValue":"30","id":6001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14418:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":5935,"id":6002,"nodeType":"Return","src":"14411:8:25"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6005,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5953,"src":"14470:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":6006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14474:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14470:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6008,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5931,"src":"14477:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":6012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"14489:2:25","subExpression":{"id":6011,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5953,"src":"14490:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6010,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14481:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6009,"name":"uint256","nodeType":"ElementaryTypeName","src":"14481:7:25","typeDescriptions":{}}},"id":6013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14481:11:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14477:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":6017,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5953,"src":"14502:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14494:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6015,"name":"uint256","nodeType":"ElementaryTypeName","src":"14494:7:25","typeDescriptions":{}}},"id":6018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14494:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6004,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5562,"src":"14462:7:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":6019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14462:43:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5935,"id":6020,"nodeType":"Return","src":"14455:50:25"}]}]},"documentation":{"id":5927,"nodeType":"StructuredDocumentation","src":"12082:553:25","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":6023,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"12649:6:25","nodeType":"FunctionDefinition","parameters":{"id":5932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5929,"mutability":"mutable","name":"a","nameLocation":"12664:1:25","nodeType":"VariableDeclaration","scope":6023,"src":"12656:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5928,"name":"uint256","nodeType":"ElementaryTypeName","src":"12656:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5931,"mutability":"mutable","name":"n","nameLocation":"12675:1:25","nodeType":"VariableDeclaration","scope":6023,"src":"12667:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5930,"name":"uint256","nodeType":"ElementaryTypeName","src":"12667:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12655:22:25"},"returnParameters":{"id":5935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5934,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6023,"src":"12701:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5933,"name":"uint256","nodeType":"ElementaryTypeName","src":"12701:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12700:9:25"},"scope":6894,"src":"12640:1919:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6043,"nodeType":"Block","src":"15159:82:25","statements":[{"id":6042,"nodeType":"UncheckedBlock","src":"15169:66:25","statements":[{"expression":{"arguments":[{"id":6035,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6026,"src":"15212:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6036,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6028,"src":"15215:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":6037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15219:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15215:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6039,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6028,"src":"15222:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6033,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6894,"src":"15200:4:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6894_$","typeString":"type(library Math)"}},"id":6034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15205:6:25","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":6080,"src":"15200:11:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":6040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15200:24:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6032,"id":6041,"nodeType":"Return","src":"15193:31:25"}]}]},"documentation":{"id":6024,"nodeType":"StructuredDocumentation","src":"14565:514:25","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":6044,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"15093:11:25","nodeType":"FunctionDefinition","parameters":{"id":6029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6026,"mutability":"mutable","name":"a","nameLocation":"15113:1:25","nodeType":"VariableDeclaration","scope":6044,"src":"15105:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6025,"name":"uint256","nodeType":"ElementaryTypeName","src":"15105:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6028,"mutability":"mutable","name":"p","nameLocation":"15124:1:25","nodeType":"VariableDeclaration","scope":6044,"src":"15116:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6027,"name":"uint256","nodeType":"ElementaryTypeName","src":"15116:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15104:22:25"},"returnParameters":{"id":6032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6031,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6044,"src":"15150:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6030,"name":"uint256","nodeType":"ElementaryTypeName","src":"15150:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15149:9:25"},"scope":6894,"src":"15084:157:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6079,"nodeType":"Block","src":"16011:174:25","statements":[{"assignments":[6057,6059],"declarations":[{"constant":false,"id":6057,"mutability":"mutable","name":"success","nameLocation":"16027:7:25","nodeType":"VariableDeclaration","scope":6079,"src":"16022:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6056,"name":"bool","nodeType":"ElementaryTypeName","src":"16022:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6059,"mutability":"mutable","name":"result","nameLocation":"16044:6:25","nodeType":"VariableDeclaration","scope":6079,"src":"16036:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6058,"name":"uint256","nodeType":"ElementaryTypeName","src":"16036:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6065,"initialValue":{"arguments":[{"id":6061,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6047,"src":"16064:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6062,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6049,"src":"16067:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6063,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6051,"src":"16070:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6060,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[6104,6186],"referencedDeclaration":6104,"src":"16054:9:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":6064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:18:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"16021:51:25"},{"condition":{"id":6067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16086:8:25","subExpression":{"id":6066,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6057,"src":"16087:7:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6076,"nodeType":"IfStatement","src":"16082:74:25","trueBody":{"id":6075,"nodeType":"Block","src":"16096:60:25","statements":[{"expression":{"arguments":[{"expression":{"id":6071,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"16122:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3801_$","typeString":"type(library Panic)"}},"id":6072,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16128:16:25","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":3768,"src":"16122:22:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6068,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"16110:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3801_$","typeString":"type(library Panic)"}},"id":6070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16116:5:25","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":3800,"src":"16110:11:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":6073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:35:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6074,"nodeType":"ExpressionStatement","src":"16110:35:25"}]}},{"expression":{"id":6077,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6059,"src":"16172:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6055,"id":6078,"nodeType":"Return","src":"16165:13:25"}]},"documentation":{"id":6045,"nodeType":"StructuredDocumentation","src":"15247:678:25","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":6080,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"15939:6:25","nodeType":"FunctionDefinition","parameters":{"id":6052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6047,"mutability":"mutable","name":"b","nameLocation":"15954:1:25","nodeType":"VariableDeclaration","scope":6080,"src":"15946:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6046,"name":"uint256","nodeType":"ElementaryTypeName","src":"15946:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6049,"mutability":"mutable","name":"e","nameLocation":"15965:1:25","nodeType":"VariableDeclaration","scope":6080,"src":"15957:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6048,"name":"uint256","nodeType":"ElementaryTypeName","src":"15957:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6051,"mutability":"mutable","name":"m","nameLocation":"15976:1:25","nodeType":"VariableDeclaration","scope":6080,"src":"15968:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6050,"name":"uint256","nodeType":"ElementaryTypeName","src":"15968:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15945:33:25"},"returnParameters":{"id":6055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6054,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6080,"src":"16002:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6053,"name":"uint256","nodeType":"ElementaryTypeName","src":"16002:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16001:9:25"},"scope":6894,"src":"15930:255:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6103,"nodeType":"Block","src":"17039:1493:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6094,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6087,"src":"17053:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17058:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17053:6:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6101,"nodeType":"IfStatement","src":"17049:29:25","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":6097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17069:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":6098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17076:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":6099,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17068:10:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":6093,"id":6100,"nodeType":"Return","src":"17061:17:25"}},{"AST":{"nodeType":"YulBlock","src":"17113:1413:25","statements":[{"nodeType":"YulVariableDeclaration","src":"17127:22:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17144:4:25","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17138:5:25"},"nodeType":"YulFunctionCall","src":"17138:11:25"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"17131:3:25","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18057:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"18062:4:25","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18050:6:25"},"nodeType":"YulFunctionCall","src":"18050:17:25"},"nodeType":"YulExpressionStatement","src":"18050:17:25"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18091:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"18096:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18087:3:25"},"nodeType":"YulFunctionCall","src":"18087:14:25"},{"kind":"number","nodeType":"YulLiteral","src":"18103:4:25","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18080:6:25"},"nodeType":"YulFunctionCall","src":"18080:28:25"},"nodeType":"YulExpressionStatement","src":"18080:28:25"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18132:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"18137:4:25","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18128:3:25"},"nodeType":"YulFunctionCall","src":"18128:14:25"},{"kind":"number","nodeType":"YulLiteral","src":"18144:4:25","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18121:6:25"},"nodeType":"YulFunctionCall","src":"18121:28:25"},"nodeType":"YulExpressionStatement","src":"18121:28:25"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18173:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"18178:4:25","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18169:3:25"},"nodeType":"YulFunctionCall","src":"18169:14:25"},{"name":"b","nodeType":"YulIdentifier","src":"18185:1:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18162:6:25"},"nodeType":"YulFunctionCall","src":"18162:25:25"},"nodeType":"YulExpressionStatement","src":"18162:25:25"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18211:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"18216:4:25","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18207:3:25"},"nodeType":"YulFunctionCall","src":"18207:14:25"},{"name":"e","nodeType":"YulIdentifier","src":"18223:1:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18200:6:25"},"nodeType":"YulFunctionCall","src":"18200:25:25"},"nodeType":"YulExpressionStatement","src":"18200:25:25"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18249:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"18254:4:25","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18245:3:25"},"nodeType":"YulFunctionCall","src":"18245:14:25"},{"name":"m","nodeType":"YulIdentifier","src":"18261:1:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18238:6:25"},"nodeType":"YulFunctionCall","src":"18238:25:25"},"nodeType":"YulExpressionStatement","src":"18238:25:25"},{"nodeType":"YulAssignment","src":"18425:57:25","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"18447:3:25"},"nodeType":"YulFunctionCall","src":"18447:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"18454:4:25","type":"","value":"0x05"},{"name":"ptr","nodeType":"YulIdentifier","src":"18460:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"18465:4:25","type":"","value":"0xc0"},{"kind":"number","nodeType":"YulLiteral","src":"18471:4:25","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"18477:4:25","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"18436:10:25"},"nodeType":"YulFunctionCall","src":"18436:46:25"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"18425:7:25"}]},{"nodeType":"YulAssignment","src":"18495:21:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18511:4:25","type":"","value":"0x00"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18505:5:25"},"nodeType":"YulFunctionCall","src":"18505:11:25"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"18495:6:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6083,"isOffset":false,"isSlot":false,"src":"18185:1:25","valueSize":1},{"declaration":6085,"isOffset":false,"isSlot":false,"src":"18223:1:25","valueSize":1},{"declaration":6087,"isOffset":false,"isSlot":false,"src":"18261:1:25","valueSize":1},{"declaration":6092,"isOffset":false,"isSlot":false,"src":"18495:6:25","valueSize":1},{"declaration":6090,"isOffset":false,"isSlot":false,"src":"18425:7:25","valueSize":1}],"flags":["memory-safe"],"id":6102,"nodeType":"InlineAssembly","src":"17088:1438:25"}]},"documentation":{"id":6081,"nodeType":"StructuredDocumentation","src":"16191:738:25","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":6104,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16943:9:25","nodeType":"FunctionDefinition","parameters":{"id":6088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6083,"mutability":"mutable","name":"b","nameLocation":"16961:1:25","nodeType":"VariableDeclaration","scope":6104,"src":"16953:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6082,"name":"uint256","nodeType":"ElementaryTypeName","src":"16953:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6085,"mutability":"mutable","name":"e","nameLocation":"16972:1:25","nodeType":"VariableDeclaration","scope":6104,"src":"16964:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6084,"name":"uint256","nodeType":"ElementaryTypeName","src":"16964:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6087,"mutability":"mutable","name":"m","nameLocation":"16983:1:25","nodeType":"VariableDeclaration","scope":6104,"src":"16975:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6086,"name":"uint256","nodeType":"ElementaryTypeName","src":"16975:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16952:33:25"},"returnParameters":{"id":6093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6090,"mutability":"mutable","name":"success","nameLocation":"17014:7:25","nodeType":"VariableDeclaration","scope":6104,"src":"17009:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6089,"name":"bool","nodeType":"ElementaryTypeName","src":"17009:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6092,"mutability":"mutable","name":"result","nameLocation":"17031:6:25","nodeType":"VariableDeclaration","scope":6104,"src":"17023:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6091,"name":"uint256","nodeType":"ElementaryTypeName","src":"17023:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17008:30:25"},"scope":6894,"src":"16934:1598:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6139,"nodeType":"Block","src":"18729:179:25","statements":[{"assignments":[6117,6119],"declarations":[{"constant":false,"id":6117,"mutability":"mutable","name":"success","nameLocation":"18745:7:25","nodeType":"VariableDeclaration","scope":6139,"src":"18740:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6116,"name":"bool","nodeType":"ElementaryTypeName","src":"18740:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6119,"mutability":"mutable","name":"result","nameLocation":"18767:6:25","nodeType":"VariableDeclaration","scope":6139,"src":"18754:19:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6118,"name":"bytes","nodeType":"ElementaryTypeName","src":"18754:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":6125,"initialValue":{"arguments":[{"id":6121,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6107,"src":"18787:1:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":6122,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6109,"src":"18790:1:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":6123,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6111,"src":"18793:1:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6120,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[6104,6186],"referencedDeclaration":6186,"src":"18777:9:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":6124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18777:18:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"18739:56:25"},{"condition":{"id":6127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18809:8:25","subExpression":{"id":6126,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6117,"src":"18810:7:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6136,"nodeType":"IfStatement","src":"18805:74:25","trueBody":{"id":6135,"nodeType":"Block","src":"18819:60:25","statements":[{"expression":{"arguments":[{"expression":{"id":6131,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"18845:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3801_$","typeString":"type(library Panic)"}},"id":6132,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18851:16:25","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":3768,"src":"18845:22:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6128,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"18833:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3801_$","typeString":"type(library Panic)"}},"id":6130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18839:5:25","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":3800,"src":"18833:11:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":6133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18833:35:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6134,"nodeType":"ExpressionStatement","src":"18833:35:25"}]}},{"expression":{"id":6137,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6119,"src":"18895:6:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":6115,"id":6138,"nodeType":"Return","src":"18888:13:25"}]},"documentation":{"id":6105,"nodeType":"StructuredDocumentation","src":"18538:85:25","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":6140,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"18637:6:25","nodeType":"FunctionDefinition","parameters":{"id":6112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6107,"mutability":"mutable","name":"b","nameLocation":"18657:1:25","nodeType":"VariableDeclaration","scope":6140,"src":"18644:14:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6106,"name":"bytes","nodeType":"ElementaryTypeName","src":"18644:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6109,"mutability":"mutable","name":"e","nameLocation":"18673:1:25","nodeType":"VariableDeclaration","scope":6140,"src":"18660:14:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6108,"name":"bytes","nodeType":"ElementaryTypeName","src":"18660:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6111,"mutability":"mutable","name":"m","nameLocation":"18689:1:25","nodeType":"VariableDeclaration","scope":6140,"src":"18676:14:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6110,"name":"bytes","nodeType":"ElementaryTypeName","src":"18676:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18643:48:25"},"returnParameters":{"id":6115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6114,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6140,"src":"18715:12:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6113,"name":"bytes","nodeType":"ElementaryTypeName","src":"18715:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18714:14:25"},"scope":6894,"src":"18628:280:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6185,"nodeType":"Block","src":"19162:771:25","statements":[{"condition":{"arguments":[{"id":6155,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6147,"src":"19187:1:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6154,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6219,"src":"19176:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":6156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19176:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6164,"nodeType":"IfStatement","src":"19172:47:25","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":6157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19199:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":6160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19216:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6159,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"19206:9:25","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":6158,"name":"bytes","nodeType":"ElementaryTypeName","src":"19210:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":6161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19206:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":6162,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19198:21:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":6153,"id":6163,"nodeType":"Return","src":"19191:28:25"}},{"assignments":[6166],"declarations":[{"constant":false,"id":6166,"mutability":"mutable","name":"mLen","nameLocation":"19238:4:25","nodeType":"VariableDeclaration","scope":6185,"src":"19230:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6165,"name":"uint256","nodeType":"ElementaryTypeName","src":"19230:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6169,"initialValue":{"expression":{"id":6167,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6147,"src":"19245:1:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19247:6:25","memberName":"length","nodeType":"MemberAccess","src":"19245:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19230:23:25"},{"expression":{"id":6182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6170,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6152,"src":"19335:6:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":6173,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6143,"src":"19361:1:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19363:6:25","memberName":"length","nodeType":"MemberAccess","src":"19361:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6175,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6145,"src":"19371:1:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19373:6:25","memberName":"length","nodeType":"MemberAccess","src":"19371:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6177,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6166,"src":"19381:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6178,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6143,"src":"19387:1:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":6179,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6145,"src":"19390:1:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":6180,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6147,"src":"19393:1:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":6171,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19344:3:25","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6172,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19348:12:25","memberName":"encodePacked","nodeType":"MemberAccess","src":"19344:16:25","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19344:51:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"19335:60:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6183,"nodeType":"ExpressionStatement","src":"19335:60:25"},{"AST":{"nodeType":"YulBlock","src":"19431:496:25","statements":[{"nodeType":"YulVariableDeclaration","src":"19445:32:25","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19464:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"19472:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19460:3:25"},"nodeType":"YulFunctionCall","src":"19460:17:25"},"variables":[{"name":"dataPtr","nodeType":"YulTypedName","src":"19449:7:25","type":""}]},{"nodeType":"YulAssignment","src":"19567:73:25","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"19589:3:25"},"nodeType":"YulFunctionCall","src":"19589:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"19596:4:25","type":"","value":"0x05"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"19602:7:25"},{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19617:6:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19611:5:25"},"nodeType":"YulFunctionCall","src":"19611:13:25"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"19626:7:25"},{"name":"mLen","nodeType":"YulIdentifier","src":"19635:4:25"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"19578:10:25"},"nodeType":"YulFunctionCall","src":"19578:62:25"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"19567:7:25"}]},{"expression":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19796:6:25"},{"name":"mLen","nodeType":"YulIdentifier","src":"19804:4:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19789:6:25"},"nodeType":"YulFunctionCall","src":"19789:20:25"},"nodeType":"YulExpressionStatement","src":"19789:20:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19892:4:25","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"19902:7:25"},{"name":"mLen","nodeType":"YulIdentifier","src":"19911:4:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19898:3:25"},"nodeType":"YulFunctionCall","src":"19898:18:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19885:6:25"},"nodeType":"YulFunctionCall","src":"19885:32:25"},"nodeType":"YulExpressionStatement","src":"19885:32:25"}]},"evmVersion":"paris","externalReferences":[{"declaration":6166,"isOffset":false,"isSlot":false,"src":"19635:4:25","valueSize":1},{"declaration":6166,"isOffset":false,"isSlot":false,"src":"19804:4:25","valueSize":1},{"declaration":6166,"isOffset":false,"isSlot":false,"src":"19911:4:25","valueSize":1},{"declaration":6152,"isOffset":false,"isSlot":false,"src":"19464:6:25","valueSize":1},{"declaration":6152,"isOffset":false,"isSlot":false,"src":"19617:6:25","valueSize":1},{"declaration":6152,"isOffset":false,"isSlot":false,"src":"19796:6:25","valueSize":1},{"declaration":6150,"isOffset":false,"isSlot":false,"src":"19567:7:25","valueSize":1}],"flags":["memory-safe"],"id":6184,"nodeType":"InlineAssembly","src":"19406:521:25"}]},"documentation":{"id":6141,"nodeType":"StructuredDocumentation","src":"18914:88:25","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":6186,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"19016:9:25","nodeType":"FunctionDefinition","parameters":{"id":6148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6143,"mutability":"mutable","name":"b","nameLocation":"19048:1:25","nodeType":"VariableDeclaration","scope":6186,"src":"19035:14:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6142,"name":"bytes","nodeType":"ElementaryTypeName","src":"19035:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6145,"mutability":"mutable","name":"e","nameLocation":"19072:1:25","nodeType":"VariableDeclaration","scope":6186,"src":"19059:14:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6144,"name":"bytes","nodeType":"ElementaryTypeName","src":"19059:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6147,"mutability":"mutable","name":"m","nameLocation":"19096:1:25","nodeType":"VariableDeclaration","scope":6186,"src":"19083:14:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6146,"name":"bytes","nodeType":"ElementaryTypeName","src":"19083:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19025:78:25"},"returnParameters":{"id":6153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6150,"mutability":"mutable","name":"success","nameLocation":"19132:7:25","nodeType":"VariableDeclaration","scope":6186,"src":"19127:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6149,"name":"bool","nodeType":"ElementaryTypeName","src":"19127:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6152,"mutability":"mutable","name":"result","nameLocation":"19154:6:25","nodeType":"VariableDeclaration","scope":6186,"src":"19141:19:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6151,"name":"bytes","nodeType":"ElementaryTypeName","src":"19141:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19126:35:25"},"scope":6894,"src":"19007:926:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6218,"nodeType":"Block","src":"20088:176:25","statements":[{"body":{"id":6214,"nodeType":"Block","src":"20145:92:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":6209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":6205,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6189,"src":"20163:9:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6207,"indexExpression":{"id":6206,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6195,"src":"20173:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20163:12:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":6208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20179:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20163:17:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6213,"nodeType":"IfStatement","src":"20159:68:25","trueBody":{"id":6212,"nodeType":"Block","src":"20182:45:25","statements":[{"expression":{"hexValue":"66616c7365","id":6210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20207:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":6193,"id":6211,"nodeType":"Return","src":"20200:12:25"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6198,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6195,"src":"20118:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":6199,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6189,"src":"20122:9:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20132:6:25","memberName":"length","nodeType":"MemberAccess","src":"20122:16:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20118:20:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6215,"initializationExpression":{"assignments":[6195],"declarations":[{"constant":false,"id":6195,"mutability":"mutable","name":"i","nameLocation":"20111:1:25","nodeType":"VariableDeclaration","scope":6215,"src":"20103:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6194,"name":"uint256","nodeType":"ElementaryTypeName","src":"20103:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6197,"initialValue":{"hexValue":"30","id":6196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20115:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20103:13:25"},"loopExpression":{"expression":{"id":6203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"20140:3:25","subExpression":{"id":6202,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6195,"src":"20142:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6204,"nodeType":"ExpressionStatement","src":"20140:3:25"},"nodeType":"ForStatement","src":"20098:139:25"},{"expression":{"hexValue":"74727565","id":6216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20253:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":6193,"id":6217,"nodeType":"Return","src":"20246:11:25"}]},"documentation":{"id":6187,"nodeType":"StructuredDocumentation","src":"19939:72:25","text":" @dev Returns whether the provided byte array is zero."},"id":6219,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"20025:10:25","nodeType":"FunctionDefinition","parameters":{"id":6190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6189,"mutability":"mutable","name":"byteArray","nameLocation":"20049:9:25","nodeType":"VariableDeclaration","scope":6219,"src":"20036:22:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6188,"name":"bytes","nodeType":"ElementaryTypeName","src":"20036:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20035:24:25"},"returnParameters":{"id":6193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6192,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6219,"src":"20082:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6191,"name":"bool","nodeType":"ElementaryTypeName","src":"20082:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20081:6:25"},"scope":6894,"src":"20016:248:25","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":6437,"nodeType":"Block","src":"20624:5124:25","statements":[{"id":6436,"nodeType":"UncheckedBlock","src":"20634:5108:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6227,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6222,"src":"20728:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":6228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20733:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20728:6:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6233,"nodeType":"IfStatement","src":"20724:53:25","trueBody":{"id":6232,"nodeType":"Block","src":"20736:41:25","statements":[{"expression":{"id":6230,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6222,"src":"20761:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6226,"id":6231,"nodeType":"Return","src":"20754:8:25"}]}},{"assignments":[6235],"declarations":[{"constant":false,"id":6235,"mutability":"mutable","name":"aa","nameLocation":"21712:2:25","nodeType":"VariableDeclaration","scope":6436,"src":"21704:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6234,"name":"uint256","nodeType":"ElementaryTypeName","src":"21704:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6237,"initialValue":{"id":6236,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6222,"src":"21717:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21704:14:25"},{"assignments":[6239],"declarations":[{"constant":false,"id":6239,"mutability":"mutable","name":"xn","nameLocation":"21740:2:25","nodeType":"VariableDeclaration","scope":6436,"src":"21732:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6238,"name":"uint256","nodeType":"ElementaryTypeName","src":"21732:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6241,"initialValue":{"hexValue":"31","id":6240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21745:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"21732:14:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6242,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6235,"src":"21765:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":6245,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21772:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":6244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21777:3:25","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21772:8:25","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":6246,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21771:10:25","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"21765:16:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6257,"nodeType":"IfStatement","src":"21761:92:25","trueBody":{"id":6256,"nodeType":"Block","src":"21783:70:25","statements":[{"expression":{"id":6250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6248,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6235,"src":"21801:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":6249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21808:3:25","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21801:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6251,"nodeType":"ExpressionStatement","src":"21801:10:25"},{"expression":{"id":6254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6252,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"21829:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":6253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21836:2:25","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21829:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6255,"nodeType":"ExpressionStatement","src":"21829:9:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6258,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6235,"src":"21870:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":6261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21877:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":6260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21882:2:25","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21877:7:25","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":6262,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21876:9:25","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"21870:15:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6273,"nodeType":"IfStatement","src":"21866:90:25","trueBody":{"id":6272,"nodeType":"Block","src":"21887:69:25","statements":[{"expression":{"id":6266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6264,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6235,"src":"21905:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":6265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21912:2:25","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21905:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6267,"nodeType":"ExpressionStatement","src":"21905:9:25"},{"expression":{"id":6270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6268,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"21932:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":6269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21939:2:25","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21932:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6271,"nodeType":"ExpressionStatement","src":"21932:9:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6274,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6235,"src":"21973:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":6277,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21980:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":6276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21985:2:25","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21980:7:25","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":6278,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21979:9:25","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"21973:15:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6289,"nodeType":"IfStatement","src":"21969:90:25","trueBody":{"id":6288,"nodeType":"Block","src":"21990:69:25","statements":[{"expression":{"id":6282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6280,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6235,"src":"22008:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":6281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22015:2:25","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"22008:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6283,"nodeType":"ExpressionStatement","src":"22008:9:25"},{"expression":{"id":6286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6284,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"22035:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":6285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22042:2:25","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22035:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6287,"nodeType":"ExpressionStatement","src":"22035:9:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6290,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6235,"src":"22076:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":6293,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22083:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":6292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22088:2:25","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22083:7:25","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":6294,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22082:9:25","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"22076:15:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6305,"nodeType":"IfStatement","src":"22072:89:25","trueBody":{"id":6304,"nodeType":"Block","src":"22093:68:25","statements":[{"expression":{"id":6298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6296,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6235,"src":"22111:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":6297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22118:2:25","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22111:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6299,"nodeType":"ExpressionStatement","src":"22111:9:25"},{"expression":{"id":6302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6300,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"22138:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":6301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22145:1:25","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22138:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6303,"nodeType":"ExpressionStatement","src":"22138:8:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6306,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6235,"src":"22178:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":6309,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22185:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":6308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22190:1:25","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22185:6:25","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":6310,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22184:8:25","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"22178:14:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6321,"nodeType":"IfStatement","src":"22174:87:25","trueBody":{"id":6320,"nodeType":"Block","src":"22194:67:25","statements":[{"expression":{"id":6314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6312,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6235,"src":"22212:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":6313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22219:1:25","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22212:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6315,"nodeType":"ExpressionStatement","src":"22212:8:25"},{"expression":{"id":6318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6316,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"22238:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":6317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22245:1:25","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22238:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6319,"nodeType":"ExpressionStatement","src":"22238:8:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6322,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6235,"src":"22278:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":6325,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22285:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":6324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22290:1:25","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22285:6:25","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":6326,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22284:8:25","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"22278:14:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6337,"nodeType":"IfStatement","src":"22274:87:25","trueBody":{"id":6336,"nodeType":"Block","src":"22294:67:25","statements":[{"expression":{"id":6330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6328,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6235,"src":"22312:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":6329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22319:1:25","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22312:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6331,"nodeType":"ExpressionStatement","src":"22312:8:25"},{"expression":{"id":6334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6332,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"22338:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":6333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22345:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22338:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6335,"nodeType":"ExpressionStatement","src":"22338:8:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6338,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6235,"src":"22378:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":6341,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22385:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":6340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22390:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22385:6:25","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":6342,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22384:8:25","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"22378:14:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6349,"nodeType":"IfStatement","src":"22374:61:25","trueBody":{"id":6348,"nodeType":"Block","src":"22394:41:25","statements":[{"expression":{"id":6346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6344,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"22412:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":6345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22419:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22412:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6347,"nodeType":"ExpressionStatement","src":"22412:8:25"}]}},{"expression":{"id":6357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6350,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"22855:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":6351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22861:1:25","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6352,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"22865:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22861:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6354,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22860:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22872:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22860:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22855:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6358,"nodeType":"ExpressionStatement","src":"22855:18:25"},{"expression":{"id":6368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6359,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"24760:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6360,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"24766:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6361,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6222,"src":"24771:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6362,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"24775:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24771:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24766:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6365,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24765:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24782:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24765:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24760:23:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6369,"nodeType":"ExpressionStatement","src":"24760:23:25"},{"expression":{"id":6379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6370,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"24869:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6371,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"24875:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6372,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6222,"src":"24880:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6373,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"24884:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24880:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24875:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6376,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24874:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24891:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24874:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24869:23:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6380,"nodeType":"ExpressionStatement","src":"24869:23:25"},{"expression":{"id":6390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6381,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"24980:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6382,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"24986:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6383,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6222,"src":"24991:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6384,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"24995:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24991:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24986:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6387,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24985:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25002:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24985:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24980:23:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6391,"nodeType":"ExpressionStatement","src":"24980:23:25"},{"expression":{"id":6401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6392,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"25089:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6393,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"25095:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6394,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6222,"src":"25100:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6395,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"25104:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25100:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25095:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6398,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25094:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25111:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25094:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25089:23:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6402,"nodeType":"ExpressionStatement","src":"25089:23:25"},{"expression":{"id":6412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6403,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"25199:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6404,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"25205:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6405,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6222,"src":"25210:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6406,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"25214:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25210:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25205:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6409,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25204:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25221:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25204:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25199:23:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6413,"nodeType":"ExpressionStatement","src":"25199:23:25"},{"expression":{"id":6423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6414,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"25309:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6415,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"25315:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6416,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6222,"src":"25320:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6417,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"25324:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25320:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25315:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6420,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25314:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25331:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25314:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25309:23:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6424,"nodeType":"ExpressionStatement","src":"25309:23:25"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6425,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"25698:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6428,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"25719:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6429,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6222,"src":"25724:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6430,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"25728:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25724:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25719:11:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6426,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8659,"src":"25703:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8659_$","typeString":"type(library SafeCast)"}},"id":6427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25712:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8658,"src":"25703:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25703:28:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25698:33:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6226,"id":6435,"nodeType":"Return","src":"25691:40:25"}]}]},"documentation":{"id":6220,"nodeType":"StructuredDocumentation","src":"20270:292:25","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":6438,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"20576:4:25","nodeType":"FunctionDefinition","parameters":{"id":6223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6222,"mutability":"mutable","name":"a","nameLocation":"20589:1:25","nodeType":"VariableDeclaration","scope":6438,"src":"20581:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6221,"name":"uint256","nodeType":"ElementaryTypeName","src":"20581:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20580:11:25"},"returnParameters":{"id":6226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6225,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6438,"src":"20615:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6224,"name":"uint256","nodeType":"ElementaryTypeName","src":"20615:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20614:9:25"},"scope":6894,"src":"20567:5181:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6471,"nodeType":"Block","src":"25921:171:25","statements":[{"id":6470,"nodeType":"UncheckedBlock","src":"25931:155:25","statements":[{"assignments":[6450],"declarations":[{"constant":false,"id":6450,"mutability":"mutable","name":"result","nameLocation":"25963:6:25","nodeType":"VariableDeclaration","scope":6470,"src":"25955:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6449,"name":"uint256","nodeType":"ElementaryTypeName","src":"25955:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6454,"initialValue":{"arguments":[{"id":6452,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6441,"src":"25977:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6451,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[6438,6472],"referencedDeclaration":6438,"src":"25972:4:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25972:7:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25955:24:25"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6455,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6450,"src":"26000:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6459,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6444,"src":"26042:8:25","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5285","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$5285","typeString":"enum Math.Rounding"}],"id":6458,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6893,"src":"26025:16:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$5285_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":6460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26025:26:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6461,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6450,"src":"26055:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6462,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6450,"src":"26064:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6464,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6441,"src":"26073:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26025:49:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6456,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8659,"src":"26009:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8659_$","typeString":"type(library SafeCast)"}},"id":6457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26018:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8658,"src":"26009:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26009:66:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26000:75:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6448,"id":6469,"nodeType":"Return","src":"25993:82:25"}]}]},"documentation":{"id":6439,"nodeType":"StructuredDocumentation","src":"25754:86:25","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":6472,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"25854:4:25","nodeType":"FunctionDefinition","parameters":{"id":6445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6441,"mutability":"mutable","name":"a","nameLocation":"25867:1:25","nodeType":"VariableDeclaration","scope":6472,"src":"25859:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6440,"name":"uint256","nodeType":"ElementaryTypeName","src":"25859:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6444,"mutability":"mutable","name":"rounding","nameLocation":"25879:8:25","nodeType":"VariableDeclaration","scope":6472,"src":"25870:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5285","typeString":"enum Math.Rounding"},"typeName":{"id":6443,"nodeType":"UserDefinedTypeName","pathNode":{"id":6442,"name":"Rounding","nameLocations":["25870:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":5285,"src":"25870:8:25"},"referencedDeclaration":5285,"src":"25870:8:25","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5285","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"25858:30:25"},"returnParameters":{"id":6448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6447,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6472,"src":"25912:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6446,"name":"uint256","nodeType":"ElementaryTypeName","src":"25912:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25911:9:25"},"scope":6894,"src":"25845:247:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6562,"nodeType":"Block","src":"26281:2334:25","statements":[{"expression":{"id":6489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6480,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6478,"src":"26363:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6483,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6475,"src":"26383:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":6484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26387:34:25","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"26383:38:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6481,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8659,"src":"26367:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8659_$","typeString":"type(library SafeCast)"}},"id":6482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26376:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8658,"src":"26367:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26367:55:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":6487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26426:1:25","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"26367:60:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26363:64:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6490,"nodeType":"ExpressionStatement","src":"26363:64:25"},{"expression":{"id":6503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6491,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6478,"src":"26503:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6494,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6475,"src":"26525:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6495,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6478,"src":"26530:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26525:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6497,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26524:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":6498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26535:18:25","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"26524:29:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6492,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8659,"src":"26508:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8659_$","typeString":"type(library SafeCast)"}},"id":6493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26517:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8658,"src":"26508:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26508:46:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":6501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26558:1:25","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"26508:51:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26503:56:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6504,"nodeType":"ExpressionStatement","src":"26503:56:25"},{"expression":{"id":6517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6505,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6478,"src":"26634:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6508,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6475,"src":"26656:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6509,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6478,"src":"26661:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26656:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6511,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26655:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":6512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26666:10:25","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"26655:21:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6506,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8659,"src":"26639:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8659_$","typeString":"type(library SafeCast)"}},"id":6507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26648:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8658,"src":"26639:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26639:38:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":6515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26681:1:25","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"26639:43:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26634:48:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6518,"nodeType":"ExpressionStatement","src":"26634:48:25"},{"expression":{"id":6531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6519,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6478,"src":"26757:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6522,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6475,"src":"26779:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6523,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6478,"src":"26784:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26779:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6525,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26778:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":6526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26789:6:25","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"26778:17:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6520,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8659,"src":"26762:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8659_$","typeString":"type(library SafeCast)"}},"id":6521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26771:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8658,"src":"26762:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26762:34:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":6529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26800:1:25","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"26762:39:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26757:44:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6532,"nodeType":"ExpressionStatement","src":"26757:44:25"},{"expression":{"id":6545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6533,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6478,"src":"26874:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6536,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6475,"src":"26896:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6537,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6478,"src":"26901:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26896:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6539,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26895:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":6540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26906:4:25","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"26895:15:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6534,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8659,"src":"26879:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8659_$","typeString":"type(library SafeCast)"}},"id":6535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26888:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8658,"src":"26879:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26879:32:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":6543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26915:1:25","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"26879:37:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26874:42:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6546,"nodeType":"ExpressionStatement","src":"26874:42:25"},{"expression":{"id":6559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6547,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6478,"src":"26988:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6550,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6475,"src":"27010:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6551,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6478,"src":"27015:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27010:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6553,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27009:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866","id":6554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27020:3:25","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"27009:14:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6548,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8659,"src":"26993:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8659_$","typeString":"type(library SafeCast)"}},"id":6549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27002:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8658,"src":"26993:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26993:31:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":6557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27028:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26993:36:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26988:41:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6560,"nodeType":"ExpressionStatement","src":"26988:41:25"},{"AST":{"nodeType":"YulBlock","src":"28490:119:25","statements":[{"nodeType":"YulAssignment","src":"28504:95:25","value":{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"28512:1:25"},{"arguments":[{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"28524:1:25"},{"name":"x","nodeType":"YulIdentifier","src":"28527:1:25"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"28520:3:25"},"nodeType":"YulFunctionCall","src":"28520:9:25"},{"kind":"number","nodeType":"YulLiteral","src":"28531:66:25","type":"","value":"0x0000010102020202030303030303030300000000000000000000000000000000"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"28515:4:25"},"nodeType":"YulFunctionCall","src":"28515:83:25"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"28509:2:25"},"nodeType":"YulFunctionCall","src":"28509:90:25"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"28504:1:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6478,"isOffset":false,"isSlot":false,"src":"28504:1:25","valueSize":1},{"declaration":6478,"isOffset":false,"isSlot":false,"src":"28512:1:25","valueSize":1},{"declaration":6478,"isOffset":false,"isSlot":false,"src":"28524:1:25","valueSize":1},{"declaration":6475,"isOffset":false,"isSlot":false,"src":"28527:1:25","valueSize":1}],"flags":["memory-safe"],"id":6561,"nodeType":"InlineAssembly","src":"28465:144:25"}]},"documentation":{"id":6473,"nodeType":"StructuredDocumentation","src":"26098:119:25","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":6563,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"26231:4:25","nodeType":"FunctionDefinition","parameters":{"id":6476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6475,"mutability":"mutable","name":"x","nameLocation":"26244:1:25","nodeType":"VariableDeclaration","scope":6563,"src":"26236:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6474,"name":"uint256","nodeType":"ElementaryTypeName","src":"26236:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26235:11:25"},"returnParameters":{"id":6479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6478,"mutability":"mutable","name":"r","nameLocation":"26278:1:25","nodeType":"VariableDeclaration","scope":6563,"src":"26270:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6477,"name":"uint256","nodeType":"ElementaryTypeName","src":"26270:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26269:11:25"},"scope":6894,"src":"26222:2393:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6596,"nodeType":"Block","src":"28848:175:25","statements":[{"id":6595,"nodeType":"UncheckedBlock","src":"28858:159:25","statements":[{"assignments":[6575],"declarations":[{"constant":false,"id":6575,"mutability":"mutable","name":"result","nameLocation":"28890:6:25","nodeType":"VariableDeclaration","scope":6595,"src":"28882:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6574,"name":"uint256","nodeType":"ElementaryTypeName","src":"28882:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6579,"initialValue":{"arguments":[{"id":6577,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6566,"src":"28904:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6576,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[6563,6597],"referencedDeclaration":6563,"src":"28899:4:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28899:11:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28882:28:25"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6580,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6575,"src":"28931:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6584,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6569,"src":"28973:8:25","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5285","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$5285","typeString":"enum Math.Rounding"}],"id":6583,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6893,"src":"28956:16:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$5285_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":6585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28956:26:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28986:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":6587,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6575,"src":"28991:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6589,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6566,"src":"29000:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28956:49:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6581,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8659,"src":"28940:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8659_$","typeString":"type(library SafeCast)"}},"id":6582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28949:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8658,"src":"28940:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28940:66:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28931:75:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6573,"id":6594,"nodeType":"Return","src":"28924:82:25"}]}]},"documentation":{"id":6564,"nodeType":"StructuredDocumentation","src":"28621:142:25","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":6597,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"28777:4:25","nodeType":"FunctionDefinition","parameters":{"id":6570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6566,"mutability":"mutable","name":"value","nameLocation":"28790:5:25","nodeType":"VariableDeclaration","scope":6597,"src":"28782:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6565,"name":"uint256","nodeType":"ElementaryTypeName","src":"28782:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6569,"mutability":"mutable","name":"rounding","nameLocation":"28806:8:25","nodeType":"VariableDeclaration","scope":6597,"src":"28797:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5285","typeString":"enum Math.Rounding"},"typeName":{"id":6568,"nodeType":"UserDefinedTypeName","pathNode":{"id":6567,"name":"Rounding","nameLocations":["28797:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":5285,"src":"28797:8:25"},"referencedDeclaration":5285,"src":"28797:8:25","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5285","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28781:34:25"},"returnParameters":{"id":6573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6572,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6597,"src":"28839:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6571,"name":"uint256","nodeType":"ElementaryTypeName","src":"28839:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28838:9:25"},"scope":6894,"src":"28768:255:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6725,"nodeType":"Block","src":"29216:854:25","statements":[{"assignments":[6606],"declarations":[{"constant":false,"id":6606,"mutability":"mutable","name":"result","nameLocation":"29234:6:25","nodeType":"VariableDeclaration","scope":6725,"src":"29226:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6605,"name":"uint256","nodeType":"ElementaryTypeName","src":"29226:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6608,"initialValue":{"hexValue":"30","id":6607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29243:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"29226:18:25"},{"id":6722,"nodeType":"UncheckedBlock","src":"29254:787:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6609,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6600,"src":"29282:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":6612,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29291:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":6611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29297:2:25","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29291:8:25","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29282:17:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6625,"nodeType":"IfStatement","src":"29278:103:25","trueBody":{"id":6624,"nodeType":"Block","src":"29301:80:25","statements":[{"expression":{"id":6618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6614,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6600,"src":"29319:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":6617,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29328:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":6616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29334:2:25","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29328:8:25","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29319:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6619,"nodeType":"ExpressionStatement","src":"29319:17:25"},{"expression":{"id":6622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6620,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6606,"src":"29354:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":6621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29364:2:25","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29354:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6623,"nodeType":"ExpressionStatement","src":"29354:12:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6626,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6600,"src":"29398:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":6629,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29407:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":6628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29413:2:25","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29407:8:25","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29398:17:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6642,"nodeType":"IfStatement","src":"29394:103:25","trueBody":{"id":6641,"nodeType":"Block","src":"29417:80:25","statements":[{"expression":{"id":6635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6631,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6600,"src":"29435:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":6634,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29444:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":6633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29450:2:25","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29444:8:25","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29435:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6636,"nodeType":"ExpressionStatement","src":"29435:17:25"},{"expression":{"id":6639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6637,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6606,"src":"29470:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":6638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29480:2:25","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29470:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6640,"nodeType":"ExpressionStatement","src":"29470:12:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6643,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6600,"src":"29514:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":6646,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29523:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":6645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29529:2:25","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29523:8:25","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29514:17:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6659,"nodeType":"IfStatement","src":"29510:103:25","trueBody":{"id":6658,"nodeType":"Block","src":"29533:80:25","statements":[{"expression":{"id":6652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6648,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6600,"src":"29551:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":6651,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29560:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":6650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29566:2:25","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29560:8:25","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29551:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6653,"nodeType":"ExpressionStatement","src":"29551:17:25"},{"expression":{"id":6656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6654,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6606,"src":"29586:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":6655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29596:2:25","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29586:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6657,"nodeType":"ExpressionStatement","src":"29586:12:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6660,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6600,"src":"29630:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":6663,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29639:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":6662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29645:1:25","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29639:7:25","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29630:16:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6676,"nodeType":"IfStatement","src":"29626:100:25","trueBody":{"id":6675,"nodeType":"Block","src":"29648:78:25","statements":[{"expression":{"id":6669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6665,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6600,"src":"29666:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":6668,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29675:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":6667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29681:1:25","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29675:7:25","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29666:16:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6670,"nodeType":"ExpressionStatement","src":"29666:16:25"},{"expression":{"id":6673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6671,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6606,"src":"29700:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":6672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29710:1:25","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29700:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6674,"nodeType":"ExpressionStatement","src":"29700:11:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6677,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6600,"src":"29743:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":6680,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29752:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":6679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29758:1:25","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29752:7:25","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29743:16:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6693,"nodeType":"IfStatement","src":"29739:100:25","trueBody":{"id":6692,"nodeType":"Block","src":"29761:78:25","statements":[{"expression":{"id":6686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6682,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6600,"src":"29779:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":6685,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29788:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":6684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29794:1:25","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29788:7:25","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29779:16:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6687,"nodeType":"ExpressionStatement","src":"29779:16:25"},{"expression":{"id":6690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6688,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6606,"src":"29813:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":6689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29823:1:25","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29813:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6691,"nodeType":"ExpressionStatement","src":"29813:11:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6694,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6600,"src":"29856:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":6697,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29865:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":6696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29871:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29865:7:25","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29856:16:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6710,"nodeType":"IfStatement","src":"29852:100:25","trueBody":{"id":6709,"nodeType":"Block","src":"29874:78:25","statements":[{"expression":{"id":6703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6699,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6600,"src":"29892:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":6702,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29901:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":6701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29907:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29901:7:25","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29892:16:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6704,"nodeType":"ExpressionStatement","src":"29892:16:25"},{"expression":{"id":6707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6705,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6606,"src":"29926:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":6706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29936:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29926:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6708,"nodeType":"ExpressionStatement","src":"29926:11:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6711,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6600,"src":"29969:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":6714,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29978:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":6713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29984:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"29978:7:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"29969:16:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6721,"nodeType":"IfStatement","src":"29965:66:25","trueBody":{"id":6720,"nodeType":"Block","src":"29987:44:25","statements":[{"expression":{"id":6718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6716,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6606,"src":"30005:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":6717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30015:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"30005:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6719,"nodeType":"ExpressionStatement","src":"30005:11:25"}]}}]},{"expression":{"id":6723,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6606,"src":"30057:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6604,"id":6724,"nodeType":"Return","src":"30050:13:25"}]},"documentation":{"id":6598,"nodeType":"StructuredDocumentation","src":"29029:120:25","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":6726,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"29163:5:25","nodeType":"FunctionDefinition","parameters":{"id":6601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6600,"mutability":"mutable","name":"value","nameLocation":"29177:5:25","nodeType":"VariableDeclaration","scope":6726,"src":"29169:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6599,"name":"uint256","nodeType":"ElementaryTypeName","src":"29169:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29168:15:25"},"returnParameters":{"id":6604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6603,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6726,"src":"29207:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6602,"name":"uint256","nodeType":"ElementaryTypeName","src":"29207:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29206:9:25"},"scope":6894,"src":"29154:916:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6759,"nodeType":"Block","src":"30305:177:25","statements":[{"id":6758,"nodeType":"UncheckedBlock","src":"30315:161:25","statements":[{"assignments":[6738],"declarations":[{"constant":false,"id":6738,"mutability":"mutable","name":"result","nameLocation":"30347:6:25","nodeType":"VariableDeclaration","scope":6758,"src":"30339:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6737,"name":"uint256","nodeType":"ElementaryTypeName","src":"30339:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6742,"initialValue":{"arguments":[{"id":6740,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6729,"src":"30362:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6739,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[6726,6760],"referencedDeclaration":6726,"src":"30356:5:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30356:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30339:29:25"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6743,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6738,"src":"30389:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6747,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6732,"src":"30431:8:25","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5285","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$5285","typeString":"enum Math.Rounding"}],"id":6746,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6893,"src":"30414:16:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$5285_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":6748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30414:26:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30444:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":6750,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6738,"src":"30450:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6752,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6729,"src":"30459:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:20:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30414:50:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6744,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8659,"src":"30398:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8659_$","typeString":"type(library SafeCast)"}},"id":6745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30407:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8658,"src":"30398:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30398:67:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30389:76:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6736,"id":6757,"nodeType":"Return","src":"30382:83:25"}]}]},"documentation":{"id":6727,"nodeType":"StructuredDocumentation","src":"30076:143:25","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":6760,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"30233:5:25","nodeType":"FunctionDefinition","parameters":{"id":6733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6729,"mutability":"mutable","name":"value","nameLocation":"30247:5:25","nodeType":"VariableDeclaration","scope":6760,"src":"30239:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6728,"name":"uint256","nodeType":"ElementaryTypeName","src":"30239:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6732,"mutability":"mutable","name":"rounding","nameLocation":"30263:8:25","nodeType":"VariableDeclaration","scope":6760,"src":"30254:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5285","typeString":"enum Math.Rounding"},"typeName":{"id":6731,"nodeType":"UserDefinedTypeName","pathNode":{"id":6730,"name":"Rounding","nameLocations":["30254:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":5285,"src":"30254:8:25"},"referencedDeclaration":5285,"src":"30254:8:25","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5285","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"30238:34:25"},"returnParameters":{"id":6736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6735,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6760,"src":"30296:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6734,"name":"uint256","nodeType":"ElementaryTypeName","src":"30296:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30295:9:25"},"scope":6894,"src":"30224:258:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6836,"nodeType":"Block","src":"30800:675:25","statements":[{"expression":{"id":6777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6768,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6766,"src":"30882:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6771,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6763,"src":"30902:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":6772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30906:34:25","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"30902:38:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6769,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8659,"src":"30886:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8659_$","typeString":"type(library SafeCast)"}},"id":6770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30895:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8658,"src":"30886:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30886:55:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":6775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30945:1:25","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"30886:60:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30882:64:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6778,"nodeType":"ExpressionStatement","src":"30882:64:25"},{"expression":{"id":6791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6779,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6766,"src":"31022:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6782,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6763,"src":"31044:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6783,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6766,"src":"31049:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31044:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6785,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31043:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":6786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31054:18:25","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"31043:29:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6780,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8659,"src":"31027:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8659_$","typeString":"type(library SafeCast)"}},"id":6781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31036:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8658,"src":"31027:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31027:46:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":6789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31077:1:25","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"31027:51:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31022:56:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6792,"nodeType":"ExpressionStatement","src":"31022:56:25"},{"expression":{"id":6805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6793,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6766,"src":"31153:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6796,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6763,"src":"31175:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6797,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6766,"src":"31180:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31175:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6799,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31174:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":6800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31185:10:25","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"31174:21:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6794,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8659,"src":"31158:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8659_$","typeString":"type(library SafeCast)"}},"id":6795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31167:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8658,"src":"31158:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31158:38:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":6803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31200:1:25","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"31158:43:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31153:48:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6806,"nodeType":"ExpressionStatement","src":"31153:48:25"},{"expression":{"id":6819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6807,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6766,"src":"31276:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6810,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6763,"src":"31298:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6811,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6766,"src":"31303:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31298:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6813,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31297:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":6814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31308:6:25","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"31297:17:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6808,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8659,"src":"31281:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8659_$","typeString":"type(library SafeCast)"}},"id":6809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31290:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8658,"src":"31281:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31281:34:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":6817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31319:1:25","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"31281:39:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31276:44:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6820,"nodeType":"ExpressionStatement","src":"31276:44:25"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6821,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6766,"src":"31426:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"33","id":6822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31431:1:25","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31426:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6824,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31425:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6827,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6763,"src":"31453:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6828,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6766,"src":"31458:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31453:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6830,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31452:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":6831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31463:4:25","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"31452:15:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6825,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8659,"src":"31436:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8659_$","typeString":"type(library SafeCast)"}},"id":6826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31445:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8658,"src":"31436:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31436:32:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31425:43:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6767,"id":6835,"nodeType":"Return","src":"31418:50:25"}]},"documentation":{"id":6761,"nodeType":"StructuredDocumentation","src":"30488:246:25","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":6837,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"30748:6:25","nodeType":"FunctionDefinition","parameters":{"id":6764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6763,"mutability":"mutable","name":"x","nameLocation":"30763:1:25","nodeType":"VariableDeclaration","scope":6837,"src":"30755:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6762,"name":"uint256","nodeType":"ElementaryTypeName","src":"30755:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30754:11:25"},"returnParameters":{"id":6767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6766,"mutability":"mutable","name":"r","nameLocation":"30797:1:25","nodeType":"VariableDeclaration","scope":6837,"src":"30789:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6765,"name":"uint256","nodeType":"ElementaryTypeName","src":"30789:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30788:11:25"},"scope":6894,"src":"30739:736:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6873,"nodeType":"Block","src":"31712:184:25","statements":[{"id":6872,"nodeType":"UncheckedBlock","src":"31722:168:25","statements":[{"assignments":[6849],"declarations":[{"constant":false,"id":6849,"mutability":"mutable","name":"result","nameLocation":"31754:6:25","nodeType":"VariableDeclaration","scope":6872,"src":"31746:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6848,"name":"uint256","nodeType":"ElementaryTypeName","src":"31746:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6853,"initialValue":{"arguments":[{"id":6851,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6840,"src":"31770:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6850,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[6837,6874],"referencedDeclaration":6837,"src":"31763:6:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31763:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"31746:30:25"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6854,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6849,"src":"31797:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6858,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6843,"src":"31839:8:25","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5285","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$5285","typeString":"enum Math.Rounding"}],"id":6857,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6893,"src":"31822:16:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$5285_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":6859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31822:26:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31852:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6861,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6849,"src":"31858:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":6862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31868:1:25","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31858:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6864,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31857:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6866,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6840,"src":"31873:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:26:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"31822:56:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6855,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8659,"src":"31806:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8659_$","typeString":"type(library SafeCast)"}},"id":6856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31815:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8658,"src":"31806:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31806:73:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31797:82:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6847,"id":6871,"nodeType":"Return","src":"31790:89:25"}]}]},"documentation":{"id":6838,"nodeType":"StructuredDocumentation","src":"31481:144:25","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":6874,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"31639:6:25","nodeType":"FunctionDefinition","parameters":{"id":6844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6840,"mutability":"mutable","name":"value","nameLocation":"31654:5:25","nodeType":"VariableDeclaration","scope":6874,"src":"31646:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6839,"name":"uint256","nodeType":"ElementaryTypeName","src":"31646:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6843,"mutability":"mutable","name":"rounding","nameLocation":"31670:8:25","nodeType":"VariableDeclaration","scope":6874,"src":"31661:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5285","typeString":"enum Math.Rounding"},"typeName":{"id":6842,"nodeType":"UserDefinedTypeName","pathNode":{"id":6841,"name":"Rounding","nameLocations":["31661:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":5285,"src":"31661:8:25"},"referencedDeclaration":5285,"src":"31661:8:25","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5285","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"31645:34:25"},"returnParameters":{"id":6847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6846,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6874,"src":"31703:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6845,"name":"uint256","nodeType":"ElementaryTypeName","src":"31703:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31702:9:25"},"scope":6894,"src":"31630:266:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6892,"nodeType":"Block","src":"32094:48:25","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":6890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":6888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6885,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6878,"src":"32117:8:25","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5285","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$5285","typeString":"enum Math.Rounding"}],"id":6884,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32111:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6883,"name":"uint8","nodeType":"ElementaryTypeName","src":"32111:5:25","typeDescriptions":{}}},"id":6886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32111:15:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":6887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32129:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"32111:19:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":6889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32134:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"32111:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6882,"id":6891,"nodeType":"Return","src":"32104:31:25"}]},"documentation":{"id":6875,"nodeType":"StructuredDocumentation","src":"31902:113:25","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":6893,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"32029:16:25","nodeType":"FunctionDefinition","parameters":{"id":6879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6878,"mutability":"mutable","name":"rounding","nameLocation":"32055:8:25","nodeType":"VariableDeclaration","scope":6893,"src":"32046:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5285","typeString":"enum Math.Rounding"},"typeName":{"id":6877,"nodeType":"UserDefinedTypeName","pathNode":{"id":6876,"name":"Rounding","nameLocations":["32046:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":5285,"src":"32046:8:25"},"referencedDeclaration":5285,"src":"32046:8:25","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5285","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"32045:19:25"},"returnParameters":{"id":6882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6881,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6893,"src":"32088:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6880,"name":"bool","nodeType":"ElementaryTypeName","src":"32088:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"32087:6:25"},"scope":6894,"src":"32020:122:25","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6895,"src":"281:31863:25","usedErrors":[],"usedEvents":[]}],"src":"103:32042:25"},"id":25},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[8659]},"id":8660,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6896,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:26"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":6897,"nodeType":"StructuredDocumentation","src":"218:550:26","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":8659,"linearizedBaseContracts":[8659],"name":"SafeCast","nameLocation":"777:8:26","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":6898,"nodeType":"StructuredDocumentation","src":"792:68:26","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":6904,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:26","nodeType":"ErrorDefinition","parameters":{"id":6903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6900,"mutability":"mutable","name":"bits","nameLocation":"908:4:26","nodeType":"VariableDeclaration","scope":6904,"src":"902:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6899,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":6902,"mutability":"mutable","name":"value","nameLocation":"922:5:26","nodeType":"VariableDeclaration","scope":6904,"src":"914:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6901,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:26"},"src":"865:64:26"},{"documentation":{"id":6905,"nodeType":"StructuredDocumentation","src":"935:75:26","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":6909,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:26","nodeType":"ErrorDefinition","parameters":{"id":6908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6907,"mutability":"mutable","name":"value","nameLocation":"1056:5:26","nodeType":"VariableDeclaration","scope":6909,"src":"1049:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6906,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:26"},"src":"1015:48:26"},{"documentation":{"id":6910,"nodeType":"StructuredDocumentation","src":"1069:67:26","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":6916,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:26","nodeType":"ErrorDefinition","parameters":{"id":6915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6912,"mutability":"mutable","name":"bits","nameLocation":"1183:4:26","nodeType":"VariableDeclaration","scope":6916,"src":"1177:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6911,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":6914,"mutability":"mutable","name":"value","nameLocation":"1196:5:26","nodeType":"VariableDeclaration","scope":6916,"src":"1189:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6913,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:26"},"src":"1141:62:26"},{"documentation":{"id":6917,"nodeType":"StructuredDocumentation","src":"1209:75:26","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":6921,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:26","nodeType":"ErrorDefinition","parameters":{"id":6920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6919,"mutability":"mutable","name":"value","nameLocation":"1331:5:26","nodeType":"VariableDeclaration","scope":6921,"src":"1323:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6918,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:26"},"src":"1289:49:26"},{"body":{"id":6948,"nodeType":"Block","src":"1695:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6929,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6924,"src":"1709:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6932,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":6931,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":6930,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":6934,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:26","memberName":"max","nodeType":"MemberAccess","src":"1717:17:26","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6942,"nodeType":"IfStatement","src":"1705:105:26","trueBody":{"id":6941,"nodeType":"Block","src":"1736:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":6937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:26","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":6938,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6924,"src":"1793:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6936,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6904,"src":"1757:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6940,"nodeType":"RevertStatement","src":"1750:49:26"}]}},{"expression":{"arguments":[{"id":6945,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6924,"src":"1834:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6944,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":6943,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:26","typeDescriptions":{}}},"id":6946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":6928,"id":6947,"nodeType":"Return","src":"1819:21:26"}]},"documentation":{"id":6922,"nodeType":"StructuredDocumentation","src":"1344:280:26","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":6949,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:26","nodeType":"FunctionDefinition","parameters":{"id":6925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6924,"mutability":"mutable","name":"value","nameLocation":"1656:5:26","nodeType":"VariableDeclaration","scope":6949,"src":"1648:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6923,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:26"},"returnParameters":{"id":6928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6927,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6949,"src":"1686:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":6926,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:26","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:26"},"scope":8659,"src":"1629:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6976,"nodeType":"Block","src":"2204:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6957,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6952,"src":"2218:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6960,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":6959,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":6958,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":6962,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:26","memberName":"max","nodeType":"MemberAccess","src":"2226:17:26","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6970,"nodeType":"IfStatement","src":"2214:105:26","trueBody":{"id":6969,"nodeType":"Block","src":"2245:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":6965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:26","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":6966,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6952,"src":"2302:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6964,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6904,"src":"2266:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6968,"nodeType":"RevertStatement","src":"2259:49:26"}]}},{"expression":{"arguments":[{"id":6973,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6952,"src":"2343:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6972,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":6971,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:26","typeDescriptions":{}}},"id":6974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":6956,"id":6975,"nodeType":"Return","src":"2328:21:26"}]},"documentation":{"id":6950,"nodeType":"StructuredDocumentation","src":"1853:280:26","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":6977,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:26","nodeType":"FunctionDefinition","parameters":{"id":6953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6952,"mutability":"mutable","name":"value","nameLocation":"2165:5:26","nodeType":"VariableDeclaration","scope":6977,"src":"2157:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6951,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:26"},"returnParameters":{"id":6956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6955,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6977,"src":"2195:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":6954,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:26","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:26"},"scope":8659,"src":"2138:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7004,"nodeType":"Block","src":"2713:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6985,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6980,"src":"2727:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6988,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":6987,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":6986,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":6990,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:26","memberName":"max","nodeType":"MemberAccess","src":"2735:17:26","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6998,"nodeType":"IfStatement","src":"2723:105:26","trueBody":{"id":6997,"nodeType":"Block","src":"2754:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":6993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:26","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":6994,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6980,"src":"2811:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6992,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6904,"src":"2775:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6996,"nodeType":"RevertStatement","src":"2768:49:26"}]}},{"expression":{"arguments":[{"id":7001,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6980,"src":"2852:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7000,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":6999,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:26","typeDescriptions":{}}},"id":7002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":6984,"id":7003,"nodeType":"Return","src":"2837:21:26"}]},"documentation":{"id":6978,"nodeType":"StructuredDocumentation","src":"2362:280:26","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":7005,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:26","nodeType":"FunctionDefinition","parameters":{"id":6981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6980,"mutability":"mutable","name":"value","nameLocation":"2674:5:26","nodeType":"VariableDeclaration","scope":7005,"src":"2666:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6979,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:26"},"returnParameters":{"id":6984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6983,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7005,"src":"2704:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":6982,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:26","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:26"},"scope":8659,"src":"2647:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7032,"nodeType":"Block","src":"3222:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7013,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7008,"src":"3236:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":7015,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":7014,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":7018,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:26","memberName":"max","nodeType":"MemberAccess","src":"3244:17:26","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7026,"nodeType":"IfStatement","src":"3232:105:26","trueBody":{"id":7025,"nodeType":"Block","src":"3263:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":7021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:26","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":7022,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7008,"src":"3320:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7020,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6904,"src":"3284:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7024,"nodeType":"RevertStatement","src":"3277:49:26"}]}},{"expression":{"arguments":[{"id":7029,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7008,"src":"3361:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7028,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":7027,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:26","typeDescriptions":{}}},"id":7030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":7012,"id":7031,"nodeType":"Return","src":"3346:21:26"}]},"documentation":{"id":7006,"nodeType":"StructuredDocumentation","src":"2871:280:26","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":7033,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:26","nodeType":"FunctionDefinition","parameters":{"id":7009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7008,"mutability":"mutable","name":"value","nameLocation":"3183:5:26","nodeType":"VariableDeclaration","scope":7033,"src":"3175:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7007,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:26"},"returnParameters":{"id":7012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7011,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7033,"src":"3213:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":7010,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:26","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:26"},"scope":8659,"src":"3156:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7060,"nodeType":"Block","src":"3731:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7041,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7036,"src":"3745:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7044,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":7043,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":7042,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":7046,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:26","memberName":"max","nodeType":"MemberAccess","src":"3753:17:26","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7054,"nodeType":"IfStatement","src":"3741:105:26","trueBody":{"id":7053,"nodeType":"Block","src":"3772:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":7049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:26","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":7050,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7036,"src":"3829:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7048,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6904,"src":"3793:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7052,"nodeType":"RevertStatement","src":"3786:49:26"}]}},{"expression":{"arguments":[{"id":7057,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7036,"src":"3870:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7056,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":7055,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:26","typeDescriptions":{}}},"id":7058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":7040,"id":7059,"nodeType":"Return","src":"3855:21:26"}]},"documentation":{"id":7034,"nodeType":"StructuredDocumentation","src":"3380:280:26","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":7061,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:26","nodeType":"FunctionDefinition","parameters":{"id":7037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7036,"mutability":"mutable","name":"value","nameLocation":"3692:5:26","nodeType":"VariableDeclaration","scope":7061,"src":"3684:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7035,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:26"},"returnParameters":{"id":7040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7039,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7061,"src":"3722:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":7038,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:26","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:26"},"scope":8659,"src":"3665:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7088,"nodeType":"Block","src":"4240:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7069,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7064,"src":"4254:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7072,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":7071,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":7070,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":7074,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:26","memberName":"max","nodeType":"MemberAccess","src":"4262:17:26","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7082,"nodeType":"IfStatement","src":"4250:105:26","trueBody":{"id":7081,"nodeType":"Block","src":"4281:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":7077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:26","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":7078,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7064,"src":"4338:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7076,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6904,"src":"4302:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7080,"nodeType":"RevertStatement","src":"4295:49:26"}]}},{"expression":{"arguments":[{"id":7085,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7064,"src":"4379:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7084,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":7083,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:26","typeDescriptions":{}}},"id":7086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":7068,"id":7087,"nodeType":"Return","src":"4364:21:26"}]},"documentation":{"id":7062,"nodeType":"StructuredDocumentation","src":"3889:280:26","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":7089,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:26","nodeType":"FunctionDefinition","parameters":{"id":7065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7064,"mutability":"mutable","name":"value","nameLocation":"4201:5:26","nodeType":"VariableDeclaration","scope":7089,"src":"4193:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7063,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:26"},"returnParameters":{"id":7068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7067,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7089,"src":"4231:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":7066,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:26","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:26"},"scope":8659,"src":"4174:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7116,"nodeType":"Block","src":"4749:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7097,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7092,"src":"4763:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7100,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":7099,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":7098,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":7102,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:26","memberName":"max","nodeType":"MemberAccess","src":"4771:17:26","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7110,"nodeType":"IfStatement","src":"4759:105:26","trueBody":{"id":7109,"nodeType":"Block","src":"4790:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":7105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:26","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":7106,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7092,"src":"4847:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7104,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6904,"src":"4811:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7108,"nodeType":"RevertStatement","src":"4804:49:26"}]}},{"expression":{"arguments":[{"id":7113,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7092,"src":"4888:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7112,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":7111,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:26","typeDescriptions":{}}},"id":7114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":7096,"id":7115,"nodeType":"Return","src":"4873:21:26"}]},"documentation":{"id":7090,"nodeType":"StructuredDocumentation","src":"4398:280:26","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":7117,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:26","nodeType":"FunctionDefinition","parameters":{"id":7093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7092,"mutability":"mutable","name":"value","nameLocation":"4710:5:26","nodeType":"VariableDeclaration","scope":7117,"src":"4702:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7091,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:26"},"returnParameters":{"id":7096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7095,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7117,"src":"4740:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":7094,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:26","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:26"},"scope":8659,"src":"4683:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7144,"nodeType":"Block","src":"5258:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7125,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7120,"src":"5272:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7128,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":7127,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":7126,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":7130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:26","memberName":"max","nodeType":"MemberAccess","src":"5280:17:26","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7138,"nodeType":"IfStatement","src":"5268:105:26","trueBody":{"id":7137,"nodeType":"Block","src":"5299:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":7133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:26","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":7134,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7120,"src":"5356:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7132,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6904,"src":"5320:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7136,"nodeType":"RevertStatement","src":"5313:49:26"}]}},{"expression":{"arguments":[{"id":7141,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7120,"src":"5397:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7140,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":7139,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:26","typeDescriptions":{}}},"id":7142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":7124,"id":7143,"nodeType":"Return","src":"5382:21:26"}]},"documentation":{"id":7118,"nodeType":"StructuredDocumentation","src":"4907:280:26","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":7145,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:26","nodeType":"FunctionDefinition","parameters":{"id":7121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7120,"mutability":"mutable","name":"value","nameLocation":"5219:5:26","nodeType":"VariableDeclaration","scope":7145,"src":"5211:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7119,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:26"},"returnParameters":{"id":7124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7123,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7145,"src":"5249:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":7122,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:26","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:26"},"scope":8659,"src":"5192:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7172,"nodeType":"Block","src":"5767:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7153,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7148,"src":"5781:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":7155,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":7154,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":7158,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:26","memberName":"max","nodeType":"MemberAccess","src":"5789:17:26","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7166,"nodeType":"IfStatement","src":"5777:105:26","trueBody":{"id":7165,"nodeType":"Block","src":"5808:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":7161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:26","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":7162,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7148,"src":"5865:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7160,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6904,"src":"5829:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7164,"nodeType":"RevertStatement","src":"5822:49:26"}]}},{"expression":{"arguments":[{"id":7169,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7148,"src":"5906:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7168,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":7167,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:26","typeDescriptions":{}}},"id":7170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":7152,"id":7171,"nodeType":"Return","src":"5891:21:26"}]},"documentation":{"id":7146,"nodeType":"StructuredDocumentation","src":"5416:280:26","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":7173,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:26","nodeType":"FunctionDefinition","parameters":{"id":7149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7148,"mutability":"mutable","name":"value","nameLocation":"5728:5:26","nodeType":"VariableDeclaration","scope":7173,"src":"5720:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7147,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:26"},"returnParameters":{"id":7152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7151,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7173,"src":"5758:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":7150,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:26","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:26"},"scope":8659,"src":"5701:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7200,"nodeType":"Block","src":"6276:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7181,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7176,"src":"6290:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7184,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":7183,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":7182,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":7186,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:26","memberName":"max","nodeType":"MemberAccess","src":"6298:17:26","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7194,"nodeType":"IfStatement","src":"6286:105:26","trueBody":{"id":7193,"nodeType":"Block","src":"6317:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":7189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:26","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":7190,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7176,"src":"6374:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7188,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6904,"src":"6338:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7192,"nodeType":"RevertStatement","src":"6331:49:26"}]}},{"expression":{"arguments":[{"id":7197,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7176,"src":"6415:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7196,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":7195,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:26","typeDescriptions":{}}},"id":7198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":7180,"id":7199,"nodeType":"Return","src":"6400:21:26"}]},"documentation":{"id":7174,"nodeType":"StructuredDocumentation","src":"5925:280:26","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":7201,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:26","nodeType":"FunctionDefinition","parameters":{"id":7177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7176,"mutability":"mutable","name":"value","nameLocation":"6237:5:26","nodeType":"VariableDeclaration","scope":7201,"src":"6229:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7175,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:26"},"returnParameters":{"id":7180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7179,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7201,"src":"6267:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":7178,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:26","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:26"},"scope":8659,"src":"6210:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7228,"nodeType":"Block","src":"6785:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7209,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7204,"src":"6799:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7212,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":7211,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":7210,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":7214,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:26","memberName":"max","nodeType":"MemberAccess","src":"6807:17:26","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7222,"nodeType":"IfStatement","src":"6795:105:26","trueBody":{"id":7221,"nodeType":"Block","src":"6826:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":7217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:26","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":7218,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7204,"src":"6883:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7216,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6904,"src":"6847:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7220,"nodeType":"RevertStatement","src":"6840:49:26"}]}},{"expression":{"arguments":[{"id":7225,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7204,"src":"6924:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7224,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":7223,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:26","typeDescriptions":{}}},"id":7226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":7208,"id":7227,"nodeType":"Return","src":"6909:21:26"}]},"documentation":{"id":7202,"nodeType":"StructuredDocumentation","src":"6434:280:26","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":7229,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:26","nodeType":"FunctionDefinition","parameters":{"id":7205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7204,"mutability":"mutable","name":"value","nameLocation":"6746:5:26","nodeType":"VariableDeclaration","scope":7229,"src":"6738:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7203,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:26"},"returnParameters":{"id":7208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7207,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7229,"src":"6776:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":7206,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:26","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:26"},"scope":8659,"src":"6719:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7256,"nodeType":"Block","src":"7294:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7237,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7232,"src":"7308:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7240,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":7239,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":7238,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":7242,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:26","memberName":"max","nodeType":"MemberAccess","src":"7316:17:26","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7250,"nodeType":"IfStatement","src":"7304:105:26","trueBody":{"id":7249,"nodeType":"Block","src":"7335:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":7245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:26","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":7246,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7232,"src":"7392:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7244,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6904,"src":"7356:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7248,"nodeType":"RevertStatement","src":"7349:49:26"}]}},{"expression":{"arguments":[{"id":7253,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7232,"src":"7433:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7252,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":7251,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:26","typeDescriptions":{}}},"id":7254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":7236,"id":7255,"nodeType":"Return","src":"7418:21:26"}]},"documentation":{"id":7230,"nodeType":"StructuredDocumentation","src":"6943:280:26","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":7257,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:26","nodeType":"FunctionDefinition","parameters":{"id":7233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7232,"mutability":"mutable","name":"value","nameLocation":"7255:5:26","nodeType":"VariableDeclaration","scope":7257,"src":"7247:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7231,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:26"},"returnParameters":{"id":7236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7235,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7257,"src":"7285:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":7234,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:26","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:26"},"scope":8659,"src":"7228:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7284,"nodeType":"Block","src":"7803:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7265,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7260,"src":"7817:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7268,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":7267,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":7266,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":7270,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:26","memberName":"max","nodeType":"MemberAccess","src":"7825:17:26","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7278,"nodeType":"IfStatement","src":"7813:105:26","trueBody":{"id":7277,"nodeType":"Block","src":"7844:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":7273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:26","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":7274,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7260,"src":"7901:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7272,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6904,"src":"7865:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7276,"nodeType":"RevertStatement","src":"7858:49:26"}]}},{"expression":{"arguments":[{"id":7281,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7260,"src":"7942:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7280,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":7279,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:26","typeDescriptions":{}}},"id":7282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":7264,"id":7283,"nodeType":"Return","src":"7927:21:26"}]},"documentation":{"id":7258,"nodeType":"StructuredDocumentation","src":"7452:280:26","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":7285,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:26","nodeType":"FunctionDefinition","parameters":{"id":7261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7260,"mutability":"mutable","name":"value","nameLocation":"7764:5:26","nodeType":"VariableDeclaration","scope":7285,"src":"7756:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7259,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:26"},"returnParameters":{"id":7264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7263,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7285,"src":"7794:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":7262,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:26","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:26"},"scope":8659,"src":"7737:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7312,"nodeType":"Block","src":"8312:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7293,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7288,"src":"8326:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7296,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":7295,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":7294,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":7298,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:26","memberName":"max","nodeType":"MemberAccess","src":"8334:17:26","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7306,"nodeType":"IfStatement","src":"8322:105:26","trueBody":{"id":7305,"nodeType":"Block","src":"8353:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":7301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:26","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":7302,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7288,"src":"8410:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7300,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6904,"src":"8374:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7304,"nodeType":"RevertStatement","src":"8367:49:26"}]}},{"expression":{"arguments":[{"id":7309,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7288,"src":"8451:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7308,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":7307,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:26","typeDescriptions":{}}},"id":7310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":7292,"id":7311,"nodeType":"Return","src":"8436:21:26"}]},"documentation":{"id":7286,"nodeType":"StructuredDocumentation","src":"7961:280:26","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":7313,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:26","nodeType":"FunctionDefinition","parameters":{"id":7289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7288,"mutability":"mutable","name":"value","nameLocation":"8273:5:26","nodeType":"VariableDeclaration","scope":7313,"src":"8265:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7287,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:26"},"returnParameters":{"id":7292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7291,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7313,"src":"8303:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":7290,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:26","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:26"},"scope":8659,"src":"8246:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7340,"nodeType":"Block","src":"8821:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7321,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7316,"src":"8835:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7324,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":7323,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":7322,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":7326,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:26","memberName":"max","nodeType":"MemberAccess","src":"8843:17:26","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7334,"nodeType":"IfStatement","src":"8831:105:26","trueBody":{"id":7333,"nodeType":"Block","src":"8862:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":7329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:26","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":7330,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7316,"src":"8919:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7328,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6904,"src":"8883:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7332,"nodeType":"RevertStatement","src":"8876:49:26"}]}},{"expression":{"arguments":[{"id":7337,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7316,"src":"8960:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7336,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":7335,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:26","typeDescriptions":{}}},"id":7338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":7320,"id":7339,"nodeType":"Return","src":"8945:21:26"}]},"documentation":{"id":7314,"nodeType":"StructuredDocumentation","src":"8470:280:26","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":7341,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:26","nodeType":"FunctionDefinition","parameters":{"id":7317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7316,"mutability":"mutable","name":"value","nameLocation":"8782:5:26","nodeType":"VariableDeclaration","scope":7341,"src":"8774:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7315,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:26"},"returnParameters":{"id":7320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7319,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7341,"src":"8812:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":7318,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:26","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:26"},"scope":8659,"src":"8755:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7368,"nodeType":"Block","src":"9330:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7349,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7344,"src":"9344:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":7351,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":7350,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":7354,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:26","memberName":"max","nodeType":"MemberAccess","src":"9352:17:26","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7362,"nodeType":"IfStatement","src":"9340:105:26","trueBody":{"id":7361,"nodeType":"Block","src":"9371:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":7357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:26","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":7358,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7344,"src":"9428:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7356,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6904,"src":"9392:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7360,"nodeType":"RevertStatement","src":"9385:49:26"}]}},{"expression":{"arguments":[{"id":7365,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7344,"src":"9469:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7364,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":7363,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:26","typeDescriptions":{}}},"id":7366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":7348,"id":7367,"nodeType":"Return","src":"9454:21:26"}]},"documentation":{"id":7342,"nodeType":"StructuredDocumentation","src":"8979:280:26","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":7369,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:26","nodeType":"FunctionDefinition","parameters":{"id":7345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7344,"mutability":"mutable","name":"value","nameLocation":"9291:5:26","nodeType":"VariableDeclaration","scope":7369,"src":"9283:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7343,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:26"},"returnParameters":{"id":7348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7347,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7369,"src":"9321:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":7346,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:26","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:26"},"scope":8659,"src":"9264:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7396,"nodeType":"Block","src":"9839:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7377,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7372,"src":"9853:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7380,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":7379,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":7378,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":7382,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:26","memberName":"max","nodeType":"MemberAccess","src":"9861:17:26","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7390,"nodeType":"IfStatement","src":"9849:105:26","trueBody":{"id":7389,"nodeType":"Block","src":"9880:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":7385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:26","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":7386,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7372,"src":"9937:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7384,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6904,"src":"9901:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7388,"nodeType":"RevertStatement","src":"9894:49:26"}]}},{"expression":{"arguments":[{"id":7393,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7372,"src":"9978:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7392,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":7391,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:26","typeDescriptions":{}}},"id":7394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":7376,"id":7395,"nodeType":"Return","src":"9963:21:26"}]},"documentation":{"id":7370,"nodeType":"StructuredDocumentation","src":"9488:280:26","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":7397,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:26","nodeType":"FunctionDefinition","parameters":{"id":7373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7372,"mutability":"mutable","name":"value","nameLocation":"9800:5:26","nodeType":"VariableDeclaration","scope":7397,"src":"9792:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7371,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:26"},"returnParameters":{"id":7376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7375,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7397,"src":"9830:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":7374,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:26","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:26"},"scope":8659,"src":"9773:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7424,"nodeType":"Block","src":"10348:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7405,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7400,"src":"10362:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":7407,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":7406,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":7410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:26","memberName":"max","nodeType":"MemberAccess","src":"10370:17:26","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7418,"nodeType":"IfStatement","src":"10358:105:26","trueBody":{"id":7417,"nodeType":"Block","src":"10389:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":7413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:26","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":7414,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7400,"src":"10446:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7412,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6904,"src":"10410:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7416,"nodeType":"RevertStatement","src":"10403:49:26"}]}},{"expression":{"arguments":[{"id":7421,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7400,"src":"10487:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7420,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":7419,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:26","typeDescriptions":{}}},"id":7422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":7404,"id":7423,"nodeType":"Return","src":"10472:21:26"}]},"documentation":{"id":7398,"nodeType":"StructuredDocumentation","src":"9997:280:26","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":7425,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:26","nodeType":"FunctionDefinition","parameters":{"id":7401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7400,"mutability":"mutable","name":"value","nameLocation":"10309:5:26","nodeType":"VariableDeclaration","scope":7425,"src":"10301:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7399,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:26"},"returnParameters":{"id":7404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7403,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7425,"src":"10339:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":7402,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:26","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:26"},"scope":8659,"src":"10282:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7452,"nodeType":"Block","src":"10857:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7433,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7428,"src":"10871:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7436,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":7435,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":7434,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":7438,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:26","memberName":"max","nodeType":"MemberAccess","src":"10879:17:26","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7446,"nodeType":"IfStatement","src":"10867:105:26","trueBody":{"id":7445,"nodeType":"Block","src":"10898:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":7441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:26","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":7442,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7428,"src":"10955:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7440,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6904,"src":"10919:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7444,"nodeType":"RevertStatement","src":"10912:49:26"}]}},{"expression":{"arguments":[{"id":7449,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7428,"src":"10996:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7448,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":7447,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:26","typeDescriptions":{}}},"id":7450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":7432,"id":7451,"nodeType":"Return","src":"10981:21:26"}]},"documentation":{"id":7426,"nodeType":"StructuredDocumentation","src":"10506:280:26","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":7453,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:26","nodeType":"FunctionDefinition","parameters":{"id":7429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7428,"mutability":"mutable","name":"value","nameLocation":"10818:5:26","nodeType":"VariableDeclaration","scope":7453,"src":"10810:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7427,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:26"},"returnParameters":{"id":7432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7431,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7453,"src":"10848:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":7430,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:26","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:26"},"scope":8659,"src":"10791:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7480,"nodeType":"Block","src":"11360:149:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7461,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7456,"src":"11374:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7464,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":7463,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":7462,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":7466,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:26","memberName":"max","nodeType":"MemberAccess","src":"11382:16:26","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7474,"nodeType":"IfStatement","src":"11370:103:26","trueBody":{"id":7473,"nodeType":"Block","src":"11400:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":7469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:26","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":7470,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7456,"src":"11456:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7468,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6904,"src":"11421:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7472,"nodeType":"RevertStatement","src":"11414:48:26"}]}},{"expression":{"arguments":[{"id":7477,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7456,"src":"11496:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7476,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":7475,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:26","typeDescriptions":{}}},"id":7478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":7460,"id":7479,"nodeType":"Return","src":"11482:20:26"}]},"documentation":{"id":7454,"nodeType":"StructuredDocumentation","src":"11015:276:26","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":7481,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:26","nodeType":"FunctionDefinition","parameters":{"id":7457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7456,"mutability":"mutable","name":"value","nameLocation":"11322:5:26","nodeType":"VariableDeclaration","scope":7481,"src":"11314:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7455,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:26"},"returnParameters":{"id":7460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7459,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7481,"src":"11352:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":7458,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:26","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:26"},"scope":8659,"src":"11296:213:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7508,"nodeType":"Block","src":"11860:149:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7489,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7484,"src":"11874:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7492,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":7491,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":7490,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":7494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:26","memberName":"max","nodeType":"MemberAccess","src":"11882:16:26","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7502,"nodeType":"IfStatement","src":"11870:103:26","trueBody":{"id":7501,"nodeType":"Block","src":"11900:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":7497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:26","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":7498,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7484,"src":"11956:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7496,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6904,"src":"11921:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7500,"nodeType":"RevertStatement","src":"11914:48:26"}]}},{"expression":{"arguments":[{"id":7505,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7484,"src":"11996:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7504,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":7503,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:26","typeDescriptions":{}}},"id":7506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":7488,"id":7507,"nodeType":"Return","src":"11982:20:26"}]},"documentation":{"id":7482,"nodeType":"StructuredDocumentation","src":"11515:276:26","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":7509,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:26","nodeType":"FunctionDefinition","parameters":{"id":7485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7484,"mutability":"mutable","name":"value","nameLocation":"11822:5:26","nodeType":"VariableDeclaration","scope":7509,"src":"11814:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7483,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:26"},"returnParameters":{"id":7488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7487,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7509,"src":"11852:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":7486,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:26","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:26"},"scope":8659,"src":"11796:213:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7536,"nodeType":"Block","src":"12360:149:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7517,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7512,"src":"12374:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7520,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":7519,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":7518,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":7522,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:26","memberName":"max","nodeType":"MemberAccess","src":"12382:16:26","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7530,"nodeType":"IfStatement","src":"12370:103:26","trueBody":{"id":7529,"nodeType":"Block","src":"12400:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":7525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:26","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":7526,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7512,"src":"12456:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7524,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6904,"src":"12421:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7528,"nodeType":"RevertStatement","src":"12414:48:26"}]}},{"expression":{"arguments":[{"id":7533,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7512,"src":"12496:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7532,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":7531,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:26","typeDescriptions":{}}},"id":7534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":7516,"id":7535,"nodeType":"Return","src":"12482:20:26"}]},"documentation":{"id":7510,"nodeType":"StructuredDocumentation","src":"12015:276:26","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":7537,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:26","nodeType":"FunctionDefinition","parameters":{"id":7513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7512,"mutability":"mutable","name":"value","nameLocation":"12322:5:26","nodeType":"VariableDeclaration","scope":7537,"src":"12314:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7511,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:26"},"returnParameters":{"id":7516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7515,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7537,"src":"12352:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":7514,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:26","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:26"},"scope":8659,"src":"12296:213:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7564,"nodeType":"Block","src":"12860:149:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7545,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7540,"src":"12874:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7548,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":7547,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":7546,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":7550,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:26","memberName":"max","nodeType":"MemberAccess","src":"12882:16:26","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7558,"nodeType":"IfStatement","src":"12870:103:26","trueBody":{"id":7557,"nodeType":"Block","src":"12900:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":7553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:26","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":7554,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7540,"src":"12956:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7552,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6904,"src":"12921:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7556,"nodeType":"RevertStatement","src":"12914:48:26"}]}},{"expression":{"arguments":[{"id":7561,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7540,"src":"12996:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7560,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":7559,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:26","typeDescriptions":{}}},"id":7562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":7544,"id":7563,"nodeType":"Return","src":"12982:20:26"}]},"documentation":{"id":7538,"nodeType":"StructuredDocumentation","src":"12515:276:26","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":7565,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:26","nodeType":"FunctionDefinition","parameters":{"id":7541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7540,"mutability":"mutable","name":"value","nameLocation":"12822:5:26","nodeType":"VariableDeclaration","scope":7565,"src":"12814:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7539,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:26"},"returnParameters":{"id":7544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7543,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7565,"src":"12852:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":7542,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:26","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:26"},"scope":8659,"src":"12796:213:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7592,"nodeType":"Block","src":"13360:149:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7573,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7568,"src":"13374:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7576,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":7575,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":7574,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":7578,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:26","memberName":"max","nodeType":"MemberAccess","src":"13382:16:26","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7586,"nodeType":"IfStatement","src":"13370:103:26","trueBody":{"id":7585,"nodeType":"Block","src":"13400:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":7581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:26","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":7582,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7568,"src":"13456:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7580,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6904,"src":"13421:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7584,"nodeType":"RevertStatement","src":"13414:48:26"}]}},{"expression":{"arguments":[{"id":7589,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7568,"src":"13496:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7588,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":7587,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:26","typeDescriptions":{}}},"id":7590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":7572,"id":7591,"nodeType":"Return","src":"13482:20:26"}]},"documentation":{"id":7566,"nodeType":"StructuredDocumentation","src":"13015:276:26","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":7593,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:26","nodeType":"FunctionDefinition","parameters":{"id":7569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7568,"mutability":"mutable","name":"value","nameLocation":"13322:5:26","nodeType":"VariableDeclaration","scope":7593,"src":"13314:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7567,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:26"},"returnParameters":{"id":7572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7571,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7593,"src":"13352:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":7570,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:26","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:26"},"scope":8659,"src":"13296:213:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7620,"nodeType":"Block","src":"13860:149:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7601,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7596,"src":"13874:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7604,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":7603,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":7602,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":7606,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:26","memberName":"max","nodeType":"MemberAccess","src":"13882:16:26","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7614,"nodeType":"IfStatement","src":"13870:103:26","trueBody":{"id":7613,"nodeType":"Block","src":"13900:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":7609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:26","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":7610,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7596,"src":"13956:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7608,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6904,"src":"13921:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7612,"nodeType":"RevertStatement","src":"13914:48:26"}]}},{"expression":{"arguments":[{"id":7617,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7596,"src":"13996:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7616,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":7615,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:26","typeDescriptions":{}}},"id":7618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":7600,"id":7619,"nodeType":"Return","src":"13982:20:26"}]},"documentation":{"id":7594,"nodeType":"StructuredDocumentation","src":"13515:276:26","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":7621,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:26","nodeType":"FunctionDefinition","parameters":{"id":7597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7596,"mutability":"mutable","name":"value","nameLocation":"13822:5:26","nodeType":"VariableDeclaration","scope":7621,"src":"13814:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7595,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:26"},"returnParameters":{"id":7600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7599,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7621,"src":"13852:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":7598,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:26","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:26"},"scope":8659,"src":"13796:213:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7648,"nodeType":"Block","src":"14360:149:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7629,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7624,"src":"14374:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7632,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":7631,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":7630,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":7634,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:26","memberName":"max","nodeType":"MemberAccess","src":"14382:16:26","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7642,"nodeType":"IfStatement","src":"14370:103:26","trueBody":{"id":7641,"nodeType":"Block","src":"14400:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":7637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:26","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":7638,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7624,"src":"14456:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7636,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6904,"src":"14421:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7640,"nodeType":"RevertStatement","src":"14414:48:26"}]}},{"expression":{"arguments":[{"id":7645,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7624,"src":"14496:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7644,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":7643,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:26","typeDescriptions":{}}},"id":7646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":7628,"id":7647,"nodeType":"Return","src":"14482:20:26"}]},"documentation":{"id":7622,"nodeType":"StructuredDocumentation","src":"14015:276:26","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":7649,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:26","nodeType":"FunctionDefinition","parameters":{"id":7625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7624,"mutability":"mutable","name":"value","nameLocation":"14322:5:26","nodeType":"VariableDeclaration","scope":7649,"src":"14314:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7623,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:26"},"returnParameters":{"id":7628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7627,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7649,"src":"14352:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":7626,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:26","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:26"},"scope":8659,"src":"14296:213:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7676,"nodeType":"Block","src":"14860:149:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7657,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7652,"src":"14874:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7660,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":7659,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":7658,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":7662,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:26","memberName":"max","nodeType":"MemberAccess","src":"14882:16:26","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7670,"nodeType":"IfStatement","src":"14870:103:26","trueBody":{"id":7669,"nodeType":"Block","src":"14900:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":7665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:26","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":7666,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7652,"src":"14956:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7664,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6904,"src":"14921:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7668,"nodeType":"RevertStatement","src":"14914:48:26"}]}},{"expression":{"arguments":[{"id":7673,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7652,"src":"14996:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7672,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":7671,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:26","typeDescriptions":{}}},"id":7674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":7656,"id":7675,"nodeType":"Return","src":"14982:20:26"}]},"documentation":{"id":7650,"nodeType":"StructuredDocumentation","src":"14515:276:26","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":7677,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:26","nodeType":"FunctionDefinition","parameters":{"id":7653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7652,"mutability":"mutable","name":"value","nameLocation":"14822:5:26","nodeType":"VariableDeclaration","scope":7677,"src":"14814:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7651,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:26"},"returnParameters":{"id":7656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7655,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7677,"src":"14852:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":7654,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:26","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:26"},"scope":8659,"src":"14796:213:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7704,"nodeType":"Block","src":"15360:149:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7685,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7680,"src":"15374:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7688,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":7687,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":7686,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":7690,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:26","memberName":"max","nodeType":"MemberAccess","src":"15382:16:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7698,"nodeType":"IfStatement","src":"15370:103:26","trueBody":{"id":7697,"nodeType":"Block","src":"15400:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":7693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:26","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":7694,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7680,"src":"15456:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7692,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6904,"src":"15421:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7696,"nodeType":"RevertStatement","src":"15414:48:26"}]}},{"expression":{"arguments":[{"id":7701,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7680,"src":"15496:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7700,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":7699,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:26","typeDescriptions":{}}},"id":7702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":7684,"id":7703,"nodeType":"Return","src":"15482:20:26"}]},"documentation":{"id":7678,"nodeType":"StructuredDocumentation","src":"15015:276:26","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":7705,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:26","nodeType":"FunctionDefinition","parameters":{"id":7681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7680,"mutability":"mutable","name":"value","nameLocation":"15322:5:26","nodeType":"VariableDeclaration","scope":7705,"src":"15314:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7679,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:26"},"returnParameters":{"id":7684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7683,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7705,"src":"15352:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7682,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:26"},"scope":8659,"src":"15296:213:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7732,"nodeType":"Block","src":"15860:149:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7713,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7708,"src":"15874:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7716,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":7715,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":7714,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":7718,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:26","memberName":"max","nodeType":"MemberAccess","src":"15882:16:26","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7726,"nodeType":"IfStatement","src":"15870:103:26","trueBody":{"id":7725,"nodeType":"Block","src":"15900:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":7721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:26","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":7722,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7708,"src":"15956:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7720,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6904,"src":"15921:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7724,"nodeType":"RevertStatement","src":"15914:48:26"}]}},{"expression":{"arguments":[{"id":7729,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7708,"src":"15996:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7728,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":7727,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:26","typeDescriptions":{}}},"id":7730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":7712,"id":7731,"nodeType":"Return","src":"15982:20:26"}]},"documentation":{"id":7706,"nodeType":"StructuredDocumentation","src":"15515:276:26","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":7733,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:26","nodeType":"FunctionDefinition","parameters":{"id":7709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7708,"mutability":"mutable","name":"value","nameLocation":"15822:5:26","nodeType":"VariableDeclaration","scope":7733,"src":"15814:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7707,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:26"},"returnParameters":{"id":7712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7711,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7733,"src":"15852:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":7710,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:26","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:26"},"scope":8659,"src":"15796:213:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7760,"nodeType":"Block","src":"16360:149:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7741,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7736,"src":"16374:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7744,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":7743,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":7742,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":7746,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:26","memberName":"max","nodeType":"MemberAccess","src":"16382:16:26","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7754,"nodeType":"IfStatement","src":"16370:103:26","trueBody":{"id":7753,"nodeType":"Block","src":"16400:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":7749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:26","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":7750,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7736,"src":"16456:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7748,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6904,"src":"16421:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7752,"nodeType":"RevertStatement","src":"16414:48:26"}]}},{"expression":{"arguments":[{"id":7757,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7736,"src":"16496:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7756,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":7755,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:26","typeDescriptions":{}}},"id":7758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":7740,"id":7759,"nodeType":"Return","src":"16482:20:26"}]},"documentation":{"id":7734,"nodeType":"StructuredDocumentation","src":"16015:276:26","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":7761,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:26","nodeType":"FunctionDefinition","parameters":{"id":7737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7736,"mutability":"mutable","name":"value","nameLocation":"16322:5:26","nodeType":"VariableDeclaration","scope":7761,"src":"16314:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7735,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:26"},"returnParameters":{"id":7740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7739,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7761,"src":"16352:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":7738,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:26","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:26"},"scope":8659,"src":"16296:213:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7788,"nodeType":"Block","src":"16854:146:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7769,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7764,"src":"16868:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7772,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":7771,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":7770,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":7774,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:26","memberName":"max","nodeType":"MemberAccess","src":"16876:15:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7782,"nodeType":"IfStatement","src":"16864:101:26","trueBody":{"id":7781,"nodeType":"Block","src":"16893:72:26","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":7777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:26","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":7778,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7764,"src":"16948:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7776,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6904,"src":"16914:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7780,"nodeType":"RevertStatement","src":"16907:47:26"}]}},{"expression":{"arguments":[{"id":7785,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7764,"src":"16987:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7784,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":7783,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:26","typeDescriptions":{}}},"id":7786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":7768,"id":7787,"nodeType":"Return","src":"16974:19:26"}]},"documentation":{"id":7762,"nodeType":"StructuredDocumentation","src":"16515:272:26","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":7789,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:26","nodeType":"FunctionDefinition","parameters":{"id":7765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7764,"mutability":"mutable","name":"value","nameLocation":"16817:5:26","nodeType":"VariableDeclaration","scope":7789,"src":"16809:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7763,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:26"},"returnParameters":{"id":7768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7767,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7789,"src":"16847:5:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7766,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:26"},"scope":8659,"src":"16792:208:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7811,"nodeType":"Block","src":"17236:128:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7797,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7792,"src":"17250:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":7798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7805,"nodeType":"IfStatement","src":"17246:81:26","trueBody":{"id":7804,"nodeType":"Block","src":"17261:66:26","statements":[{"errorCall":{"arguments":[{"id":7801,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7792,"src":"17310:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7800,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6909,"src":"17282:27:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":7802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7803,"nodeType":"RevertStatement","src":"17275:41:26"}]}},{"expression":{"arguments":[{"id":7808,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7792,"src":"17351:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7807,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7806,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:26","typeDescriptions":{}}},"id":7809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7796,"id":7810,"nodeType":"Return","src":"17336:21:26"}]},"documentation":{"id":7790,"nodeType":"StructuredDocumentation","src":"17006:160:26","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":7812,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:26","nodeType":"FunctionDefinition","parameters":{"id":7793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7792,"mutability":"mutable","name":"value","nameLocation":"17197:5:26","nodeType":"VariableDeclaration","scope":7812,"src":"17190:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7791,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:26"},"returnParameters":{"id":7796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7795,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7812,"src":"17227:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7794,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:26"},"scope":8659,"src":"17171:193:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7837,"nodeType":"Block","src":"17761:150:26","statements":[{"expression":{"id":7825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7820,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7818,"src":"17771:10:26","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7823,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7815,"src":"17791:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7822,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":7821,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:26","typeDescriptions":{}}},"id":7824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:26","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":7826,"nodeType":"ExpressionStatement","src":"17771:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7827,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7818,"src":"17811:10:26","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7828,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7815,"src":"17825:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7836,"nodeType":"IfStatement","src":"17807:98:26","trueBody":{"id":7835,"nodeType":"Block","src":"17832:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":7831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:26","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":7832,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7815,"src":"17888:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7830,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6916,"src":"17853:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7834,"nodeType":"RevertStatement","src":"17846:48:26"}]}}]},"documentation":{"id":7813,"nodeType":"StructuredDocumentation","src":"17370:312:26","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":7838,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:26","nodeType":"FunctionDefinition","parameters":{"id":7816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7815,"mutability":"mutable","name":"value","nameLocation":"17712:5:26","nodeType":"VariableDeclaration","scope":7838,"src":"17705:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7814,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:26"},"returnParameters":{"id":7819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7818,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:26","nodeType":"VariableDeclaration","scope":7838,"src":"17742:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":7817,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:26","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:26"},"scope":8659,"src":"17687:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7863,"nodeType":"Block","src":"18308:150:26","statements":[{"expression":{"id":7851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7846,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7844,"src":"18318:10:26","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7849,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7841,"src":"18338:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7848,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":7847,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:26","typeDescriptions":{}}},"id":7850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:26","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":7852,"nodeType":"ExpressionStatement","src":"18318:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7853,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7844,"src":"18358:10:26","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7854,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7841,"src":"18372:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7862,"nodeType":"IfStatement","src":"18354:98:26","trueBody":{"id":7861,"nodeType":"Block","src":"18379:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":7857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:26","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":7858,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7841,"src":"18435:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7856,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6916,"src":"18400:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7860,"nodeType":"RevertStatement","src":"18393:48:26"}]}}]},"documentation":{"id":7839,"nodeType":"StructuredDocumentation","src":"17917:312:26","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":7864,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:26","nodeType":"FunctionDefinition","parameters":{"id":7842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7841,"mutability":"mutable","name":"value","nameLocation":"18259:5:26","nodeType":"VariableDeclaration","scope":7864,"src":"18252:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7840,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:26"},"returnParameters":{"id":7845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7844,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:26","nodeType":"VariableDeclaration","scope":7864,"src":"18289:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":7843,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:26","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:26"},"scope":8659,"src":"18234:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7889,"nodeType":"Block","src":"18855:150:26","statements":[{"expression":{"id":7877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7872,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7870,"src":"18865:10:26","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7875,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7867,"src":"18885:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7874,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":7873,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:26","typeDescriptions":{}}},"id":7876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:26","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":7878,"nodeType":"ExpressionStatement","src":"18865:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7879,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7870,"src":"18905:10:26","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7880,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7867,"src":"18919:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7888,"nodeType":"IfStatement","src":"18901:98:26","trueBody":{"id":7887,"nodeType":"Block","src":"18926:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":7883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:26","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":7884,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7867,"src":"18982:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7882,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6916,"src":"18947:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7886,"nodeType":"RevertStatement","src":"18940:48:26"}]}}]},"documentation":{"id":7865,"nodeType":"StructuredDocumentation","src":"18464:312:26","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":7890,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:26","nodeType":"FunctionDefinition","parameters":{"id":7868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7867,"mutability":"mutable","name":"value","nameLocation":"18806:5:26","nodeType":"VariableDeclaration","scope":7890,"src":"18799:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7866,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:26"},"returnParameters":{"id":7871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7870,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:26","nodeType":"VariableDeclaration","scope":7890,"src":"18836:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":7869,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:26","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:26"},"scope":8659,"src":"18781:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7915,"nodeType":"Block","src":"19402:150:26","statements":[{"expression":{"id":7903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7898,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7896,"src":"19412:10:26","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7901,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7893,"src":"19432:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7900,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":7899,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:26","typeDescriptions":{}}},"id":7902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:26","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":7904,"nodeType":"ExpressionStatement","src":"19412:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7905,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7896,"src":"19452:10:26","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7906,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7893,"src":"19466:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7914,"nodeType":"IfStatement","src":"19448:98:26","trueBody":{"id":7913,"nodeType":"Block","src":"19473:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":7909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:26","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":7910,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7893,"src":"19529:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7908,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6916,"src":"19494:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7912,"nodeType":"RevertStatement","src":"19487:48:26"}]}}]},"documentation":{"id":7891,"nodeType":"StructuredDocumentation","src":"19011:312:26","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":7916,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:26","nodeType":"FunctionDefinition","parameters":{"id":7894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7893,"mutability":"mutable","name":"value","nameLocation":"19353:5:26","nodeType":"VariableDeclaration","scope":7916,"src":"19346:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7892,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:26"},"returnParameters":{"id":7897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7896,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:26","nodeType":"VariableDeclaration","scope":7916,"src":"19383:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":7895,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:26","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:26"},"scope":8659,"src":"19328:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7941,"nodeType":"Block","src":"19949:150:26","statements":[{"expression":{"id":7929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7924,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7922,"src":"19959:10:26","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7927,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7919,"src":"19979:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7926,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":7925,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:26","typeDescriptions":{}}},"id":7928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:26","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":7930,"nodeType":"ExpressionStatement","src":"19959:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7931,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7922,"src":"19999:10:26","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7932,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7919,"src":"20013:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7940,"nodeType":"IfStatement","src":"19995:98:26","trueBody":{"id":7939,"nodeType":"Block","src":"20020:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":7935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:26","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":7936,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7919,"src":"20076:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7934,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6916,"src":"20041:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7938,"nodeType":"RevertStatement","src":"20034:48:26"}]}}]},"documentation":{"id":7917,"nodeType":"StructuredDocumentation","src":"19558:312:26","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":7942,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:26","nodeType":"FunctionDefinition","parameters":{"id":7920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7919,"mutability":"mutable","name":"value","nameLocation":"19900:5:26","nodeType":"VariableDeclaration","scope":7942,"src":"19893:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7918,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:26"},"returnParameters":{"id":7923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7922,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:26","nodeType":"VariableDeclaration","scope":7942,"src":"19930:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":7921,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:26","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:26"},"scope":8659,"src":"19875:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7967,"nodeType":"Block","src":"20496:150:26","statements":[{"expression":{"id":7955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7950,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7948,"src":"20506:10:26","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7953,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7945,"src":"20526:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7952,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":7951,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:26","typeDescriptions":{}}},"id":7954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:26","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":7956,"nodeType":"ExpressionStatement","src":"20506:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7957,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7948,"src":"20546:10:26","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7958,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7945,"src":"20560:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7966,"nodeType":"IfStatement","src":"20542:98:26","trueBody":{"id":7965,"nodeType":"Block","src":"20567:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":7961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:26","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":7962,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7945,"src":"20623:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7960,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6916,"src":"20588:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7964,"nodeType":"RevertStatement","src":"20581:48:26"}]}}]},"documentation":{"id":7943,"nodeType":"StructuredDocumentation","src":"20105:312:26","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":7968,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:26","nodeType":"FunctionDefinition","parameters":{"id":7946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7945,"mutability":"mutable","name":"value","nameLocation":"20447:5:26","nodeType":"VariableDeclaration","scope":7968,"src":"20440:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7944,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:26"},"returnParameters":{"id":7949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7948,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:26","nodeType":"VariableDeclaration","scope":7968,"src":"20477:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":7947,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:26","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:26"},"scope":8659,"src":"20422:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7993,"nodeType":"Block","src":"21043:150:26","statements":[{"expression":{"id":7981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7976,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7974,"src":"21053:10:26","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7979,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7971,"src":"21073:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7978,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":7977,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:26","typeDescriptions":{}}},"id":7980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:26","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":7982,"nodeType":"ExpressionStatement","src":"21053:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7983,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7974,"src":"21093:10:26","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7984,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7971,"src":"21107:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7992,"nodeType":"IfStatement","src":"21089:98:26","trueBody":{"id":7991,"nodeType":"Block","src":"21114:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":7987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:26","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":7988,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7971,"src":"21170:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7986,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6916,"src":"21135:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7990,"nodeType":"RevertStatement","src":"21128:48:26"}]}}]},"documentation":{"id":7969,"nodeType":"StructuredDocumentation","src":"20652:312:26","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":7994,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:26","nodeType":"FunctionDefinition","parameters":{"id":7972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7971,"mutability":"mutable","name":"value","nameLocation":"20994:5:26","nodeType":"VariableDeclaration","scope":7994,"src":"20987:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7970,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:26"},"returnParameters":{"id":7975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7974,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:26","nodeType":"VariableDeclaration","scope":7994,"src":"21024:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":7973,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:26","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:26"},"scope":8659,"src":"20969:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8019,"nodeType":"Block","src":"21590:150:26","statements":[{"expression":{"id":8007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8002,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8000,"src":"21600:10:26","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8005,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7997,"src":"21620:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8004,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":8003,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:26","typeDescriptions":{}}},"id":8006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:26","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":8008,"nodeType":"ExpressionStatement","src":"21600:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8009,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8000,"src":"21640:10:26","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8010,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7997,"src":"21654:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8018,"nodeType":"IfStatement","src":"21636:98:26","trueBody":{"id":8017,"nodeType":"Block","src":"21661:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":8013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:26","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":8014,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7997,"src":"21717:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8012,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6916,"src":"21682:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8016,"nodeType":"RevertStatement","src":"21675:48:26"}]}}]},"documentation":{"id":7995,"nodeType":"StructuredDocumentation","src":"21199:312:26","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":8020,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:26","nodeType":"FunctionDefinition","parameters":{"id":7998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7997,"mutability":"mutable","name":"value","nameLocation":"21541:5:26","nodeType":"VariableDeclaration","scope":8020,"src":"21534:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7996,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:26"},"returnParameters":{"id":8001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8000,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:26","nodeType":"VariableDeclaration","scope":8020,"src":"21571:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":7999,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:26","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:26"},"scope":8659,"src":"21516:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8045,"nodeType":"Block","src":"22137:150:26","statements":[{"expression":{"id":8033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8028,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8026,"src":"22147:10:26","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8031,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8023,"src":"22167:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8030,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":8029,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:26","typeDescriptions":{}}},"id":8032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:26","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":8034,"nodeType":"ExpressionStatement","src":"22147:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8035,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8026,"src":"22187:10:26","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8036,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8023,"src":"22201:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8044,"nodeType":"IfStatement","src":"22183:98:26","trueBody":{"id":8043,"nodeType":"Block","src":"22208:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":8039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:26","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":8040,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8023,"src":"22264:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8038,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6916,"src":"22229:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8042,"nodeType":"RevertStatement","src":"22222:48:26"}]}}]},"documentation":{"id":8021,"nodeType":"StructuredDocumentation","src":"21746:312:26","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":8046,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:26","nodeType":"FunctionDefinition","parameters":{"id":8024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8023,"mutability":"mutable","name":"value","nameLocation":"22088:5:26","nodeType":"VariableDeclaration","scope":8046,"src":"22081:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8022,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:26"},"returnParameters":{"id":8027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8026,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:26","nodeType":"VariableDeclaration","scope":8046,"src":"22118:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":8025,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:26","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:26"},"scope":8659,"src":"22063:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8071,"nodeType":"Block","src":"22684:150:26","statements":[{"expression":{"id":8059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8054,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8052,"src":"22694:10:26","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8057,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8049,"src":"22714:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8056,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":8055,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:26","typeDescriptions":{}}},"id":8058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:26","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":8060,"nodeType":"ExpressionStatement","src":"22694:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8061,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8052,"src":"22734:10:26","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8062,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8049,"src":"22748:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8070,"nodeType":"IfStatement","src":"22730:98:26","trueBody":{"id":8069,"nodeType":"Block","src":"22755:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":8065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:26","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":8066,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8049,"src":"22811:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8064,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6916,"src":"22776:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8068,"nodeType":"RevertStatement","src":"22769:48:26"}]}}]},"documentation":{"id":8047,"nodeType":"StructuredDocumentation","src":"22293:312:26","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":8072,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:26","nodeType":"FunctionDefinition","parameters":{"id":8050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8049,"mutability":"mutable","name":"value","nameLocation":"22635:5:26","nodeType":"VariableDeclaration","scope":8072,"src":"22628:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8048,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:26"},"returnParameters":{"id":8053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8052,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:26","nodeType":"VariableDeclaration","scope":8072,"src":"22665:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":8051,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:26","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:26"},"scope":8659,"src":"22610:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8097,"nodeType":"Block","src":"23231:150:26","statements":[{"expression":{"id":8085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8080,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8078,"src":"23241:10:26","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8083,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8075,"src":"23261:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8082,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":8081,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:26","typeDescriptions":{}}},"id":8084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:26","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":8086,"nodeType":"ExpressionStatement","src":"23241:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8087,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8078,"src":"23281:10:26","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8088,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8075,"src":"23295:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8096,"nodeType":"IfStatement","src":"23277:98:26","trueBody":{"id":8095,"nodeType":"Block","src":"23302:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":8091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:26","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":8092,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8075,"src":"23358:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8090,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6916,"src":"23323:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8094,"nodeType":"RevertStatement","src":"23316:48:26"}]}}]},"documentation":{"id":8073,"nodeType":"StructuredDocumentation","src":"22840:312:26","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":8098,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:26","nodeType":"FunctionDefinition","parameters":{"id":8076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8075,"mutability":"mutable","name":"value","nameLocation":"23182:5:26","nodeType":"VariableDeclaration","scope":8098,"src":"23175:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8074,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:26"},"returnParameters":{"id":8079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8078,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:26","nodeType":"VariableDeclaration","scope":8098,"src":"23212:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":8077,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:26","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:26"},"scope":8659,"src":"23157:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8123,"nodeType":"Block","src":"23778:150:26","statements":[{"expression":{"id":8111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8106,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8104,"src":"23788:10:26","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8109,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8101,"src":"23808:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":8107,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:26","typeDescriptions":{}}},"id":8110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:26","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":8112,"nodeType":"ExpressionStatement","src":"23788:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8113,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8104,"src":"23828:10:26","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8114,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8101,"src":"23842:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8122,"nodeType":"IfStatement","src":"23824:98:26","trueBody":{"id":8121,"nodeType":"Block","src":"23849:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":8117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:26","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":8118,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8101,"src":"23905:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8116,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6916,"src":"23870:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8120,"nodeType":"RevertStatement","src":"23863:48:26"}]}}]},"documentation":{"id":8099,"nodeType":"StructuredDocumentation","src":"23387:312:26","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":8124,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:26","nodeType":"FunctionDefinition","parameters":{"id":8102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8101,"mutability":"mutable","name":"value","nameLocation":"23729:5:26","nodeType":"VariableDeclaration","scope":8124,"src":"23722:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8100,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:26"},"returnParameters":{"id":8105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8104,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:26","nodeType":"VariableDeclaration","scope":8124,"src":"23759:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":8103,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:26","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:26"},"scope":8659,"src":"23704:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8149,"nodeType":"Block","src":"24325:150:26","statements":[{"expression":{"id":8137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8132,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8130,"src":"24335:10:26","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8135,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8127,"src":"24355:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8134,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":8133,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:26","typeDescriptions":{}}},"id":8136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:26","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":8138,"nodeType":"ExpressionStatement","src":"24335:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8139,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8130,"src":"24375:10:26","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8140,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8127,"src":"24389:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8148,"nodeType":"IfStatement","src":"24371:98:26","trueBody":{"id":8147,"nodeType":"Block","src":"24396:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":8143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:26","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":8144,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8127,"src":"24452:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8142,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6916,"src":"24417:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8146,"nodeType":"RevertStatement","src":"24410:48:26"}]}}]},"documentation":{"id":8125,"nodeType":"StructuredDocumentation","src":"23934:312:26","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":8150,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:26","nodeType":"FunctionDefinition","parameters":{"id":8128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8127,"mutability":"mutable","name":"value","nameLocation":"24276:5:26","nodeType":"VariableDeclaration","scope":8150,"src":"24269:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8126,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:26"},"returnParameters":{"id":8131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8130,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:26","nodeType":"VariableDeclaration","scope":8150,"src":"24306:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":8129,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:26","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:26"},"scope":8659,"src":"24251:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8175,"nodeType":"Block","src":"24872:150:26","statements":[{"expression":{"id":8163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8158,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8156,"src":"24882:10:26","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8161,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8153,"src":"24902:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8160,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":8159,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:26","typeDescriptions":{}}},"id":8162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:26","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":8164,"nodeType":"ExpressionStatement","src":"24882:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8165,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8156,"src":"24922:10:26","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8166,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8153,"src":"24936:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8174,"nodeType":"IfStatement","src":"24918:98:26","trueBody":{"id":8173,"nodeType":"Block","src":"24943:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":8169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:26","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":8170,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8153,"src":"24999:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8168,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6916,"src":"24964:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8172,"nodeType":"RevertStatement","src":"24957:48:26"}]}}]},"documentation":{"id":8151,"nodeType":"StructuredDocumentation","src":"24481:312:26","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":8176,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:26","nodeType":"FunctionDefinition","parameters":{"id":8154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8153,"mutability":"mutable","name":"value","nameLocation":"24823:5:26","nodeType":"VariableDeclaration","scope":8176,"src":"24816:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8152,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:26"},"returnParameters":{"id":8157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8156,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:26","nodeType":"VariableDeclaration","scope":8176,"src":"24853:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":8155,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:26","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:26"},"scope":8659,"src":"24798:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8201,"nodeType":"Block","src":"25419:150:26","statements":[{"expression":{"id":8189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8184,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8182,"src":"25429:10:26","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8187,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8179,"src":"25449:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8186,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":8185,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:26","typeDescriptions":{}}},"id":8188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:26","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":8190,"nodeType":"ExpressionStatement","src":"25429:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8191,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8182,"src":"25469:10:26","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8192,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8179,"src":"25483:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8200,"nodeType":"IfStatement","src":"25465:98:26","trueBody":{"id":8199,"nodeType":"Block","src":"25490:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":8195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:26","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":8196,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8179,"src":"25546:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8194,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6916,"src":"25511:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8198,"nodeType":"RevertStatement","src":"25504:48:26"}]}}]},"documentation":{"id":8177,"nodeType":"StructuredDocumentation","src":"25028:312:26","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":8202,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:26","nodeType":"FunctionDefinition","parameters":{"id":8180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8179,"mutability":"mutable","name":"value","nameLocation":"25370:5:26","nodeType":"VariableDeclaration","scope":8202,"src":"25363:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8178,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:26"},"returnParameters":{"id":8183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8182,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:26","nodeType":"VariableDeclaration","scope":8202,"src":"25400:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":8181,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:26","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:26"},"scope":8659,"src":"25345:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8227,"nodeType":"Block","src":"25966:150:26","statements":[{"expression":{"id":8215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8210,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8208,"src":"25976:10:26","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8213,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8205,"src":"25996:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8212,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":8211,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:26","typeDescriptions":{}}},"id":8214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:26","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":8216,"nodeType":"ExpressionStatement","src":"25976:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8217,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8208,"src":"26016:10:26","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8218,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8205,"src":"26030:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8226,"nodeType":"IfStatement","src":"26012:98:26","trueBody":{"id":8225,"nodeType":"Block","src":"26037:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":8221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:26","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":8222,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8205,"src":"26093:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8220,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6916,"src":"26058:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8224,"nodeType":"RevertStatement","src":"26051:48:26"}]}}]},"documentation":{"id":8203,"nodeType":"StructuredDocumentation","src":"25575:312:26","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":8228,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:26","nodeType":"FunctionDefinition","parameters":{"id":8206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8205,"mutability":"mutable","name":"value","nameLocation":"25917:5:26","nodeType":"VariableDeclaration","scope":8228,"src":"25910:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8204,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:26"},"returnParameters":{"id":8209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8208,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:26","nodeType":"VariableDeclaration","scope":8228,"src":"25947:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":8207,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:26","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:26"},"scope":8659,"src":"25892:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8253,"nodeType":"Block","src":"26513:150:26","statements":[{"expression":{"id":8241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8236,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8234,"src":"26523:10:26","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8239,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8231,"src":"26543:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8238,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":8237,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:26","typeDescriptions":{}}},"id":8240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:26","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":8242,"nodeType":"ExpressionStatement","src":"26523:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8243,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8234,"src":"26563:10:26","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8244,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8231,"src":"26577:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8252,"nodeType":"IfStatement","src":"26559:98:26","trueBody":{"id":8251,"nodeType":"Block","src":"26584:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":8247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:26","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":8248,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8231,"src":"26640:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8246,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6916,"src":"26605:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8250,"nodeType":"RevertStatement","src":"26598:48:26"}]}}]},"documentation":{"id":8229,"nodeType":"StructuredDocumentation","src":"26122:312:26","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":8254,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:26","nodeType":"FunctionDefinition","parameters":{"id":8232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8231,"mutability":"mutable","name":"value","nameLocation":"26464:5:26","nodeType":"VariableDeclaration","scope":8254,"src":"26457:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8230,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:26"},"returnParameters":{"id":8235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8234,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:26","nodeType":"VariableDeclaration","scope":8254,"src":"26494:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":8233,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:26","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:26"},"scope":8659,"src":"26439:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8279,"nodeType":"Block","src":"27060:150:26","statements":[{"expression":{"id":8267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8262,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8260,"src":"27070:10:26","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8265,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8257,"src":"27090:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8264,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":8263,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:26","typeDescriptions":{}}},"id":8266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:26","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":8268,"nodeType":"ExpressionStatement","src":"27070:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8269,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8260,"src":"27110:10:26","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8270,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8257,"src":"27124:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8278,"nodeType":"IfStatement","src":"27106:98:26","trueBody":{"id":8277,"nodeType":"Block","src":"27131:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":8273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:26","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":8274,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8257,"src":"27187:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8272,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6916,"src":"27152:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8276,"nodeType":"RevertStatement","src":"27145:48:26"}]}}]},"documentation":{"id":8255,"nodeType":"StructuredDocumentation","src":"26669:312:26","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":8280,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:26","nodeType":"FunctionDefinition","parameters":{"id":8258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8257,"mutability":"mutable","name":"value","nameLocation":"27011:5:26","nodeType":"VariableDeclaration","scope":8280,"src":"27004:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8256,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:26"},"returnParameters":{"id":8261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8260,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:26","nodeType":"VariableDeclaration","scope":8280,"src":"27041:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":8259,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:26","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:26"},"scope":8659,"src":"26986:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8305,"nodeType":"Block","src":"27607:150:26","statements":[{"expression":{"id":8293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8288,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8286,"src":"27617:10:26","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8291,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8283,"src":"27637:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8290,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":8289,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:26","typeDescriptions":{}}},"id":8292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:26","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":8294,"nodeType":"ExpressionStatement","src":"27617:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8295,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8286,"src":"27657:10:26","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8296,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8283,"src":"27671:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8304,"nodeType":"IfStatement","src":"27653:98:26","trueBody":{"id":8303,"nodeType":"Block","src":"27678:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":8299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:26","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":8300,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8283,"src":"27734:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8298,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6916,"src":"27699:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8302,"nodeType":"RevertStatement","src":"27692:48:26"}]}}]},"documentation":{"id":8281,"nodeType":"StructuredDocumentation","src":"27216:312:26","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":8306,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:26","nodeType":"FunctionDefinition","parameters":{"id":8284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8283,"mutability":"mutable","name":"value","nameLocation":"27558:5:26","nodeType":"VariableDeclaration","scope":8306,"src":"27551:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8282,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:26"},"returnParameters":{"id":8287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8286,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:26","nodeType":"VariableDeclaration","scope":8306,"src":"27588:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":8285,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:26","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:26"},"scope":8659,"src":"27533:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8331,"nodeType":"Block","src":"28147:148:26","statements":[{"expression":{"id":8319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8314,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8312,"src":"28157:10:26","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8317,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8309,"src":"28176:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8316,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":8315,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:26","typeDescriptions":{}}},"id":8318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:26","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":8320,"nodeType":"ExpressionStatement","src":"28157:25:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8321,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8312,"src":"28196:10:26","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8322,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8309,"src":"28210:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8330,"nodeType":"IfStatement","src":"28192:97:26","trueBody":{"id":8329,"nodeType":"Block","src":"28217:72:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":8325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:26","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":8326,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8309,"src":"28272:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8324,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6916,"src":"28238:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8328,"nodeType":"RevertStatement","src":"28231:47:26"}]}}]},"documentation":{"id":8307,"nodeType":"StructuredDocumentation","src":"27763:307:26","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":8332,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:26","nodeType":"FunctionDefinition","parameters":{"id":8310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8309,"mutability":"mutable","name":"value","nameLocation":"28099:5:26","nodeType":"VariableDeclaration","scope":8332,"src":"28092:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8308,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:26"},"returnParameters":{"id":8313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8312,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:26","nodeType":"VariableDeclaration","scope":8332,"src":"28129:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":8311,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:26","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:26"},"scope":8659,"src":"28075:220:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8357,"nodeType":"Block","src":"28685:148:26","statements":[{"expression":{"id":8345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8340,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8338,"src":"28695:10:26","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8343,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8335,"src":"28714:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8342,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":8341,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:26","typeDescriptions":{}}},"id":8344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:26","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":8346,"nodeType":"ExpressionStatement","src":"28695:25:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8347,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8338,"src":"28734:10:26","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8348,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8335,"src":"28748:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8356,"nodeType":"IfStatement","src":"28730:97:26","trueBody":{"id":8355,"nodeType":"Block","src":"28755:72:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":8351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:26","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":8352,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8335,"src":"28810:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8350,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6916,"src":"28776:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8354,"nodeType":"RevertStatement","src":"28769:47:26"}]}}]},"documentation":{"id":8333,"nodeType":"StructuredDocumentation","src":"28301:307:26","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":8358,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:26","nodeType":"FunctionDefinition","parameters":{"id":8336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8335,"mutability":"mutable","name":"value","nameLocation":"28637:5:26","nodeType":"VariableDeclaration","scope":8358,"src":"28630:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8334,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:26"},"returnParameters":{"id":8339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8338,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:26","nodeType":"VariableDeclaration","scope":8358,"src":"28667:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":8337,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:26","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:26"},"scope":8659,"src":"28613:220:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8383,"nodeType":"Block","src":"29223:148:26","statements":[{"expression":{"id":8371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8366,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8364,"src":"29233:10:26","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8369,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8361,"src":"29252:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":8367,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:26","typeDescriptions":{}}},"id":8370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:26","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":8372,"nodeType":"ExpressionStatement","src":"29233:25:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8373,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8364,"src":"29272:10:26","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8374,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8361,"src":"29286:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8382,"nodeType":"IfStatement","src":"29268:97:26","trueBody":{"id":8381,"nodeType":"Block","src":"29293:72:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":8377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:26","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":8378,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8361,"src":"29348:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8376,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6916,"src":"29314:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8380,"nodeType":"RevertStatement","src":"29307:47:26"}]}}]},"documentation":{"id":8359,"nodeType":"StructuredDocumentation","src":"28839:307:26","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":8384,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:26","nodeType":"FunctionDefinition","parameters":{"id":8362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8361,"mutability":"mutable","name":"value","nameLocation":"29175:5:26","nodeType":"VariableDeclaration","scope":8384,"src":"29168:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8360,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:26"},"returnParameters":{"id":8365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8364,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:26","nodeType":"VariableDeclaration","scope":8384,"src":"29205:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":8363,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:26","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:26"},"scope":8659,"src":"29151:220:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8409,"nodeType":"Block","src":"29761:148:26","statements":[{"expression":{"id":8397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8392,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8390,"src":"29771:10:26","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8395,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8387,"src":"29790:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8394,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":8393,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:26","typeDescriptions":{}}},"id":8396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:26","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":8398,"nodeType":"ExpressionStatement","src":"29771:25:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8399,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8390,"src":"29810:10:26","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8400,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8387,"src":"29824:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8408,"nodeType":"IfStatement","src":"29806:97:26","trueBody":{"id":8407,"nodeType":"Block","src":"29831:72:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":8403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:26","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":8404,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8387,"src":"29886:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8402,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6916,"src":"29852:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8406,"nodeType":"RevertStatement","src":"29845:47:26"}]}}]},"documentation":{"id":8385,"nodeType":"StructuredDocumentation","src":"29377:307:26","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":8410,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:26","nodeType":"FunctionDefinition","parameters":{"id":8388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8387,"mutability":"mutable","name":"value","nameLocation":"29713:5:26","nodeType":"VariableDeclaration","scope":8410,"src":"29706:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8386,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:26"},"returnParameters":{"id":8391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8390,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:26","nodeType":"VariableDeclaration","scope":8410,"src":"29743:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":8389,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:26","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:26"},"scope":8659,"src":"29689:220:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8435,"nodeType":"Block","src":"30299:148:26","statements":[{"expression":{"id":8423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8418,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8416,"src":"30309:10:26","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8421,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8413,"src":"30328:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8420,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":8419,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:26","typeDescriptions":{}}},"id":8422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:26","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":8424,"nodeType":"ExpressionStatement","src":"30309:25:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8425,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8416,"src":"30348:10:26","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8426,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8413,"src":"30362:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8434,"nodeType":"IfStatement","src":"30344:97:26","trueBody":{"id":8433,"nodeType":"Block","src":"30369:72:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":8429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:26","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":8430,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8413,"src":"30424:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8428,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6916,"src":"30390:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8432,"nodeType":"RevertStatement","src":"30383:47:26"}]}}]},"documentation":{"id":8411,"nodeType":"StructuredDocumentation","src":"29915:307:26","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":8436,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:26","nodeType":"FunctionDefinition","parameters":{"id":8414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8413,"mutability":"mutable","name":"value","nameLocation":"30251:5:26","nodeType":"VariableDeclaration","scope":8436,"src":"30244:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8412,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:26"},"returnParameters":{"id":8417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8416,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:26","nodeType":"VariableDeclaration","scope":8436,"src":"30281:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":8415,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:26","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:26"},"scope":8659,"src":"30227:220:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8461,"nodeType":"Block","src":"30837:148:26","statements":[{"expression":{"id":8449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8444,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8442,"src":"30847:10:26","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8447,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8439,"src":"30866:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8446,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":8445,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:26","typeDescriptions":{}}},"id":8448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:26","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":8450,"nodeType":"ExpressionStatement","src":"30847:25:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8451,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8442,"src":"30886:10:26","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8452,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8439,"src":"30900:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8460,"nodeType":"IfStatement","src":"30882:97:26","trueBody":{"id":8459,"nodeType":"Block","src":"30907:72:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":8455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:26","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":8456,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8439,"src":"30962:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8454,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6916,"src":"30928:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8458,"nodeType":"RevertStatement","src":"30921:47:26"}]}}]},"documentation":{"id":8437,"nodeType":"StructuredDocumentation","src":"30453:307:26","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":8462,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:26","nodeType":"FunctionDefinition","parameters":{"id":8440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8439,"mutability":"mutable","name":"value","nameLocation":"30789:5:26","nodeType":"VariableDeclaration","scope":8462,"src":"30782:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8438,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:26"},"returnParameters":{"id":8443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8442,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:26","nodeType":"VariableDeclaration","scope":8462,"src":"30819:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":8441,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:26","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:26"},"scope":8659,"src":"30765:220:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8487,"nodeType":"Block","src":"31375:148:26","statements":[{"expression":{"id":8475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8470,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8468,"src":"31385:10:26","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8473,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8465,"src":"31404:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8472,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":8471,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:26","typeDescriptions":{}}},"id":8474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:26","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":8476,"nodeType":"ExpressionStatement","src":"31385:25:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8477,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8468,"src":"31424:10:26","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8478,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8465,"src":"31438:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8486,"nodeType":"IfStatement","src":"31420:97:26","trueBody":{"id":8485,"nodeType":"Block","src":"31445:72:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":8481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:26","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":8482,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8465,"src":"31500:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8480,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6916,"src":"31466:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8484,"nodeType":"RevertStatement","src":"31459:47:26"}]}}]},"documentation":{"id":8463,"nodeType":"StructuredDocumentation","src":"30991:307:26","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":8488,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:26","nodeType":"FunctionDefinition","parameters":{"id":8466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8465,"mutability":"mutable","name":"value","nameLocation":"31327:5:26","nodeType":"VariableDeclaration","scope":8488,"src":"31320:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8464,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:26"},"returnParameters":{"id":8469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8468,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:26","nodeType":"VariableDeclaration","scope":8488,"src":"31357:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":8467,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:26","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:26"},"scope":8659,"src":"31303:220:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8513,"nodeType":"Block","src":"31913:148:26","statements":[{"expression":{"id":8501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8496,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8494,"src":"31923:10:26","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8499,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8491,"src":"31942:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":8497,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:26","typeDescriptions":{}}},"id":8500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:26","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":8502,"nodeType":"ExpressionStatement","src":"31923:25:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8503,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8494,"src":"31962:10:26","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8504,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8491,"src":"31976:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8512,"nodeType":"IfStatement","src":"31958:97:26","trueBody":{"id":8511,"nodeType":"Block","src":"31983:72:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":8507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:26","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":8508,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8491,"src":"32038:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8506,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6916,"src":"32004:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8510,"nodeType":"RevertStatement","src":"31997:47:26"}]}}]},"documentation":{"id":8489,"nodeType":"StructuredDocumentation","src":"31529:307:26","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":8514,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:26","nodeType":"FunctionDefinition","parameters":{"id":8492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8491,"mutability":"mutable","name":"value","nameLocation":"31865:5:26","nodeType":"VariableDeclaration","scope":8514,"src":"31858:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8490,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:26"},"returnParameters":{"id":8495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8494,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:26","nodeType":"VariableDeclaration","scope":8514,"src":"31895:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":8493,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:26","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:26"},"scope":8659,"src":"31841:220:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8539,"nodeType":"Block","src":"32451:148:26","statements":[{"expression":{"id":8527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8522,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8520,"src":"32461:10:26","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8525,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8517,"src":"32480:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8524,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":8523,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:26","typeDescriptions":{}}},"id":8526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:26","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":8528,"nodeType":"ExpressionStatement","src":"32461:25:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8529,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8520,"src":"32500:10:26","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8530,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8517,"src":"32514:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8538,"nodeType":"IfStatement","src":"32496:97:26","trueBody":{"id":8537,"nodeType":"Block","src":"32521:72:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":8533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:26","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":8534,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8517,"src":"32576:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8532,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6916,"src":"32542:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8536,"nodeType":"RevertStatement","src":"32535:47:26"}]}}]},"documentation":{"id":8515,"nodeType":"StructuredDocumentation","src":"32067:307:26","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":8540,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:26","nodeType":"FunctionDefinition","parameters":{"id":8518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8517,"mutability":"mutable","name":"value","nameLocation":"32403:5:26","nodeType":"VariableDeclaration","scope":8540,"src":"32396:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8516,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:26"},"returnParameters":{"id":8521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8520,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:26","nodeType":"VariableDeclaration","scope":8540,"src":"32433:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":8519,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:26","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:26"},"scope":8659,"src":"32379:220:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8565,"nodeType":"Block","src":"32989:148:26","statements":[{"expression":{"id":8553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8548,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8546,"src":"32999:10:26","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8551,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8543,"src":"33018:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8550,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":8549,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:26","typeDescriptions":{}}},"id":8552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:26","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":8554,"nodeType":"ExpressionStatement","src":"32999:25:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8555,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8546,"src":"33038:10:26","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8556,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8543,"src":"33052:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8564,"nodeType":"IfStatement","src":"33034:97:26","trueBody":{"id":8563,"nodeType":"Block","src":"33059:72:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":8559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:26","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":8560,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8543,"src":"33114:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8558,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6916,"src":"33080:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8562,"nodeType":"RevertStatement","src":"33073:47:26"}]}}]},"documentation":{"id":8541,"nodeType":"StructuredDocumentation","src":"32605:307:26","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":8566,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:26","nodeType":"FunctionDefinition","parameters":{"id":8544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8543,"mutability":"mutable","name":"value","nameLocation":"32941:5:26","nodeType":"VariableDeclaration","scope":8566,"src":"32934:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8542,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:26"},"returnParameters":{"id":8547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8546,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:26","nodeType":"VariableDeclaration","scope":8566,"src":"32971:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":8545,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:26","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:26"},"scope":8659,"src":"32917:220:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8591,"nodeType":"Block","src":"33527:148:26","statements":[{"expression":{"id":8579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8574,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8572,"src":"33537:10:26","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8577,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8569,"src":"33556:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8576,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":8575,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:26","typeDescriptions":{}}},"id":8578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:26","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":8580,"nodeType":"ExpressionStatement","src":"33537:25:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8581,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8572,"src":"33576:10:26","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8582,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8569,"src":"33590:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8590,"nodeType":"IfStatement","src":"33572:97:26","trueBody":{"id":8589,"nodeType":"Block","src":"33597:72:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":8585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:26","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":8586,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8569,"src":"33652:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8584,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6916,"src":"33618:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8588,"nodeType":"RevertStatement","src":"33611:47:26"}]}}]},"documentation":{"id":8567,"nodeType":"StructuredDocumentation","src":"33143:307:26","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":8592,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:26","nodeType":"FunctionDefinition","parameters":{"id":8570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8569,"mutability":"mutable","name":"value","nameLocation":"33479:5:26","nodeType":"VariableDeclaration","scope":8592,"src":"33472:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8568,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:26"},"returnParameters":{"id":8573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8572,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:26","nodeType":"VariableDeclaration","scope":8592,"src":"33509:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":8571,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:26","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:26"},"scope":8659,"src":"33455:220:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8617,"nodeType":"Block","src":"34058:146:26","statements":[{"expression":{"id":8605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8600,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8598,"src":"34068:10:26","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8603,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8595,"src":"34086:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":8601,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:26","typeDescriptions":{}}},"id":8604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:26","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":8606,"nodeType":"ExpressionStatement","src":"34068:24:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8607,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8598,"src":"34106:10:26","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8608,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8595,"src":"34120:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8616,"nodeType":"IfStatement","src":"34102:96:26","trueBody":{"id":8615,"nodeType":"Block","src":"34127:71:26","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":8611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:26","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":8612,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8595,"src":"34181:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8610,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6916,"src":"34148:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8614,"nodeType":"RevertStatement","src":"34141:46:26"}]}}]},"documentation":{"id":8593,"nodeType":"StructuredDocumentation","src":"33681:302:26","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":8618,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:26","nodeType":"FunctionDefinition","parameters":{"id":8596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8595,"mutability":"mutable","name":"value","nameLocation":"34011:5:26","nodeType":"VariableDeclaration","scope":8618,"src":"34004:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8594,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:26"},"returnParameters":{"id":8599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8598,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:26","nodeType":"VariableDeclaration","scope":8618,"src":"34041:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":8597,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:26","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:26"},"scope":8659,"src":"33988:216:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8647,"nodeType":"Block","src":"34444:250:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8626,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8621,"src":"34557:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":8631,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":8630,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":8629,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":8633,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:26","memberName":"max","nodeType":"MemberAccess","src":"34573:16:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8628,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8627,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:26","typeDescriptions":{}}},"id":8634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8641,"nodeType":"IfStatement","src":"34553:105:26","trueBody":{"id":8640,"nodeType":"Block","src":"34592:66:26","statements":[{"errorCall":{"arguments":[{"id":8637,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8621,"src":"34641:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8636,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6921,"src":"34613:27:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":8638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8639,"nodeType":"RevertStatement","src":"34606:41:26"}]}},{"expression":{"arguments":[{"id":8644,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8621,"src":"34681:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8643,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":8642,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:26","typeDescriptions":{}}},"id":8645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":8625,"id":8646,"nodeType":"Return","src":"34667:20:26"}]},"documentation":{"id":8619,"nodeType":"StructuredDocumentation","src":"34210:165:26","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":8648,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:26","nodeType":"FunctionDefinition","parameters":{"id":8622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8621,"mutability":"mutable","name":"value","nameLocation":"34406:5:26","nodeType":"VariableDeclaration","scope":8648,"src":"34398:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8620,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:26"},"returnParameters":{"id":8625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8624,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8648,"src":"34436:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8623,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:26"},"scope":8659,"src":"34380:314:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8657,"nodeType":"Block","src":"34853:87:26","statements":[{"AST":{"nodeType":"YulBlock","src":"34888:46:26","statements":[{"nodeType":"YulAssignment","src":"34902:22:26","value":{"arguments":[{"arguments":[{"name":"b","nodeType":"YulIdentifier","src":"34921:1:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34914:6:26"},"nodeType":"YulFunctionCall","src":"34914:9:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34907:6:26"},"nodeType":"YulFunctionCall","src":"34907:17:26"},"variableNames":[{"name":"u","nodeType":"YulIdentifier","src":"34902:1:26"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":8651,"isOffset":false,"isSlot":false,"src":"34921:1:26","valueSize":1},{"declaration":8654,"isOffset":false,"isSlot":false,"src":"34902:1:26","valueSize":1}],"flags":["memory-safe"],"id":8656,"nodeType":"InlineAssembly","src":"34863:71:26"}]},"documentation":{"id":8649,"nodeType":"StructuredDocumentation","src":"34700:90:26","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":8658,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:26","nodeType":"FunctionDefinition","parameters":{"id":8652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8651,"mutability":"mutable","name":"b","nameLocation":"34816:1:26","nodeType":"VariableDeclaration","scope":8658,"src":"34811:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8650,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:26"},"returnParameters":{"id":8655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8654,"mutability":"mutable","name":"u","nameLocation":"34850:1:26","nodeType":"VariableDeclaration","scope":8658,"src":"34842:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8653,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:26"},"scope":8659,"src":"34795:145:26","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":8660,"src":"769:34173:26","usedErrors":[6904,6909,6916,6921],"usedEvents":[]}],"src":"192:34751:26"},"id":26},"contracts/F.sol":{"ast":{"absolutePath":"contracts/F.sol","exportedSymbols":{"Context":[3749],"ERC20":[2141],"F":[9332],"IERC20":[2219],"IERC20Errors":[279],"IERC20Metadata":[2245],"ITreasury":[8669],"Ownable":[147]},"id":9333,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8661,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:27"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":8662,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9333,"sourceUnit":2142,"src":"57:55:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":8663,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9333,"sourceUnit":148,"src":"113:52:27","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ITreasury","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":8669,"linearizedBaseContracts":[8669],"name":"ITreasury","nameLocation":"176:9:27","nodeType":"ContractDefinition","nodes":[{"functionSelector":"ebdac090","id":8668,"implemented":false,"kind":"function","modifiers":[],"name":"depositFees","nameLocation":"197:11:27","nodeType":"FunctionDefinition","parameters":{"id":8666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8665,"mutability":"mutable","name":"liquidityFeeAmount","nameLocation":"217:18:27","nodeType":"VariableDeclaration","scope":8668,"src":"209:26:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8664,"name":"uint256","nodeType":"ElementaryTypeName","src":"209:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"208:28:27"},"returnParameters":{"id":8667,"nodeType":"ParameterList","parameters":[],"src":"245:0:27"},"scope":8669,"src":"188:58:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":9333,"src":"166:82:27","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[{"baseName":{"id":8670,"name":"ERC20","nameLocations":["264:5:27"],"nodeType":"IdentifierPath","referencedDeclaration":2141,"src":"264:5:27"},"id":8671,"nodeType":"InheritanceSpecifier","src":"264:5:27"},{"baseName":{"id":8672,"name":"Ownable","nameLocations":["271:7:27"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"271:7:27"},"id":8673,"nodeType":"InheritanceSpecifier","src":"271:7:27"}],"canonicalName":"F","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":9332,"linearizedBaseContracts":[9332,147,2141,279,2245,2219,3749],"name":"F","nameLocation":"259:1:27","nodeType":"ContractDefinition","nodes":[{"canonicalName":"F.FeeConfig","id":8680,"members":[{"constant":false,"id":8675,"mutability":"mutable","name":"burnFee","nameLocation":"312:7:27","nodeType":"VariableDeclaration","scope":8680,"src":"304:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8674,"name":"uint256","nodeType":"ElementaryTypeName","src":"304:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8677,"mutability":"mutable","name":"stakingFee","nameLocation":"329:10:27","nodeType":"VariableDeclaration","scope":8680,"src":"321:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8676,"name":"uint256","nodeType":"ElementaryTypeName","src":"321:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8679,"mutability":"mutable","name":"liquidityFee","nameLocation":"349:12:27","nodeType":"VariableDeclaration","scope":8680,"src":"341:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8678,"name":"uint256","nodeType":"ElementaryTypeName","src":"341:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"FeeConfig","nameLocation":"292:9:27","nodeType":"StructDefinition","scope":9332,"src":"285:79:27","visibility":"public"},{"canonicalName":"F.WalletLocks","id":8685,"members":[{"constant":false,"id":8682,"mutability":"mutable","name":"lockUntil","nameLocation":"398:9:27","nodeType":"VariableDeclaration","scope":8685,"src":"390:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8681,"name":"uint256","nodeType":"ElementaryTypeName","src":"390:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8684,"mutability":"mutable","name":"lockedAmount","nameLocation":"417:12:27","nodeType":"VariableDeclaration","scope":8685,"src":"409:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8683,"name":"uint256","nodeType":"ElementaryTypeName","src":"409:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"WalletLocks","nameLocation":"376:11:27","nodeType":"StructDefinition","scope":9332,"src":"369:63:27","visibility":"public"},{"constant":false,"functionSelector":"da19ddfb","id":8687,"mutability":"immutable","name":"STAKING_CONTRACT","nameLocation":"462:16:27","nodeType":"VariableDeclaration","scope":9332,"src":"437:41:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8686,"name":"address","nodeType":"ElementaryTypeName","src":"437:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"9e9df2b9","id":8689,"mutability":"immutable","name":"TREASURY_CONTRACT","nameLocation":"509:17:27","nodeType":"VariableDeclaration","scope":9332,"src":"484:42:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8688,"name":"address","nodeType":"ElementaryTypeName","src":"484:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"e954f41d","id":8691,"mutability":"immutable","name":"LAUNCH_TIMESTAMP","nameLocation":"557:16:27","nodeType":"VariableDeclaration","scope":9332,"src":"532:41:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8690,"name":"uint256","nodeType":"ElementaryTypeName","src":"532:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"429494f2","id":8693,"mutability":"mutable","name":"pancakeSwapPair","nameLocation":"594:15:27","nodeType":"VariableDeclaration","scope":9332,"src":"579:30:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8692,"name":"address","nodeType":"ElementaryTypeName","src":"579:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"id":8696,"mutability":"immutable","name":"BURN_ADDRESS","nameLocation":"641:12:27","nodeType":"VariableDeclaration","scope":9332,"src":"615:83:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8694,"name":"address","nodeType":"ElementaryTypeName","src":"615:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303064456144","id":8695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"656:42:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x000000000000000000000000000000000000dEaD"},"visibility":"private"},{"constant":true,"functionSelector":"32cb6b0c","id":8703,"mutability":"constant","name":"MAX_SUPPLY","nameLocation":"728:10:27","nodeType":"VariableDeclaration","scope":9332,"src":"704:55:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8697,"name":"uint256","nodeType":"ElementaryTypeName","src":"704:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_500000000000000000000000000_by_1","typeString":"int_const 500000000000000000000000000"},"id":8702,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"353030303030303030","id":8698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"741:9:27","typeDescriptions":{"typeIdentifier":"t_rational_500000000_by_1","typeString":"int_const 500000000"},"value":"500000000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":8701,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":8699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"753:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":8700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"757:2:27","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"753:6:27","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"741:18:27","typeDescriptions":{"typeIdentifier":"t_rational_500000000000000000000000000_by_1","typeString":"int_const 500000000000000000000000000"}},"visibility":"public"},{"constant":false,"functionSelector":"f5d7abb3","id":8710,"mutability":"immutable","name":"BURN_STOP_THRESHOLD","nameLocation":"790:19:27","nodeType":"VariableDeclaration","scope":9332,"src":"765:65:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8704,"name":"uint256","nodeType":"ElementaryTypeName","src":"765:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000_by_1","typeString":"int_const 100000000000000000000000000"},"id":8709,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"313030303030303030","id":8705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"812:9:27","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"value":"100000000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":8708,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":8706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"824:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":8707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"828:2:27","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"824:6:27","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"812:18:27","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000_by_1","typeString":"int_const 100000000000000000000000000"}},"visibility":"public"},{"constant":false,"functionSelector":"876b33c8","id":8713,"mutability":"mutable","name":"feeConfigPhase1","nameLocation":"853:15:27","nodeType":"VariableDeclaration","scope":9332,"src":"836:32:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_FeeConfig_$8680_storage","typeString":"struct F.FeeConfig"},"typeName":{"id":8712,"nodeType":"UserDefinedTypeName","pathNode":{"id":8711,"name":"FeeConfig","nameLocations":["836:9:27"],"nodeType":"IdentifierPath","referencedDeclaration":8680,"src":"836:9:27"},"referencedDeclaration":8680,"src":"836:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_FeeConfig_$8680_storage_ptr","typeString":"struct F.FeeConfig"}},"visibility":"public"},{"constant":false,"functionSelector":"14b800b4","id":8716,"mutability":"mutable","name":"feeConfigPhase2","nameLocation":"891:15:27","nodeType":"VariableDeclaration","scope":9332,"src":"874:32:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_FeeConfig_$8680_storage","typeString":"struct F.FeeConfig"},"typeName":{"id":8715,"nodeType":"UserDefinedTypeName","pathNode":{"id":8714,"name":"FeeConfig","nameLocations":["874:9:27"],"nodeType":"IdentifierPath","referencedDeclaration":8680,"src":"874:9:27"},"referencedDeclaration":8680,"src":"874:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_FeeConfig_$8680_storage_ptr","typeString":"struct F.FeeConfig"}},"visibility":"public"},{"constant":false,"functionSelector":"48d79155","id":8718,"mutability":"mutable","name":"maxWalletHolding","nameLocation":"927:16:27","nodeType":"VariableDeclaration","scope":9332,"src":"912:31:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8717,"name":"uint256","nodeType":"ElementaryTypeName","src":"912:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"id":8723,"mutability":"mutable","name":"_walletLocks","nameLocation":"989:12:27","nodeType":"VariableDeclaration","scope":9332,"src":"949:52:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_WalletLocks_$8685_storage_$","typeString":"mapping(address => struct F.WalletLocks)"},"typeName":{"id":8722,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8719,"name":"address","nodeType":"ElementaryTypeName","src":"957:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"949:31:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_WalletLocks_$8685_storage_$","typeString":"mapping(address => struct F.WalletLocks)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8721,"nodeType":"UserDefinedTypeName","pathNode":{"id":8720,"name":"WalletLocks","nameLocations":["968:11:27"],"nodeType":"IdentifierPath","referencedDeclaration":8685,"src":"968:11:27"},"referencedDeclaration":8685,"src":"968:11:27","typeDescriptions":{"typeIdentifier":"t_struct$_WalletLocks_$8685_storage_ptr","typeString":"struct F.WalletLocks"}}},"visibility":"private"},{"constant":false,"id":8727,"mutability":"mutable","name":"_isFeeExempt","nameLocation":"1040:12:27","nodeType":"VariableDeclaration","scope":9332,"src":"1007:45:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":8726,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8724,"name":"address","nodeType":"ElementaryTypeName","src":"1015:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1007:24:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8725,"name":"bool","nodeType":"ElementaryTypeName","src":"1026:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"private"},{"constant":false,"id":8731,"mutability":"mutable","name":"_isLimitExempt","nameLocation":"1091:14:27","nodeType":"VariableDeclaration","scope":9332,"src":"1058:47:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":8730,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8728,"name":"address","nodeType":"ElementaryTypeName","src":"1066:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1058:24:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8729,"name":"bool","nodeType":"ElementaryTypeName","src":"1077:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"private"},{"constant":false,"functionSelector":"4ee13e97","id":8734,"mutability":"mutable","name":"deadblockCount","nameLocation":"1126:14:27","nodeType":"VariableDeclaration","scope":9332,"src":"1111:33:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8732,"name":"uint256","nodeType":"ElementaryTypeName","src":"1111:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":8733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1143:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"public"},{"constant":false,"functionSelector":"84e92c00","id":8736,"mutability":"mutable","name":"launchBlockNumber","nameLocation":"1165:17:27","nodeType":"VariableDeclaration","scope":9332,"src":"1150:32:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8735,"name":"uint256","nodeType":"ElementaryTypeName","src":"1150:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"id":8740,"mutability":"mutable","name":"_lastTxTimestamp","nameLocation":"1224:16:27","nodeType":"VariableDeclaration","scope":9332,"src":"1188:52:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":8739,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8737,"name":"address","nodeType":"ElementaryTypeName","src":"1196:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1188:27:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8738,"name":"uint256","nodeType":"ElementaryTypeName","src":"1207:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"functionSelector":"e14e7519","id":8743,"mutability":"mutable","name":"dynamicCooldownSeconds","nameLocation":"1261:22:27","nodeType":"VariableDeclaration","scope":9332,"src":"1246:42:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8741,"name":"uint256","nodeType":"ElementaryTypeName","src":"1246:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3135","id":8742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1286:2:27","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"visibility":"public"},{"anonymous":false,"eventSelector":"312c5308f42848705a866c73dec11fd0783c2d64aac6a97e94467062ad3f4058","id":8751,"name":"FeesDistributed","nameLocation":"1300:15:27","nodeType":"EventDefinition","parameters":{"id":8750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8745,"indexed":false,"mutability":"mutable","name":"burnAmount","nameLocation":"1324:10:27","nodeType":"VariableDeclaration","scope":8751,"src":"1316:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8744,"name":"uint256","nodeType":"ElementaryTypeName","src":"1316:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8747,"indexed":false,"mutability":"mutable","name":"stakingAmount","nameLocation":"1344:13:27","nodeType":"VariableDeclaration","scope":8751,"src":"1336:21:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8746,"name":"uint256","nodeType":"ElementaryTypeName","src":"1336:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8749,"indexed":false,"mutability":"mutable","name":"liquidityAmount","nameLocation":"1367:15:27","nodeType":"VariableDeclaration","scope":8751,"src":"1359:23:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8748,"name":"uint256","nodeType":"ElementaryTypeName","src":"1359:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1315:68:27"},"src":"1294:90:27"},{"anonymous":false,"eventSelector":"5394ea92aca3ea4a83aa22b55619ded8d5ec09b9bfc1c5802c41ae182dfc878e","id":8759,"name":"WalletLocked","nameLocation":"1395:12:27","nodeType":"EventDefinition","parameters":{"id":8758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8753,"indexed":true,"mutability":"mutable","name":"wallet","nameLocation":"1424:6:27","nodeType":"VariableDeclaration","scope":8759,"src":"1408:22:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8752,"name":"address","nodeType":"ElementaryTypeName","src":"1408:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8755,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1440:6:27","nodeType":"VariableDeclaration","scope":8759,"src":"1432:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8754,"name":"uint256","nodeType":"ElementaryTypeName","src":"1432:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8757,"indexed":false,"mutability":"mutable","name":"lockUntil","nameLocation":"1456:9:27","nodeType":"VariableDeclaration","scope":8759,"src":"1448:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8756,"name":"uint256","nodeType":"ElementaryTypeName","src":"1448:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1407:59:27"},"src":"1389:78:27"},{"anonymous":false,"eventSelector":"ab4a0400b4e49e5be3fcfd84afea49e7d6e0352a244e32f3734e2791532d8876","id":8765,"name":"BotTransactionRedirected","nameLocation":"1478:24:27","nodeType":"EventDefinition","parameters":{"id":8764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8761,"indexed":true,"mutability":"mutable","name":"botAddress","nameLocation":"1519:10:27","nodeType":"VariableDeclaration","scope":8765,"src":"1503:26:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8760,"name":"address","nodeType":"ElementaryTypeName","src":"1503:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8763,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1539:6:27","nodeType":"VariableDeclaration","scope":8765,"src":"1531:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8762,"name":"uint256","nodeType":"ElementaryTypeName","src":"1531:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1502:44:27"},"src":"1472:75:27"},{"anonymous":false,"eventSelector":"9f1eaee9ad9cb68284f0dc523aa42c465ed33b53f8da7fc7294ccea47358bbdf","id":8771,"name":"FeeExemptionChanged","nameLocation":"1558:19:27","nodeType":"EventDefinition","parameters":{"id":8770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8767,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1594:7:27","nodeType":"VariableDeclaration","scope":8771,"src":"1578:23:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8766,"name":"address","nodeType":"ElementaryTypeName","src":"1578:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8769,"indexed":false,"mutability":"mutable","name":"isExempt","nameLocation":"1608:8:27","nodeType":"VariableDeclaration","scope":8771,"src":"1603:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8768,"name":"bool","nodeType":"ElementaryTypeName","src":"1603:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1577:40:27"},"src":"1552:66:27"},{"anonymous":false,"eventSelector":"cb24e6b3b5c6d8781cb66cd454a8e78078dccd370402b5c2c3f2f92553556f9b","id":8777,"name":"LimitExemptionChanged","nameLocation":"1629:21:27","nodeType":"EventDefinition","parameters":{"id":8776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8773,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1667:7:27","nodeType":"VariableDeclaration","scope":8777,"src":"1651:23:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8772,"name":"address","nodeType":"ElementaryTypeName","src":"1651:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8775,"indexed":false,"mutability":"mutable","name":"isExempt","nameLocation":"1681:8:27","nodeType":"VariableDeclaration","scope":8777,"src":"1676:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8774,"name":"bool","nodeType":"ElementaryTypeName","src":"1676:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1650:40:27"},"src":"1623:68:27"},{"anonymous":false,"eventSelector":"aa382e040a4d9efeb5a813fb9d768cb574053b0dfd7cdf78936a29006e0a7a1c","id":8781,"name":"CooldownChanged","nameLocation":"1702:15:27","nodeType":"EventDefinition","parameters":{"id":8780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8779,"indexed":false,"mutability":"mutable","name":"newCooldown","nameLocation":"1726:11:27","nodeType":"VariableDeclaration","scope":8781,"src":"1718:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8778,"name":"uint256","nodeType":"ElementaryTypeName","src":"1718:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1717:21:27"},"src":"1696:43:27"},{"anonymous":false,"eventSelector":"e0d3fb541ce2b3c956d367ec89ad81e907e861539cdc01a6b81cd5652ae05f89","id":8785,"name":"PancakeSwapPairSet","nameLocation":"1750:18:27","nodeType":"EventDefinition","parameters":{"id":8784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8783,"indexed":true,"mutability":"mutable","name":"pair","nameLocation":"1785:4:27","nodeType":"VariableDeclaration","scope":8785,"src":"1769:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8782,"name":"address","nodeType":"ElementaryTypeName","src":"1769:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1768:22:27"},"src":"1744:47:27"},{"body":{"id":8897,"nodeType":"Block","src":"1934:702:27","statements":[{"expression":{"id":8804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8801,"name":"LAUNCH_TIMESTAMP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8691,"src":"1944:16:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":8802,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1963:5:27","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1969:9:27","memberName":"timestamp","nodeType":"MemberAccess","src":"1963:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1944:34:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8805,"nodeType":"ExpressionStatement","src":"1944:34:27"},{"expression":{"id":8809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8806,"name":"launchBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8736,"src":"1988:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":8807,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2008:5:27","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2014:6:27","memberName":"number","nodeType":"MemberAccess","src":"2008:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1988:32:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8810,"nodeType":"ExpressionStatement","src":"1988:32:27"},{"expression":{"id":8813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8811,"name":"STAKING_CONTRACT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8687,"src":"2030:16:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8812,"name":"_stakingContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8789,"src":"2049:16:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2030:35:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8814,"nodeType":"ExpressionStatement","src":"2030:35:27"},{"expression":{"id":8817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8815,"name":"TREASURY_CONTRACT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8689,"src":"2075:17:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8816,"name":"_treasuryContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8791,"src":"2095:17:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2075:37:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8818,"nodeType":"ExpressionStatement","src":"2075:37:27"},{"expression":{"id":8825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8819,"name":"feeConfigPhase1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8713,"src":"2122:15:27","typeDescriptions":{"typeIdentifier":"t_struct$_FeeConfig_$8680_storage","typeString":"struct F.FeeConfig storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"323530","id":8821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2150:3:27","typeDescriptions":{"typeIdentifier":"t_rational_250_by_1","typeString":"int_const 250"},"value":"250"},{"hexValue":"31","id":8822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2155:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},{"hexValue":"31","id":8823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2158:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_250_by_1","typeString":"int_const 250"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":8820,"name":"FeeConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8680,"src":"2140:9:27","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_FeeConfig_$8680_storage_ptr_$","typeString":"type(struct F.FeeConfig storage pointer)"}},"id":8824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2140:20:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_FeeConfig_$8680_memory_ptr","typeString":"struct F.FeeConfig memory"}},"src":"2122:38:27","typeDescriptions":{"typeIdentifier":"t_struct$_FeeConfig_$8680_storage","typeString":"struct F.FeeConfig storage ref"}},"id":8826,"nodeType":"ExpressionStatement","src":"2122:38:27"},{"expression":{"id":8833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8827,"name":"feeConfigPhase2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"2170:15:27","typeDescriptions":{"typeIdentifier":"t_struct$_FeeConfig_$8680_storage","typeString":"struct F.FeeConfig storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"313030","id":8829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2198:3:27","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},{"hexValue":"31","id":8830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2203:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},{"hexValue":"31","id":8831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2206:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":8828,"name":"FeeConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8680,"src":"2188:9:27","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_FeeConfig_$8680_storage_ptr_$","typeString":"type(struct F.FeeConfig storage pointer)"}},"id":8832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2188:20:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_FeeConfig_$8680_memory_ptr","typeString":"struct F.FeeConfig memory"}},"src":"2170:38:27","typeDescriptions":{"typeIdentifier":"t_struct$_FeeConfig_$8680_storage","typeString":"struct F.FeeConfig storage ref"}},"id":8834,"nodeType":"ExpressionStatement","src":"2170:38:27"},{"expression":{"id":8842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8835,"name":"maxWalletHolding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8718,"src":"2218:16:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8841,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8838,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":8836,"name":"MAX_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8703,"src":"2238:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"33","id":8837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2251:1:27","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"2238:14:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8839,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2237:16:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":8840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2256:3:27","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"2237:22:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2218:41:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8843,"nodeType":"ExpressionStatement","src":"2218:41:27"},{"expression":{"id":8848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8844,"name":"_isFeeExempt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8727,"src":"2269:12:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":8846,"indexExpression":{"id":8845,"name":"_initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8787,"src":"2282:13:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2269:27:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":8847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2299:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2269:34:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8849,"nodeType":"ExpressionStatement","src":"2269:34:27"},{"expression":{"id":8857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8850,"name":"_isFeeExempt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8727,"src":"2313:12:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":8855,"indexExpression":{"arguments":[{"id":8853,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2334:4:27","typeDescriptions":{"typeIdentifier":"t_contract$_F_$9332","typeString":"contract F"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_F_$9332","typeString":"contract F"}],"id":8852,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2326:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8851,"name":"address","nodeType":"ElementaryTypeName","src":"2326:7:27","typeDescriptions":{}}},"id":8854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2326:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2313:27:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":8856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2343:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2313:34:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8858,"nodeType":"ExpressionStatement","src":"2313:34:27"},{"expression":{"id":8863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8859,"name":"_isFeeExempt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8727,"src":"2357:12:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":8861,"indexExpression":{"id":8860,"name":"STAKING_CONTRACT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8687,"src":"2370:16:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2357:30:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":8862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2390:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2357:37:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8864,"nodeType":"ExpressionStatement","src":"2357:37:27"},{"expression":{"id":8869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8865,"name":"_isFeeExempt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8727,"src":"2404:12:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":8867,"indexExpression":{"id":8866,"name":"TREASURY_CONTRACT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8689,"src":"2417:17:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2404:31:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":8868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2438:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2404:38:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8870,"nodeType":"ExpressionStatement","src":"2404:38:27"},{"expression":{"id":8878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8871,"name":"_isLimitExempt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8731,"src":"2452:14:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":8876,"indexExpression":{"arguments":[{"id":8874,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2475:4:27","typeDescriptions":{"typeIdentifier":"t_contract$_F_$9332","typeString":"contract F"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_F_$9332","typeString":"contract F"}],"id":8873,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2467:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8872,"name":"address","nodeType":"ElementaryTypeName","src":"2467:7:27","typeDescriptions":{}}},"id":8875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2467:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2452:29:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":8877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2484:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2452:36:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8879,"nodeType":"ExpressionStatement","src":"2452:36:27"},{"expression":{"id":8884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8880,"name":"_isLimitExempt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8731,"src":"2498:14:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":8882,"indexExpression":{"id":8881,"name":"TREASURY_CONTRACT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8689,"src":"2513:17:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2498:33:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":8883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2534:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2498:40:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8885,"nodeType":"ExpressionStatement","src":"2498:40:27"},{"expression":{"id":8890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8886,"name":"_isLimitExempt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8731,"src":"2548:14:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":8888,"indexExpression":{"id":8887,"name":"STAKING_CONTRACT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8687,"src":"2563:16:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2548:32:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":8889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2583:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2548:39:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8891,"nodeType":"ExpressionStatement","src":"2548:39:27"},{"expression":{"arguments":[{"id":8893,"name":"_initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8787,"src":"2603:13:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8894,"name":"MAX_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8703,"src":"2618:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8892,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1981,"src":"2597:5:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2597:32:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8896,"nodeType":"ExpressionStatement","src":"2597:32:27"}]},"id":8898,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"46726565646f6d54657374","id":8794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1891:13:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_26068eb435ce776326f3d1f9fed762c35a7e118db9f5f0fcbe1c38b37061bd4a","typeString":"literal_string \"FreedomTest\""},"value":"FreedomTest"},{"hexValue":"46","id":8795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1906:3:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_e61d9a3d3848fb2cdd9a2ab61e2f21a10ea431275aed628a0557f9dee697c37a","typeString":"literal_string \"F\""},"value":"F"}],"id":8796,"kind":"baseConstructorSpecifier","modifierName":{"id":8793,"name":"ERC20","nameLocations":["1885:5:27"],"nodeType":"IdentifierPath","referencedDeclaration":2141,"src":"1885:5:27"},"nodeType":"ModifierInvocation","src":"1885:25:27"},{"arguments":[{"id":8798,"name":"_initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8787,"src":"1919:13:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":8799,"kind":"baseConstructorSpecifier","modifierName":{"id":8797,"name":"Ownable","nameLocations":["1911:7:27"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"1911:7:27"},"nodeType":"ModifierInvocation","src":"1911:22:27"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":8792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8787,"mutability":"mutable","name":"_initialOwner","nameLocation":"1817:13:27","nodeType":"VariableDeclaration","scope":8898,"src":"1809:21:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8786,"name":"address","nodeType":"ElementaryTypeName","src":"1809:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8789,"mutability":"mutable","name":"_stakingContract","nameLocation":"1840:16:27","nodeType":"VariableDeclaration","scope":8898,"src":"1832:24:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8788,"name":"address","nodeType":"ElementaryTypeName","src":"1832:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8791,"mutability":"mutable","name":"_treasuryContract","nameLocation":"1866:17:27","nodeType":"VariableDeclaration","scope":8898,"src":"1858:25:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8790,"name":"address","nodeType":"ElementaryTypeName","src":"1858:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1808:76:27"},"returnParameters":{"id":8800,"nodeType":"ParameterList","parameters":[],"src":"1934:0:27"},"scope":9332,"src":"1797:839:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8925,"nodeType":"Block","src":"2706:118:27","statements":[{"expression":{"id":8907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8905,"name":"pancakeSwapPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8693,"src":"2708:15:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8906,"name":"_pair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8900,"src":"2726:5:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2708:23:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8908,"nodeType":"ExpressionStatement","src":"2708:23:27"},{"expression":{"id":8913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8909,"name":"_isFeeExempt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8727,"src":"2733:12:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":8911,"indexExpression":{"id":8910,"name":"_pair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8900,"src":"2746:5:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2733:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":8912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2755:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2733:26:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8914,"nodeType":"ExpressionStatement","src":"2733:26:27"},{"expression":{"id":8919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8915,"name":"_isLimitExempt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8731,"src":"2761:14:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":8917,"indexExpression":{"id":8916,"name":"_pair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8900,"src":"2776:5:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2761:21:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":8918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2785:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2761:28:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8920,"nodeType":"ExpressionStatement","src":"2761:28:27"},{"eventCall":{"arguments":[{"id":8922,"name":"_pair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8900,"src":"2815:5:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8921,"name":"PancakeSwapPairSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8785,"src":"2796:18:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":8923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2796:25:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8924,"nodeType":"EmitStatement","src":"2791:30:27"}]},"functionSelector":"a06655a6","id":8926,"implemented":true,"kind":"function","modifiers":[{"id":8903,"kind":"modifierInvocation","modifierName":{"id":8902,"name":"onlyOwner","nameLocations":["2696:9:27"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2696:9:27"},"nodeType":"ModifierInvocation","src":"2696:9:27"}],"name":"setPancakeSwapPair","nameLocation":"2655:18:27","nodeType":"FunctionDefinition","parameters":{"id":8901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8900,"mutability":"mutable","name":"_pair","nameLocation":"2682:5:27","nodeType":"VariableDeclaration","scope":8926,"src":"2674:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8899,"name":"address","nodeType":"ElementaryTypeName","src":"2674:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2673:15:27"},"returnParameters":{"id":8904,"nodeType":"ParameterList","parameters":[],"src":"2706:0:27"},"scope":9332,"src":"2646:178:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1948],"body":{"id":9061,"nodeType":"Block","src":"2911:972:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8936,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8928,"src":"2925:4:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":8939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2941:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8938,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2933:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8937,"name":"address","nodeType":"ElementaryTypeName","src":"2933:7:27","typeDescriptions":{}}},"id":8940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2933:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2925:18:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8952,"nodeType":"IfStatement","src":"2921:68:27","trueBody":{"id":8951,"nodeType":"Block","src":"2945:44:27","statements":[{"expression":{"arguments":[{"id":8945,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8928,"src":"2961:4:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8946,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8930,"src":"2967:2:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8947,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8932,"src":"2971:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8942,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2947:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_F_$9332_$","typeString":"type(contract super F)"}},"id":8944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2953:7:27","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":1948,"src":"2947:13:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":8948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2947:31:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8949,"nodeType":"ExpressionStatement","src":"2947:31:27"},{"functionReturnParameters":8935,"id":8950,"nodeType":"Return","src":"2980:7:27"}]}},{"assignments":[8954],"declarations":[{"constant":false,"id":8954,"mutability":"mutable","name":"takeFee","nameLocation":"3012:7:27","nodeType":"VariableDeclaration","scope":9061,"src":"3007:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8953,"name":"bool","nodeType":"ElementaryTypeName","src":"3007:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":8964,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3022:19:27","subExpression":{"baseExpression":{"id":8955,"name":"_isFeeExempt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8727,"src":"3023:12:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":8957,"indexExpression":{"id":8956,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8928,"src":"3036:4:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3023:18:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":8962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3045:17:27","subExpression":{"baseExpression":{"id":8959,"name":"_isFeeExempt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8727,"src":"3046:12:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":8961,"indexExpression":{"id":8960,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8930,"src":"3059:2:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3046:16:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3022:40:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"3007:55:27"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8965,"name":"takeFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8954,"src":"3085:7:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8966,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8928,"src":"3096:4:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":8967,"name":"pancakeSwapPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8693,"src":"3104:15:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3096:23:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3085:34:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8970,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3123:5:27","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3129:6:27","memberName":"number","nodeType":"MemberAccess","src":"3123:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8972,"name":"launchBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8736,"src":"3139:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":8973,"name":"deadblockCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8734,"src":"3159:14:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3139:34:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3123:50:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3085:88:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8984,"nodeType":"IfStatement","src":"3081:172:27","trueBody":{"id":8983,"nodeType":"Block","src":"3175:78:27","statements":[{"expression":{"arguments":[{"id":8978,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8930,"src":"3211:2:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8979,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8932,"src":"3215:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8977,"name":"_handleBotTransaction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9266,"src":"3189:21:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3189:33:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8981,"nodeType":"ExpressionStatement","src":"3189:33:27"},{"functionReturnParameters":8935,"id":8982,"nodeType":"Return","src":"3236:7:27"}]}},{"condition":{"id":8985,"name":"takeFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8954,"src":"3266:7:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9006,"nodeType":"IfStatement","src":"3263:187:27","trueBody":{"id":9005,"nodeType":"Block","src":"3275:175:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8987,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3298:5:27","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3304:9:27","memberName":"timestamp","nodeType":"MemberAccess","src":"3298:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":8989,"name":"_lastTxTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8740,"src":"3317:16:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8991,"indexExpression":{"id":8990,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8928,"src":"3334:4:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3317:22:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":8992,"name":"dynamicCooldownSeconds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8743,"src":"3342:22:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3317:47:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3298:66:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f6f6c646f776e20616374697665","id":8995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3366:17:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_74bfbd0e22b7de34cffebe5af74ea7eca5e99706ecb9129f4c3a64d8a95a2fa5","typeString":"literal_string \"Cooldown active\""},"value":"Cooldown active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_74bfbd0e22b7de34cffebe5af74ea7eca5e99706ecb9129f4c3a64d8a95a2fa5","typeString":"literal_string \"Cooldown active\""}],"id":8986,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3290:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3290:94:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8997,"nodeType":"ExpressionStatement","src":"3290:94:27"},{"expression":{"id":9003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8998,"name":"_lastTxTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8740,"src":"3399:16:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":9000,"indexExpression":{"id":8999,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8928,"src":"3416:4:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3399:22:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":9001,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3424:5:27","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3430:9:27","memberName":"timestamp","nodeType":"MemberAccess","src":"3424:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3399:40:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9004,"nodeType":"ExpressionStatement","src":"3399:40:27"}]}},{"condition":{"id":9007,"name":"takeFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8954,"src":"3472:7:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":9023,"nodeType":"Block","src":"3547:56:27","statements":[{"expression":{"arguments":[{"id":9018,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8928,"src":"3575:4:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9019,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8930,"src":"3581:2:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9020,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8932,"src":"3585:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9015,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"3561:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_F_$9332_$","typeString":"type(contract super F)"}},"id":9017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3567:7:27","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":1948,"src":"3561:13:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":9021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3561:31:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9022,"nodeType":"ExpressionStatement","src":"3561:31:27"}]},"id":9024,"nodeType":"IfStatement","src":"3468:135:27","trueBody":{"id":9014,"nodeType":"Block","src":"3481:60:27","statements":[{"expression":{"arguments":[{"id":9009,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8928,"src":"3513:4:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9010,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8930,"src":"3519:2:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9011,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8932,"src":"3523:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9008,"name":"_transferWithFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9181,"src":"3495:17:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":9012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3495:35:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9013,"nodeType":"ExpressionStatement","src":"3495:35:27"}]}},{"condition":{"id":9028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3617:19:27","subExpression":{"baseExpression":{"id":9025,"name":"_isLimitExempt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8731,"src":"3618:14:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":9027,"indexExpression":{"id":9026,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8930,"src":"3633:2:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3618:18:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9039,"nodeType":"IfStatement","src":"3613:120:27","trueBody":{"id":9038,"nodeType":"Block","src":"3638:95:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":9031,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8930,"src":"3670:2:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9030,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1727,"src":"3660:9:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":9032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3660:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":9033,"name":"maxWalletHolding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8718,"src":"3677:16:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3660:33:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45786365656473206d61782077616c6c6574206c696d6974","id":9035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3695:26:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_16b8b32967dd4bc0aab6ef6923f02437ba7c233f8b9e5220aa29dfb26b9600be","typeString":"literal_string \"Exceeds max wallet limit\""},"value":"Exceeds max wallet limit"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_16b8b32967dd4bc0aab6ef6923f02437ba7c233f8b9e5220aa29dfb26b9600be","typeString":"literal_string \"Exceeds max wallet limit\""}],"id":9029,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3652:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3652:70:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9037,"nodeType":"ExpressionStatement","src":"3652:70:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":9053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":9048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9040,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8928,"src":"3746:4:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":9041,"name":"pancakeSwapPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8693,"src":"3754:15:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3746:23:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":9044,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8930,"src":"3783:2:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9043,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1727,"src":"3773:9:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":9045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3773:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":9046,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8932,"src":"3790:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3773:23:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3746:50:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":9052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3800:19:27","subExpression":{"baseExpression":{"id":9049,"name":"_isLimitExempt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8731,"src":"3801:14:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":9051,"indexExpression":{"id":9050,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8930,"src":"3816:2:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3801:18:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3746:73:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9060,"nodeType":"IfStatement","src":"3742:135:27","trueBody":{"id":9059,"nodeType":"Block","src":"3821:56:27","statements":[{"expression":{"arguments":[{"id":9055,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8930,"src":"3855:2:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9056,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8932,"src":"3859:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9054,"name":"_applyFirstBuyLock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9245,"src":"3836:18:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":9057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3836:30:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9058,"nodeType":"ExpressionStatement","src":"3836:30:27"}]}}]},"id":9062,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"2843:7:27","nodeType":"FunctionDefinition","overrides":{"id":8934,"nodeType":"OverrideSpecifier","overrides":[],"src":"2902:8:27"},"parameters":{"id":8933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8928,"mutability":"mutable","name":"from","nameLocation":"2859:4:27","nodeType":"VariableDeclaration","scope":9062,"src":"2851:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8927,"name":"address","nodeType":"ElementaryTypeName","src":"2851:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8930,"mutability":"mutable","name":"to","nameLocation":"2873:2:27","nodeType":"VariableDeclaration","scope":9062,"src":"2865:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8929,"name":"address","nodeType":"ElementaryTypeName","src":"2865:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8932,"mutability":"mutable","name":"amount","nameLocation":"2885:6:27","nodeType":"VariableDeclaration","scope":9062,"src":"2877:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8931,"name":"uint256","nodeType":"ElementaryTypeName","src":"2877:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2850:42:27"},"returnParameters":{"id":8935,"nodeType":"ParameterList","parameters":[],"src":"2911:0:27"},"scope":9332,"src":"2834:1049:27","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":9180,"nodeType":"Block","src":"3966:1068:27","statements":[{"assignments":[9073],"declarations":[{"constant":false,"id":9073,"mutability":"mutable","name":"currentFees","nameLocation":"3993:11:27","nodeType":"VariableDeclaration","scope":9180,"src":"3976:28:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FeeConfig_$8680_memory_ptr","typeString":"struct F.FeeConfig"},"typeName":{"id":9072,"nodeType":"UserDefinedTypeName","pathNode":{"id":9071,"name":"FeeConfig","nameLocations":["3976:9:27"],"nodeType":"IdentifierPath","referencedDeclaration":8680,"src":"3976:9:27"},"referencedDeclaration":8680,"src":"3976:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_FeeConfig_$8680_storage_ptr","typeString":"struct F.FeeConfig"}},"visibility":"internal"}],"id":9076,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":9074,"name":"_getCurrentFeeConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9202,"src":"4007:20:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_struct$_FeeConfig_$8680_memory_ptr_$","typeString":"function () view returns (struct F.FeeConfig memory)"}},"id":9075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4007:22:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_FeeConfig_$8680_memory_ptr","typeString":"struct F.FeeConfig memory"}},"nodeType":"VariableDeclarationStatement","src":"3976:53:27"},{"assignments":[9078],"declarations":[{"constant":false,"id":9078,"mutability":"mutable","name":"burnAmount","nameLocation":"4047:10:27","nodeType":"VariableDeclaration","scope":9180,"src":"4039:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9077,"name":"uint256","nodeType":"ElementaryTypeName","src":"4039:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9086,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9079,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9068,"src":"4061:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":9080,"name":"currentFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9073,"src":"4070:11:27","typeDescriptions":{"typeIdentifier":"t_struct$_FeeConfig_$8680_memory_ptr","typeString":"struct F.FeeConfig memory"}},"id":9081,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4082:7:27","memberName":"burnFee","nodeType":"MemberAccess","referencedDeclaration":8675,"src":"4070:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4061:28:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":9083,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4060:30:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":9084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4093:5:27","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"4060:38:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4039:59:27"},{"assignments":[9088],"declarations":[{"constant":false,"id":9088,"mutability":"mutable","name":"stakingAmount","nameLocation":"4116:13:27","nodeType":"VariableDeclaration","scope":9180,"src":"4108:21:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9087,"name":"uint256","nodeType":"ElementaryTypeName","src":"4108:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9096,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9089,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9068,"src":"4133:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":9090,"name":"currentFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9073,"src":"4142:11:27","typeDescriptions":{"typeIdentifier":"t_struct$_FeeConfig_$8680_memory_ptr","typeString":"struct F.FeeConfig memory"}},"id":9091,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4154:10:27","memberName":"stakingFee","nodeType":"MemberAccess","referencedDeclaration":8677,"src":"4142:22:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4133:31:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":9093,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4132:33:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":9094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4168:5:27","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"4132:41:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4108:65:27"},{"assignments":[9098],"declarations":[{"constant":false,"id":9098,"mutability":"mutable","name":"liquidityAmount","nameLocation":"4191:15:27","nodeType":"VariableDeclaration","scope":9180,"src":"4183:23:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9097,"name":"uint256","nodeType":"ElementaryTypeName","src":"4183:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9106,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9099,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9068,"src":"4210:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":9100,"name":"currentFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9073,"src":"4219:11:27","typeDescriptions":{"typeIdentifier":"t_struct$_FeeConfig_$8680_memory_ptr","typeString":"struct F.FeeConfig memory"}},"id":9101,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4231:12:27","memberName":"liquidityFee","nodeType":"MemberAccess","referencedDeclaration":8679,"src":"4219:24:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4210:33:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":9103,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4209:35:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":9104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4247:5:27","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"4209:43:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4183:69:27"},{"assignments":[9108],"declarations":[{"constant":false,"id":9108,"mutability":"mutable","name":"transferAmount","nameLocation":"4270:14:27","nodeType":"VariableDeclaration","scope":9180,"src":"4262:22:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9107,"name":"uint256","nodeType":"ElementaryTypeName","src":"4262:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9116,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9109,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9068,"src":"4287:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":9110,"name":"burnAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9078,"src":"4296:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4287:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":9112,"name":"stakingAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9088,"src":"4309:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4287:35:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":9114,"name":"liquidityAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9098,"src":"4325:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4287:53:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4262:78:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9117,"name":"transferAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9108,"src":"4354:14:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":9118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4371:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4354:18:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9129,"nodeType":"IfStatement","src":"4351:87:27","trueBody":{"id":9128,"nodeType":"Block","src":"4374:64:27","statements":[{"expression":{"arguments":[{"id":9123,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9064,"src":"4402:4:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9124,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9066,"src":"4408:2:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9125,"name":"transferAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9108,"src":"4412:14:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9120,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"4388:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_F_$9332_$","typeString":"type(contract super F)"}},"id":9122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4394:7:27","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":1948,"src":"4388:13:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":9126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4388:39:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9127,"nodeType":"ExpressionStatement","src":"4388:39:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":9137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":9130,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1714,"src":"4460:11:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":9131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4460:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":9132,"name":"BURN_STOP_THRESHOLD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8710,"src":"4476:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4460:35:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9134,"name":"burnAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9078,"src":"4499:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":9135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4512:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4499:14:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4460:53:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9147,"nodeType":"IfStatement","src":"4456:129:27","trueBody":{"id":9146,"nodeType":"Block","src":"4515:70:27","statements":[{"expression":{"arguments":[{"id":9141,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9064,"src":"4543:4:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9142,"name":"BURN_ADDRESS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8696,"src":"4549:12:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9143,"name":"burnAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9078,"src":"4563:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9138,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"4529:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_F_$9332_$","typeString":"type(contract super F)"}},"id":9140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4535:7:27","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":1948,"src":"4529:13:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":9144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4529:45:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9145,"nodeType":"ExpressionStatement","src":"4529:45:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9148,"name":"stakingAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9088,"src":"4598:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":9149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4614:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4598:17:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9160,"nodeType":"IfStatement","src":"4594:100:27","trueBody":{"id":9159,"nodeType":"Block","src":"4617:77:27","statements":[{"expression":{"arguments":[{"id":9154,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9064,"src":"4645:4:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9155,"name":"STAKING_CONTRACT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8687,"src":"4651:16:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9156,"name":"stakingAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9088,"src":"4669:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9151,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"4631:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_F_$9332_$","typeString":"type(contract super F)"}},"id":9153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4637:7:27","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":1948,"src":"4631:13:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":9157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4631:52:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9158,"nodeType":"ExpressionStatement","src":"4631:52:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9161,"name":"liquidityAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9098,"src":"4707:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":9162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4725:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4707:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9173,"nodeType":"IfStatement","src":"4703:251:27","trueBody":{"id":9172,"nodeType":"Block","src":"4728:226:27","statements":[{"expression":{"arguments":[{"id":9167,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9064,"src":"4756:4:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9168,"name":"TREASURY_CONTRACT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8689,"src":"4762:17:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9169,"name":"liquidityAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9098,"src":"4781:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9164,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"4742:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_F_$9332_$","typeString":"type(contract super F)"}},"id":9166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4748:7:27","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":1948,"src":"4742:13:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":9170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4742:55:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9171,"nodeType":"ExpressionStatement","src":"4742:55:27"}]}},{"eventCall":{"arguments":[{"id":9175,"name":"burnAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9078,"src":"4984:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9176,"name":"stakingAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9088,"src":"4996:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9177,"name":"liquidityAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9098,"src":"5011:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9174,"name":"FeesDistributed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8751,"src":"4968:15:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256)"}},"id":9178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4968:59:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9179,"nodeType":"EmitStatement","src":"4963:64:27"}]},"id":9181,"implemented":true,"kind":"function","modifiers":[],"name":"_transferWithFees","nameLocation":"3898:17:27","nodeType":"FunctionDefinition","parameters":{"id":9069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9064,"mutability":"mutable","name":"from","nameLocation":"3924:4:27","nodeType":"VariableDeclaration","scope":9181,"src":"3916:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9063,"name":"address","nodeType":"ElementaryTypeName","src":"3916:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9066,"mutability":"mutable","name":"to","nameLocation":"3938:2:27","nodeType":"VariableDeclaration","scope":9181,"src":"3930:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9065,"name":"address","nodeType":"ElementaryTypeName","src":"3930:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9068,"mutability":"mutable","name":"amount","nameLocation":"3950:6:27","nodeType":"VariableDeclaration","scope":9181,"src":"3942:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9067,"name":"uint256","nodeType":"ElementaryTypeName","src":"3942:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3915:42:27"},"returnParameters":{"id":9070,"nodeType":"ParameterList","parameters":[],"src":"3966:0:27"},"scope":9332,"src":"3889:1145:27","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":9201,"nodeType":"Block","src":"5116:128:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9187,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5130:5:27","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5136:9:27","memberName":"timestamp","nodeType":"MemberAccess","src":"5130:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9189,"name":"LAUNCH_TIMESTAMP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8691,"src":"5148:16:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_63072000_by_1","typeString":"int_const 63072000"},"id":9192,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":9190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5168:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"333635","id":9191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5172:8:27","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_31536000_by_1","typeString":"int_const 31536000"},"value":"365"},"src":"5168:12:27","typeDescriptions":{"typeIdentifier":"t_rational_63072000_by_1","typeString":"int_const 63072000"}}],"id":9193,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"5167:14:27","typeDescriptions":{"typeIdentifier":"t_rational_63072000_by_1","typeString":"int_const 63072000"}},"src":"5148:33:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5130:51:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9198,"nodeType":"IfStatement","src":"5126:79:27","trueBody":{"expression":{"id":9196,"name":"feeConfigPhase1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8713,"src":"5190:15:27","typeDescriptions":{"typeIdentifier":"t_struct$_FeeConfig_$8680_storage","typeString":"struct F.FeeConfig storage ref"}},"functionReturnParameters":9186,"id":9197,"nodeType":"Return","src":"5183:22:27"}},{"expression":{"id":9199,"name":"feeConfigPhase2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"5222:15:27","typeDescriptions":{"typeIdentifier":"t_struct$_FeeConfig_$8680_storage","typeString":"struct F.FeeConfig storage ref"}},"functionReturnParameters":9186,"id":9200,"nodeType":"Return","src":"5215:22:27"}]},"id":9202,"implemented":true,"kind":"function","modifiers":[],"name":"_getCurrentFeeConfig","nameLocation":"5053:20:27","nodeType":"FunctionDefinition","parameters":{"id":9182,"nodeType":"ParameterList","parameters":[],"src":"5073:2:27"},"returnParameters":{"id":9186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9185,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9202,"src":"5098:16:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FeeConfig_$8680_memory_ptr","typeString":"struct F.FeeConfig"},"typeName":{"id":9184,"nodeType":"UserDefinedTypeName","pathNode":{"id":9183,"name":"FeeConfig","nameLocations":["5098:9:27"],"nodeType":"IdentifierPath","referencedDeclaration":8680,"src":"5098:9:27"},"referencedDeclaration":8680,"src":"5098:9:27","typeDescriptions":{"typeIdentifier":"t_struct$_FeeConfig_$8680_storage_ptr","typeString":"struct F.FeeConfig"}},"visibility":"internal"}],"src":"5097:18:27"},"scope":9332,"src":"5044:200:27","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":9244,"nodeType":"Block","src":"5314:285:27","statements":[{"assignments":[9210],"declarations":[{"constant":false,"id":9210,"mutability":"mutable","name":"lockDuration","nameLocation":"5332:12:27","nodeType":"VariableDeclaration","scope":9244,"src":"5324:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9209,"name":"uint256","nodeType":"ElementaryTypeName","src":"5324:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9217,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9211,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9206,"src":"5348:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"333635","id":9212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5357:8:27","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_31536000_by_1","typeString":"int_const 31536000"},"value":"365"},"src":"5348:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":9214,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5347:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":9215,"name":"maxWalletHolding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8718,"src":"5369:16:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5347:38:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5324:61:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9218,"name":"lockDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9210,"src":"5399:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3330","id":9219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5414:7:27","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_2592000_by_1","typeString":"int_const 2592000"},"value":"30"},"src":"5399:22:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9243,"nodeType":"IfStatement","src":"5395:198:27","trueBody":{"id":9242,"nodeType":"Block","src":"5423:170:27","statements":[{"expression":{"id":9231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":9221,"name":"_walletLocks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8723,"src":"5437:12:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_WalletLocks_$8685_storage_$","typeString":"mapping(address => struct F.WalletLocks storage ref)"}},"id":9223,"indexExpression":{"id":9222,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9204,"src":"5450:2:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5437:16:27","typeDescriptions":{"typeIdentifier":"t_struct$_WalletLocks_$8685_storage","typeString":"struct F.WalletLocks storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9225,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5468:5:27","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5474:9:27","memberName":"timestamp","nodeType":"MemberAccess","src":"5468:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":9227,"name":"lockDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9210,"src":"5486:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5468:30:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9229,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9206,"src":"5500:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9224,"name":"WalletLocks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8685,"src":"5456:11:27","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_WalletLocks_$8685_storage_ptr_$","typeString":"type(struct F.WalletLocks storage pointer)"}},"id":9230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5456:51:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_WalletLocks_$8685_memory_ptr","typeString":"struct F.WalletLocks memory"}},"src":"5437:70:27","typeDescriptions":{"typeIdentifier":"t_struct$_WalletLocks_$8685_storage","typeString":"struct F.WalletLocks storage ref"}},"id":9232,"nodeType":"ExpressionStatement","src":"5437:70:27"},{"eventCall":{"arguments":[{"id":9234,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9204,"src":"5539:2:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9235,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9206,"src":"5543:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9236,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5551:5:27","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5557:9:27","memberName":"timestamp","nodeType":"MemberAccess","src":"5551:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":9238,"name":"lockDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9210,"src":"5569:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5551:30:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9233,"name":"WalletLocked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8759,"src":"5526:12:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":9240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5526:56:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9241,"nodeType":"EmitStatement","src":"5521:61:27"}]}}]},"id":9245,"implemented":true,"kind":"function","modifiers":[],"name":"_applyFirstBuyLock","nameLocation":"5259:18:27","nodeType":"FunctionDefinition","parameters":{"id":9207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9204,"mutability":"mutable","name":"to","nameLocation":"5286:2:27","nodeType":"VariableDeclaration","scope":9245,"src":"5278:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9203,"name":"address","nodeType":"ElementaryTypeName","src":"5278:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9206,"mutability":"mutable","name":"amount","nameLocation":"5298:6:27","nodeType":"VariableDeclaration","scope":9245,"src":"5290:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9205,"name":"uint256","nodeType":"ElementaryTypeName","src":"5290:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5277:28:27"},"returnParameters":{"id":9208,"nodeType":"ParameterList","parameters":[],"src":"5314:0:27"},"scope":9332,"src":"5250:349:27","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":9265,"nodeType":"Block","src":"5679:132:27","statements":[{"expression":{"arguments":[{"id":9255,"name":"pancakeSwapPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8693,"src":"5703:15:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9256,"name":"TREASURY_CONTRACT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8689,"src":"5720:17:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9257,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9249,"src":"5739:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9252,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"5689:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_F_$9332_$","typeString":"type(contract super F)"}},"id":9254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5695:7:27","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":1948,"src":"5689:13:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":9258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5689:57:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9259,"nodeType":"ExpressionStatement","src":"5689:57:27"},{"eventCall":{"arguments":[{"id":9261,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9247,"src":"5786:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9262,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9249,"src":"5797:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9260,"name":"BotTransactionRedirected","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8765,"src":"5761:24:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":9263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5761:43:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9264,"nodeType":"EmitStatement","src":"5756:48:27"}]},"id":9266,"implemented":true,"kind":"function","modifiers":[],"name":"_handleBotTransaction","nameLocation":"5614:21:27","nodeType":"FunctionDefinition","parameters":{"id":9250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9247,"mutability":"mutable","name":"recipient","nameLocation":"5644:9:27","nodeType":"VariableDeclaration","scope":9266,"src":"5636:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9246,"name":"address","nodeType":"ElementaryTypeName","src":"5636:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9249,"mutability":"mutable","name":"amount","nameLocation":"5663:6:27","nodeType":"VariableDeclaration","scope":9266,"src":"5655:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9248,"name":"uint256","nodeType":"ElementaryTypeName","src":"5655:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5635:35:27"},"returnParameters":{"id":9251,"nodeType":"ParameterList","parameters":[],"src":"5679:0:27"},"scope":9332,"src":"5605:206:27","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":9286,"nodeType":"Block","src":"5892:82:27","statements":[{"expression":{"id":9279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":9275,"name":"_isFeeExempt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8727,"src":"5894:12:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":9277,"indexExpression":{"id":9276,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9268,"src":"5907:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5894:21:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9278,"name":"isExempt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9270,"src":"5918:8:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5894:32:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9280,"nodeType":"ExpressionStatement","src":"5894:32:27"},{"eventCall":{"arguments":[{"id":9282,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9268,"src":"5953:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9283,"name":"isExempt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9270,"src":"5962:8:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":9281,"name":"FeeExemptionChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8771,"src":"5933:19:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$","typeString":"function (address,bool)"}},"id":9284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5933:38:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9285,"nodeType":"EmitStatement","src":"5928:43:27"}]},"functionSelector":"8ebfc796","id":9287,"implemented":true,"kind":"function","modifiers":[{"id":9273,"kind":"modifierInvocation","modifierName":{"id":9272,"name":"onlyOwner","nameLocations":["5882:9:27"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"5882:9:27"},"nodeType":"ModifierInvocation","src":"5882:9:27"}],"name":"setFeeExempt","nameLocation":"5830:12:27","nodeType":"FunctionDefinition","parameters":{"id":9271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9268,"mutability":"mutable","name":"account","nameLocation":"5851:7:27","nodeType":"VariableDeclaration","scope":9287,"src":"5843:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9267,"name":"address","nodeType":"ElementaryTypeName","src":"5843:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9270,"mutability":"mutable","name":"isExempt","nameLocation":"5865:8:27","nodeType":"VariableDeclaration","scope":9287,"src":"5860:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9269,"name":"bool","nodeType":"ElementaryTypeName","src":"5860:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5842:32:27"},"returnParameters":{"id":9274,"nodeType":"ParameterList","parameters":[],"src":"5892:0:27"},"scope":9332,"src":"5821:153:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":9307,"nodeType":"Block","src":"6052:86:27","statements":[{"expression":{"id":9300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":9296,"name":"_isLimitExempt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8731,"src":"6054:14:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":9298,"indexExpression":{"id":9297,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9289,"src":"6069:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6054:23:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9299,"name":"isExempt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9291,"src":"6080:8:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6054:34:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9301,"nodeType":"ExpressionStatement","src":"6054:34:27"},{"eventCall":{"arguments":[{"id":9303,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9289,"src":"6117:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9304,"name":"isExempt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9291,"src":"6126:8:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":9302,"name":"LimitExemptionChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8777,"src":"6095:21:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$","typeString":"function (address,bool)"}},"id":9305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6095:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9306,"nodeType":"EmitStatement","src":"6090:45:27"}]},"functionSelector":"40a24e6c","id":9308,"implemented":true,"kind":"function","modifiers":[{"id":9294,"kind":"modifierInvocation","modifierName":{"id":9293,"name":"onlyOwner","nameLocations":["6042:9:27"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"6042:9:27"},"nodeType":"ModifierInvocation","src":"6042:9:27"}],"name":"setLimitExempt","nameLocation":"5988:14:27","nodeType":"FunctionDefinition","parameters":{"id":9292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9289,"mutability":"mutable","name":"account","nameLocation":"6011:7:27","nodeType":"VariableDeclaration","scope":9308,"src":"6003:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9288,"name":"address","nodeType":"ElementaryTypeName","src":"6003:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9291,"mutability":"mutable","name":"isExempt","nameLocation":"6025:8:27","nodeType":"VariableDeclaration","scope":9308,"src":"6020:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9290,"name":"bool","nodeType":"ElementaryTypeName","src":"6020:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6002:32:27"},"returnParameters":{"id":9295,"nodeType":"ParameterList","parameters":[],"src":"6052:0:27"},"scope":9332,"src":"5979:159:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":9330,"nodeType":"Block","src":"6216:147:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9316,"name":"newCooldownSeconds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9310,"src":"6226:18:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"333030","id":9317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6248:3:27","typeDescriptions":{"typeIdentifier":"t_rational_300_by_1","typeString":"int_const 300"},"value":"300"},"src":"6226:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f6f6c646f776e20746f6f206c6f6e67","id":9319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6253:19:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_ba9c9c2e245f05e917cb9045a1f3ed4859eb132cf139db7a2104edf9d54d8366","typeString":"literal_string \"Cooldown too long\""},"value":"Cooldown too long"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ba9c9c2e245f05e917cb9045a1f3ed4859eb132cf139db7a2104edf9d54d8366","typeString":"literal_string \"Cooldown too long\""}],"id":9315,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6218:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6218:55:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9321,"nodeType":"ExpressionStatement","src":"6218:55:27"},{"expression":{"id":9324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9322,"name":"dynamicCooldownSeconds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8743,"src":"6275:22:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9323,"name":"newCooldownSeconds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9310,"src":"6300:18:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6275:43:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9325,"nodeType":"ExpressionStatement","src":"6275:43:27"},{"eventCall":{"arguments":[{"id":9327,"name":"newCooldownSeconds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9310,"src":"6341:18:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9326,"name":"CooldownChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8781,"src":"6325:15:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":9328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6325:35:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9329,"nodeType":"EmitStatement","src":"6320:40:27"}]},"functionSelector":"5d0f1ada","id":9331,"implemented":true,"kind":"function","modifiers":[{"id":9313,"kind":"modifierInvocation","modifierName":{"id":9312,"name":"onlyOwner","nameLocations":["6206:9:27"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"6206:9:27"},"nodeType":"ModifierInvocation","src":"6206:9:27"}],"name":"setDynamicCooldown","nameLocation":"6152:18:27","nodeType":"FunctionDefinition","parameters":{"id":9311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9310,"mutability":"mutable","name":"newCooldownSeconds","nameLocation":"6179:18:27","nodeType":"VariableDeclaration","scope":9331,"src":"6171:26:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9309,"name":"uint256","nodeType":"ElementaryTypeName","src":"6171:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6170:28:27"},"returnParameters":{"id":9314,"nodeType":"ParameterList","parameters":[],"src":"6216:0:27"},"scope":9332,"src":"6143:220:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":9333,"src":"250:6115:27","usedErrors":[13,18,249,254,259,268,273,278],"usedEvents":[24,2153,2162,8751,8759,8765,8771,8777,8781,8785]}],"src":"32:6334:27"},"id":27},"contracts/RewardManager.sol":{"ast":{"absolutePath":"contracts/RewardManager.sol","exportedSymbols":{"Arrays":[3687],"Context":[3749],"ERC1155":[1291],"ERC1155Utils":[1626],"ERC165":[5261],"Hashes":[4164],"IERC1155":[1414],"IERC1155Errors":[374],"IERC1155MetadataURI":[1472],"IERC165":[5273],"MerkleProof":[5237],"Ownable":[147],"RewardManager":[9729]},"id":9730,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":9334,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:28"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","file":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","id":9335,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9730,"sourceUnit":1292,"src":"57:59:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":9336,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9730,"sourceUnit":148,"src":"117:52:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","file":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","id":9337,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9730,"sourceUnit":5238,"src":"170:68:28","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":9338,"name":"ERC1155","nameLocations":["265:7:28"],"nodeType":"IdentifierPath","referencedDeclaration":1291,"src":"265:7:28"},"id":9339,"nodeType":"InheritanceSpecifier","src":"265:7:28"},{"baseName":{"id":9340,"name":"Ownable","nameLocations":["274:7:28"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"274:7:28"},"id":9341,"nodeType":"InheritanceSpecifier","src":"274:7:28"}],"canonicalName":"RewardManager","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":9729,"linearizedBaseContracts":[9729,147,1291,374,1472,1414,5261,5273,3749],"name":"RewardManager","nameLocation":"248:13:28","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"6c0360eb","id":9343,"mutability":"mutable","name":"baseURI","nameLocation":"302:7:28","nodeType":"VariableDeclaration","scope":9729,"src":"288:21:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":9342,"name":"string","nodeType":"ElementaryTypeName","src":"288:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"public"},{"constant":false,"functionSelector":"71c5ecb1","id":9347,"mutability":"mutable","name":"merkleRoots","nameLocation":"350:11:28","nodeType":"VariableDeclaration","scope":9729,"src":"315:46:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bytes32_$","typeString":"mapping(uint256 => bytes32)"},"typeName":{"id":9346,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":9344,"name":"uint256","nodeType":"ElementaryTypeName","src":"323:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"315:27:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bytes32_$","typeString":"mapping(uint256 => bytes32)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":9345,"name":"bytes32","nodeType":"ElementaryTypeName","src":"334:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},"visibility":"public"},{"constant":false,"functionSelector":"873f6f9e","id":9353,"mutability":"mutable","name":"hasClaimed","nameLocation":"419:10:28","nodeType":"VariableDeclaration","scope":9729,"src":"367:62:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"},"typeName":{"id":9352,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":9348,"name":"uint256","nodeType":"ElementaryTypeName","src":"375:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"367:44:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":9351,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":9349,"name":"address","nodeType":"ElementaryTypeName","src":"394:7:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"386:24:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":9350,"name":"bool","nodeType":"ElementaryTypeName","src":"405:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"public"},{"constant":false,"functionSelector":"d8b2eb99","id":9357,"mutability":"mutable","name":"mintedCounts","nameLocation":"470:12:28","nodeType":"VariableDeclaration","scope":9729,"src":"435:47:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":9356,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":9354,"name":"uint256","nodeType":"ElementaryTypeName","src":"443:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"435:27:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":9355,"name":"uint256","nodeType":"ElementaryTypeName","src":"454:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"9354f175","id":9361,"mutability":"mutable","name":"supplyLimits","nameLocation":"523:12:28","nodeType":"VariableDeclaration","scope":9729,"src":"488:47:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":9360,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":9358,"name":"uint256","nodeType":"ElementaryTypeName","src":"496:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"488:27:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":9359,"name":"uint256","nodeType":"ElementaryTypeName","src":"507:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"4c00de82","id":9363,"mutability":"mutable","name":"royaltyRecipient","nameLocation":"556:16:28","nodeType":"VariableDeclaration","scope":9729,"src":"541:31:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9362,"name":"address","nodeType":"ElementaryTypeName","src":"541:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"e7dee99f","id":9365,"mutability":"mutable","name":"royaltyFraction","nameLocation":"592:15:28","nodeType":"VariableDeclaration","scope":9729,"src":"578:29:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":9364,"name":"uint96","nodeType":"ElementaryTypeName","src":"578:6:28","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"public"},{"anonymous":false,"eventSelector":"b792983f4be9cd6a6722f6cf3c136d8cf44f77c5cf7cb263f75f36b04806a01b","id":9371,"name":"NFTClaimed","nameLocation":"619:10:28","nodeType":"EventDefinition","parameters":{"id":9370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9367,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"646:4:28","nodeType":"VariableDeclaration","scope":9371,"src":"630:20:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9366,"name":"address","nodeType":"ElementaryTypeName","src":"630:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9369,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"668:7:28","nodeType":"VariableDeclaration","scope":9371,"src":"652:23:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9368,"name":"uint256","nodeType":"ElementaryTypeName","src":"652:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"629:47:28"},"src":"613:64:28"},{"anonymous":false,"eventSelector":"9ff79792a92b66fee090acb66e07837a2edb31ee6b9780fa551fd04b79dffcd2","id":9377,"name":"MerkleRootUpdated","nameLocation":"688:17:28","nodeType":"EventDefinition","parameters":{"id":9376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9373,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"722:7:28","nodeType":"VariableDeclaration","scope":9377,"src":"706:23:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9372,"name":"uint256","nodeType":"ElementaryTypeName","src":"706:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9375,"indexed":false,"mutability":"mutable","name":"newRoot","nameLocation":"739:7:28","nodeType":"VariableDeclaration","scope":9377,"src":"731:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9374,"name":"bytes32","nodeType":"ElementaryTypeName","src":"731:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"705:42:28"},"src":"682:66:28"},{"anonymous":false,"eventSelector":"6741b2fc379fad678116fe3d4d4b9a1a184ab53ba36b86ad0fa66340b1ab41ad","id":9381,"name":"BaseURIUpdated","nameLocation":"759:14:28","nodeType":"EventDefinition","parameters":{"id":9380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9379,"indexed":false,"mutability":"mutable","name":"newURI","nameLocation":"781:6:28","nodeType":"VariableDeclaration","scope":9381,"src":"774:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9378,"name":"string","nodeType":"ElementaryTypeName","src":"774:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"773:15:28"},"src":"753:36:28"},{"anonymous":false,"eventSelector":"ae1d656a1268648b04ffa79c1416f05879338ae295aae3234d8db217356a1c62","id":9387,"name":"RoyaltyInfoUpdated","nameLocation":"800:18:28","nodeType":"EventDefinition","parameters":{"id":9386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9383,"indexed":true,"mutability":"mutable","name":"receiver","nameLocation":"835:8:28","nodeType":"VariableDeclaration","scope":9387,"src":"819:24:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9382,"name":"address","nodeType":"ElementaryTypeName","src":"819:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9385,"indexed":false,"mutability":"mutable","name":"fraction","nameLocation":"852:8:28","nodeType":"VariableDeclaration","scope":9387,"src":"845:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":9384,"name":"uint96","nodeType":"ElementaryTypeName","src":"845:6:28","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"818:43:28"},"src":"794:68:28"},{"body":{"id":9438,"nodeType":"Block","src":"1007:252:28","statements":[{"expression":{"id":9404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9402,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9343,"src":"1017:7:28","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9403,"name":"_initialBaseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9389,"src":"1027:15:28","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1017:25:28","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":9405,"nodeType":"ExpressionStatement","src":"1017:25:28"},{"expression":{"id":9408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9406,"name":"royaltyRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9363,"src":"1052:16:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9407,"name":"_royaltyReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9393,"src":"1071:16:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1052:35:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9409,"nodeType":"ExpressionStatement","src":"1052:35:28"},{"expression":{"id":9412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9410,"name":"royaltyFraction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9365,"src":"1097:15:28","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"323530","id":9411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1115:3:28","typeDescriptions":{"typeIdentifier":"t_rational_250_by_1","typeString":"int_const 250"},"value":"250"},"src":"1097:21:28","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":9413,"nodeType":"ExpressionStatement","src":"1097:21:28"},{"expression":{"id":9418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":9414,"name":"supplyLimits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9361,"src":"1128:12:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":9416,"indexExpression":{"hexValue":"32","id":9415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1141:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1128:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"323030303030","id":9417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1146:6:28","typeDescriptions":{"typeIdentifier":"t_rational_200000_by_1","typeString":"int_const 200000"},"value":"200000"},"src":"1128:24:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9419,"nodeType":"ExpressionStatement","src":"1128:24:28"},{"expression":{"id":9424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":9420,"name":"supplyLimits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9361,"src":"1162:12:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":9422,"indexExpression":{"hexValue":"33","id":9421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1175:1:28","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1162:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"313030303030","id":9423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1180:6:28","typeDescriptions":{"typeIdentifier":"t_rational_100000_by_1","typeString":"int_const 100000"},"value":"100000"},"src":"1162:24:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9425,"nodeType":"ExpressionStatement","src":"1162:24:28"},{"expression":{"id":9430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":9426,"name":"supplyLimits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9361,"src":"1196:12:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":9428,"indexExpression":{"hexValue":"34","id":9427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1209:1:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1196:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"3830303030","id":9429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1214:5:28","typeDescriptions":{"typeIdentifier":"t_rational_80000_by_1","typeString":"int_const 80000"},"value":"80000"},"src":"1196:23:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9431,"nodeType":"ExpressionStatement","src":"1196:23:28"},{"expression":{"id":9436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":9432,"name":"supplyLimits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9361,"src":"1229:12:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":9434,"indexExpression":{"hexValue":"35","id":9433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1242:1:28","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1229:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"3530303030","id":9435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1247:5:28","typeDescriptions":{"typeIdentifier":"t_rational_50000_by_1","typeString":"int_const 50000"},"value":"50000"},"src":"1229:23:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9437,"nodeType":"ExpressionStatement","src":"1229:23:28"}]},"id":9439,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":9396,"name":"_initialBaseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9389,"src":"967:15:28","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":9397,"kind":"baseConstructorSpecifier","modifierName":{"id":9395,"name":"ERC1155","nameLocations":["959:7:28"],"nodeType":"IdentifierPath","referencedDeclaration":1291,"src":"959:7:28"},"nodeType":"ModifierInvocation","src":"959:24:28"},{"arguments":[{"id":9399,"name":"_initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9391,"src":"992:13:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":9400,"kind":"baseConstructorSpecifier","modifierName":{"id":9398,"name":"Ownable","nameLocations":["984:7:28"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"984:7:28"},"nodeType":"ModifierInvocation","src":"984:22:28"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":9394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9389,"mutability":"mutable","name":"_initialBaseURI","nameLocation":"893:15:28","nodeType":"VariableDeclaration","scope":9439,"src":"879:29:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9388,"name":"string","nodeType":"ElementaryTypeName","src":"879:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9391,"mutability":"mutable","name":"_initialOwner","nameLocation":"918:13:28","nodeType":"VariableDeclaration","scope":9439,"src":"910:21:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9390,"name":"address","nodeType":"ElementaryTypeName","src":"910:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9393,"mutability":"mutable","name":"_royaltyReceiver","nameLocation":"941:16:28","nodeType":"VariableDeclaration","scope":9439,"src":"933:24:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9392,"name":"address","nodeType":"ElementaryTypeName","src":"933:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"878:80:28"},"returnParameters":{"id":9401,"nodeType":"ParameterList","parameters":[],"src":"1007:0:28"},"scope":9729,"src":"867:392:28","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":9537,"nodeType":"Block","src":"1340:595:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":9454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9448,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9441,"src":"1358:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"31","id":9449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1369:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1358:12:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9451,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9441,"src":"1374:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"35","id":9452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1385:1:28","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"1374:12:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1358:28:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420746f6b656e4964","id":9455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1388:17:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_47dcc88603f32730c5f1349ee02d9fe469c193c742f38ce12c7b0ba84c66c8a4","typeString":"literal_string \"Invalid tokenId\""},"value":"Invalid tokenId"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47dcc88603f32730c5f1349ee02d9fe469c193c742f38ce12c7b0ba84c66c8a4","typeString":"literal_string \"Invalid tokenId\""}],"id":9447,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1350:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1350:56:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9457,"nodeType":"ExpressionStatement","src":"1350:56:28"},{"expression":{"arguments":[{"id":9465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1424:32:28","subExpression":{"baseExpression":{"baseExpression":{"id":9459,"name":"hasClaimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9353,"src":"1425:10:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"}},"id":9461,"indexExpression":{"id":9460,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9441,"src":"1436:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1425:19:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":9464,"indexExpression":{"expression":{"id":9462,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1445:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1449:6:28","memberName":"sender","nodeType":"MemberAccess","src":"1445:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1425:31:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c726561647920636c61696d6564","id":9466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1458:17:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf","typeString":"literal_string \"Already claimed\""},"value":"Already claimed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf","typeString":"literal_string \"Already claimed\""}],"id":9458,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1416:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1416:60:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9468,"nodeType":"ExpressionStatement","src":"1416:60:28"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":9469,"name":"supplyLimits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9361,"src":"1490:12:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":9471,"indexExpression":{"id":9470,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9441,"src":"1503:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1490:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":9472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1514:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1490:25:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9486,"nodeType":"IfStatement","src":"1486:114:28","trueBody":{"id":9485,"nodeType":"Block","src":"1517:83:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":9475,"name":"mintedCounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9357,"src":"1527:12:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":9477,"indexExpression":{"id":9476,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9441,"src":"1540:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1527:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"baseExpression":{"id":9478,"name":"supplyLimits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9361,"src":"1551:12:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":9480,"indexExpression":{"id":9479,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9441,"src":"1564:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1551:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1527:45:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537570706c79206c696d69742072656163686564","id":9482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1574:22:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_f563795e1c522302826c31e2514b6e741825cdb656e643a68a551481a38b3699","typeString":"literal_string \"Supply limit reached\""},"value":"Supply limit reached"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f563795e1c522302826c31e2514b6e741825cdb656e643a68a551481a38b3699","typeString":"literal_string \"Supply limit reached\""}],"id":9474,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1519:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1519:78:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9484,"nodeType":"ExpressionStatement","src":"1519:78:28"}]}},{"assignments":[9488],"declarations":[{"constant":false,"id":9488,"mutability":"mutable","name":"leaf","nameLocation":"1617:4:28","nodeType":"VariableDeclaration","scope":9537,"src":"1609:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9487,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1609:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":9496,"initialValue":{"arguments":[{"arguments":[{"expression":{"id":9492,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1651:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1655:6:28","memberName":"sender","nodeType":"MemberAccess","src":"1651:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":9490,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1634:3:28","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":9491,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1638:12:28","memberName":"encodePacked","nodeType":"MemberAccess","src":"1634:16:28","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":9494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1634:28:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":9489,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1624:9:28","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":9495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1624:39:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1609:54:28"},{"expression":{"arguments":[{"arguments":[{"id":9500,"name":"merkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9444,"src":"1700:11:28","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"baseExpression":{"id":9501,"name":"merkleRoots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9347,"src":"1713:11:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bytes32_$","typeString":"mapping(uint256 => bytes32)"}},"id":9503,"indexExpression":{"id":9502,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9441,"src":"1725:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1713:20:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":9504,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9488,"src":"1735:4:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":9498,"name":"MerkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5237,"src":"1681:11:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MerkleProof_$5237_$","typeString":"type(library MerkleProof)"}},"id":9499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1693:6:28","memberName":"verify","nodeType":"MemberAccess","referencedDeclaration":4193,"src":"1681:18:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"}},"id":9505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1681:59:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642070726f6f66","id":9506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1742:15:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_dbb8b2d35c676776519896c045ce9c5b267915e4127b1aa1fa65a56a3d2b2639","typeString":"literal_string \"Invalid proof\""},"value":"Invalid proof"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dbb8b2d35c676776519896c045ce9c5b267915e4127b1aa1fa65a56a3d2b2639","typeString":"literal_string \"Invalid proof\""}],"id":9497,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1673:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1673:85:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9508,"nodeType":"ExpressionStatement","src":"1673:85:28"},{"expression":{"id":9516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":9509,"name":"hasClaimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9353,"src":"1768:10:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"}},"id":9513,"indexExpression":{"id":9510,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9441,"src":"1779:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1768:19:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":9514,"indexExpression":{"expression":{"id":9511,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1788:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1792:6:28","memberName":"sender","nodeType":"MemberAccess","src":"1788:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1768:31:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":9515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1802:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1768:38:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9517,"nodeType":"ExpressionStatement","src":"1768:38:28"},{"expression":{"id":9521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1816:23:28","subExpression":{"baseExpression":{"id":9518,"name":"mintedCounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9357,"src":"1816:12:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":9520,"indexExpression":{"id":9519,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9441,"src":"1829:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1816:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9522,"nodeType":"ExpressionStatement","src":"1816:23:28"},{"expression":{"arguments":[{"expression":{"id":9524,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1855:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1859:6:28","memberName":"sender","nodeType":"MemberAccess","src":"1855:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9526,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9441,"src":"1867:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":9527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1876:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},{"hexValue":"","id":9528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1879:2:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":9523,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"1849:5:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,uint256,bytes memory)"}},"id":9529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1849:33:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9530,"nodeType":"ExpressionStatement","src":"1849:33:28"},{"eventCall":{"arguments":[{"expression":{"id":9532,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1908:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1912:6:28","memberName":"sender","nodeType":"MemberAccess","src":"1908:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9534,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9441,"src":"1920:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9531,"name":"NFTClaimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9371,"src":"1897:10:28","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":9535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1897:31:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9536,"nodeType":"EmitStatement","src":"1892:36:28"}]},"functionSelector":"765b1845","id":9538,"implemented":true,"kind":"function","modifiers":[],"name":"claimNFT","nameLocation":"1273:8:28","nodeType":"FunctionDefinition","parameters":{"id":9445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9441,"mutability":"mutable","name":"tokenId","nameLocation":"1290:7:28","nodeType":"VariableDeclaration","scope":9538,"src":"1282:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9440,"name":"uint256","nodeType":"ElementaryTypeName","src":"1282:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9444,"mutability":"mutable","name":"merkleProof","nameLocation":"1318:11:28","nodeType":"VariableDeclaration","scope":9538,"src":"1299:30:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":9442,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1299:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":9443,"nodeType":"ArrayTypeName","src":"1299:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"1281:49:28"},"returnParameters":{"id":9446,"nodeType":"ParameterList","parameters":[],"src":"1340:0:28"},"scope":9729,"src":"1264:671:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[477],"body":{"id":9558,"nodeType":"Block","src":"2015:74:28","statements":[{"expression":{"arguments":[{"arguments":[{"id":9550,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9343,"src":"2048:7:28","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"arguments":[{"id":9552,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9540,"src":"2067:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9551,"name":"_toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9728,"src":"2057:9:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":9553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2057:18:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"2e6a736f6e","id":9554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2077:7:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972","typeString":"literal_string \".json\""},"value":".json"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972","typeString":"literal_string \".json\""}],"expression":{"id":9548,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2031:3:28","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":9549,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2035:12:28","memberName":"encodePacked","nodeType":"MemberAccess","src":"2031:16:28","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":9555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2031:54:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":9547,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2024:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":9546,"name":"string","nodeType":"ElementaryTypeName","src":"2024:6:28","typeDescriptions":{}}},"id":9556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2024:62:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":9545,"id":9557,"nodeType":"Return","src":"2017:69:28"}]},"functionSelector":"0e89341c","id":9559,"implemented":true,"kind":"function","modifiers":[],"name":"uri","nameLocation":"1949:3:28","nodeType":"FunctionDefinition","overrides":{"id":9542,"nodeType":"OverrideSpecifier","overrides":[],"src":"1982:8:28"},"parameters":{"id":9541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9540,"mutability":"mutable","name":"tokenId","nameLocation":"1961:7:28","nodeType":"VariableDeclaration","scope":9559,"src":"1953:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9539,"name":"uint256","nodeType":"ElementaryTypeName","src":"1953:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1952:17:28"},"returnParameters":{"id":9545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9544,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9559,"src":"2000:13:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9543,"name":"string","nodeType":"ElementaryTypeName","src":"2000:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1999:15:28"},"scope":9729,"src":"1940:149:28","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":9579,"nodeType":"Block","src":"2208:70:28","statements":[{"expression":{"components":[{"id":9570,"name":"royaltyRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9363,"src":"2218:16:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9571,"name":"_salePrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9563,"src":"2237:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":9572,"name":"royaltyFraction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9365,"src":"2250:15:28","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"2237:28:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":9574,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2236:30:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":9575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2269:5:28","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"2236:38:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":9577,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2217:58:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}},"functionReturnParameters":9569,"id":9578,"nodeType":"Return","src":"2210:65:28"}]},"functionSelector":"2a55205a","id":9580,"implemented":true,"kind":"function","modifiers":[],"name":"royaltyInfo","nameLocation":"2103:11:28","nodeType":"FunctionDefinition","parameters":{"id":9564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9561,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9580,"src":"2115:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9560,"name":"uint256","nodeType":"ElementaryTypeName","src":"2115:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9563,"mutability":"mutable","name":"_salePrice","nameLocation":"2132:10:28","nodeType":"VariableDeclaration","scope":9580,"src":"2124:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9562,"name":"uint256","nodeType":"ElementaryTypeName","src":"2124:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2114:29:28"},"returnParameters":{"id":9569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9566,"mutability":"mutable","name":"receiver","nameLocation":"2175:8:28","nodeType":"VariableDeclaration","scope":9580,"src":"2167:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9565,"name":"address","nodeType":"ElementaryTypeName","src":"2167:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9568,"mutability":"mutable","name":"royaltyAmount","nameLocation":"2193:13:28","nodeType":"VariableDeclaration","scope":9580,"src":"2185:21:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9567,"name":"uint256","nodeType":"ElementaryTypeName","src":"2185:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2166:41:28"},"scope":9729,"src":"2094:184:28","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":9611,"nodeType":"Block","src":"2358:137:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":9596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9590,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9582,"src":"2368:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"31","id":9591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2379:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2368:12:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9593,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9582,"src":"2384:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"35","id":9594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2395:1:28","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"2384:12:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2368:28:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420746f6b656e4964","id":9597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2398:17:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_47dcc88603f32730c5f1349ee02d9fe469c193c742f38ce12c7b0ba84c66c8a4","typeString":"literal_string \"Invalid tokenId\""},"value":"Invalid tokenId"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47dcc88603f32730c5f1349ee02d9fe469c193c742f38ce12c7b0ba84c66c8a4","typeString":"literal_string \"Invalid tokenId\""}],"id":9589,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2360:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2360:56:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9599,"nodeType":"ExpressionStatement","src":"2360:56:28"},{"expression":{"id":9604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":9600,"name":"merkleRoots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9347,"src":"2418:11:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bytes32_$","typeString":"mapping(uint256 => bytes32)"}},"id":9602,"indexExpression":{"id":9601,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9582,"src":"2430:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2418:20:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9603,"name":"_newRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9584,"src":"2441:8:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2418:31:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":9605,"nodeType":"ExpressionStatement","src":"2418:31:28"},{"eventCall":{"arguments":[{"id":9607,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9582,"src":"2474:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9608,"name":"_newRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9584,"src":"2483:8:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":9606,"name":"MerkleRootUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9377,"src":"2456:17:28","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_bytes32_$returns$__$","typeString":"function (uint256,bytes32)"}},"id":9609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2456:36:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9610,"nodeType":"EmitStatement","src":"2451:41:28"}]},"functionSelector":"18712c21","id":9612,"implemented":true,"kind":"function","modifiers":[{"id":9587,"kind":"modifierInvocation","modifierName":{"id":9586,"name":"onlyOwner","nameLocations":["2348:9:28"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2348:9:28"},"nodeType":"ModifierInvocation","src":"2348:9:28"}],"name":"setMerkleRoot","nameLocation":"2292:13:28","nodeType":"FunctionDefinition","parameters":{"id":9585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9582,"mutability":"mutable","name":"tokenId","nameLocation":"2314:7:28","nodeType":"VariableDeclaration","scope":9612,"src":"2306:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9581,"name":"uint256","nodeType":"ElementaryTypeName","src":"2306:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9584,"mutability":"mutable","name":"_newRoot","nameLocation":"2331:8:28","nodeType":"VariableDeclaration","scope":9612,"src":"2323:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9583,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2323:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2305:35:28"},"returnParameters":{"id":9588,"nodeType":"ParameterList","parameters":[],"src":"2358:0:28"},"scope":9729,"src":"2283:212:28","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":9627,"nodeType":"Block","src":"2564:60:28","statements":[{"expression":{"id":9621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9619,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9343,"src":"2566:7:28","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9620,"name":"_newBaseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9614,"src":"2576:11:28","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2566:21:28","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":9622,"nodeType":"ExpressionStatement","src":"2566:21:28"},{"eventCall":{"arguments":[{"id":9624,"name":"_newBaseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9614,"src":"2609:11:28","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":9623,"name":"BaseURIUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9381,"src":"2594:14:28","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":9625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2594:27:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9626,"nodeType":"EmitStatement","src":"2589:32:28"}]},"functionSelector":"55f804b3","id":9628,"implemented":true,"kind":"function","modifiers":[{"id":9617,"kind":"modifierInvocation","modifierName":{"id":9616,"name":"onlyOwner","nameLocations":["2554:9:28"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2554:9:28"},"nodeType":"ModifierInvocation","src":"2554:9:28"}],"name":"setBaseURI","nameLocation":"2509:10:28","nodeType":"FunctionDefinition","parameters":{"id":9615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9614,"mutability":"mutable","name":"_newBaseURI","nameLocation":"2534:11:28","nodeType":"VariableDeclaration","scope":9628,"src":"2520:25:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9613,"name":"string","nodeType":"ElementaryTypeName","src":"2520:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2519:27:28"},"returnParameters":{"id":9618,"nodeType":"ParameterList","parameters":[],"src":"2564:0:28"},"scope":9729,"src":"2500:124:28","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":9650,"nodeType":"Block","src":"2707:109:28","statements":[{"expression":{"id":9639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9637,"name":"royaltyRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9363,"src":"2709:16:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9638,"name":"_receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9630,"src":"2728:9:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2709:28:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9640,"nodeType":"ExpressionStatement","src":"2709:28:28"},{"expression":{"id":9643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9641,"name":"royaltyFraction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9365,"src":"2739:15:28","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9642,"name":"_fraction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9632,"src":"2757:9:28","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"2739:27:28","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":9644,"nodeType":"ExpressionStatement","src":"2739:27:28"},{"eventCall":{"arguments":[{"id":9646,"name":"_receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9630,"src":"2792:9:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9647,"name":"_fraction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9632,"src":"2803:9:28","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint96","typeString":"uint96"}],"id":9645,"name":"RoyaltyInfoUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9387,"src":"2773:18:28","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint96_$returns$__$","typeString":"function (address,uint96)"}},"id":9648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2773:40:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9649,"nodeType":"EmitStatement","src":"2768:45:28"}]},"functionSelector":"02fa7c47","id":9651,"implemented":true,"kind":"function","modifiers":[{"id":9635,"kind":"modifierInvocation","modifierName":{"id":9634,"name":"onlyOwner","nameLocations":["2697:9:28"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2697:9:28"},"nodeType":"ModifierInvocation","src":"2697:9:28"}],"name":"setRoyaltyInfo","nameLocation":"2638:14:28","nodeType":"FunctionDefinition","parameters":{"id":9633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9630,"mutability":"mutable","name":"_receiver","nameLocation":"2661:9:28","nodeType":"VariableDeclaration","scope":9651,"src":"2653:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9629,"name":"address","nodeType":"ElementaryTypeName","src":"2653:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9632,"mutability":"mutable","name":"_fraction","nameLocation":"2679:9:28","nodeType":"VariableDeclaration","scope":9651,"src":"2672:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":9631,"name":"uint96","nodeType":"ElementaryTypeName","src":"2672:6:28","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"2652:37:28"},"returnParameters":{"id":9636,"nodeType":"ParameterList","parameters":[],"src":"2707:0:28"},"scope":9729,"src":"2629:187:28","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":9727,"nodeType":"Block","src":"2892:336:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9658,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9653,"src":"2906:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":9659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2915:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2906:10:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9663,"nodeType":"IfStatement","src":"2902:26:28","trueBody":{"expression":{"hexValue":"30","id":9661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2925:3:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"functionReturnParameters":9657,"id":9662,"nodeType":"Return","src":"2918:10:28"}},{"assignments":[9665],"declarations":[{"constant":false,"id":9665,"mutability":"mutable","name":"temp","nameLocation":"2946:4:28","nodeType":"VariableDeclaration","scope":9727,"src":"2938:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9664,"name":"uint256","nodeType":"ElementaryTypeName","src":"2938:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9667,"initialValue":{"id":9666,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9653,"src":"2953:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2938:20:28"},{"assignments":[9669],"declarations":[{"constant":false,"id":9669,"mutability":"mutable","name":"digits","nameLocation":"2968:6:28","nodeType":"VariableDeclaration","scope":9727,"src":"2960:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9668,"name":"uint256","nodeType":"ElementaryTypeName","src":"2960:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9670,"nodeType":"VariableDeclarationStatement","src":"2960:14:28"},{"body":{"id":9681,"nodeType":"Block","src":"3002:25:28","statements":[{"expression":{"id":9675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3004:8:28","subExpression":{"id":9674,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9669,"src":"3004:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9676,"nodeType":"ExpressionStatement","src":"3004:8:28"},{"expression":{"id":9679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9677,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9665,"src":"3014:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":9678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3022:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"3014:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9680,"nodeType":"ExpressionStatement","src":"3014:10:28"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9671,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9665,"src":"2991:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":9672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2999:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2991:9:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9682,"nodeType":"WhileStatement","src":"2984:43:28"},{"assignments":[9684],"declarations":[{"constant":false,"id":9684,"mutability":"mutable","name":"buffer","nameLocation":"3049:6:28","nodeType":"VariableDeclaration","scope":9727,"src":"3036:19:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9683,"name":"bytes","nodeType":"ElementaryTypeName","src":"3036:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":9689,"initialValue":{"arguments":[{"id":9687,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9669,"src":"3068:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9686,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3058:9:28","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":9685,"name":"bytes","nodeType":"ElementaryTypeName","src":"3062:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":9688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3058:17:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3036:39:28"},{"body":{"id":9720,"nodeType":"Block","src":"3104:87:28","statements":[{"expression":{"id":9695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9693,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9669,"src":"3106:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":9694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3116:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3106:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9696,"nodeType":"ExpressionStatement","src":"3106:11:28"},{"expression":{"id":9714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":9697,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9684,"src":"3119:6:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":9699,"indexExpression":{"id":9698,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9669,"src":"3126:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3119:14:28","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3438","id":9704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3149:2:28","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9707,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9653,"src":"3162:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"3130","id":9708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3170:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"3162:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9706,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3154:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":9705,"name":"uint256","nodeType":"ElementaryTypeName","src":"3154:7:28","typeDescriptions":{}}},"id":9710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3154:19:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3149:24:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9703,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3143:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":9702,"name":"uint8","nodeType":"ElementaryTypeName","src":"3143:5:28","typeDescriptions":{}}},"id":9712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3143:31:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":9701,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3136:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":9700,"name":"bytes1","nodeType":"ElementaryTypeName","src":"3136:6:28","typeDescriptions":{}}},"id":9713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3136:39:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"3119:56:28","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":9715,"nodeType":"ExpressionStatement","src":"3119:56:28"},{"expression":{"id":9718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9716,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9653,"src":"3177:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":9717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3186:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"3177:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9719,"nodeType":"ExpressionStatement","src":"3177:11:28"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9690,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9653,"src":"3092:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":9691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3101:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3092:10:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9721,"nodeType":"WhileStatement","src":"3085:106:28"},{"expression":{"arguments":[{"id":9724,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9684,"src":"3214:6:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":9723,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3207:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":9722,"name":"string","nodeType":"ElementaryTypeName","src":"3207:6:28","typeDescriptions":{}}},"id":9725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3207:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":9657,"id":9726,"nodeType":"Return","src":"3200:21:28"}]},"id":9728,"implemented":true,"kind":"function","modifiers":[],"name":"_toString","nameLocation":"2830:9:28","nodeType":"FunctionDefinition","parameters":{"id":9654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9653,"mutability":"mutable","name":"value","nameLocation":"2848:5:28","nodeType":"VariableDeclaration","scope":9728,"src":"2840:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9652,"name":"uint256","nodeType":"ElementaryTypeName","src":"2840:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2839:15:28"},"returnParameters":{"id":9657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9656,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9728,"src":"2877:13:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9655,"name":"string","nodeType":"ElementaryTypeName","src":"2877:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2876:15:28"},"scope":9729,"src":"2821:407:28","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":9730,"src":"239:2991:28","usedErrors":[13,18,339,344,349,356,361,366,373],"usedEvents":[24,1311,1326,1335,1342,9371,9377,9381,9387]}],"src":"32:3199:28"},"id":28},"contracts/Staking.sol":{"ast":{"absolutePath":"contracts/Staking.sol","exportedSymbols":{"Context":[3749],"IERC1363":[229],"IERC20":[2219],"Ownable":[147],"ReentrancyGuard":[3870],"SafeERC20":[2709],"Staking":[10149]},"id":10150,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":9731,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:29"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":9732,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10150,"sourceUnit":148,"src":"57:52:29","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":9733,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10150,"sourceUnit":3871,"src":"110:59:29","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":9734,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10150,"sourceUnit":2710,"src":"170:65:29","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":9735,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10150,"sourceUnit":2220,"src":"236:56:29","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":9736,"name":"Ownable","nameLocations":["313:7:29"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"313:7:29"},"id":9737,"nodeType":"InheritanceSpecifier","src":"313:7:29"},{"baseName":{"id":9738,"name":"ReentrancyGuard","nameLocations":["322:15:29"],"nodeType":"IdentifierPath","referencedDeclaration":3870,"src":"322:15:29"},"id":9739,"nodeType":"InheritanceSpecifier","src":"322:15:29"}],"canonicalName":"Staking","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":10149,"linearizedBaseContracts":[10149,3870,147,3749],"name":"Staking","nameLocation":"302:7:29","nodeType":"ContractDefinition","nodes":[{"global":false,"id":9743,"libraryName":{"id":9740,"name":"SafeERC20","nameLocations":["350:9:29"],"nodeType":"IdentifierPath","referencedDeclaration":2709,"src":"350:9:29"},"nodeType":"UsingForDirective","src":"344:27:29","typeName":{"id":9742,"nodeType":"UserDefinedTypeName","pathNode":{"id":9741,"name":"IERC20","nameLocations":["364:6:29"],"nodeType":"IdentifierPath","referencedDeclaration":2219,"src":"364:6:29"},"referencedDeclaration":2219,"src":"364:6:29","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2219","typeString":"contract IERC20"}}},{"canonicalName":"Staking.StakerInfo","id":9752,"members":[{"constant":false,"id":9745,"mutability":"mutable","name":"amount","nameLocation":"404:6:29","nodeType":"VariableDeclaration","scope":9752,"src":"396:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9744,"name":"uint256","nodeType":"ElementaryTypeName","src":"396:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9747,"mutability":"mutable","name":"since","nameLocation":"420:5:29","nodeType":"VariableDeclaration","scope":9752,"src":"412:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9746,"name":"uint256","nodeType":"ElementaryTypeName","src":"412:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9749,"mutability":"mutable","name":"unlocksOn","nameLocation":"435:9:29","nodeType":"VariableDeclaration","scope":9752,"src":"427:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9748,"name":"uint256","nodeType":"ElementaryTypeName","src":"427:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9751,"mutability":"mutable","name":"isLpStaker","nameLocation":"451:10:29","nodeType":"VariableDeclaration","scope":9752,"src":"446:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9750,"name":"bool","nodeType":"ElementaryTypeName","src":"446:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"StakerInfo","nameLocation":"383:10:29","nodeType":"StructDefinition","scope":10149,"src":"376:88:29","visibility":"public"},{"constant":false,"functionSelector":"70af9b14","id":9755,"mutability":"immutable","name":"F_TOKEN","nameLocation":"493:7:29","nodeType":"VariableDeclaration","scope":10149,"src":"469:31:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2219","typeString":"contract IERC20"},"typeName":{"id":9754,"nodeType":"UserDefinedTypeName","pathNode":{"id":9753,"name":"IERC20","nameLocations":["469:6:29"],"nodeType":"IdentifierPath","referencedDeclaration":2219,"src":"469:6:29"},"referencedDeclaration":2219,"src":"469:6:29","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2219","typeString":"contract IERC20"}},"visibility":"public"},{"constant":false,"functionSelector":"817b1cd2","id":9757,"mutability":"mutable","name":"totalStaked","nameLocation":"521:11:29","nodeType":"VariableDeclaration","scope":10149,"src":"506:26:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9756,"name":"uint256","nodeType":"ElementaryTypeName","src":"506:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":true,"functionSelector":"f6c4dd8d","id":9764,"mutability":"constant","name":"STAKING_HARD_CAP","nameLocation":"562:16:29","nodeType":"VariableDeclaration","scope":10149,"src":"538:61:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9758,"name":"uint256","nodeType":"ElementaryTypeName","src":"538:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000_by_1","typeString":"int_const 100000000000000000000000000"},"id":9763,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"313030303030303030","id":9759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"581:9:29","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"value":"100000000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":9762,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":9760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"593:2:29","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":9761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"597:2:29","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"593:6:29","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"581:18:29","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000_by_1","typeString":"int_const 100000000000000000000000000"}},"visibility":"public"},{"constant":false,"functionSelector":"9168ae72","id":9769,"mutability":"mutable","name":"stakers","nameLocation":"643:7:29","nodeType":"VariableDeclaration","scope":10149,"src":"605:45:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_StakerInfo_$9752_storage_$","typeString":"mapping(address => struct Staking.StakerInfo)"},"typeName":{"id":9768,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":9765,"name":"address","nodeType":"ElementaryTypeName","src":"613:7:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"605:30:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_StakerInfo_$9752_storage_$","typeString":"mapping(address => struct Staking.StakerInfo)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":9767,"nodeType":"UserDefinedTypeName","pathNode":{"id":9766,"name":"StakerInfo","nameLocations":["624:10:29"],"nodeType":"IdentifierPath","referencedDeclaration":9752,"src":"624:10:29"},"referencedDeclaration":9752,"src":"624:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_StakerInfo_$9752_storage_ptr","typeString":"struct Staking.StakerInfo"}}},"visibility":"public"},{"constant":false,"functionSelector":"c2277742","id":9773,"mutability":"mutable","name":"isLpStaker","nameLocation":"688:10:29","nodeType":"VariableDeclaration","scope":10149,"src":"656:42:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":9772,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":9770,"name":"address","nodeType":"ElementaryTypeName","src":"664:7:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"656:24:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":9771,"name":"bool","nodeType":"ElementaryTypeName","src":"675:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"ba85c259","id":9781,"mutability":"mutable","name":"normalRates","nameLocation":"721:11:29","nodeType":"VariableDeclaration","scope":10149,"src":"704:50:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[]"},"typeName":{"baseType":{"id":9774,"name":"uint256","nodeType":"ElementaryTypeName","src":"704:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9775,"nodeType":"ArrayTypeName","src":"704:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":{"components":[{"hexValue":"3530","id":9776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"736:2:29","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},{"hexValue":"313030","id":9777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"740:3:29","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},{"hexValue":"323030","id":9778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"745:3:29","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"hexValue":"333030","id":9779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"750:3:29","typeDescriptions":{"typeIdentifier":"t_rational_300_by_1","typeString":"int_const 300"},"value":"300"}],"id":9780,"isConstant":false,"isInlineArray":true,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"735:19:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint16_$4_memory_ptr","typeString":"uint16[4] memory"}},"visibility":"public"},{"constant":false,"functionSelector":"f3aab104","id":9789,"mutability":"mutable","name":"lpRates","nameLocation":"777:7:29","nodeType":"VariableDeclaration","scope":10149,"src":"760:47:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[]"},"typeName":{"baseType":{"id":9782,"name":"uint256","nodeType":"ElementaryTypeName","src":"760:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9783,"nodeType":"ArrayTypeName","src":"760:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":{"components":[{"hexValue":"313030","id":9784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"788:3:29","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},{"hexValue":"323030","id":9785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"793:3:29","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"hexValue":"343030","id":9786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"798:3:29","typeDescriptions":{"typeIdentifier":"t_rational_400_by_1","typeString":"int_const 400"},"value":"400"},{"hexValue":"363030","id":9787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"803:3:29","typeDescriptions":{"typeIdentifier":"t_rational_600_by_1","typeString":"int_const 600"},"value":"600"}],"id":9788,"isConstant":false,"isInlineArray":true,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"787:20:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint16_$4_memory_ptr","typeString":"uint16[4] memory"}},"visibility":"public"},{"anonymous":false,"eventSelector":"1449c6dd7851abc30abf37f57715f492010519147cc2652fbc38202c18a6ee90","id":9797,"name":"Staked","nameLocation":"819:6:29","nodeType":"EventDefinition","parameters":{"id":9796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9791,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"842:4:29","nodeType":"VariableDeclaration","scope":9797,"src":"826:20:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9790,"name":"address","nodeType":"ElementaryTypeName","src":"826:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9793,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"856:6:29","nodeType":"VariableDeclaration","scope":9797,"src":"848:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9792,"name":"uint256","nodeType":"ElementaryTypeName","src":"848:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9795,"indexed":false,"mutability":"mutable","name":"unlocksOn","nameLocation":"872:9:29","nodeType":"VariableDeclaration","scope":9797,"src":"864:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9794,"name":"uint256","nodeType":"ElementaryTypeName","src":"864:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"825:57:29"},"src":"813:70:29"},{"anonymous":false,"eventSelector":"7fc4727e062e336010f2c282598ef5f14facb3de68cf8195c2f23e1454b2b74e","id":9805,"name":"Unstaked","nameLocation":"894:8:29","nodeType":"EventDefinition","parameters":{"id":9804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9799,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"919:4:29","nodeType":"VariableDeclaration","scope":9805,"src":"903:20:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9798,"name":"address","nodeType":"ElementaryTypeName","src":"903:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9801,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"933:6:29","nodeType":"VariableDeclaration","scope":9805,"src":"925:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9800,"name":"uint256","nodeType":"ElementaryTypeName","src":"925:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9803,"indexed":false,"mutability":"mutable","name":"reward","nameLocation":"949:6:29","nodeType":"VariableDeclaration","scope":9805,"src":"941:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9802,"name":"uint256","nodeType":"ElementaryTypeName","src":"941:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"902:54:29"},"src":"888:69:29"},{"anonymous":false,"eventSelector":"479b155fd9ee4e038b5bb63a809c961882d5d8c138a03b33c7dc81c35b77975d","id":9811,"name":"LpStatusChanged","nameLocation":"968:15:29","nodeType":"EventDefinition","parameters":{"id":9810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9807,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"1000:4:29","nodeType":"VariableDeclaration","scope":9811,"src":"984:20:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9806,"name":"address","nodeType":"ElementaryTypeName","src":"984:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9809,"indexed":false,"mutability":"mutable","name":"isLp","nameLocation":"1011:4:29","nodeType":"VariableDeclaration","scope":9811,"src":"1006:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9808,"name":"bool","nodeType":"ElementaryTypeName","src":"1006:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"983:33:29"},"src":"962:55:29"},{"body":{"id":9827,"nodeType":"Block","src":"1104:37:29","statements":[{"expression":{"id":9825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9821,"name":"F_TOKEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9755,"src":"1106:7:29","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2219","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9823,"name":"_fTokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9813,"src":"1123:14:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9822,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2219,"src":"1116:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2219_$","typeString":"type(contract IERC20)"}},"id":9824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1116:22:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2219","typeString":"contract IERC20"}},"src":"1106:32:29","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2219","typeString":"contract IERC20"}},"id":9826,"nodeType":"ExpressionStatement","src":"1106:32:29"}]},"id":9828,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":9818,"name":"_initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9815,"src":"1089:13:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":9819,"kind":"baseConstructorSpecifier","modifierName":{"id":9817,"name":"Ownable","nameLocations":["1081:7:29"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"1081:7:29"},"nodeType":"ModifierInvocation","src":"1081:22:29"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":9816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9813,"mutability":"mutable","name":"_fTokenAddress","nameLocation":"1042:14:29","nodeType":"VariableDeclaration","scope":9828,"src":"1034:22:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9812,"name":"address","nodeType":"ElementaryTypeName","src":"1034:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9815,"mutability":"mutable","name":"_initialOwner","nameLocation":"1066:13:29","nodeType":"VariableDeclaration","scope":9828,"src":"1058:21:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9814,"name":"address","nodeType":"ElementaryTypeName","src":"1058:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1033:47:29"},"returnParameters":{"id":9820,"nodeType":"ParameterList","parameters":[],"src":"1104:0:29"},"scope":10149,"src":"1022:119:29","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":9923,"nodeType":"Block","src":"1223:660:29","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9838,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9830,"src":"1241:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":9839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1250:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1241:10:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5374616b696e673a20616d6f756e74203e2030","id":9841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1253:21:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_0690a8e4b631531730d9bfeb0fa4fd8225ec55de47e7b362503d980527c80ae5","typeString":"literal_string \"Staking: amount > 0\""},"value":"Staking: amount > 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0690a8e4b631531730d9bfeb0fa4fd8225ec55de47e7b362503d980527c80ae5","typeString":"literal_string \"Staking: amount > 0\""}],"id":9837,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1233:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1233:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9843,"nodeType":"ExpressionStatement","src":"1233:42:29"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":9845,"name":"stakers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9769,"src":"1293:7:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_StakerInfo_$9752_storage_$","typeString":"mapping(address => struct Staking.StakerInfo storage ref)"}},"id":9848,"indexExpression":{"expression":{"id":9846,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1301:3:29","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1305:6:29","memberName":"sender","nodeType":"MemberAccess","src":"1301:10:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1293:19:29","typeDescriptions":{"typeIdentifier":"t_struct$_StakerInfo_$9752_storage","typeString":"struct Staking.StakerInfo storage ref"}},"id":9849,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1313:6:29","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":9745,"src":"1293:26:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":9850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1323:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1293:31:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5374616b696e673a20616c7265616479207374616b696e67","id":9852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1326:26:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_0882957523f77c6ee780235eac6554fa0cf1a717454885e14d8683aa7e8ad9ba","typeString":"literal_string \"Staking: already staking\""},"value":"Staking: already staking"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0882957523f77c6ee780235eac6554fa0cf1a717454885e14d8683aa7e8ad9ba","typeString":"literal_string \"Staking: already staking\""}],"id":9844,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1285:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1285:68:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9854,"nodeType":"ExpressionStatement","src":"1285:68:29"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9856,"name":"totalStaked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9757,"src":"1371:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":9857,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9830,"src":"1385:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1371:20:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":9859,"name":"STAKING_HARD_CAP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9764,"src":"1395:16:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1371:40:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5374616b696e673a2068617264206361702072656163686564","id":9861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1413:27:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_97489df0d9f2859eb1564424a1f8f89e238e19e9f094b93d8f3720f732307f8c","typeString":"literal_string \"Staking: hard cap reached\""},"value":"Staking: hard cap reached"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_97489df0d9f2859eb1564424a1f8f89e238e19e9f094b93d8f3720f732307f8c","typeString":"literal_string \"Staking: hard cap reached\""}],"id":9855,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1363:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1363:78:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9863,"nodeType":"ExpressionStatement","src":"1363:78:29"},{"assignments":[9865],"declarations":[{"constant":false,"id":9865,"mutability":"mutable","name":"unlockDuration","nameLocation":"1459:14:29","nodeType":"VariableDeclaration","scope":9923,"src":"1451:22:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9864,"name":"uint256","nodeType":"ElementaryTypeName","src":"1451:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9869,"initialValue":{"arguments":[{"id":9867,"name":"durationInDays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9832,"src":"1498:14:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9866,"name":"_getDurationInSeconds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10148,"src":"1476:21:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":9868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1476:37:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1451:62:29"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9871,"name":"unlockDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9865,"src":"1531:14:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":9872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1548:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1531:18:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5374616b696e673a20696e76616c6964206475726174696f6e","id":9874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1551:27:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_0a4dcbcb5feccfe4ca77b5300fda7ccefc484148af5ee5dc5213adf60bbaf685","typeString":"literal_string \"Staking: invalid duration\""},"value":"Staking: invalid duration"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0a4dcbcb5feccfe4ca77b5300fda7ccefc484148af5ee5dc5213adf60bbaf685","typeString":"literal_string \"Staking: invalid duration\""}],"id":9870,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1523:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1523:56:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9876,"nodeType":"ExpressionStatement","src":"1523:56:29"},{"expression":{"id":9879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9877,"name":"totalStaked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9757,"src":"1589:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":9878,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9830,"src":"1604:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1589:21:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9880,"nodeType":"ExpressionStatement","src":"1589:21:29"},{"expression":{"id":9898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":9881,"name":"stakers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9769,"src":"1620:7:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_StakerInfo_$9752_storage_$","typeString":"mapping(address => struct Staking.StakerInfo storage ref)"}},"id":9884,"indexExpression":{"expression":{"id":9882,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1628:3:29","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1632:6:29","memberName":"sender","nodeType":"MemberAccess","src":"1628:10:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1620:19:29","typeDescriptions":{"typeIdentifier":"t_struct$_StakerInfo_$9752_storage","typeString":"struct Staking.StakerInfo storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9886,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9830,"src":"1653:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":9887,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1661:5:29","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1667:9:29","memberName":"timestamp","nodeType":"MemberAccess","src":"1661:15:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9889,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1678:5:29","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1684:9:29","memberName":"timestamp","nodeType":"MemberAccess","src":"1678:15:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":9891,"name":"unlockDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9865,"src":"1696:14:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1678:32:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":9893,"name":"isLpStaker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9773,"src":"1712:10:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":9896,"indexExpression":{"expression":{"id":9894,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1723:3:29","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1727:6:29","memberName":"sender","nodeType":"MemberAccess","src":"1723:10:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1712:22:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":9885,"name":"StakerInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9752,"src":"1642:10:29","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_StakerInfo_$9752_storage_ptr_$","typeString":"type(struct Staking.StakerInfo storage pointer)"}},"id":9897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1642:93:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StakerInfo_$9752_memory_ptr","typeString":"struct Staking.StakerInfo memory"}},"src":"1620:115:29","typeDescriptions":{"typeIdentifier":"t_struct$_StakerInfo_$9752_storage","typeString":"struct Staking.StakerInfo storage ref"}},"id":9899,"nodeType":"ExpressionStatement","src":"1620:115:29"},{"expression":{"arguments":[{"expression":{"id":9903,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1770:3:29","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1774:6:29","memberName":"sender","nodeType":"MemberAccess","src":"1770:10:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":9907,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1790:4:29","typeDescriptions":{"typeIdentifier":"t_contract$_Staking_$10149","typeString":"contract Staking"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Staking_$10149","typeString":"contract Staking"}],"id":9906,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1782:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9905,"name":"address","nodeType":"ElementaryTypeName","src":"1782:7:29","typeDescriptions":{}}},"id":9908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1782:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9909,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9830,"src":"1797:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9900,"name":"F_TOKEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9755,"src":"1745:7:29","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2219","typeString":"contract IERC20"}},"id":9902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1753:16:29","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":2317,"src":"1745:24:29","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$2219_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$2219_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":9910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1745:59:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9911,"nodeType":"ExpressionStatement","src":"1745:59:29"},{"eventCall":{"arguments":[{"expression":{"id":9913,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1826:3:29","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1830:6:29","memberName":"sender","nodeType":"MemberAccess","src":"1826:10:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9915,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9830,"src":"1838:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"baseExpression":{"id":9916,"name":"stakers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9769,"src":"1846:7:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_StakerInfo_$9752_storage_$","typeString":"mapping(address => struct Staking.StakerInfo storage ref)"}},"id":9919,"indexExpression":{"expression":{"id":9917,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1854:3:29","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1858:6:29","memberName":"sender","nodeType":"MemberAccess","src":"1854:10:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1846:19:29","typeDescriptions":{"typeIdentifier":"t_struct$_StakerInfo_$9752_storage","typeString":"struct Staking.StakerInfo storage ref"}},"id":9920,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1866:9:29","memberName":"unlocksOn","nodeType":"MemberAccess","referencedDeclaration":9749,"src":"1846:29:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9912,"name":"Staked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9797,"src":"1819:6:29","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":9921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1819:57:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9922,"nodeType":"EmitStatement","src":"1814:62:29"}]},"functionSelector":"7b0472f0","id":9924,"implemented":true,"kind":"function","modifiers":[{"id":9835,"kind":"modifierInvocation","modifierName":{"id":9834,"name":"nonReentrant","nameLocations":["1210:12:29"],"nodeType":"IdentifierPath","referencedDeclaration":3834,"src":"1210:12:29"},"nodeType":"ModifierInvocation","src":"1210:12:29"}],"name":"stake","nameLocation":"1155:5:29","nodeType":"FunctionDefinition","parameters":{"id":9833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9830,"mutability":"mutable","name":"amount","nameLocation":"1169:6:29","nodeType":"VariableDeclaration","scope":9924,"src":"1161:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9829,"name":"uint256","nodeType":"ElementaryTypeName","src":"1161:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9832,"mutability":"mutable","name":"durationInDays","nameLocation":"1185:14:29","nodeType":"VariableDeclaration","scope":9924,"src":"1177:22:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9831,"name":"uint256","nodeType":"ElementaryTypeName","src":"1177:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1160:40:29"},"returnParameters":{"id":9836,"nodeType":"ParameterList","parameters":[],"src":"1223:0:29"},"scope":10149,"src":"1146:737:29","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9995,"nodeType":"Block","src":"1929:510:29","statements":[{"assignments":[9931],"declarations":[{"constant":false,"id":9931,"mutability":"mutable","name":"staker","nameLocation":"1958:6:29","nodeType":"VariableDeclaration","scope":9995,"src":"1939:25:29","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StakerInfo_$9752_storage_ptr","typeString":"struct Staking.StakerInfo"},"typeName":{"id":9930,"nodeType":"UserDefinedTypeName","pathNode":{"id":9929,"name":"StakerInfo","nameLocations":["1939:10:29"],"nodeType":"IdentifierPath","referencedDeclaration":9752,"src":"1939:10:29"},"referencedDeclaration":9752,"src":"1939:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_StakerInfo_$9752_storage_ptr","typeString":"struct Staking.StakerInfo"}},"visibility":"internal"}],"id":9936,"initialValue":{"baseExpression":{"id":9932,"name":"stakers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9769,"src":"1967:7:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_StakerInfo_$9752_storage_$","typeString":"mapping(address => struct Staking.StakerInfo storage ref)"}},"id":9935,"indexExpression":{"expression":{"id":9933,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1975:3:29","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1979:6:29","memberName":"sender","nodeType":"MemberAccess","src":"1975:10:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1967:19:29","typeDescriptions":{"typeIdentifier":"t_struct$_StakerInfo_$9752_storage","typeString":"struct Staking.StakerInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1939:47:29"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9938,"name":"staker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9931,"src":"2004:6:29","typeDescriptions":{"typeIdentifier":"t_struct$_StakerInfo_$9752_storage_ptr","typeString":"struct Staking.StakerInfo storage pointer"}},"id":9939,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2011:6:29","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":9745,"src":"2004:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":9940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2020:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2004:17:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"556e7374616b696e673a206e6f74207374616b696e67","id":9942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2023:24:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_6a141b6b026e8a2783b9b06b8696d05320243b7a657586fcf4b506358189df95","typeString":"literal_string \"Unstaking: not staking\""},"value":"Unstaking: not staking"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6a141b6b026e8a2783b9b06b8696d05320243b7a657586fcf4b506358189df95","typeString":"literal_string \"Unstaking: not staking\""}],"id":9937,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1996:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1996:52:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9944,"nodeType":"ExpressionStatement","src":"1996:52:29"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9946,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2066:5:29","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2072:9:29","memberName":"timestamp","nodeType":"MemberAccess","src":"2066:15:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":9948,"name":"staker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9931,"src":"2085:6:29","typeDescriptions":{"typeIdentifier":"t_struct$_StakerInfo_$9752_storage_ptr","typeString":"struct Staking.StakerInfo storage pointer"}},"id":9949,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2092:9:29","memberName":"unlocksOn","nodeType":"MemberAccess","referencedDeclaration":9749,"src":"2085:16:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2066:35:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"556e7374616b696e673a206c6f636b20706572696f64206e6f74206f766572","id":9951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2103:33:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_6dbb76120780ac290fd31e593804dd93e5459ea534b2464ae98ba428bdfd31d3","typeString":"literal_string \"Unstaking: lock period not over\""},"value":"Unstaking: lock period not over"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6dbb76120780ac290fd31e593804dd93e5459ea534b2464ae98ba428bdfd31d3","typeString":"literal_string \"Unstaking: lock period not over\""}],"id":9945,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2058:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2058:79:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9953,"nodeType":"ExpressionStatement","src":"2058:79:29"},{"assignments":[9955],"declarations":[{"constant":false,"id":9955,"mutability":"mutable","name":"reward","nameLocation":"2155:6:29","nodeType":"VariableDeclaration","scope":9995,"src":"2147:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9954,"name":"uint256","nodeType":"ElementaryTypeName","src":"2147:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9960,"initialValue":{"arguments":[{"expression":{"id":9957,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2180:3:29","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2184:6:29","memberName":"sender","nodeType":"MemberAccess","src":"2180:10:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9956,"name":"calculateReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10114,"src":"2164:15:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":9959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2164:27:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2147:44:29"},{"assignments":[9962],"declarations":[{"constant":false,"id":9962,"mutability":"mutable","name":"totalAmount","nameLocation":"2209:11:29","nodeType":"VariableDeclaration","scope":9995,"src":"2201:19:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9961,"name":"uint256","nodeType":"ElementaryTypeName","src":"2201:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9967,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9963,"name":"staker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9931,"src":"2223:6:29","typeDescriptions":{"typeIdentifier":"t_struct$_StakerInfo_$9752_storage_ptr","typeString":"struct Staking.StakerInfo storage pointer"}},"id":9964,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2230:6:29","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":9745,"src":"2223:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":9965,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9955,"src":"2239:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2223:22:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2201:44:29"},{"expression":{"id":9971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9968,"name":"totalStaked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9757,"src":"2255:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"expression":{"id":9969,"name":"staker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9931,"src":"2270:6:29","typeDescriptions":{"typeIdentifier":"t_struct$_StakerInfo_$9752_storage_ptr","typeString":"struct Staking.StakerInfo storage pointer"}},"id":9970,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2277:6:29","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":9745,"src":"2270:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2255:28:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9972,"nodeType":"ExpressionStatement","src":"2255:28:29"},{"expression":{"id":9977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"2293:26:29","subExpression":{"baseExpression":{"id":9973,"name":"stakers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9769,"src":"2300:7:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_StakerInfo_$9752_storage_$","typeString":"mapping(address => struct Staking.StakerInfo storage ref)"}},"id":9976,"indexExpression":{"expression":{"id":9974,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2308:3:29","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2312:6:29","memberName":"sender","nodeType":"MemberAccess","src":"2308:10:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2300:19:29","typeDescriptions":{"typeIdentifier":"t_struct$_StakerInfo_$9752_storage","typeString":"struct Staking.StakerInfo storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9978,"nodeType":"ExpressionStatement","src":"2293:26:29"},{"expression":{"arguments":[{"expression":{"id":9982,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2350:3:29","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2354:6:29","memberName":"sender","nodeType":"MemberAccess","src":"2350:10:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9984,"name":"totalAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9962,"src":"2362:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9979,"name":"F_TOKEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9755,"src":"2329:7:29","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2219","typeString":"contract IERC20"}},"id":9981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2337:12:29","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":2290,"src":"2329:20:29","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$2219_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$2219_$","typeString":"function (contract IERC20,address,uint256)"}},"id":9985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2329:45:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9986,"nodeType":"ExpressionStatement","src":"2329:45:29"},{"eventCall":{"arguments":[{"expression":{"id":9988,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2398:3:29","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2402:6:29","memberName":"sender","nodeType":"MemberAccess","src":"2398:10:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":9990,"name":"staker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9931,"src":"2410:6:29","typeDescriptions":{"typeIdentifier":"t_struct$_StakerInfo_$9752_storage_ptr","typeString":"struct Staking.StakerInfo storage pointer"}},"id":9991,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2417:6:29","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":9745,"src":"2410:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9992,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9955,"src":"2425:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9987,"name":"Unstaked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9805,"src":"2389:8:29","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":9993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2389:43:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9994,"nodeType":"EmitStatement","src":"2384:48:29"}]},"functionSelector":"2def6620","id":9996,"implemented":true,"kind":"function","modifiers":[{"id":9927,"kind":"modifierInvocation","modifierName":{"id":9926,"name":"nonReentrant","nameLocations":["1916:12:29"],"nodeType":"IdentifierPath","referencedDeclaration":3834,"src":"1916:12:29"},"nodeType":"ModifierInvocation","src":"1916:12:29"}],"name":"unstake","nameLocation":"1897:7:29","nodeType":"FunctionDefinition","parameters":{"id":9925,"nodeType":"ParameterList","parameters":[],"src":"1904:2:29"},"returnParameters":{"id":9928,"nodeType":"ParameterList","parameters":[],"src":"1929:0:29"},"scope":10149,"src":"1888:551:29","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10016,"nodeType":"Block","src":"2507:62:29","statements":[{"expression":{"id":10009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":10005,"name":"isLpStaker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9773,"src":"2509:10:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":10007,"indexExpression":{"id":10006,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9998,"src":"2520:4:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2509:16:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10008,"name":"isLp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10000,"src":"2528:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2509:23:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10010,"nodeType":"ExpressionStatement","src":"2509:23:29"},{"eventCall":{"arguments":[{"id":10012,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9998,"src":"2555:4:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10013,"name":"isLp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10000,"src":"2561:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":10011,"name":"LpStatusChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9811,"src":"2539:15:29","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$","typeString":"function (address,bool)"}},"id":10014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2539:27:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10015,"nodeType":"EmitStatement","src":"2534:32:29"}]},"functionSelector":"d7e751ba","id":10017,"implemented":true,"kind":"function","modifiers":[{"id":10003,"kind":"modifierInvocation","modifierName":{"id":10002,"name":"onlyOwner","nameLocations":["2497:9:29"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2497:9:29"},"nodeType":"ModifierInvocation","src":"2497:9:29"}],"name":"setLpStaker","nameLocation":"2453:11:29","nodeType":"FunctionDefinition","parameters":{"id":10001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9998,"mutability":"mutable","name":"user","nameLocation":"2473:4:29","nodeType":"VariableDeclaration","scope":10017,"src":"2465:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9997,"name":"address","nodeType":"ElementaryTypeName","src":"2465:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10000,"mutability":"mutable","name":"isLp","nameLocation":"2484:4:29","nodeType":"VariableDeclaration","scope":10017,"src":"2479:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9999,"name":"bool","nodeType":"ElementaryTypeName","src":"2479:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2464:25:29"},"returnParameters":{"id":10004,"nodeType":"ParameterList","parameters":[],"src":"2507:0:29"},"scope":10149,"src":"2444:125:29","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":10113,"nodeType":"Block","src":"2652:595:29","statements":[{"assignments":[10026],"declarations":[{"constant":false,"id":10026,"mutability":"mutable","name":"staker","nameLocation":"2680:6:29","nodeType":"VariableDeclaration","scope":10113,"src":"2662:24:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_StakerInfo_$9752_memory_ptr","typeString":"struct Staking.StakerInfo"},"typeName":{"id":10025,"nodeType":"UserDefinedTypeName","pathNode":{"id":10024,"name":"StakerInfo","nameLocations":["2662:10:29"],"nodeType":"IdentifierPath","referencedDeclaration":9752,"src":"2662:10:29"},"referencedDeclaration":9752,"src":"2662:10:29","typeDescriptions":{"typeIdentifier":"t_struct$_StakerInfo_$9752_storage_ptr","typeString":"struct Staking.StakerInfo"}},"visibility":"internal"}],"id":10030,"initialValue":{"baseExpression":{"id":10027,"name":"stakers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9769,"src":"2689:7:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_StakerInfo_$9752_storage_$","typeString":"mapping(address => struct Staking.StakerInfo storage ref)"}},"id":10029,"indexExpression":{"id":10028,"name":"stakerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10019,"src":"2697:13:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2689:22:29","typeDescriptions":{"typeIdentifier":"t_struct$_StakerInfo_$9752_storage","typeString":"struct Staking.StakerInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2662:49:29"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10031,"name":"staker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10026,"src":"2725:6:29","typeDescriptions":{"typeIdentifier":"t_struct$_StakerInfo_$9752_memory_ptr","typeString":"struct Staking.StakerInfo memory"}},"id":10032,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2732:6:29","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":9745,"src":"2725:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":10033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2742:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2725:18:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10037,"nodeType":"IfStatement","src":"2721:32:29","trueBody":{"expression":{"hexValue":"30","id":10035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2752:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":10023,"id":10036,"nodeType":"Return","src":"2745:8:29"}},{"assignments":[10039],"declarations":[{"constant":false,"id":10039,"mutability":"mutable","name":"stakingDuration","nameLocation":"2771:15:29","nodeType":"VariableDeclaration","scope":10113,"src":"2763:23:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10038,"name":"uint256","nodeType":"ElementaryTypeName","src":"2763:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10045,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10040,"name":"staker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10026,"src":"2789:6:29","typeDescriptions":{"typeIdentifier":"t_struct$_StakerInfo_$9752_memory_ptr","typeString":"struct Staking.StakerInfo memory"}},"id":10041,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2796:9:29","memberName":"unlocksOn","nodeType":"MemberAccess","referencedDeclaration":9749,"src":"2789:16:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":10042,"name":"staker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10026,"src":"2808:6:29","typeDescriptions":{"typeIdentifier":"t_struct$_StakerInfo_$9752_memory_ptr","typeString":"struct Staking.StakerInfo memory"}},"id":10043,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2815:5:29","memberName":"since","nodeType":"MemberAccess","referencedDeclaration":9747,"src":"2808:12:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2789:31:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2763:57:29"},{"assignments":[10050],"declarations":[{"constant":false,"id":10050,"mutability":"mutable","name":"rates","nameLocation":"2847:5:29","nodeType":"VariableDeclaration","scope":10113,"src":"2830:22:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":10048,"name":"uint256","nodeType":"ElementaryTypeName","src":"2830:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10049,"nodeType":"ArrayTypeName","src":"2830:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":10056,"initialValue":{"condition":{"expression":{"id":10051,"name":"staker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10026,"src":"2855:6:29","typeDescriptions":{"typeIdentifier":"t_struct$_StakerInfo_$9752_memory_ptr","typeString":"struct Staking.StakerInfo memory"}},"id":10052,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2862:10:29","memberName":"isLpStaker","nodeType":"MemberAccess","referencedDeclaration":9751,"src":"2855:17:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":10054,"name":"normalRates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9781,"src":"2885:11:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":10055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2855:41:29","trueExpression":{"id":10053,"name":"lpRates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9789,"src":"2875:7:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2830:66:29"},{"assignments":[10058],"declarations":[{"constant":false,"id":10058,"mutability":"mutable","name":"rateBps","nameLocation":"2914:7:29","nodeType":"VariableDeclaration","scope":10113,"src":"2906:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10057,"name":"uint256","nodeType":"ElementaryTypeName","src":"2906:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10060,"initialValue":{"hexValue":"30","id":10059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2924:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2906:19:29"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10061,"name":"stakingDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10039,"src":"2939:15:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"hexValue":"333635","id":10062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2959:8:29","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_31536000_by_1","typeString":"int_const 31536000"},"value":"365"}],"id":10063,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2958:10:29","typeDescriptions":{"typeIdentifier":"t_rational_31536000_by_1","typeString":"int_const 31536000"}},"src":"2939:29:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10071,"name":"stakingDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10039,"src":"3007:15:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"hexValue":"313830","id":10072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3027:8:29","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_15552000_by_1","typeString":"int_const 15552000"},"value":"180"}],"id":10073,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"3026:10:29","typeDescriptions":{"typeIdentifier":"t_rational_15552000_by_1","typeString":"int_const 15552000"}},"src":"3007:29:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10081,"name":"stakingDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10039,"src":"3075:15:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"hexValue":"3930","id":10082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3095:7:29","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_7776000_by_1","typeString":"int_const 7776000"},"value":"90"}],"id":10083,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"3094:9:29","typeDescriptions":{"typeIdentifier":"t_rational_7776000_by_1","typeString":"int_const 7776000"}},"src":"3075:28:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10091,"name":"stakingDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10039,"src":"3142:15:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"hexValue":"3330","id":10092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3162:7:29","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_2592000_by_1","typeString":"int_const 2592000"},"value":"30"}],"id":10093,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"3161:9:29","typeDescriptions":{"typeIdentifier":"t_rational_2592000_by_1","typeString":"int_const 2592000"}},"src":"3142:28:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10101,"nodeType":"IfStatement","src":"3138:52:29","trueBody":{"expression":{"id":10099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10095,"name":"rateBps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10058,"src":"3172:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":10096,"name":"rates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10050,"src":"3182:5:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":10098,"indexExpression":{"hexValue":"30","id":10097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3188:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3182:8:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3172:18:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10100,"nodeType":"ExpressionStatement","src":"3172:18:29"}},"id":10102,"nodeType":"IfStatement","src":"3071:119:29","trueBody":{"expression":{"id":10089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10085,"name":"rateBps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10058,"src":"3105:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":10086,"name":"rates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10050,"src":"3115:5:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":10088,"indexExpression":{"hexValue":"31","id":10087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3121:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3115:8:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3105:18:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10090,"nodeType":"ExpressionStatement","src":"3105:18:29"}},"id":10103,"nodeType":"IfStatement","src":"3003:187:29","trueBody":{"expression":{"id":10079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10075,"name":"rateBps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10058,"src":"3038:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":10076,"name":"rates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10050,"src":"3048:5:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":10078,"indexExpression":{"hexValue":"32","id":10077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3054:1:29","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3048:8:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3038:18:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10080,"nodeType":"ExpressionStatement","src":"3038:18:29"}},"id":10104,"nodeType":"IfStatement","src":"2935:255:29","trueBody":{"expression":{"id":10069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10065,"name":"rateBps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10058,"src":"2970:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":10066,"name":"rates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10050,"src":"2980:5:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":10068,"indexExpression":{"hexValue":"33","id":10067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2986:1:29","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2980:8:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2970:18:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10070,"nodeType":"ExpressionStatement","src":"2970:18:29"}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10105,"name":"staker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10026,"src":"3208:6:29","typeDescriptions":{"typeIdentifier":"t_struct$_StakerInfo_$9752_memory_ptr","typeString":"struct Staking.StakerInfo memory"}},"id":10106,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3215:6:29","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":9745,"src":"3208:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":10107,"name":"rateBps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10058,"src":"3224:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3208:23:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":10109,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3207:25:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":10110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3235:5:29","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"3207:33:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":10023,"id":10112,"nodeType":"Return","src":"3200:40:29"}]},"functionSelector":"d82e3962","id":10114,"implemented":true,"kind":"function","modifiers":[],"name":"calculateReward","nameLocation":"2583:15:29","nodeType":"FunctionDefinition","parameters":{"id":10020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10019,"mutability":"mutable","name":"stakerAddress","nameLocation":"2607:13:29","nodeType":"VariableDeclaration","scope":10114,"src":"2599:21:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10018,"name":"address","nodeType":"ElementaryTypeName","src":"2599:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2598:23:29"},"returnParameters":{"id":10023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10022,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10114,"src":"2643:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10021,"name":"uint256","nodeType":"ElementaryTypeName","src":"2643:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2642:9:29"},"scope":10149,"src":"2574:673:29","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":10147,"nodeType":"Block","src":"3338:229:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10121,"name":"durationInDays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10116,"src":"3352:14:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3330","id":10122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3370:2:29","typeDescriptions":{"typeIdentifier":"t_rational_30_by_1","typeString":"int_const 30"},"value":"30"},"src":"3352:20:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10126,"nodeType":"IfStatement","src":"3348:40:29","trueBody":{"expression":{"hexValue":"3330","id":10124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3381:7:29","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_2592000_by_1","typeString":"int_const 2592000"},"value":"30"},"functionReturnParameters":10120,"id":10125,"nodeType":"Return","src":"3374:14:29"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10127,"name":"durationInDays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10116,"src":"3402:14:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3930","id":10128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3420:2:29","typeDescriptions":{"typeIdentifier":"t_rational_90_by_1","typeString":"int_const 90"},"value":"90"},"src":"3402:20:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10132,"nodeType":"IfStatement","src":"3398:40:29","trueBody":{"expression":{"hexValue":"3930","id":10130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3431:7:29","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_7776000_by_1","typeString":"int_const 7776000"},"value":"90"},"functionReturnParameters":10120,"id":10131,"nodeType":"Return","src":"3424:14:29"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10133,"name":"durationInDays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10116,"src":"3452:14:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"313830","id":10134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3470:3:29","typeDescriptions":{"typeIdentifier":"t_rational_180_by_1","typeString":"int_const 180"},"value":"180"},"src":"3452:21:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10138,"nodeType":"IfStatement","src":"3448:42:29","trueBody":{"expression":{"hexValue":"313830","id":10136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3482:8:29","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_15552000_by_1","typeString":"int_const 15552000"},"value":"180"},"functionReturnParameters":10120,"id":10137,"nodeType":"Return","src":"3475:15:29"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10139,"name":"durationInDays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10116,"src":"3504:14:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"333635","id":10140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3522:3:29","typeDescriptions":{"typeIdentifier":"t_rational_365_by_1","typeString":"int_const 365"},"value":"365"},"src":"3504:21:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10144,"nodeType":"IfStatement","src":"3500:42:29","trueBody":{"expression":{"hexValue":"333635","id":10142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3534:8:29","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_31536000_by_1","typeString":"int_const 31536000"},"value":"365"},"functionReturnParameters":10120,"id":10143,"nodeType":"Return","src":"3527:15:29"}},{"expression":{"hexValue":"30","id":10145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3559:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":10120,"id":10146,"nodeType":"Return","src":"3552:8:29"}]},"id":10148,"implemented":true,"kind":"function","modifiers":[],"name":"_getDurationInSeconds","nameLocation":"3261:21:29","nodeType":"FunctionDefinition","parameters":{"id":10117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10116,"mutability":"mutable","name":"durationInDays","nameLocation":"3291:14:29","nodeType":"VariableDeclaration","scope":10148,"src":"3283:22:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10115,"name":"uint256","nodeType":"ElementaryTypeName","src":"3283:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3282:24:29"},"returnParameters":{"id":10120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10119,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10148,"src":"3329:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10118,"name":"uint256","nodeType":"ElementaryTypeName","src":"3329:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3328:9:29"},"scope":10149,"src":"3252:315:29","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":10150,"src":"293:3276:29","usedErrors":[13,18,2257,3815],"usedEvents":[24,9797,9805,9811]}],"src":"32:3538:29"},"id":29},"contracts/TokenVesting.sol":{"ast":{"absolutePath":"contracts/TokenVesting.sol","exportedSymbols":{"Context":[3749],"IERC1363":[229],"IERC20":[2219],"Ownable":[147],"SafeERC20":[2709],"TokenVesting":[10385]},"id":10386,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":10151,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:30"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":10152,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10386,"sourceUnit":2710,"src":"57:65:30","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":10153,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10386,"sourceUnit":148,"src":"123:52:30","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":10154,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10386,"sourceUnit":2220,"src":"176:56:30","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":10155,"name":"Ownable","nameLocations":["258:7:30"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"258:7:30"},"id":10156,"nodeType":"InheritanceSpecifier","src":"258:7:30"}],"canonicalName":"TokenVesting","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":10385,"linearizedBaseContracts":[10385,147,3749],"name":"TokenVesting","nameLocation":"242:12:30","nodeType":"ContractDefinition","nodes":[{"global":false,"id":10160,"libraryName":{"id":10157,"name":"SafeERC20","nameLocations":["278:9:30"],"nodeType":"IdentifierPath","referencedDeclaration":2709,"src":"278:9:30"},"nodeType":"UsingForDirective","src":"272:27:30","typeName":{"id":10159,"nodeType":"UserDefinedTypeName","pathNode":{"id":10158,"name":"IERC20","nameLocations":["292:6:30"],"nodeType":"IdentifierPath","referencedDeclaration":2219,"src":"292:6:30"},"referencedDeclaration":2219,"src":"292:6:30","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2219","typeString":"contract IERC20"}}},{"constant":false,"functionSelector":"82bfefc8","id":10163,"mutability":"immutable","name":"TOKEN","nameLocation":"328:5:30","nodeType":"VariableDeclaration","scope":10385,"src":"304:29:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2219","typeString":"contract IERC20"},"typeName":{"id":10162,"nodeType":"UserDefinedTypeName","pathNode":{"id":10161,"name":"IERC20","nameLocations":["304:6:30"],"nodeType":"IdentifierPath","referencedDeclaration":2219,"src":"304:6:30"},"referencedDeclaration":2219,"src":"304:6:30","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2219","typeString":"contract IERC20"}},"visibility":"public"},{"constant":false,"functionSelector":"2f99c6cc","id":10165,"mutability":"immutable","name":"BENEFICIARY","nameLocation":"364:11:30","nodeType":"VariableDeclaration","scope":10385,"src":"339:36:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10164,"name":"address","nodeType":"ElementaryTypeName","src":"339:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"b3daa652","id":10167,"mutability":"immutable","name":"CLIFF_DURATION","nameLocation":"406:14:30","nodeType":"VariableDeclaration","scope":10385,"src":"381:39:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10166,"name":"uint256","nodeType":"ElementaryTypeName","src":"381:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"d4ce2b75","id":10169,"mutability":"immutable","name":"TOTAL_VESTING_DURATION","nameLocation":"451:22:30","nodeType":"VariableDeclaration","scope":10385,"src":"426:47:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10168,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"ba175dfa","id":10171,"mutability":"immutable","name":"VESTING_START_TIMESTAMP","nameLocation":"504:23:30","nodeType":"VariableDeclaration","scope":10385,"src":"479:48:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10170,"name":"uint256","nodeType":"ElementaryTypeName","src":"479:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"05a9f274","id":10173,"mutability":"mutable","name":"totalLockedAmount","nameLocation":"548:17:30","nodeType":"VariableDeclaration","scope":10385,"src":"533:32:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10172,"name":"uint256","nodeType":"ElementaryTypeName","src":"533:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"45d30a17","id":10175,"mutability":"mutable","name":"releasedAmount","nameLocation":"586:14:30","nodeType":"VariableDeclaration","scope":10385,"src":"571:29:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10174,"name":"uint256","nodeType":"ElementaryTypeName","src":"571:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"anonymous":false,"eventSelector":"c7798891864187665ac6dd119286e44ec13f014527aeeb2b8eb3fd413df93179","id":10181,"name":"TokensReleased","nameLocation":"612:14:30","nodeType":"EventDefinition","parameters":{"id":10180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10177,"indexed":true,"mutability":"mutable","name":"beneficiary","nameLocation":"643:11:30","nodeType":"VariableDeclaration","scope":10181,"src":"627:27:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10176,"name":"address","nodeType":"ElementaryTypeName","src":"627:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10179,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"664:6:30","nodeType":"VariableDeclaration","scope":10181,"src":"656:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10178,"name":"uint256","nodeType":"ElementaryTypeName","src":"656:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"626:45:30"},"src":"606:66:30"},{"anonymous":false,"eventSelector":"77acf75e237f9aae98f997395832d522bdb695e4a9bd07704936aa889a3667d1","id":10185,"name":"TokensDeposited","nameLocation":"683:15:30","nodeType":"EventDefinition","parameters":{"id":10184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10183,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"707:6:30","nodeType":"VariableDeclaration","scope":10185,"src":"699:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10182,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"698:16:30"},"src":"677:38:30"},{"body":{"id":10244,"nodeType":"Block","src":"830:364:30","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10198,"name":"_beneficiaryAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10189,"src":"848:19:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":10201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"879:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10200,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"871:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10199,"name":"address","nodeType":"ElementaryTypeName","src":"871:7:30","typeDescriptions":{}}},"id":10202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"871:10:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"848:33:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"42656e6566696369617279206973207a65726f","id":10204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"883:21:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_22f6cce1339c595bc00e2ef664940191a976b44113a916acf104399415592cad","typeString":"literal_string \"Beneficiary is zero\""},"value":"Beneficiary is zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_22f6cce1339c595bc00e2ef664940191a976b44113a916acf104399415592cad","typeString":"literal_string \"Beneficiary is zero\""}],"id":10197,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"840:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"840:65:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10206,"nodeType":"ExpressionStatement","src":"840:65:30"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10208,"name":"_tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10187,"src":"923:13:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":10211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"948:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10210,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"940:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10209,"name":"address","nodeType":"ElementaryTypeName","src":"940:7:30","typeDescriptions":{}}},"id":10212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"940:10:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"923:27:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e206973207a65726f","id":10214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"952:15:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_f7fa774e3cadc6f520fabdd5e1c12fb7597a9cfb0d311d6ef76c37293f85e631","typeString":"literal_string \"Token is zero\""},"value":"Token is zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f7fa774e3cadc6f520fabdd5e1c12fb7597a9cfb0d311d6ef76c37293f85e631","typeString":"literal_string \"Token is zero\""}],"id":10207,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"915:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"915:53:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10216,"nodeType":"ExpressionStatement","src":"915:53:30"},{"expression":{"id":10221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10217,"name":"TOKEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10163,"src":"978:5:30","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2219","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":10219,"name":"_tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10187,"src":"993:13:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":10218,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2219,"src":"986:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2219_$","typeString":"type(contract IERC20)"}},"id":10220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"986:21:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2219","typeString":"contract IERC20"}},"src":"978:29:30","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2219","typeString":"contract IERC20"}},"id":10222,"nodeType":"ExpressionStatement","src":"978:29:30"},{"expression":{"id":10225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10223,"name":"BENEFICIARY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10165,"src":"1017:11:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10224,"name":"_beneficiaryAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10189,"src":"1031:19:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1017:33:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10226,"nodeType":"ExpressionStatement","src":"1017:33:30"},{"expression":{"id":10230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10227,"name":"VESTING_START_TIMESTAMP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10171,"src":"1060:23:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":10228,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1086:5:30","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":10229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1092:9:30","memberName":"timestamp","nodeType":"MemberAccess","src":"1086:15:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1060:41:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10231,"nodeType":"ExpressionStatement","src":"1060:41:30"},{"expression":{"id":10236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10232,"name":"CLIFF_DURATION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10167,"src":"1111:14:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_63072000_by_1","typeString":"int_const 63072000"},"id":10235,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":10233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1128:1:30","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"333635","id":10234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1132:8:30","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_31536000_by_1","typeString":"int_const 31536000"},"value":"365"},"src":"1128:12:30","typeDescriptions":{"typeIdentifier":"t_rational_63072000_by_1","typeString":"int_const 63072000"}},"src":"1111:29:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10237,"nodeType":"ExpressionStatement","src":"1111:29:30"},{"expression":{"id":10242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10238,"name":"TOTAL_VESTING_DURATION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10169,"src":"1150:22:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_220752000_by_1","typeString":"int_const 220752000"},"id":10241,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"37","id":10239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1175:1:30","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"333635","id":10240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1179:8:30","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_31536000_by_1","typeString":"int_const 31536000"},"value":"365"},"src":"1175:12:30","typeDescriptions":{"typeIdentifier":"t_rational_220752000_by_1","typeString":"int_const 220752000"}},"src":"1150:37:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10243,"nodeType":"ExpressionStatement","src":"1150:37:30"}]},"id":10245,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":10194,"name":"_initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10191,"src":"815:13:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":10195,"kind":"baseConstructorSpecifier","modifierName":{"id":10193,"name":"Ownable","nameLocations":["807:7:30"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"807:7:30"},"nodeType":"ModifierInvocation","src":"807:22:30"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":10192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10187,"mutability":"mutable","name":"_tokenAddress","nameLocation":"740:13:30","nodeType":"VariableDeclaration","scope":10245,"src":"732:21:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10186,"name":"address","nodeType":"ElementaryTypeName","src":"732:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10189,"mutability":"mutable","name":"_beneficiaryAddress","nameLocation":"763:19:30","nodeType":"VariableDeclaration","scope":10245,"src":"755:27:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10188,"name":"address","nodeType":"ElementaryTypeName","src":"755:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10191,"mutability":"mutable","name":"_initialOwner","nameLocation":"792:13:30","nodeType":"VariableDeclaration","scope":10245,"src":"784:21:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10190,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"731:75:30"},"returnParameters":{"id":10196,"nodeType":"ParameterList","parameters":[],"src":"830:0:30"},"scope":10385,"src":"720:474:30","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":10284,"nodeType":"Block","src":"1225:355:30","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10249,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1243:3:30","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1247:6:30","memberName":"sender","nodeType":"MemberAccess","src":"1243:10:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":10251,"name":"BENEFICIARY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10165,"src":"1257:11:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1243:25:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c792062656e6566696369617279","id":10253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1270:18:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_7e2dd7552b90edf2011346287bb6c296ed95d0bbf5b4216c87bf0c018b200e11","typeString":"literal_string \"Only beneficiary\""},"value":"Only beneficiary"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7e2dd7552b90edf2011346287bb6c296ed95d0bbf5b4216c87bf0c018b200e11","typeString":"literal_string \"Only beneficiary\""}],"id":10248,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1235:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1235:54:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10255,"nodeType":"ExpressionStatement","src":"1235:54:30"},{"assignments":[10257],"declarations":[{"constant":false,"id":10257,"mutability":"mutable","name":"releasableAmount","nameLocation":"1307:16:30","nodeType":"VariableDeclaration","scope":10284,"src":"1299:24:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10256,"name":"uint256","nodeType":"ElementaryTypeName","src":"1299:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10260,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":10258,"name":"_calculateReleasableAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10340,"src":"1326:26:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":10259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1326:28:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1299:55:30"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10262,"name":"releasableAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10257,"src":"1372:16:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":10263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1391:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1372:20:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f20746f6b656e7320647565","id":10265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1394:15:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_6d7d0b87a1f27c8ca3bc5d6d69e2d75024f0eaa4e98d7be64586a2ba8804e028","typeString":"literal_string \"No tokens due\""},"value":"No tokens due"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6d7d0b87a1f27c8ca3bc5d6d69e2d75024f0eaa4e98d7be64586a2ba8804e028","typeString":"literal_string \"No tokens due\""}],"id":10261,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1364:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1364:46:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10267,"nodeType":"ExpressionStatement","src":"1364:46:30"},{"expression":{"id":10270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10268,"name":"releasedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10175,"src":"1420:14:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":10269,"name":"releasableAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10257,"src":"1438:16:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1420:34:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10271,"nodeType":"ExpressionStatement","src":"1420:34:30"},{"expression":{"arguments":[{"id":10275,"name":"BENEFICIARY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10165,"src":"1483:11:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10276,"name":"releasableAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10257,"src":"1496:16:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":10272,"name":"TOKEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10163,"src":"1464:5:30","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2219","typeString":"contract IERC20"}},"id":10274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1470:12:30","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":2290,"src":"1464:18:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$2219_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$2219_$","typeString":"function (contract IERC20,address,uint256)"}},"id":10277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1464:49:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10278,"nodeType":"ExpressionStatement","src":"1464:49:30"},{"eventCall":{"arguments":[{"id":10280,"name":"BENEFICIARY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10165,"src":"1543:11:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10281,"name":"releasableAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10257,"src":"1556:16:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10279,"name":"TokensReleased","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10181,"src":"1528:14:30","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":10282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1528:45:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10283,"nodeType":"EmitStatement","src":"1523:50:30"}]},"functionSelector":"86d1a69f","id":10285,"implemented":true,"kind":"function","modifiers":[],"name":"release","nameLocation":"1208:7:30","nodeType":"FunctionDefinition","parameters":{"id":10246,"nodeType":"ParameterList","parameters":[],"src":"1215:2:30"},"returnParameters":{"id":10247,"nodeType":"ParameterList","parameters":[],"src":"1225:0:30"},"scope":10385,"src":"1199:381:30","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":10339,"nodeType":"Block","src":"1654:506:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10290,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1668:5:30","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":10291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1674:9:30","memberName":"timestamp","nodeType":"MemberAccess","src":"1668:15:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10292,"name":"VESTING_START_TIMESTAMP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10171,"src":"1686:23:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":10293,"name":"CLIFF_DURATION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10167,"src":"1712:14:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1686:40:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1668:58:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10298,"nodeType":"IfStatement","src":"1664:72:30","trueBody":{"expression":{"hexValue":"30","id":10296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1735:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":10289,"id":10297,"nodeType":"Return","src":"1728:8:30"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10299,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1750:5:30","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":10300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1756:9:30","memberName":"timestamp","nodeType":"MemberAccess","src":"1750:15:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10301,"name":"VESTING_START_TIMESTAMP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10171,"src":"1769:23:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":10302,"name":"TOTAL_VESTING_DURATION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10169,"src":"1795:22:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1769:48:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1750:67:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10309,"nodeType":"IfStatement","src":"1746:114:30","trueBody":{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10305,"name":"totalLockedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10173,"src":"1826:17:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":10306,"name":"releasedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10175,"src":"1846:14:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1826:34:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":10289,"id":10308,"nodeType":"Return","src":"1819:41:30"}},{"assignments":[10311],"declarations":[{"constant":false,"id":10311,"mutability":"mutable","name":"timeElapsed","nameLocation":"1878:11:30","nodeType":"VariableDeclaration","scope":10339,"src":"1870:19:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10310,"name":"uint256","nodeType":"ElementaryTypeName","src":"1870:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10319,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10312,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1892:5:30","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":10313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1898:9:30","memberName":"timestamp","nodeType":"MemberAccess","src":"1892:15:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10314,"name":"VESTING_START_TIMESTAMP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10171,"src":"1911:23:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":10315,"name":"CLIFF_DURATION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10167,"src":"1937:14:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1911:40:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":10317,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1910:42:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1892:60:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1870:82:30"},{"assignments":[10321],"declarations":[{"constant":false,"id":10321,"mutability":"mutable","name":"vestingPeriod","nameLocation":"1970:13:30","nodeType":"VariableDeclaration","scope":10339,"src":"1962:21:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10320,"name":"uint256","nodeType":"ElementaryTypeName","src":"1962:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10325,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10322,"name":"TOTAL_VESTING_DURATION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10169,"src":"1986:22:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":10323,"name":"CLIFF_DURATION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10167,"src":"2011:14:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1986:39:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1962:63:30"},{"assignments":[10327],"declarations":[{"constant":false,"id":10327,"mutability":"mutable","name":"vestedAmount","nameLocation":"2043:12:30","nodeType":"VariableDeclaration","scope":10339,"src":"2035:20:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10326,"name":"uint256","nodeType":"ElementaryTypeName","src":"2035:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10334,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10328,"name":"totalLockedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10173,"src":"2059:17:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":10329,"name":"timeElapsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10311,"src":"2079:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2059:31:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":10331,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2058:33:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":10332,"name":"vestingPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10321,"src":"2094:13:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2058:49:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2035:72:30"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10335,"name":"vestedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10327,"src":"2124:12:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":10336,"name":"releasedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10175,"src":"2139:14:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2124:29:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":10289,"id":10338,"nodeType":"Return","src":"2117:36:30"}]},"id":10340,"implemented":true,"kind":"function","modifiers":[],"name":"_calculateReleasableAmount","nameLocation":"1594:26:30","nodeType":"FunctionDefinition","parameters":{"id":10286,"nodeType":"ParameterList","parameters":[],"src":"1620:2:30"},"returnParameters":{"id":10289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10288,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10340,"src":"1645:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10287,"name":"uint256","nodeType":"ElementaryTypeName","src":"1645:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1644:9:30"},"scope":10385,"src":"1585:575:30","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":10348,"nodeType":"Block","src":"2226:40:30","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":10345,"name":"_calculateReleasableAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10340,"src":"2235:26:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":10346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2235:28:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":10344,"id":10347,"nodeType":"Return","src":"2228:35:30"}]},"functionSelector":"8401b968","id":10349,"implemented":true,"kind":"function","modifiers":[],"name":"getReleasableAmount","nameLocation":"2174:19:30","nodeType":"FunctionDefinition","parameters":{"id":10341,"nodeType":"ParameterList","parameters":[],"src":"2193:2:30"},"returnParameters":{"id":10344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10343,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10349,"src":"2217:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10342,"name":"uint256","nodeType":"ElementaryTypeName","src":"2217:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2216:9:30"},"scope":10385,"src":"2165:101:30","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":10383,"nodeType":"Block","src":"2340:228:30","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10357,"name":"totalLockedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10173,"src":"2358:17:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":10358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2379:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2358:22:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4465706f736974656420616c7265616479","id":10360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2382:19:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_1f7b4a6487610819c173ea871f75f2ea6c0cfbe06590b462fb02637c029c3ca8","typeString":"literal_string \"Deposited already\""},"value":"Deposited already"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1f7b4a6487610819c173ea871f75f2ea6c0cfbe06590b462fb02637c029c3ca8","typeString":"literal_string \"Deposited already\""}],"id":10356,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2350:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2350:52:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10362,"nodeType":"ExpressionStatement","src":"2350:52:30"},{"expression":{"id":10365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10363,"name":"totalLockedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10173,"src":"2412:17:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10364,"name":"_totalAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10351,"src":"2432:12:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2412:32:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10366,"nodeType":"ExpressionStatement","src":"2412:32:30"},{"expression":{"arguments":[{"expression":{"id":10370,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2477:3:30","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2481:6:30","memberName":"sender","nodeType":"MemberAccess","src":"2477:10:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":10374,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2497:4:30","typeDescriptions":{"typeIdentifier":"t_contract$_TokenVesting_$10385","typeString":"contract TokenVesting"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_TokenVesting_$10385","typeString":"contract TokenVesting"}],"id":10373,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2489:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10372,"name":"address","nodeType":"ElementaryTypeName","src":"2489:7:30","typeDescriptions":{}}},"id":10375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2489:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10376,"name":"_totalAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10351,"src":"2504:12:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":10367,"name":"TOKEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10163,"src":"2454:5:30","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2219","typeString":"contract IERC20"}},"id":10369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2460:16:30","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":2317,"src":"2454:22:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$2219_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$2219_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":10377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2454:63:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10378,"nodeType":"ExpressionStatement","src":"2454:63:30"},{"eventCall":{"arguments":[{"id":10380,"name":"_totalAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10351,"src":"2548:12:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10379,"name":"TokensDeposited","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10185,"src":"2532:15:30","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":10381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2532:29:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10382,"nodeType":"EmitStatement","src":"2527:34:30"}]},"functionSelector":"cc279e80","id":10384,"implemented":true,"kind":"function","modifiers":[{"id":10354,"kind":"modifierInvocation","modifierName":{"id":10353,"name":"onlyOwner","nameLocations":["2330:9:30"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2330:9:30"},"nodeType":"ModifierInvocation","src":"2330:9:30"}],"name":"depositVestingTokens","nameLocation":"2280:20:30","nodeType":"FunctionDefinition","parameters":{"id":10352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10351,"mutability":"mutable","name":"_totalAmount","nameLocation":"2309:12:30","nodeType":"VariableDeclaration","scope":10384,"src":"2301:20:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10350,"name":"uint256","nodeType":"ElementaryTypeName","src":"2301:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2300:22:30"},"returnParameters":{"id":10355,"nodeType":"ParameterList","parameters":[],"src":"2340:0:30"},"scope":10385,"src":"2271:297:30","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":10386,"src":"233:2337:30","usedErrors":[13,18,2257],"usedEvents":[24,10181,10185]}],"src":"32:2539:30"},"id":30},"contracts/Treasury.sol":{"ast":{"absolutePath":"contracts/Treasury.sol","exportedSymbols":{"Context":[3749],"IAggregatorV3":[10405],"IERC1363":[229],"IERC20":[2219],"IPancakeRouter":[10423],"Ownable":[147],"ReentrancyGuard":[3870],"SafeERC20":[2709],"Treasury":[10824]},"id":10825,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":10387,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:31"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":10388,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10825,"sourceUnit":148,"src":"57:52:31","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":10389,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10825,"sourceUnit":3871,"src":"110:59:31","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":10390,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10825,"sourceUnit":2220,"src":"170:56:31","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":10391,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10825,"sourceUnit":2710,"src":"227:65:31","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IAggregatorV3","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":10405,"linearizedBaseContracts":[10405],"name":"IAggregatorV3","nameLocation":"303:13:31","nodeType":"ContractDefinition","nodes":[{"functionSelector":"feaf968c","id":10404,"implemented":false,"kind":"function","modifiers":[],"name":"latestRoundData","nameLocation":"328:15:31","nodeType":"FunctionDefinition","parameters":{"id":10392,"nodeType":"ParameterList","parameters":[],"src":"343:2:31"},"returnParameters":{"id":10403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10394,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10404,"src":"369:6:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":10393,"name":"uint80","nodeType":"ElementaryTypeName","src":"369:6:31","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"},{"constant":false,"id":10396,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10404,"src":"377:6:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10395,"name":"int256","nodeType":"ElementaryTypeName","src":"377:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":10398,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10404,"src":"385:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10397,"name":"uint256","nodeType":"ElementaryTypeName","src":"385:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10400,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10404,"src":"394:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10399,"name":"uint256","nodeType":"ElementaryTypeName","src":"394:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10402,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10404,"src":"403:6:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":10401,"name":"uint80","nodeType":"ElementaryTypeName","src":"403:6:31","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"368:42:31"},"scope":10405,"src":"319:92:31","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":10825,"src":"293:120:31","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IPancakeRouter","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":10423,"linearizedBaseContracts":[10423],"name":"IPancakeRouter","nameLocation":"424:14:31","nodeType":"ContractDefinition","nodes":[{"functionSelector":"38ed1739","id":10422,"implemented":false,"kind":"function","modifiers":[],"name":"swapExactTokensForTokens","nameLocation":"450:24:31","nodeType":"FunctionDefinition","parameters":{"id":10417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10407,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10422,"src":"475:4:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10406,"name":"uint","nodeType":"ElementaryTypeName","src":"475:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10409,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10422,"src":"481:4:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10408,"name":"uint","nodeType":"ElementaryTypeName","src":"481:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10412,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10422,"src":"487:18:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":10410,"name":"address","nodeType":"ElementaryTypeName","src":"487:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10411,"nodeType":"ArrayTypeName","src":"487:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":10414,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10422,"src":"507:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10413,"name":"address","nodeType":"ElementaryTypeName","src":"507:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10416,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10422,"src":"516:4:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10415,"name":"uint","nodeType":"ElementaryTypeName","src":"516:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"474:47:31"},"returnParameters":{"id":10421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10420,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10422,"src":"540:13:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":10418,"name":"uint","nodeType":"ElementaryTypeName","src":"540:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10419,"nodeType":"ArrayTypeName","src":"540:6:31","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"539:15:31"},"scope":10423,"src":"441:114:31","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":10825,"src":"414:143:31","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[{"baseName":{"id":10424,"name":"Ownable","nameLocations":["579:7:31"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"579:7:31"},"id":10425,"nodeType":"InheritanceSpecifier","src":"579:7:31"},{"baseName":{"id":10426,"name":"ReentrancyGuard","nameLocations":["588:15:31"],"nodeType":"IdentifierPath","referencedDeclaration":3870,"src":"588:15:31"},"id":10427,"nodeType":"InheritanceSpecifier","src":"588:15:31"}],"canonicalName":"Treasury","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":10824,"linearizedBaseContracts":[10824,3870,147,3749],"name":"Treasury","nameLocation":"567:8:31","nodeType":"ContractDefinition","nodes":[{"global":false,"id":10431,"libraryName":{"id":10428,"name":"SafeERC20","nameLocations":["616:9:31"],"nodeType":"IdentifierPath","referencedDeclaration":2709,"src":"616:9:31"},"nodeType":"UsingForDirective","src":"610:27:31","typeName":{"id":10430,"nodeType":"UserDefinedTypeName","pathNode":{"id":10429,"name":"IERC20","nameLocations":["630:6:31"],"nodeType":"IdentifierPath","referencedDeclaration":2219,"src":"630:6:31"},"referencedDeclaration":2219,"src":"630:6:31","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2219","typeString":"contract IERC20"}}},{"constant":false,"functionSelector":"70af9b14","id":10434,"mutability":"immutable","name":"F_TOKEN","nameLocation":"666:7:31","nodeType":"VariableDeclaration","scope":10824,"src":"642:31:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2219","typeString":"contract IERC20"},"typeName":{"id":10433,"nodeType":"UserDefinedTypeName","pathNode":{"id":10432,"name":"IERC20","nameLocations":["642:6:31"],"nodeType":"IdentifierPath","referencedDeclaration":2219,"src":"642:6:31"},"referencedDeclaration":2219,"src":"642:6:31","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2219","typeString":"contract IERC20"}},"visibility":"public"},{"constant":false,"functionSelector":"93a39776","id":10437,"mutability":"immutable","name":"STABLECOIN","nameLocation":"703:10:31","nodeType":"VariableDeclaration","scope":10824,"src":"679:34:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2219","typeString":"contract IERC20"},"typeName":{"id":10436,"nodeType":"UserDefinedTypeName","pathNode":{"id":10435,"name":"IERC20","nameLocations":["679:6:31"],"nodeType":"IdentifierPath","referencedDeclaration":2219,"src":"679:6:31"},"referencedDeclaration":2219,"src":"679:6:31","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2219","typeString":"contract IERC20"}},"visibility":"public"},{"constant":false,"functionSelector":"e08836dd","id":10440,"mutability":"immutable","name":"PANCAKE_ROUTER","nameLocation":"751:14:31","nodeType":"VariableDeclaration","scope":10824,"src":"719:46:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IPancakeRouter_$10423","typeString":"contract IPancakeRouter"},"typeName":{"id":10439,"nodeType":"UserDefinedTypeName","pathNode":{"id":10438,"name":"IPancakeRouter","nameLocations":["719:14:31"],"nodeType":"IdentifierPath","referencedDeclaration":10423,"src":"719:14:31"},"referencedDeclaration":10423,"src":"719:14:31","typeDescriptions":{"typeIdentifier":"t_contract$_IPancakeRouter_$10423","typeString":"contract IPancakeRouter"}},"visibility":"public"},{"constant":false,"functionSelector":"31eb318a","id":10443,"mutability":"immutable","name":"PRICE_FEED","nameLocation":"802:10:31","nodeType":"VariableDeclaration","scope":10824,"src":"771:41:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAggregatorV3_$10405","typeString":"contract IAggregatorV3"},"typeName":{"id":10442,"nodeType":"UserDefinedTypeName","pathNode":{"id":10441,"name":"IAggregatorV3","nameLocations":["771:13:31"],"nodeType":"IdentifierPath","referencedDeclaration":10405,"src":"771:13:31"},"referencedDeclaration":10405,"src":"771:13:31","typeDescriptions":{"typeIdentifier":"t_contract$_IAggregatorV3_$10405","typeString":"contract IAggregatorV3"}},"visibility":"public"},{"constant":false,"functionSelector":"c3b6453e","id":10445,"mutability":"immutable","name":"F_TOKEN_CONTRACT_ADDRESS","nameLocation":"843:24:31","nodeType":"VariableDeclaration","scope":10824,"src":"818:49:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10444,"name":"address","nodeType":"ElementaryTypeName","src":"818:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"da19ddfb","id":10447,"mutability":"immutable","name":"STAKING_CONTRACT","nameLocation":"898:16:31","nodeType":"VariableDeclaration","scope":10824,"src":"873:41:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10446,"name":"address","nodeType":"ElementaryTypeName","src":"873:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"id":10450,"mutability":"immutable","name":"BURN_ADDRESS","nameLocation":"946:12:31","nodeType":"VariableDeclaration","scope":10824,"src":"920:83:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10448,"name":"address","nodeType":"ElementaryTypeName","src":"920:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303064456144","id":10449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"961:42:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x000000000000000000000000000000000000dEaD"},"visibility":"private"},{"constant":false,"functionSelector":"62cd2018","id":10452,"mutability":"immutable","name":"REBURN_ACTIVATION_TIMESTAMP","nameLocation":"1034:27:31","nodeType":"VariableDeclaration","scope":10824,"src":"1009:52:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10451,"name":"uint256","nodeType":"ElementaryTypeName","src":"1009:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":true,"functionSelector":"c6201674","id":10459,"mutability":"constant","name":"FINAL_SUPPLY_TARGET","nameLocation":"1091:19:31","nodeType":"VariableDeclaration","scope":10824,"src":"1067:63:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10453,"name":"uint256","nodeType":"ElementaryTypeName","src":"1067:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_50000000000000000000000000_by_1","typeString":"int_const 50000000000000000000000000"},"id":10458,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3530303030303030","id":10454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1113:8:31","typeDescriptions":{"typeIdentifier":"t_rational_50000000_by_1","typeString":"int_const 50000000"},"value":"50000000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":10457,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":10455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1124:2:31","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":10456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1128:2:31","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"1124:6:31","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"1113:17:31","typeDescriptions":{"typeIdentifier":"t_rational_50000000000000000000000000_by_1","typeString":"int_const 50000000000000000000000000"}},"visibility":"public"},{"constant":false,"functionSelector":"5d7bdbea","id":10461,"mutability":"mutable","name":"softFloorPrice","nameLocation":"1151:14:31","nodeType":"VariableDeclaration","scope":10824,"src":"1136:29:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10460,"name":"uint256","nodeType":"ElementaryTypeName","src":"1136:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"218656e4","id":10463,"mutability":"mutable","name":"lastBuybackTimestamp","nameLocation":"1186:20:31","nodeType":"VariableDeclaration","scope":10824,"src":"1171:35:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10462,"name":"uint256","nodeType":"ElementaryTypeName","src":"1171:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"anonymous":false,"eventSelector":"bca429eac1a1f219916f1d45dd2ebfaca65503f5c0ca15922cd1ca7679f90fb4","id":10469,"name":"ReburnExecuted","nameLocation":"1218:14:31","nodeType":"EventDefinition","parameters":{"id":10468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10465,"indexed":false,"mutability":"mutable","name":"amountBought","nameLocation":"1241:12:31","nodeType":"VariableDeclaration","scope":10469,"src":"1233:20:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10464,"name":"uint256","nodeType":"ElementaryTypeName","src":"1233:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10467,"indexed":false,"mutability":"mutable","name":"amountBurned","nameLocation":"1263:12:31","nodeType":"VariableDeclaration","scope":10469,"src":"1255:20:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10466,"name":"uint256","nodeType":"ElementaryTypeName","src":"1255:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1232:44:31"},"src":"1212:65:31"},{"anonymous":false,"eventSelector":"58c0c80496c71ceee0ba72810063be557bd3d50134028f18238d16ee9189a671","id":10475,"name":"SoftFloorProtected","nameLocation":"1288:18:31","nodeType":"EventDefinition","parameters":{"id":10474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10471,"indexed":false,"mutability":"mutable","name":"amountBought","nameLocation":"1315:12:31","nodeType":"VariableDeclaration","scope":10475,"src":"1307:20:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10470,"name":"uint256","nodeType":"ElementaryTypeName","src":"1307:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10473,"indexed":false,"mutability":"mutable","name":"currentPrice","nameLocation":"1336:12:31","nodeType":"VariableDeclaration","scope":10475,"src":"1329:19:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10472,"name":"int256","nodeType":"ElementaryTypeName","src":"1329:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1306:43:31"},"src":"1282:68:31"},{"anonymous":false,"eventSelector":"a8bb388cf429c59dff818d603dba53ef8a6683d6daf61985bb28d136719ddced","id":10479,"name":"SoftFloorPriceUpdated","nameLocation":"1361:21:31","nodeType":"EventDefinition","parameters":{"id":10478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10477,"indexed":false,"mutability":"mutable","name":"newPrice","nameLocation":"1391:8:31","nodeType":"VariableDeclaration","scope":10479,"src":"1383:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10476,"name":"uint256","nodeType":"ElementaryTypeName","src":"1383:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1382:18:31"},"src":"1355:46:31"},{"anonymous":false,"eventSelector":"8e47b87b0ef542cdfa1659c551d88bad38aa7f452d2bbb349ab7530dfec8be8f","id":10485,"name":"FundsReceived","nameLocation":"1412:13:31","nodeType":"EventDefinition","parameters":{"id":10484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10481,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"1442:4:31","nodeType":"VariableDeclaration","scope":10485,"src":"1426:20:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10480,"name":"address","nodeType":"ElementaryTypeName","src":"1426:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10483,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1456:6:31","nodeType":"VariableDeclaration","scope":10485,"src":"1448:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10482,"name":"uint256","nodeType":"ElementaryTypeName","src":"1448:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1425:38:31"},"src":"1406:58:31"},{"body":{"id":10550,"nodeType":"Block","src":"1660:430:31","statements":[{"expression":{"id":10507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10503,"name":"F_TOKEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10434,"src":"1670:7:31","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2219","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":10505,"name":"_fTokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10487,"src":"1687:14:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":10504,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2219,"src":"1680:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2219_$","typeString":"type(contract IERC20)"}},"id":10506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1680:22:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2219","typeString":"contract IERC20"}},"src":"1670:32:31","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2219","typeString":"contract IERC20"}},"id":10508,"nodeType":"ExpressionStatement","src":"1670:32:31"},{"expression":{"id":10513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10509,"name":"STABLECOIN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10437,"src":"1712:10:31","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2219","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":10511,"name":"_stablecoinAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10489,"src":"1732:18:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":10510,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2219,"src":"1725:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2219_$","typeString":"type(contract IERC20)"}},"id":10512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1725:26:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2219","typeString":"contract IERC20"}},"src":"1712:39:31","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2219","typeString":"contract IERC20"}},"id":10514,"nodeType":"ExpressionStatement","src":"1712:39:31"},{"expression":{"id":10519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10515,"name":"PANCAKE_ROUTER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10440,"src":"1761:14:31","typeDescriptions":{"typeIdentifier":"t_contract$_IPancakeRouter_$10423","typeString":"contract IPancakeRouter"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":10517,"name":"_routerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10491,"src":"1793:14:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":10516,"name":"IPancakeRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10423,"src":"1778:14:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IPancakeRouter_$10423_$","typeString":"type(contract IPancakeRouter)"}},"id":10518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1778:30:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IPancakeRouter_$10423","typeString":"contract IPancakeRouter"}},"src":"1761:47:31","typeDescriptions":{"typeIdentifier":"t_contract$_IPancakeRouter_$10423","typeString":"contract IPancakeRouter"}},"id":10520,"nodeType":"ExpressionStatement","src":"1761:47:31"},{"expression":{"id":10525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10521,"name":"PRICE_FEED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10443,"src":"1818:10:31","typeDescriptions":{"typeIdentifier":"t_contract$_IAggregatorV3_$10405","typeString":"contract IAggregatorV3"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":10523,"name":"_chainlinkFeedAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10493,"src":"1845:21:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":10522,"name":"IAggregatorV3","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10405,"src":"1831:13:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAggregatorV3_$10405_$","typeString":"type(contract IAggregatorV3)"}},"id":10524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1831:36:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IAggregatorV3_$10405","typeString":"contract IAggregatorV3"}},"src":"1818:49:31","typeDescriptions":{"typeIdentifier":"t_contract$_IAggregatorV3_$10405","typeString":"contract IAggregatorV3"}},"id":10526,"nodeType":"ExpressionStatement","src":"1818:49:31"},{"expression":{"id":10529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10527,"name":"F_TOKEN_CONTRACT_ADDRESS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10445,"src":"1877:24:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10528,"name":"_fTokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10487,"src":"1904:14:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1877:41:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10530,"nodeType":"ExpressionStatement","src":"1877:41:31"},{"expression":{"id":10533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10531,"name":"STAKING_CONTRACT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10447,"src":"1928:16:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10532,"name":"_stakingContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10495,"src":"1947:16:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1928:35:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10534,"nodeType":"ExpressionStatement","src":"1928:35:31"},{"expression":{"id":10543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10535,"name":"REBURN_ACTIVATION_TIMESTAMP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10452,"src":"1973:27:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10536,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2003:5:31","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":10537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2009:9:31","memberName":"timestamp","nodeType":"MemberAccess","src":"2003:15:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_252288000_by_1","typeString":"int_const 252288000"},"id":10540,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"38","id":10538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2022:1:31","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"333635","id":10539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2026:8:31","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_31536000_by_1","typeString":"int_const 31536000"},"value":"365"},"src":"2022:12:31","typeDescriptions":{"typeIdentifier":"t_rational_252288000_by_1","typeString":"int_const 252288000"}}],"id":10541,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2021:14:31","typeDescriptions":{"typeIdentifier":"t_rational_252288000_by_1","typeString":"int_const 252288000"}},"src":"2003:32:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1973:62:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10544,"nodeType":"ExpressionStatement","src":"1973:62:31"},{"expression":{"id":10548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10545,"name":"lastBuybackTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10463,"src":"2045:20:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":10546,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2068:5:31","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":10547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2074:9:31","memberName":"timestamp","nodeType":"MemberAccess","src":"2068:15:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2045:38:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10549,"nodeType":"ExpressionStatement","src":"2045:38:31"}]},"id":10551,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":10500,"name":"_initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10497,"src":"1645:13:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":10501,"kind":"baseConstructorSpecifier","modifierName":{"id":10499,"name":"Ownable","nameLocations":["1637:7:31"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"1637:7:31"},"nodeType":"ModifierInvocation","src":"1637:22:31"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":10498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10487,"mutability":"mutable","name":"_fTokenAddress","nameLocation":"1489:14:31","nodeType":"VariableDeclaration","scope":10551,"src":"1481:22:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10486,"name":"address","nodeType":"ElementaryTypeName","src":"1481:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10489,"mutability":"mutable","name":"_stablecoinAddress","nameLocation":"1513:18:31","nodeType":"VariableDeclaration","scope":10551,"src":"1505:26:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10488,"name":"address","nodeType":"ElementaryTypeName","src":"1505:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10491,"mutability":"mutable","name":"_routerAddress","nameLocation":"1541:14:31","nodeType":"VariableDeclaration","scope":10551,"src":"1533:22:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10490,"name":"address","nodeType":"ElementaryTypeName","src":"1533:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10493,"mutability":"mutable","name":"_chainlinkFeedAddress","nameLocation":"1565:21:31","nodeType":"VariableDeclaration","scope":10551,"src":"1557:29:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10492,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10495,"mutability":"mutable","name":"_stakingContract","nameLocation":"1596:16:31","nodeType":"VariableDeclaration","scope":10551,"src":"1588:24:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10494,"name":"address","nodeType":"ElementaryTypeName","src":"1588:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10497,"mutability":"mutable","name":"_initialOwner","nameLocation":"1622:13:31","nodeType":"VariableDeclaration","scope":10551,"src":"1614:21:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10496,"name":"address","nodeType":"ElementaryTypeName","src":"1614:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1480:156:31"},"returnParameters":{"id":10502,"nodeType":"ParameterList","parameters":[],"src":"1660:0:31"},"scope":10824,"src":"1469:621:31","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":10616,"nodeType":"Block","src":"2142:539:31","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10557,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2160:5:31","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":10558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2166:9:31","memberName":"timestamp","nodeType":"MemberAccess","src":"2160:15:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":10559,"name":"REBURN_ACTIVATION_TIMESTAMP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10452,"src":"2179:27:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2160:46:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"52652d6275726e206e6f7420616374697665","id":10561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2208:20:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_e49ae48be73c974e12a156c9518d81c832d8ce47bdfa2d65c071477385562e9e","typeString":"literal_string \"Re-burn not active\""},"value":"Re-burn not active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e49ae48be73c974e12a156c9518d81c832d8ce47bdfa2d65c071477385562e9e","typeString":"literal_string \"Re-burn not active\""}],"id":10556,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2152:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2152:77:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10563,"nodeType":"ExpressionStatement","src":"2152:77:31"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":10565,"name":"F_TOKEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10434,"src":"2247:7:31","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2219","typeString":"contract IERC20"}},"id":10566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2255:11:31","memberName":"totalSupply","nodeType":"MemberAccess","referencedDeclaration":2168,"src":"2247:19:31","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":10567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2247:21:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":10568,"name":"FINAL_SUPPLY_TARGET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10459,"src":"2271:19:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2247:43:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"46696e616c20737570706c79207461726765742072656163686564","id":10570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2292:29:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_aeb05ce95fcea433e8444c29a5372eb4ece85e32eddbbe07ed65d04421d828bf","typeString":"literal_string \"Final supply target reached\""},"value":"Final supply target reached"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_aeb05ce95fcea433e8444c29a5372eb4ece85e32eddbbe07ed65d04421d828bf","typeString":"literal_string \"Final supply target reached\""}],"id":10564,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2239:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2239:83:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10572,"nodeType":"ExpressionStatement","src":"2239:83:31"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10574,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2340:5:31","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":10575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2346:9:31","memberName":"timestamp","nodeType":"MemberAccess","src":"2340:15:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10576,"name":"lastBuybackTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10463,"src":"2359:20:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3330","id":10577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2382:7:31","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_2592000_by_1","typeString":"int_const 2592000"},"value":"30"},"src":"2359:30:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2340:49:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"52652d6275726e20636f6f6c646f776e","id":10580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2391:18:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_32e03c615fd327bd02a3ff00e8e613f9bee3abe1c9c2ab6680ac5fe3d6dc0519","typeString":"literal_string \"Re-burn cooldown\""},"value":"Re-burn cooldown"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_32e03c615fd327bd02a3ff00e8e613f9bee3abe1c9c2ab6680ac5fe3d6dc0519","typeString":"literal_string \"Re-burn cooldown\""}],"id":10573,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2332:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2332:78:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10582,"nodeType":"ExpressionStatement","src":"2332:78:31"},{"assignments":[10584],"declarations":[{"constant":false,"id":10584,"mutability":"mutable","name":"stablecoinBalance","nameLocation":"2428:17:31","nodeType":"VariableDeclaration","scope":10616,"src":"2420:25:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10583,"name":"uint256","nodeType":"ElementaryTypeName","src":"2420:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10592,"initialValue":{"arguments":[{"arguments":[{"id":10589,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2477:4:31","typeDescriptions":{"typeIdentifier":"t_contract$_Treasury_$10824","typeString":"contract Treasury"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Treasury_$10824","typeString":"contract Treasury"}],"id":10588,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2469:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10587,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:31","typeDescriptions":{}}},"id":10590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2469:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":10585,"name":"STABLECOIN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10437,"src":"2448:10:31","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2219","typeString":"contract IERC20"}},"id":10586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2459:9:31","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":2176,"src":"2448:20:31","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":10591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2448:35:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2420:63:31"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10593,"name":"stablecoinBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10584,"src":"2497:17:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":10594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2518:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2497:22:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10597,"nodeType":"IfStatement","src":"2493:35:31","trueBody":{"functionReturnParameters":10555,"id":10596,"nodeType":"Return","src":"2521:7:31"}},{"assignments":[10599],"declarations":[{"constant":false,"id":10599,"mutability":"mutable","name":"amountToSpend","nameLocation":"2545:13:31","nodeType":"VariableDeclaration","scope":10616,"src":"2537:21:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10598,"name":"uint256","nodeType":"ElementaryTypeName","src":"2537:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10606,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10600,"name":"stablecoinBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10584,"src":"2562:17:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31","id":10601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2582:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2562:21:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":10603,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2561:23:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":10604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2587:3:31","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"2561:29:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2537:53:31"},{"expression":{"arguments":[{"id":10608,"name":"amountToSpend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10599,"src":"2612:13:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10607,"name":"_buyAndBurn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10696,"src":"2600:11:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":10609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2600:26:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10610,"nodeType":"ExpressionStatement","src":"2600:26:31"},{"expression":{"id":10614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10611,"name":"lastBuybackTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10463,"src":"2636:20:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":10612,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2659:5:31","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":10613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2665:9:31","memberName":"timestamp","nodeType":"MemberAccess","src":"2659:15:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2636:38:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10615,"nodeType":"ExpressionStatement","src":"2636:38:31"}]},"functionSelector":"efaee8a3","id":10617,"implemented":true,"kind":"function","modifiers":[{"id":10554,"kind":"modifierInvocation","modifierName":{"id":10553,"name":"nonReentrant","nameLocations":["2129:12:31"],"nodeType":"IdentifierPath","referencedDeclaration":3834,"src":"2129:12:31"},"nodeType":"ModifierInvocation","src":"2129:12:31"}],"name":"executeReburn","nameLocation":"2104:13:31","nodeType":"FunctionDefinition","parameters":{"id":10552,"nodeType":"ParameterList","parameters":[],"src":"2117:2:31"},"returnParameters":{"id":10555,"nodeType":"ParameterList","parameters":[],"src":"2142:0:31"},"scope":10824,"src":"2095:586:31","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10673,"nodeType":"Block","src":"2736:437:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10622,"name":"softFloorPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10461,"src":"2750:14:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":10623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2768:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2750:19:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10626,"nodeType":"IfStatement","src":"2746:32:31","trueBody":{"functionReturnParameters":10621,"id":10625,"nodeType":"Return","src":"2771:7:31"}},{"assignments":[10628],"declarations":[{"constant":false,"id":10628,"mutability":"mutable","name":"currentPrice","nameLocation":"2794:12:31","nodeType":"VariableDeclaration","scope":10673,"src":"2787:19:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10627,"name":"int256","nodeType":"ElementaryTypeName","src":"2787:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":10631,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":10629,"name":"getFTokenPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10823,"src":"2809:14:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_int256_$","typeString":"function () view returns (int256)"}},"id":10630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2809:16:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2787:38:31"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10632,"name":"currentPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10628,"src":"2839:12:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"arguments":[{"id":10635,"name":"softFloorPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10461,"src":"2862:14:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10634,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2855:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":10633,"name":"int256","nodeType":"ElementaryTypeName","src":"2855:6:31","typeDescriptions":{}}},"id":10636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:22:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2839:38:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10639,"nodeType":"IfStatement","src":"2835:51:31","trueBody":{"functionReturnParameters":10621,"id":10638,"nodeType":"Return","src":"2879:7:31"}},{"assignments":[10641],"declarations":[{"constant":false,"id":10641,"mutability":"mutable","name":"stablecoinBalance","nameLocation":"2903:17:31","nodeType":"VariableDeclaration","scope":10673,"src":"2895:25:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10640,"name":"uint256","nodeType":"ElementaryTypeName","src":"2895:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10649,"initialValue":{"arguments":[{"arguments":[{"id":10646,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2952:4:31","typeDescriptions":{"typeIdentifier":"t_contract$_Treasury_$10824","typeString":"contract Treasury"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Treasury_$10824","typeString":"contract Treasury"}],"id":10645,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2944:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10644,"name":"address","nodeType":"ElementaryTypeName","src":"2944:7:31","typeDescriptions":{}}},"id":10647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2944:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":10642,"name":"STABLECOIN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10437,"src":"2923:10:31","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2219","typeString":"contract IERC20"}},"id":10643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2934:9:31","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":2176,"src":"2923:20:31","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":10648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2923:35:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2895:63:31"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10650,"name":"stablecoinBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10641,"src":"2972:17:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":10651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2993:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2972:22:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10654,"nodeType":"IfStatement","src":"2968:35:31","trueBody":{"functionReturnParameters":10621,"id":10653,"nodeType":"Return","src":"2996:7:31"}},{"assignments":[10656],"declarations":[{"constant":false,"id":10656,"mutability":"mutable","name":"amountToSpend","nameLocation":"3020:13:31","nodeType":"VariableDeclaration","scope":10673,"src":"3012:21:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10655,"name":"uint256","nodeType":"ElementaryTypeName","src":"3012:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10663,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10657,"name":"stablecoinBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10641,"src":"3037:17:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"35","id":10658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3057:1:31","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"3037:21:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":10660,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3036:23:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":10661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3062:3:31","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"3036:29:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3012:53:31"},{"expression":{"arguments":[{"id":10665,"name":"amountToSpend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10656,"src":"3090:13:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10664,"name":"_buyAndSupport","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10707,"src":"3075:14:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":10666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3075:29:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10667,"nodeType":"ExpressionStatement","src":"3075:29:31"},{"eventCall":{"arguments":[{"id":10669,"name":"amountToSpend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10656,"src":"3138:13:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":10670,"name":"currentPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10628,"src":"3153:12:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":10668,"name":"SoftFloorProtected","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10475,"src":"3119:18:31","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_int256_$returns$__$","typeString":"function (uint256,int256)"}},"id":10671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3119:47:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10672,"nodeType":"EmitStatement","src":"3114:52:31"}]},"functionSelector":"1a647fb7","id":10674,"implemented":true,"kind":"function","modifiers":[{"id":10620,"kind":"modifierInvocation","modifierName":{"id":10619,"name":"nonReentrant","nameLocations":["2723:12:31"],"nodeType":"IdentifierPath","referencedDeclaration":3834,"src":"2723:12:31"},"nodeType":"ModifierInvocation","src":"2723:12:31"}],"name":"protectSoftFloor","nameLocation":"2695:16:31","nodeType":"FunctionDefinition","parameters":{"id":10618,"nodeType":"ParameterList","parameters":[],"src":"2711:2:31"},"returnParameters":{"id":10621,"nodeType":"ParameterList","parameters":[],"src":"2736:0:31"},"scope":10824,"src":"2686:487:31","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10695,"nodeType":"Block","src":"3231:151:31","statements":[{"assignments":[10680],"declarations":[{"constant":false,"id":10680,"mutability":"mutable","name":"boughtAmount","nameLocation":"3241:12:31","nodeType":"VariableDeclaration","scope":10695,"src":"3233:20:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10679,"name":"uint256","nodeType":"ElementaryTypeName","src":"3233:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10685,"initialValue":{"arguments":[{"id":10682,"name":"_amountToSpend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10676,"src":"3277:14:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":10683,"name":"BURN_ADDRESS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10450,"src":"3293:12:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":10681,"name":"_swapStableForFToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10775,"src":"3256:20:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (uint256,address) returns (uint256)"}},"id":10684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3256:50:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3233:73:31"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10686,"name":"boughtAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10680,"src":"3312:12:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":10687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3327:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3312:16:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10694,"nodeType":"IfStatement","src":"3308:71:31","trueBody":{"eventCall":{"arguments":[{"id":10690,"name":"_amountToSpend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10676,"src":"3350:14:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":10691,"name":"boughtAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10680,"src":"3366:12:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10689,"name":"ReburnExecuted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10469,"src":"3335:14:31","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":10692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3335:44:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10693,"nodeType":"EmitStatement","src":"3330:49:31"}}]},"id":10696,"implemented":true,"kind":"function","modifiers":[],"name":"_buyAndBurn","nameLocation":"3187:11:31","nodeType":"FunctionDefinition","parameters":{"id":10677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10676,"mutability":"mutable","name":"_amountToSpend","nameLocation":"3207:14:31","nodeType":"VariableDeclaration","scope":10696,"src":"3199:22:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10675,"name":"uint256","nodeType":"ElementaryTypeName","src":"3199:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3198:24:31"},"returnParameters":{"id":10678,"nodeType":"ParameterList","parameters":[],"src":"3231:0:31"},"scope":10824,"src":"3178:204:31","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":10706,"nodeType":"Block","src":"3443:59:31","statements":[{"expression":{"arguments":[{"id":10702,"name":"_amountToSpend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10698,"src":"3466:14:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":10703,"name":"STAKING_CONTRACT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10447,"src":"3482:16:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":10701,"name":"_swapStableForFToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10775,"src":"3445:20:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (uint256,address) returns (uint256)"}},"id":10704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3445:54:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10705,"nodeType":"ExpressionStatement","src":"3445:54:31"}]},"id":10707,"implemented":true,"kind":"function","modifiers":[],"name":"_buyAndSupport","nameLocation":"3396:14:31","nodeType":"FunctionDefinition","parameters":{"id":10699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10698,"mutability":"mutable","name":"_amountToSpend","nameLocation":"3419:14:31","nodeType":"VariableDeclaration","scope":10707,"src":"3411:22:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10697,"name":"uint256","nodeType":"ElementaryTypeName","src":"3411:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3410:24:31"},"returnParameters":{"id":10700,"nodeType":"ParameterList","parameters":[],"src":"3443:0:31"},"scope":10824,"src":"3387:115:31","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":10774,"nodeType":"Block","src":"3595:338:31","statements":[{"assignments":[10720],"declarations":[{"constant":false,"id":10720,"mutability":"mutable","name":"path","nameLocation":"3622:4:31","nodeType":"VariableDeclaration","scope":10774,"src":"3605:21:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":10718,"name":"address","nodeType":"ElementaryTypeName","src":"3605:7:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10719,"nodeType":"ArrayTypeName","src":"3605:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":10726,"initialValue":{"arguments":[{"hexValue":"32","id":10724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3643:1:31","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"}],"id":10723,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3629:13:31","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":10721,"name":"address","nodeType":"ElementaryTypeName","src":"3633:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10722,"nodeType":"ArrayTypeName","src":"3633:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":10725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3629:16:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"3605:40:31"},{"expression":{"id":10734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":10727,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10720,"src":"3655:4:31","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":10729,"indexExpression":{"hexValue":"30","id":10728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3660:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3655:7:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":10732,"name":"STABLECOIN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10437,"src":"3673:10:31","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2219","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$2219","typeString":"contract IERC20"}],"id":10731,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3665:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10730,"name":"address","nodeType":"ElementaryTypeName","src":"3665:7:31","typeDescriptions":{}}},"id":10733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3665:19:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3655:29:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10735,"nodeType":"ExpressionStatement","src":"3655:29:31"},{"expression":{"id":10743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":10736,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10720,"src":"3694:4:31","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":10738,"indexExpression":{"hexValue":"31","id":10737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3699:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3694:7:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":10741,"name":"F_TOKEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10434,"src":"3712:7:31","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2219","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$2219","typeString":"contract IERC20"}],"id":10740,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3704:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10739,"name":"address","nodeType":"ElementaryTypeName","src":"3704:7:31","typeDescriptions":{}}},"id":10742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3704:16:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3694:26:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10744,"nodeType":"ExpressionStatement","src":"3694:26:31"},{"expression":{"arguments":[{"arguments":[{"id":10750,"name":"PANCAKE_ROUTER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10440,"src":"3757:14:31","typeDescriptions":{"typeIdentifier":"t_contract$_IPancakeRouter_$10423","typeString":"contract IPancakeRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IPancakeRouter_$10423","typeString":"contract IPancakeRouter"}],"id":10749,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3749:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10748,"name":"address","nodeType":"ElementaryTypeName","src":"3749:7:31","typeDescriptions":{}}},"id":10751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3749:23:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10752,"name":"_amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10709,"src":"3774:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":10745,"name":"STABLECOIN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10437,"src":"3730:10:31","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2219","typeString":"contract IERC20"}},"id":10747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3741:7:31","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":2206,"src":"3730:18:31","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":10753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3730:54:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10754,"nodeType":"ExpressionStatement","src":"3730:54:31"},{"assignments":[10759],"declarations":[{"constant":false,"id":10759,"mutability":"mutable","name":"amounts","nameLocation":"3808:7:31","nodeType":"VariableDeclaration","scope":10774,"src":"3794:21:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":10757,"name":"uint","nodeType":"ElementaryTypeName","src":"3794:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10758,"nodeType":"ArrayTypeName","src":"3794:6:31","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":10769,"initialValue":{"arguments":[{"id":10762,"name":"_amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10709,"src":"3858:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":10763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3869:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":10764,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10720,"src":"3872:4:31","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":10765,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10711,"src":"3878:3:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":10766,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3883:5:31","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":10767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3889:9:31","memberName":"timestamp","nodeType":"MemberAccess","src":"3883:15:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":10760,"name":"PANCAKE_ROUTER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10440,"src":"3818:14:31","typeDescriptions":{"typeIdentifier":"t_contract$_IPancakeRouter_$10423","typeString":"contract IPancakeRouter"}},"id":10761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3833:24:31","memberName":"swapExactTokensForTokens","nodeType":"MemberAccess","referencedDeclaration":10422,"src":"3818:39:31","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256,address[] memory,address,uint256) external returns (uint256[] memory)"}},"id":10768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3818:81:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"3794:105:31"},{"expression":{"baseExpression":{"id":10770,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10759,"src":"3916:7:31","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":10772,"indexExpression":{"hexValue":"31","id":10771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3924:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3916:10:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":10715,"id":10773,"nodeType":"Return","src":"3909:17:31"}]},"id":10775,"implemented":true,"kind":"function","modifiers":[],"name":"_swapStableForFToken","nameLocation":"3516:20:31","nodeType":"FunctionDefinition","parameters":{"id":10712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10709,"mutability":"mutable","name":"_amountIn","nameLocation":"3545:9:31","nodeType":"VariableDeclaration","scope":10775,"src":"3537:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10708,"name":"uint256","nodeType":"ElementaryTypeName","src":"3537:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10711,"mutability":"mutable","name":"_to","nameLocation":"3564:3:31","nodeType":"VariableDeclaration","scope":10775,"src":"3556:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10710,"name":"address","nodeType":"ElementaryTypeName","src":"3556:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3536:32:31"},"returnParameters":{"id":10715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10714,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10775,"src":"3586:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10713,"name":"uint256","nodeType":"ElementaryTypeName","src":"3586:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3585:9:31"},"scope":10824,"src":"3507:426:31","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":10788,"nodeType":"Block","src":"3977:77:31","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10781,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3987:3:31","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3991:6:31","memberName":"sender","nodeType":"MemberAccess","src":"3987:10:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":10783,"name":"F_TOKEN_CONTRACT_ADDRESS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10445,"src":"4001:24:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3987:38:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c79204620546f6b656e20636f6e7472616374","id":10785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4027:23:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_f135aab2725c07697a063e0924cb1befdf2b2f389453222dd0c695ca279f8a43","typeString":"literal_string \"Only F Token contract\""},"value":"Only F Token contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f135aab2725c07697a063e0924cb1befdf2b2f389453222dd0c695ca279f8a43","typeString":"literal_string \"Only F Token contract\""}],"id":10780,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3979:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3979:72:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10787,"nodeType":"ExpressionStatement","src":"3979:72:31"}]},"functionSelector":"ebdac090","id":10789,"implemented":true,"kind":"function","modifiers":[],"name":"depositFees","nameLocation":"3947:11:31","nodeType":"FunctionDefinition","parameters":{"id":10778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10777,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10789,"src":"3959:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10776,"name":"uint256","nodeType":"ElementaryTypeName","src":"3959:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3958:9:31"},"returnParameters":{"id":10779,"nodeType":"ParameterList","parameters":[],"src":"3977:0:31"},"scope":10824,"src":"3938:116:31","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10804,"nodeType":"Block","src":"4122:70:31","statements":[{"expression":{"id":10798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10796,"name":"softFloorPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10461,"src":"4124:14:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10797,"name":"_newPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10791,"src":"4141:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4124:26:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10799,"nodeType":"ExpressionStatement","src":"4124:26:31"},{"eventCall":{"arguments":[{"id":10801,"name":"_newPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10791,"src":"4179:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10800,"name":"SoftFloorPriceUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10479,"src":"4157:21:31","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":10802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4157:32:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10803,"nodeType":"EmitStatement","src":"4152:37:31"}]},"functionSelector":"72a6bf8e","id":10805,"implemented":true,"kind":"function","modifiers":[{"id":10794,"kind":"modifierInvocation","modifierName":{"id":10793,"name":"onlyOwner","nameLocations":["4112:9:31"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"4112:9:31"},"nodeType":"ModifierInvocation","src":"4112:9:31"}],"name":"setSoftFloorPrice","nameLocation":"4068:17:31","nodeType":"FunctionDefinition","parameters":{"id":10792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10791,"mutability":"mutable","name":"_newPrice","nameLocation":"4094:9:31","nodeType":"VariableDeclaration","scope":10805,"src":"4086:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10790,"name":"uint256","nodeType":"ElementaryTypeName","src":"4086:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4085:19:31"},"returnParameters":{"id":10795,"nodeType":"ParameterList","parameters":[],"src":"4122:0:31"},"scope":10824,"src":"4059:133:31","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":10822,"nodeType":"Block","src":"4252:81:31","statements":[{"assignments":[null,10811,null,null,null],"declarations":[null,{"constant":false,"id":10811,"mutability":"mutable","name":"price","nameLocation":"4264:5:31","nodeType":"VariableDeclaration","scope":10822,"src":"4257:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10810,"name":"int256","nodeType":"ElementaryTypeName","src":"4257:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},null,null,null],"id":10815,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":10812,"name":"PRICE_FEED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10443,"src":"4279:10:31","typeDescriptions":{"typeIdentifier":"t_contract$_IAggregatorV3_$10405","typeString":"contract IAggregatorV3"}},"id":10813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4290:15:31","memberName":"latestRoundData","nodeType":"MemberAccess","referencedDeclaration":10404,"src":"4279:26:31","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$","typeString":"function () view external returns (uint80,int256,uint256,uint256,uint80)"}},"id":10814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4279:28:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$","typeString":"tuple(uint80,int256,uint256,uint256,uint80)"}},"nodeType":"VariableDeclarationStatement","src":"4254:53:31"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10816,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10811,"src":"4316:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000_by_1","typeString":"int_const 10000000000"},"id":10819,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":10817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4324:2:31","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3130","id":10818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4328:2:31","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"4324:6:31","typeDescriptions":{"typeIdentifier":"t_rational_10000000000_by_1","typeString":"int_const 10000000000"}},"src":"4316:14:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":10809,"id":10821,"nodeType":"Return","src":"4309:21:31"}]},"functionSelector":"32385491","id":10823,"implemented":true,"kind":"function","modifiers":[],"name":"getFTokenPrice","nameLocation":"4206:14:31","nodeType":"FunctionDefinition","parameters":{"id":10806,"nodeType":"ParameterList","parameters":[],"src":"4220:2:31"},"returnParameters":{"id":10809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10808,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10823,"src":"4244:6:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10807,"name":"int256","nodeType":"ElementaryTypeName","src":"4244:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"4243:8:31"},"scope":10824,"src":"4197:136:31","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":10825,"src":"558:3777:31","usedErrors":[13,18,3815],"usedEvents":[24,10469,10475,10479,10485]}],"src":"32:4304:31"},"id":31}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"IERC1363":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approveAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"approveAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferFromAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFromAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","approveAndCall(address,uint256)":"3177029f","approveAndCall(address,uint256,bytes)":"cae9ca51","balanceOf(address)":"70a08231","supportsInterface(bytes4)":"01ffc9a7","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferAndCall(address,uint256)":"1296ee62","transferAndCall(address,uint256,bytes)":"4000aea0","transferFrom(address,address,uint256)":"23b872dd","transferFromAndCall(address,address,uint256)":"d8fbe994","transferFromAndCall(address,address,uint256,bytes)":"c1d34b89"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/ERC1155.sol":{"ERC1155":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"See {_setURI}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the zero address.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":\"ERC1155\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xb90916a13c108291699c6e6ddb4b1277ea860dfac118a60568a6f432baedcf68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90719e236eafdcbdf56d830f460714668f95eb76c534edf140bb2948d9f8a048\",\"dweb:/ipfs/QmU8QmdKUHBejNeYGuJ913L7xhcysyr5MZLnNnPy9Jqrdx\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xf189f9b417fe1931e1ab706838aff1128528694a9fcdb5ff7665197f2ca57d09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ff0143c836c8c9f85d13708733c09e21251395847fccfb518bf3b556726a840\",\"dweb:/ipfs/QmP69sjjrQrhYAsvCSSB69Bx66SiUPdQUqdzMYnf4wANHm\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x6ec6d7fce29668ede560c7d2e10f9d10de3473f5298e431e70a5767db42fa620\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac0139e51874aeec0730d040e57993187541777eb01d5939c06d5d2b986a54e8\",\"dweb:/ipfs/QmZbMbdPzusXuX9FGkyArV8hgzKLBZaL5RzMtCdCawtwPF\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x98c32de9b02f43eba7c0aba9fadf331cffb35a8d2076dce1d556c8f2cad704aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38f68f76e741cce3ca4e0f8ece5ab9d69a203829311a403bafc8f7b95a7e6d63\",\"dweb:/ipfs/QmZ8PrDXU5DiZ7fzEoRN7vHMQdemtsqvYVV5AdvAnScS4o\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0xaeca1511f7da49bdb16e44aa0f09dca76b51ba079bd068b2f80b8fe6d22b5fa1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://542fe084e72e14f4298954f70c407d5795c1207a02c049f9b91e15f3b9a525a5\",\"dweb:/ipfs/QmbPQMVUVZBE9R9Va6FNfZBTrUY51nrjm8qxpeoAoRrPrQ\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0xa4b9958797e0e9cde82a090525e90f80d5745ba1c67ee72b488bd3087498a17e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9344f7c2f80322c2e76d9d89bed03fd12f3e011e74fde7cf24ea21bdd2abe2d\",\"dweb:/ipfs/QmPMAjF5x2fHUAee2FKMZDBbFVrbZbPCr3a9KHLZaSn1zY\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"IERC1155":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[ERC].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the zero address.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xf189f9b417fe1931e1ab706838aff1128528694a9fcdb5ff7665197f2ca57d09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ff0143c836c8c9f85d13708733c09e21251395847fccfb518bf3b556726a840\",\"dweb:/ipfs/QmP69sjjrQrhYAsvCSSB69Bx66SiUPdQUqdzMYnf4wANHm\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"IERC1155Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":"bc197c81","onERC1155Received(address,address,uint256,uint256,bytes)":"f23a6e61","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface that must be implemented by smart contracts in order to receive ERC-1155 token transfers.\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC-1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC-1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x6ec6d7fce29668ede560c7d2e10f9d10de3473f5298e431e70a5767db42fa620\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac0139e51874aeec0730d040e57993187541777eb01d5939c06d5d2b986a54e8\",\"dweb:/ipfs/QmZbMbdPzusXuX9FGkyArV8hgzKLBZaL5RzMtCdCawtwPF\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"IERC1155MetadataURI":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[ERC].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the zero address.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xf189f9b417fe1931e1ab706838aff1128528694a9fcdb5ff7665197f2ca57d09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ff0143c836c8c9f85d13708733c09e21251395847fccfb518bf3b556726a840\",\"dweb:/ipfs/QmP69sjjrQrhYAsvCSSB69Bx66SiUPdQUqdzMYnf4wANHm\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x98c32de9b02f43eba7c0aba9fadf331cffb35a8d2076dce1d556c8f2cad704aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38f68f76e741cce3ca4e0f8ece5ab9d69a203829311a403bafc8f7b95a7e6d63\",\"dweb:/ipfs/QmZ8PrDXU5DiZ7fzEoRN7vHMQdemtsqvYVV5AdvAnScS4o\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol":{"ERC1155Utils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220036a723b91e9e2683afe0e1e270f1840f340c2f240082104f4016e3d0178825b64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB PUSH11 0x723B91E9E2683AFE0E1E27 0xF XOR BLOCKHASH RETURN BLOCKHASH 0xC2 CALLCODE BLOCKHASH ADDMOD 0x21 DIV DELEGATECALL ADD PUSH15 0x3D0178825B64736F6C634300081400 CALLER ","sourceMap":"439:3114:9:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;439:3114:9;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220036a723b91e9e2683afe0e1e270f1840f340c2f240082104f4016e3d0178825b64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB PUSH11 0x723B91E9E2683AFE0E1E27 0xF XOR BLOCKHASH RETURN BLOCKHASH 0xC2 CALLCODE BLOCKHASH ADDMOD 0x21 DIV DELEGATECALL ADD PUSH15 0x3D0178825B64736F6C634300081400 CALLER ","sourceMap":"439:3114:9:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library that provide common ERC-1155 utility functions. See https://eips.ethereum.org/EIPS/eip-1155[ERC-1155]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":\"ERC1155Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x6ec6d7fce29668ede560c7d2e10f9d10de3473f5298e431e70a5767db42fa620\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac0139e51874aeec0730d040e57993187541777eb01d5939c06d5d2b986a54e8\",\"dweb:/ipfs/QmZbMbdPzusXuX9FGkyArV8hgzKLBZaL5RzMtCdCawtwPF\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0xaeca1511f7da49bdb16e44aa0f09dca76b51ba079bd068b2f80b8fe6d22b5fa1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://542fe084e72e14f4298954f70c407d5795c1207a02c049f9b91e15f3b9a525a5\",\"dweb:/ipfs/QmbPQMVUVZBE9R9Va6FNfZBTrUY51nrjm8qxpeoAoRrPrQ\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"currentAllowance","type":"uint256"},{"internalType":"uint256","name":"requestedDecrease","type":"uint256"}],"name":"SafeERC20FailedDecreaseAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122087d2304e86c07eccd4f9f39f79c28cf8db16e46e5d8ee645e6e8b23c0c5e7a7e64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 0xD2 ADDRESS 0x4E DUP7 0xC0 PUSH31 0xCCD4F9F39F79C28CF8DB16E46E5D8EE645E6E8B23C0C5E7A7E64736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"698:9376:13:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;698:9376:13;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122087d2304e86c07eccd4f9f39f79c28cf8db16e46e5d8ee645e6e8b23c0c5e7a7e64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 0xD2 ADDRESS 0x4E DUP7 0xC0 PUSH31 0xCCD4F9F39F79C28CF8DB16E46E5D8EE645E6E8B23C0C5E7A7E64736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"698:9376:13:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Arrays.sol":{"Arrays":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207f13f14261fd0436ff397fbb334c27d09f8165049065d7aef490978d2fb1eb7b64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH32 0x13F14261FD0436FF397FBB334C27D09F8165049065D7AEF490978D2FB1EB7B64 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"459:20446:14:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;459:20446:14;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207f13f14261fd0436ff397fbb334c27d09f8165049065d7aef490978d2fb1eb7b64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH32 0x13F14261FD0436FF397FBB334C27D09F8165049065D7AEF490978D2FB1EB7B64 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"459:20446:14:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to array types.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Arrays.sol\":\"Arrays\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0xa4b9958797e0e9cde82a090525e90f80d5745ba1c67ee72b488bd3087498a17e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9344f7c2f80322c2e76d9d89bed03fd12f3e011e74fde7cf24ea21bdd2abe2d\",\"dweb:/ipfs/QmPMAjF5x2fHUAee2FKMZDBbFVrbZbPCr3a9KHLZaSn1zY\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Comparators.sol":{"Comparators":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220355a992060b23def967700d94c54a3d95f9c9066d8dd63e7f4c61ecda011343664736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATALOAD GAS SWAP10 KECCAK256 PUSH1 0xB2 RETURNDATASIZE 0xEF SWAP7 PUSH24 0xD94C54A3D95F9C9066D8DD63E7F4C61ECDA01134366473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"224:218:15:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;224:218:15;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220355a992060b23def967700d94c54a3d95f9c9066d8dd63e7f4c61ecda011343664736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATALOAD GAS SWAP10 KECCAK256 PUSH1 0xB2 RETURNDATASIZE 0xEF SWAP7 PUSH24 0xD94C54A3D95F9C9066D8DD63E7F4C61ECDA01134366473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"224:218:15:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides a set of functions to compare values. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Comparators.sol\":\"Comparators\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201ae1761b6a3c5d2458c4708d3276257bae9b475b3c412a0ebb4584fd955181ef64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0xE1 PUSH23 0x1B6A3C5D2458C4708D3276257BAE9B475B3C412A0EBB45 DUP5 REVERT SWAP6 MLOAD DUP2 0xEF PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"657:1315:17:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;657:1315:17;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201ae1761b6a3c5d2458c4708d3276257bae9b475b3c412a0ebb4584fd955181ef64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0xE1 PUSH23 0x1B6A3C5D2458C4708D3276257BAE9B475B3C412A0EBB45 DUP5 REVERT SWAP6 MLOAD DUP2 0xEF PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"657:1315:17:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/SlotDerivation.sol":{"SlotDerivation":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220abb763542953af10db248c3664564a3dd4f2a1613e2a7e6601919580a7f3f8e464736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB 0xB7 PUSH4 0x542953AF LT 0xDB 0x24 DUP13 CALLDATASIZE PUSH5 0x564A3DD4F2 LOG1 PUSH2 0x3E2A PUSH31 0x6601919580A7F3F8E464736F6C634300081400330000000000000000000000 ","sourceMap":"1599:3723:19:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1599:3723:19;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220abb763542953af10db248c3664564a3dd4f2a1613e2a7e6601919580a7f3f8e464736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB 0xB7 PUSH4 0x542953AF LT 0xDB 0x24 DUP13 CALLDATASIZE PUSH5 0x564A3DD4F2 LOG1 PUSH2 0x3E2A PUSH31 0x6601919580A7F3F8E464736F6C634300081400330000000000000000000000 ","sourceMap":"1599:3723:19:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for computing storage (and transient storage) locations from namespaces and deriving slots corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by the solidity language / compiler. See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.]. Example usage: ```solidity contract Example {     // Add the library methods     using StorageSlot for bytes32;     using SlotDerivation for bytes32;     // Declare a namespace     string private constant _NAMESPACE = \\\"<namespace>\\\"; // eg. OpenZeppelin.Slot     function setValueInNamespace(uint256 key, address newValue) internal {         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;     }     function getValueInNamespace(uint256 key) internal view returns (address) {         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;     } } ``` TIP: Consider using this library along with {StorageSlot}. NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking upgrade safety will ignore the slots accessed through this library. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/SlotDerivation.sol\":\"SlotDerivation\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122080637b4cf8f58442afd5b19cbd15928226ab732381b221bc298e4f170f1c143264736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 PUSH4 0x7B4CF8F5 DUP5 TIMESTAMP 0xAF 0xD5 0xB1 SWAP13 0xBD ISZERO SWAP3 DUP3 0x26 0xAB PUSH20 0x2381B221BC298E4F170F1C143264736F6C634300 ADDMOD EQ STOP CALLER ","sourceMap":"1407:2774:20:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1407:2774:20;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122080637b4cf8f58442afd5b19cbd15928226ab732381b221bc298e4f170f1c143264736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 PUSH4 0x7B4CF8F5 DUP5 TIMESTAMP 0xAF 0xD5 0xB1 SWAP13 0xBD ISZERO SWAP3 DUP3 0x26 0xAB PUSH20 0x2381B221BC298E4F170F1C143264736F6C634300 ADDMOD EQ STOP CALLER ","sourceMap":"1407:2774:20:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/Hashes.sol":{"Hashes":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122072bad1f756ed48efa7766af5a5a39a0e467ef88069f5e48b0220281478a4d22264736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH19 0xBAD1F756ED48EFA7766AF5A5A39A0E467EF880 PUSH10 0xF5E48B0220281478A4D2 0x22 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"221:811:21:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;221:811:21;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122072bad1f756ed48efa7766af5a5a39a0e467ef88069f5e48b0220281478a4d22264736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH19 0xBAD1F756ED48EFA7766AF5A5A39A0E467EF880 PUSH10 0xF5E48B0220281478A4D2 0x22 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"221:811:21:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library of standard hash functions. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/Hashes.sol\":\"Hashes\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/Hashes.sol\":{\"keccak256\":\"0x8cbd338f083224b4b6f0ff42cbda641a0a6c31ffcdca197452b97fe4d0918269\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f517dec5ba0c6491395acbf7f1d621f4e89e8f218bf5303c867b1c5ad70c6b11\",\"dweb:/ipfs/QmWmXHRLEw8W6ckth7NyYTU88YfvuS7xSsfae5ksL8qNUe\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol":{"MerkleProof":{"abi":[{"inputs":[],"name":"MerkleProofInvalidMultiproof","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206722f35cd17e3220e03915bd9238d934bfec99e0f54546acc672387d9fdc9f6764736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH8 0x22F35CD17E3220E0 CODECOPY ISZERO 0xBD SWAP3 CODESIZE 0xD9 CALLVALUE 0xBF 0xEC SWAP10 0xE0 CREATE2 GASLIMIT CHAINID 0xAC 0xC6 PUSH19 0x387D9FDC9F6764736F6C634300081400330000 ","sourceMap":"1353:22982:22:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1353:22982:22;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206722f35cd17e3220e03915bd9238d934bfec99e0f54546acc672387d9fdc9f6764736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH8 0x22F35CD17E3220E0 CODECOPY ISZERO 0xBD SWAP3 CODESIZE 0xD9 CALLVALUE 0xBF 0xEC SWAP10 0xE0 CREATE2 GASLIMIT CHAINID 0xAC 0xC6 PUSH19 0x387D9FDC9F6764736F6C634300081400330000 ","sourceMap":"1353:22982:22:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MerkleProofInvalidMultiproof\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"These functions deal with verification of Merkle Tree proofs. The tree and the proofs can be generated using our https://github.com/OpenZeppelin/merkle-tree[JavaScript library]. You will find a quickstart guide in the readme. WARNING: You should avoid using leaf values that are 64 bytes long prior to hashing, or use a hash function other than keccak256 for hashing leaves. This is because the concatenation of a sorted pair of internal nodes in the Merkle tree could be reinterpreted as a leaf value. OpenZeppelin's JavaScript library generates Merkle trees that are safe against this attack out of the box. IMPORTANT: Consider memory side-effects when using custom hashing functions that access memory in an unsafe way. NOTE: This library supports proof verification for merkle trees built using custom _commutative_ hashing functions (i.e. `H(a, b) == H(b, a)`). Proving leaf inclusion in trees built using non-commutative hashing functions requires additional logic that is not supported by this library.\",\"errors\":{\"MerkleProofInvalidMultiproof()\":[{\"details\":\"The multiproof provided is not valid.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":\"MerkleProof\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/Hashes.sol\":{\"keccak256\":\"0x8cbd338f083224b4b6f0ff42cbda641a0a6c31ffcdca197452b97fe4d0918269\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f517dec5ba0c6491395acbf7f1d621f4e89e8f218bf5303c867b1c5ad70c6b11\",\"dweb:/ipfs/QmWmXHRLEw8W6ckth7NyYTU88YfvuS7xSsfae5ksL8qNUe\"]},\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0x36a0c409c437a753cac9b92b75f93b0fbe92803bf2c8ff1517e54b247f166134\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f91ba472de411aa557cdbf6560c40750d87bd11c9060bc04d2ba7119af9d5a6\",\"dweb:/ipfs/QmQjtYo2i7dDvzCEzZ67bDoNSG4RrwMoxPWuqFmX5Xzpuw\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208fcce410fc5cfa45c0c6616aebc7576f43e383fe066bccc2ae83043f7884d82164736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 0xCC 0xE4 LT 0xFC 0x5C STATICCALL GASLIMIT 0xC0 0xC6 PUSH2 0x6AEB 0xC7 JUMPI PUSH16 0x43E383FE066BCCC2AE83043F7884D821 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"281:31863:25:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;281:31863:25;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208fcce410fc5cfa45c0c6616aebc7576f43e383fe066bccc2ae83043f7884d82164736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 0xCC 0xE4 LT 0xFC 0x5C STATICCALL GASLIMIT 0xC0 0xC6 PUSH2 0x6AEB 0xC7 JUMPI PUSH16 0x43E383FE066BCCC2AE83043F7884D821 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"281:31863:25:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e57f6f97354ac8290db535b2e3f293653f51ec40206fa8b2bf9396c18f98af2564736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 PUSH32 0x6F97354AC8290DB535B2E3F293653F51EC40206FA8B2BF9396C18F98AF256473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"769:34173:26:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;769:34173:26;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e57f6f97354ac8290db535b2e3f293653f51ec40206fa8b2bf9396c18f98af2564736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 PUSH32 0x6F97354AC8290DB535B2E3F293653F51EC40206FA8B2BF9396C18F98AF256473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"769:34173:26:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"contracts/F.sol":{"F":{"abi":[{"inputs":[{"internalType":"address","name":"_initialOwner","type":"address"},{"internalType":"address","name":"_stakingContract","type":"address"},{"internalType":"address","name":"_treasuryContract","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"botAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"BotTransactionRedirected","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"newCooldown","type":"uint256"}],"name":"CooldownChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"bool","name":"isExempt","type":"bool"}],"name":"FeeExemptionChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"burnAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"stakingAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"liquidityAmount","type":"uint256"}],"name":"FeesDistributed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"bool","name":"isExempt","type":"bool"}],"name":"LimitExemptionChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"pair","type":"address"}],"name":"PancakeSwapPairSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"wallet","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"lockUntil","type":"uint256"}],"name":"WalletLocked","type":"event"},{"inputs":[],"name":"BURN_STOP_THRESHOLD","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"LAUNCH_TIMESTAMP","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_SUPPLY","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"STAKING_CONTRACT","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"TREASURY_CONTRACT","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"deadblockCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"dynamicCooldownSeconds","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"feeConfigPhase1","outputs":[{"internalType":"uint256","name":"burnFee","type":"uint256"},{"internalType":"uint256","name":"stakingFee","type":"uint256"},{"internalType":"uint256","name":"liquidityFee","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"feeConfigPhase2","outputs":[{"internalType":"uint256","name":"burnFee","type":"uint256"},{"internalType":"uint256","name":"stakingFee","type":"uint256"},{"internalType":"uint256","name":"liquidityFee","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"launchBlockNumber","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxWalletHolding","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pancakeSwapPair","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newCooldownSeconds","type":"uint256"}],"name":"setDynamicCooldown","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bool","name":"isExempt","type":"bool"}],"name":"setFeeExempt","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bool","name":"isExempt","type":"bool"}],"name":"setLimitExempt","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_pair","type":"address"}],"name":"setPancakeSwapPair","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_1678":{"entryPoint":null,"id":1678,"parameterSlots":2,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_8898":{"entryPoint":null,"id":8898,"parameterSlots":3,"returnSlots":0},"@_applyFirstBuyLock_9245":{"entryPoint":2115,"id":9245,"parameterSlots":2,"returnSlots":0},"@_getCurrentFeeConfig_9202":{"entryPoint":2314,"id":9202,"parameterSlots":0,"returnSlots":1},"@_handleBotTransaction_9266":{"entryPoint":1649,"id":9266,"parameterSlots":2,"returnSlots":0},"@_mint_1981":{"entryPoint":658,"id":1981,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":576,"id":146,"parameterSlots":1,"returnSlots":0},"@_transferWithFees_9181":{"entryPoint":1749,"id":9181,"parameterSlots":3,"returnSlots":0},"@_update_1948":{"entryPoint":1342,"id":1948,"parameterSlots":3,"returnSlots":0},"@_update_9062":{"entryPoint":720,"id":9062,"parameterSlots":3,"returnSlots":0},"@balanceOf_1727":{"entryPoint":null,"id":1727,"parameterSlots":1,"returnSlots":1},"@totalSupply_1714":{"entryPoint":null,"id":1714,"parameterSlots":0,"returnSlots":1},"abi_decode_address_fromMemory":{"entryPoint":2452,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_address_fromMemory":{"entryPoint":2481,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_stringliteral_16b8b32967dd4bc0aab6ef6923f02437ba7c233f8b9e5220aa29dfb26b9600be__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_74bfbd0e22b7de34cffebe5af74ea7eca5e99706ecb9129f4c3a64d8a95a2fa5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":3012,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":2977,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":2945,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":3034,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":2637,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":2719,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":2577,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":2923,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":2555,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:6101:32","statements":[{"nodeType":"YulBlock","src":"6:3:32","statements":[]},{"body":{"nodeType":"YulBlock","src":"74:117:32","statements":[{"nodeType":"YulAssignment","src":"84:22:32","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"99:6:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"93:5:32"},"nodeType":"YulFunctionCall","src":"93:13:32"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"84:5:32"}]},{"body":{"nodeType":"YulBlock","src":"169:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"178:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"181:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"171:6:32"},"nodeType":"YulFunctionCall","src":"171:12:32"},"nodeType":"YulExpressionStatement","src":"171:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"128:5:32"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"139:5:32"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"154:3:32","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"159:1:32","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"150:3:32"},"nodeType":"YulFunctionCall","src":"150:11:32"},{"kind":"number","nodeType":"YulLiteral","src":"163:1:32","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"146:3:32"},"nodeType":"YulFunctionCall","src":"146:19:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"135:3:32"},"nodeType":"YulFunctionCall","src":"135:31:32"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"125:2:32"},"nodeType":"YulFunctionCall","src":"125:42:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"118:6:32"},"nodeType":"YulFunctionCall","src":"118:50:32"},"nodeType":"YulIf","src":"115:70:32"}]},"name":"abi_decode_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"53:6:32","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"64:5:32","type":""}],"src":"14:177:32"},{"body":{"nodeType":"YulBlock","src":"311:263:32","statements":[{"body":{"nodeType":"YulBlock","src":"357:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"366:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"369:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"359:6:32"},"nodeType":"YulFunctionCall","src":"359:12:32"},"nodeType":"YulExpressionStatement","src":"359:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"332:7:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"341:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"328:3:32"},"nodeType":"YulFunctionCall","src":"328:23:32"},{"kind":"number","nodeType":"YulLiteral","src":"353:2:32","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"324:3:32"},"nodeType":"YulFunctionCall","src":"324:32:32"},"nodeType":"YulIf","src":"321:52:32"},{"nodeType":"YulAssignment","src":"382:50:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"422:9:32"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"392:29:32"},"nodeType":"YulFunctionCall","src":"392:40:32"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"382:6:32"}]},{"nodeType":"YulAssignment","src":"441:59:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"485:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"496:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"481:3:32"},"nodeType":"YulFunctionCall","src":"481:18:32"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"451:29:32"},"nodeType":"YulFunctionCall","src":"451:49:32"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"441:6:32"}]},{"nodeType":"YulAssignment","src":"509:59:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"553:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"564:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"549:3:32"},"nodeType":"YulFunctionCall","src":"549:18:32"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"519:29:32"},"nodeType":"YulFunctionCall","src":"519:49:32"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"509:6:32"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"261:9:32","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"272:7:32","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"284:6:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"292:6:32","type":""},{"name":"value2","nodeType":"YulTypedName","src":"300:6:32","type":""}],"src":"196:378:32"},{"body":{"nodeType":"YulBlock","src":"611:95:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"628:1:32","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"635:3:32","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"640:10:32","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"631:3:32"},"nodeType":"YulFunctionCall","src":"631:20:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"621:6:32"},"nodeType":"YulFunctionCall","src":"621:31:32"},"nodeType":"YulExpressionStatement","src":"621:31:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"668:1:32","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"671:4:32","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"661:6:32"},"nodeType":"YulFunctionCall","src":"661:15:32"},"nodeType":"YulExpressionStatement","src":"661:15:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"692:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"695:4:32","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"685:6:32"},"nodeType":"YulFunctionCall","src":"685:15:32"},"nodeType":"YulExpressionStatement","src":"685:15:32"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"579:127:32"},{"body":{"nodeType":"YulBlock","src":"766:325:32","statements":[{"nodeType":"YulAssignment","src":"776:22:32","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"790:1:32","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"793:4:32"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"786:3:32"},"nodeType":"YulFunctionCall","src":"786:12:32"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"776:6:32"}]},{"nodeType":"YulVariableDeclaration","src":"807:38:32","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"837:4:32"},{"kind":"number","nodeType":"YulLiteral","src":"843:1:32","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"833:3:32"},"nodeType":"YulFunctionCall","src":"833:12:32"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"811:18:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"884:31:32","statements":[{"nodeType":"YulAssignment","src":"886:27:32","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"900:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"908:4:32","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"896:3:32"},"nodeType":"YulFunctionCall","src":"896:17:32"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"886:6:32"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"864:18:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"857:6:32"},"nodeType":"YulFunctionCall","src":"857:26:32"},"nodeType":"YulIf","src":"854:61:32"},{"body":{"nodeType":"YulBlock","src":"974:111:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"995:1:32","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1002:3:32","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1007:10:32","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"998:3:32"},"nodeType":"YulFunctionCall","src":"998:20:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"988:6:32"},"nodeType":"YulFunctionCall","src":"988:31:32"},"nodeType":"YulExpressionStatement","src":"988:31:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1039:1:32","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1042:4:32","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1032:6:32"},"nodeType":"YulFunctionCall","src":"1032:15:32"},"nodeType":"YulExpressionStatement","src":"1032:15:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1067:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1070:4:32","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1060:6:32"},"nodeType":"YulFunctionCall","src":"1060:15:32"},"nodeType":"YulExpressionStatement","src":"1060:15:32"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"930:18:32"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"953:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"961:2:32","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"950:2:32"},"nodeType":"YulFunctionCall","src":"950:14:32"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"927:2:32"},"nodeType":"YulFunctionCall","src":"927:38:32"},"nodeType":"YulIf","src":"924:161:32"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"746:4:32","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"755:6:32","type":""}],"src":"711:380:32"},{"body":{"nodeType":"YulBlock","src":"1152:65:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1169:1:32","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"1172:3:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1162:6:32"},"nodeType":"YulFunctionCall","src":"1162:14:32"},"nodeType":"YulExpressionStatement","src":"1162:14:32"},{"nodeType":"YulAssignment","src":"1185:26:32","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1203:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1206:4:32","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1193:9:32"},"nodeType":"YulFunctionCall","src":"1193:18:32"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"1185:4:32"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"1135:3:32","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"1143:4:32","type":""}],"src":"1096:121:32"},{"body":{"nodeType":"YulBlock","src":"1303:464:32","statements":[{"body":{"nodeType":"YulBlock","src":"1336:425:32","statements":[{"nodeType":"YulVariableDeclaration","src":"1350:11:32","value":{"kind":"number","nodeType":"YulLiteral","src":"1360:1:32","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1354:2:32","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"1381:2:32"},{"name":"array","nodeType":"YulIdentifier","src":"1385:5:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1374:6:32"},"nodeType":"YulFunctionCall","src":"1374:17:32"},"nodeType":"YulExpressionStatement","src":"1374:17:32"},{"nodeType":"YulVariableDeclaration","src":"1404:31:32","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"1426:2:32"},{"kind":"number","nodeType":"YulLiteral","src":"1430:4:32","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1416:9:32"},"nodeType":"YulFunctionCall","src":"1416:19:32"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"1408:4:32","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1448:57:32","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1471:4:32"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1481:1:32","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"1488:10:32"},{"kind":"number","nodeType":"YulLiteral","src":"1500:2:32","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1484:3:32"},"nodeType":"YulFunctionCall","src":"1484:19:32"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1477:3:32"},"nodeType":"YulFunctionCall","src":"1477:27:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1467:3:32"},"nodeType":"YulFunctionCall","src":"1467:38:32"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"1452:11:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"1542:23:32","statements":[{"nodeType":"YulAssignment","src":"1544:19:32","value":{"name":"data","nodeType":"YulIdentifier","src":"1559:4:32"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"1544:11:32"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"1524:10:32"},{"kind":"number","nodeType":"YulLiteral","src":"1536:4:32","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1521:2:32"},"nodeType":"YulFunctionCall","src":"1521:20:32"},"nodeType":"YulIf","src":"1518:47:32"},{"nodeType":"YulVariableDeclaration","src":"1578:41:32","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1592:4:32"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1602:1:32","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"1609:3:32"},{"kind":"number","nodeType":"YulLiteral","src":"1614:2:32","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1605:3:32"},"nodeType":"YulFunctionCall","src":"1605:12:32"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1598:3:32"},"nodeType":"YulFunctionCall","src":"1598:20:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1588:3:32"},"nodeType":"YulFunctionCall","src":"1588:31:32"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"1582:2:32","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1632:24:32","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"1645:11:32"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"1636:5:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"1730:21:32","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1739:5:32"},{"name":"_1","nodeType":"YulIdentifier","src":"1746:2:32"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"1732:6:32"},"nodeType":"YulFunctionCall","src":"1732:17:32"},"nodeType":"YulExpressionStatement","src":"1732:17:32"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1680:5:32"},{"name":"_2","nodeType":"YulIdentifier","src":"1687:2:32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1677:2:32"},"nodeType":"YulFunctionCall","src":"1677:13:32"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1691:26:32","statements":[{"nodeType":"YulAssignment","src":"1693:22:32","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1706:5:32"},{"kind":"number","nodeType":"YulLiteral","src":"1713:1:32","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1702:3:32"},"nodeType":"YulFunctionCall","src":"1702:13:32"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"1693:5:32"}]}]},"pre":{"nodeType":"YulBlock","src":"1673:3:32","statements":[]},"src":"1669:82:32"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"1319:3:32"},{"kind":"number","nodeType":"YulLiteral","src":"1324:2:32","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1316:2:32"},"nodeType":"YulFunctionCall","src":"1316:11:32"},"nodeType":"YulIf","src":"1313:448:32"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"1275:5:32","type":""},{"name":"len","nodeType":"YulTypedName","src":"1282:3:32","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"1287:10:32","type":""}],"src":"1222:545:32"},{"body":{"nodeType":"YulBlock","src":"1857:81:32","statements":[{"nodeType":"YulAssignment","src":"1867:65:32","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1882:4:32"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1900:1:32","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"1903:3:32"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1896:3:32"},"nodeType":"YulFunctionCall","src":"1896:11:32"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1913:1:32","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1909:3:32"},"nodeType":"YulFunctionCall","src":"1909:6:32"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1892:3:32"},"nodeType":"YulFunctionCall","src":"1892:24:32"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1888:3:32"},"nodeType":"YulFunctionCall","src":"1888:29:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1878:3:32"},"nodeType":"YulFunctionCall","src":"1878:40:32"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1924:1:32","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"1927:3:32"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1920:3:32"},"nodeType":"YulFunctionCall","src":"1920:11:32"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1875:2:32"},"nodeType":"YulFunctionCall","src":"1875:57:32"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"1867:4:32"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1834:4:32","type":""},{"name":"len","nodeType":"YulTypedName","src":"1840:3:32","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"1848:4:32","type":""}],"src":"1772:166:32"},{"body":{"nodeType":"YulBlock","src":"2039:1256:32","statements":[{"nodeType":"YulVariableDeclaration","src":"2049:24:32","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2069:3:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2063:5:32"},"nodeType":"YulFunctionCall","src":"2063:10:32"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"2053:6:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"2116:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2118:16:32"},"nodeType":"YulFunctionCall","src":"2118:18:32"},"nodeType":"YulExpressionStatement","src":"2118:18:32"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"2088:6:32"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2104:2:32","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"2108:1:32","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2100:3:32"},"nodeType":"YulFunctionCall","src":"2100:10:32"},{"kind":"number","nodeType":"YulLiteral","src":"2112:1:32","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2096:3:32"},"nodeType":"YulFunctionCall","src":"2096:18:32"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2085:2:32"},"nodeType":"YulFunctionCall","src":"2085:30:32"},"nodeType":"YulIf","src":"2082:56:32"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2191:4:32"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2229:4:32"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"2223:5:32"},"nodeType":"YulFunctionCall","src":"2223:11:32"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"2197:25:32"},"nodeType":"YulFunctionCall","src":"2197:38:32"},{"name":"newLen","nodeType":"YulIdentifier","src":"2237:6:32"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"2147:43:32"},"nodeType":"YulFunctionCall","src":"2147:97:32"},"nodeType":"YulExpressionStatement","src":"2147:97:32"},{"nodeType":"YulVariableDeclaration","src":"2253:18:32","value":{"kind":"number","nodeType":"YulLiteral","src":"2270:1:32","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"2257:9:32","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2280:23:32","value":{"kind":"number","nodeType":"YulLiteral","src":"2299:4:32","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"2284:11:32","type":""}]},{"nodeType":"YulAssignment","src":"2312:24:32","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"2325:11:32"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"2312:9:32"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"2382:656:32","statements":[{"nodeType":"YulVariableDeclaration","src":"2396:35:32","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"2415:6:32"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2427:2:32","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2423:3:32"},"nodeType":"YulFunctionCall","src":"2423:7:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2411:3:32"},"nodeType":"YulFunctionCall","src":"2411:20:32"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"2400:7:32","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2444:49:32","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2488:4:32"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"2458:29:32"},"nodeType":"YulFunctionCall","src":"2458:35:32"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"2448:6:32","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2506:10:32","value":{"kind":"number","nodeType":"YulLiteral","src":"2515:1:32","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2510:1:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"2593:172:32","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2618:6:32"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2636:3:32"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2641:9:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2632:3:32"},"nodeType":"YulFunctionCall","src":"2632:19:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2626:5:32"},"nodeType":"YulFunctionCall","src":"2626:26:32"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2611:6:32"},"nodeType":"YulFunctionCall","src":"2611:42:32"},"nodeType":"YulExpressionStatement","src":"2611:42:32"},{"nodeType":"YulAssignment","src":"2670:24:32","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2684:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"2692:1:32","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2680:3:32"},"nodeType":"YulFunctionCall","src":"2680:14:32"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2670:6:32"}]},{"nodeType":"YulAssignment","src":"2711:40:32","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"2728:9:32"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"2739:11:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2724:3:32"},"nodeType":"YulFunctionCall","src":"2724:27:32"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"2711:9:32"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2540:1:32"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"2543:7:32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2537:2:32"},"nodeType":"YulFunctionCall","src":"2537:14:32"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2552:28:32","statements":[{"nodeType":"YulAssignment","src":"2554:24:32","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2563:1:32"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"2566:11:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2559:3:32"},"nodeType":"YulFunctionCall","src":"2559:19:32"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2554:1:32"}]}]},"pre":{"nodeType":"YulBlock","src":"2533:3:32","statements":[]},"src":"2529:236:32"},{"body":{"nodeType":"YulBlock","src":"2813:166:32","statements":[{"nodeType":"YulVariableDeclaration","src":"2831:43:32","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2858:3:32"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2863:9:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2854:3:32"},"nodeType":"YulFunctionCall","src":"2854:19:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2848:5:32"},"nodeType":"YulFunctionCall","src":"2848:26:32"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"2835:9:32","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2898:6:32"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"2910:9:32"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2937:1:32","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"2940:6:32"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2933:3:32"},"nodeType":"YulFunctionCall","src":"2933:14:32"},{"kind":"number","nodeType":"YulLiteral","src":"2949:3:32","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2929:3:32"},"nodeType":"YulFunctionCall","src":"2929:24:32"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2959:1:32","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2955:3:32"},"nodeType":"YulFunctionCall","src":"2955:6:32"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2925:3:32"},"nodeType":"YulFunctionCall","src":"2925:37:32"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2921:3:32"},"nodeType":"YulFunctionCall","src":"2921:42:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2906:3:32"},"nodeType":"YulFunctionCall","src":"2906:58:32"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2891:6:32"},"nodeType":"YulFunctionCall","src":"2891:74:32"},"nodeType":"YulExpressionStatement","src":"2891:74:32"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"2784:7:32"},{"name":"newLen","nodeType":"YulIdentifier","src":"2793:6:32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2781:2:32"},"nodeType":"YulFunctionCall","src":"2781:19:32"},"nodeType":"YulIf","src":"2778:201:32"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2999:4:32"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3013:1:32","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"3016:6:32"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3009:3:32"},"nodeType":"YulFunctionCall","src":"3009:14:32"},{"kind":"number","nodeType":"YulLiteral","src":"3025:1:32","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3005:3:32"},"nodeType":"YulFunctionCall","src":"3005:22:32"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2992:6:32"},"nodeType":"YulFunctionCall","src":"2992:36:32"},"nodeType":"YulExpressionStatement","src":"2992:36:32"}]},"nodeType":"YulCase","src":"2375:663:32","value":{"kind":"number","nodeType":"YulLiteral","src":"2380:1:32","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"3055:234:32","statements":[{"nodeType":"YulVariableDeclaration","src":"3069:14:32","value":{"kind":"number","nodeType":"YulLiteral","src":"3082:1:32","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3073:5:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"3118:67:32","statements":[{"nodeType":"YulAssignment","src":"3136:35:32","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3155:3:32"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"3160:9:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3151:3:32"},"nodeType":"YulFunctionCall","src":"3151:19:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3145:5:32"},"nodeType":"YulFunctionCall","src":"3145:26:32"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3136:5:32"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"3099:6:32"},"nodeType":"YulIf","src":"3096:89:32"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3205:4:32"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3264:5:32"},{"name":"newLen","nodeType":"YulIdentifier","src":"3271:6:32"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"3211:52:32"},"nodeType":"YulFunctionCall","src":"3211:67:32"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3198:6:32"},"nodeType":"YulFunctionCall","src":"3198:81:32"},"nodeType":"YulExpressionStatement","src":"3198:81:32"}]},"nodeType":"YulCase","src":"3047:242:32","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"2355:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"2363:2:32","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2352:2:32"},"nodeType":"YulFunctionCall","src":"2352:14:32"},"nodeType":"YulSwitch","src":"2345:944:32"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"2024:4:32","type":""},{"name":"src","nodeType":"YulTypedName","src":"2030:3:32","type":""}],"src":"1943:1352:32"},{"body":{"nodeType":"YulBlock","src":"3401:102:32","statements":[{"nodeType":"YulAssignment","src":"3411:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3423:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"3434:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3419:3:32"},"nodeType":"YulFunctionCall","src":"3419:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3411:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3453:9:32"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3468:6:32"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3484:3:32","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"3489:1:32","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3480:3:32"},"nodeType":"YulFunctionCall","src":"3480:11:32"},{"kind":"number","nodeType":"YulLiteral","src":"3493:1:32","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3476:3:32"},"nodeType":"YulFunctionCall","src":"3476:19:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3464:3:32"},"nodeType":"YulFunctionCall","src":"3464:32:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3446:6:32"},"nodeType":"YulFunctionCall","src":"3446:51:32"},"nodeType":"YulExpressionStatement","src":"3446:51:32"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3370:9:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3381:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3392:4:32","type":""}],"src":"3300:203:32"},{"body":{"nodeType":"YulBlock","src":"3540:95:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3557:1:32","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3564:3:32","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3569:10:32","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3560:3:32"},"nodeType":"YulFunctionCall","src":"3560:20:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3550:6:32"},"nodeType":"YulFunctionCall","src":"3550:31:32"},"nodeType":"YulExpressionStatement","src":"3550:31:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3597:1:32","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3600:4:32","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3590:6:32"},"nodeType":"YulFunctionCall","src":"3590:15:32"},"nodeType":"YulExpressionStatement","src":"3590:15:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3621:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3624:4:32","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3614:6:32"},"nodeType":"YulFunctionCall","src":"3614:15:32"},"nodeType":"YulExpressionStatement","src":"3614:15:32"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"3508:127:32"},{"body":{"nodeType":"YulBlock","src":"3692:116:32","statements":[{"nodeType":"YulAssignment","src":"3702:20:32","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3717:1:32"},{"name":"y","nodeType":"YulIdentifier","src":"3720:1:32"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3713:3:32"},"nodeType":"YulFunctionCall","src":"3713:9:32"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"3702:7:32"}]},{"body":{"nodeType":"YulBlock","src":"3780:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"3782:16:32"},"nodeType":"YulFunctionCall","src":"3782:18:32"},"nodeType":"YulExpressionStatement","src":"3782:18:32"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3751:1:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3744:6:32"},"nodeType":"YulFunctionCall","src":"3744:9:32"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"3758:1:32"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"3765:7:32"},{"name":"x","nodeType":"YulIdentifier","src":"3774:1:32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3761:3:32"},"nodeType":"YulFunctionCall","src":"3761:15:32"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3755:2:32"},"nodeType":"YulFunctionCall","src":"3755:22:32"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3741:2:32"},"nodeType":"YulFunctionCall","src":"3741:37:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3734:6:32"},"nodeType":"YulFunctionCall","src":"3734:45:32"},"nodeType":"YulIf","src":"3731:71:32"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"3671:1:32","type":""},{"name":"y","nodeType":"YulTypedName","src":"3674:1:32","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"3680:7:32","type":""}],"src":"3640:168:32"},{"body":{"nodeType":"YulBlock","src":"3859:171:32","statements":[{"body":{"nodeType":"YulBlock","src":"3890:111:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3911:1:32","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3918:3:32","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3923:10:32","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3914:3:32"},"nodeType":"YulFunctionCall","src":"3914:20:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3904:6:32"},"nodeType":"YulFunctionCall","src":"3904:31:32"},"nodeType":"YulExpressionStatement","src":"3904:31:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3955:1:32","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3958:4:32","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3948:6:32"},"nodeType":"YulFunctionCall","src":"3948:15:32"},"nodeType":"YulExpressionStatement","src":"3948:15:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3983:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3986:4:32","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3976:6:32"},"nodeType":"YulFunctionCall","src":"3976:15:32"},"nodeType":"YulExpressionStatement","src":"3976:15:32"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"3879:1:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3872:6:32"},"nodeType":"YulFunctionCall","src":"3872:9:32"},"nodeType":"YulIf","src":"3869:132:32"},{"nodeType":"YulAssignment","src":"4010:14:32","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4019:1:32"},{"name":"y","nodeType":"YulIdentifier","src":"4022:1:32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4015:3:32"},"nodeType":"YulFunctionCall","src":"4015:9:32"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"4010:1:32"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"3844:1:32","type":""},{"name":"y","nodeType":"YulTypedName","src":"3847:1:32","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"3853:1:32","type":""}],"src":"3813:217:32"},{"body":{"nodeType":"YulBlock","src":"4083:77:32","statements":[{"nodeType":"YulAssignment","src":"4093:16:32","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4104:1:32"},{"name":"y","nodeType":"YulIdentifier","src":"4107:1:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4100:3:32"},"nodeType":"YulFunctionCall","src":"4100:9:32"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"4093:3:32"}]},{"body":{"nodeType":"YulBlock","src":"4132:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"4134:16:32"},"nodeType":"YulFunctionCall","src":"4134:18:32"},"nodeType":"YulExpressionStatement","src":"4134:18:32"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4124:1:32"},{"name":"sum","nodeType":"YulIdentifier","src":"4127:3:32"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4121:2:32"},"nodeType":"YulFunctionCall","src":"4121:10:32"},"nodeType":"YulIf","src":"4118:36:32"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"4066:1:32","type":""},{"name":"y","nodeType":"YulTypedName","src":"4069:1:32","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"4075:3:32","type":""}],"src":"4035:125:32"},{"body":{"nodeType":"YulBlock","src":"4339:165:32","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4356:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"4367:2:32","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4349:6:32"},"nodeType":"YulFunctionCall","src":"4349:21:32"},"nodeType":"YulExpressionStatement","src":"4349:21:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4390:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"4401:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4386:3:32"},"nodeType":"YulFunctionCall","src":"4386:18:32"},{"kind":"number","nodeType":"YulLiteral","src":"4406:2:32","type":"","value":"15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4379:6:32"},"nodeType":"YulFunctionCall","src":"4379:30:32"},"nodeType":"YulExpressionStatement","src":"4379:30:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4429:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"4440:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4425:3:32"},"nodeType":"YulFunctionCall","src":"4425:18:32"},{"hexValue":"436f6f6c646f776e20616374697665","kind":"string","nodeType":"YulLiteral","src":"4445:17:32","type":"","value":"Cooldown active"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4418:6:32"},"nodeType":"YulFunctionCall","src":"4418:45:32"},"nodeType":"YulExpressionStatement","src":"4418:45:32"},{"nodeType":"YulAssignment","src":"4472:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4484:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"4495:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4480:3:32"},"nodeType":"YulFunctionCall","src":"4480:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4472:4:32"}]}]},"name":"abi_encode_tuple_t_stringliteral_74bfbd0e22b7de34cffebe5af74ea7eca5e99706ecb9129f4c3a64d8a95a2fa5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4316:9:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4330:4:32","type":""}],"src":"4165:339:32"},{"body":{"nodeType":"YulBlock","src":"4683:174:32","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4700:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"4711:2:32","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4693:6:32"},"nodeType":"YulFunctionCall","src":"4693:21:32"},"nodeType":"YulExpressionStatement","src":"4693:21:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4734:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"4745:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4730:3:32"},"nodeType":"YulFunctionCall","src":"4730:18:32"},{"kind":"number","nodeType":"YulLiteral","src":"4750:2:32","type":"","value":"24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4723:6:32"},"nodeType":"YulFunctionCall","src":"4723:30:32"},"nodeType":"YulExpressionStatement","src":"4723:30:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4773:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"4784:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4769:3:32"},"nodeType":"YulFunctionCall","src":"4769:18:32"},{"hexValue":"45786365656473206d61782077616c6c6574206c696d6974","kind":"string","nodeType":"YulLiteral","src":"4789:26:32","type":"","value":"Exceeds max wallet limit"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4762:6:32"},"nodeType":"YulFunctionCall","src":"4762:54:32"},"nodeType":"YulExpressionStatement","src":"4762:54:32"},{"nodeType":"YulAssignment","src":"4825:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4837:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"4848:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4833:3:32"},"nodeType":"YulFunctionCall","src":"4833:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4825:4:32"}]}]},"name":"abi_encode_tuple_t_stringliteral_16b8b32967dd4bc0aab6ef6923f02437ba7c233f8b9e5220aa29dfb26b9600be__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4660:9:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4674:4:32","type":""}],"src":"4509:348:32"},{"body":{"nodeType":"YulBlock","src":"5019:188:32","statements":[{"nodeType":"YulAssignment","src":"5029:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5041:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"5052:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5037:3:32"},"nodeType":"YulFunctionCall","src":"5037:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5029:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5071:9:32"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5086:6:32"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5102:3:32","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"5107:1:32","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5098:3:32"},"nodeType":"YulFunctionCall","src":"5098:11:32"},{"kind":"number","nodeType":"YulLiteral","src":"5111:1:32","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5094:3:32"},"nodeType":"YulFunctionCall","src":"5094:19:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5082:3:32"},"nodeType":"YulFunctionCall","src":"5082:32:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5064:6:32"},"nodeType":"YulFunctionCall","src":"5064:51:32"},"nodeType":"YulExpressionStatement","src":"5064:51:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5135:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"5146:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5131:3:32"},"nodeType":"YulFunctionCall","src":"5131:18:32"},{"name":"value1","nodeType":"YulIdentifier","src":"5151:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5124:6:32"},"nodeType":"YulFunctionCall","src":"5124:34:32"},"nodeType":"YulExpressionStatement","src":"5124:34:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5178:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"5189:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5174:3:32"},"nodeType":"YulFunctionCall","src":"5174:18:32"},{"name":"value2","nodeType":"YulIdentifier","src":"5194:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5167:6:32"},"nodeType":"YulFunctionCall","src":"5167:34:32"},"nodeType":"YulExpressionStatement","src":"5167:34:32"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4972:9:32","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4983:6:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4991:6:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4999:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5010:4:32","type":""}],"src":"4862:345:32"},{"body":{"nodeType":"YulBlock","src":"5313:76:32","statements":[{"nodeType":"YulAssignment","src":"5323:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5335:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"5346:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5331:3:32"},"nodeType":"YulFunctionCall","src":"5331:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5323:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5365:9:32"},{"name":"value0","nodeType":"YulIdentifier","src":"5376:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5358:6:32"},"nodeType":"YulFunctionCall","src":"5358:25:32"},"nodeType":"YulExpressionStatement","src":"5358:25:32"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5282:9:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5293:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5304:4:32","type":""}],"src":"5212:177:32"},{"body":{"nodeType":"YulBlock","src":"5443:79:32","statements":[{"nodeType":"YulAssignment","src":"5453:17:32","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5465:1:32"},{"name":"y","nodeType":"YulIdentifier","src":"5468:1:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5461:3:32"},"nodeType":"YulFunctionCall","src":"5461:9:32"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"5453:4:32"}]},{"body":{"nodeType":"YulBlock","src":"5494:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"5496:16:32"},"nodeType":"YulFunctionCall","src":"5496:18:32"},"nodeType":"YulExpressionStatement","src":"5496:18:32"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"5485:4:32"},{"name":"x","nodeType":"YulIdentifier","src":"5491:1:32"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5482:2:32"},"nodeType":"YulFunctionCall","src":"5482:11:32"},"nodeType":"YulIf","src":"5479:37:32"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"5425:1:32","type":""},{"name":"y","nodeType":"YulTypedName","src":"5428:1:32","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"5434:4:32","type":""}],"src":"5394:128:32"},{"body":{"nodeType":"YulBlock","src":"5684:162:32","statements":[{"nodeType":"YulAssignment","src":"5694:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5706:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"5717:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5702:3:32"},"nodeType":"YulFunctionCall","src":"5702:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5694:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5736:9:32"},{"name":"value0","nodeType":"YulIdentifier","src":"5747:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5729:6:32"},"nodeType":"YulFunctionCall","src":"5729:25:32"},"nodeType":"YulExpressionStatement","src":"5729:25:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5774:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"5785:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5770:3:32"},"nodeType":"YulFunctionCall","src":"5770:18:32"},{"name":"value1","nodeType":"YulIdentifier","src":"5790:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5763:6:32"},"nodeType":"YulFunctionCall","src":"5763:34:32"},"nodeType":"YulExpressionStatement","src":"5763:34:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5817:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"5828:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5813:3:32"},"nodeType":"YulFunctionCall","src":"5813:18:32"},{"name":"value2","nodeType":"YulIdentifier","src":"5833:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5806:6:32"},"nodeType":"YulFunctionCall","src":"5806:34:32"},"nodeType":"YulExpressionStatement","src":"5806:34:32"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5637:9:32","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5648:6:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5656:6:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5664:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5675:4:32","type":""}],"src":"5527:319:32"},{"body":{"nodeType":"YulBlock","src":"5980:119:32","statements":[{"nodeType":"YulAssignment","src":"5990:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6002:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"6013:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5998:3:32"},"nodeType":"YulFunctionCall","src":"5998:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5990:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6032:9:32"},{"name":"value0","nodeType":"YulIdentifier","src":"6043:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6025:6:32"},"nodeType":"YulFunctionCall","src":"6025:25:32"},"nodeType":"YulExpressionStatement","src":"6025:25:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6070:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"6081:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6066:3:32"},"nodeType":"YulFunctionCall","src":"6066:18:32"},{"name":"value1","nodeType":"YulIdentifier","src":"6086:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6059:6:32"},"nodeType":"YulFunctionCall","src":"6059:34:32"},"nodeType":"YulExpressionStatement","src":"6059:34:32"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5941:9:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5952:6:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5960:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5971:4:32","type":""}],"src":"5851:248:32"}]},"contents":"{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        value2 := abi_decode_address_fromMemory(add(headStart, 64))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_74bfbd0e22b7de34cffebe5af74ea7eca5e99706ecb9129f4c3a64d8a95a2fa5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Cooldown active\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_16b8b32967dd4bc0aab6ef6923f02437ba7c233f8b9e5220aa29dfb26b9600be__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Exceeds max wallet limit\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n}","id":32,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"61012060405261dead60e0526a52b7d2dcc80cd2e4000000610100526002601155600f6014553480156200003257600080fd5b5060405162001f7b38038062001f7b8339810160408190526200005591620009b1565b826040518060400160405280600b81526020016a119c9959591bdb55195cdd60aa1b815250604051806040016040528060018152602001602360f91b8152508160039081620000a5919062000a9f565b506004620000b4828262000a9f565b5050506001600160a01b038116620000e757604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b620000f28162000240565b504260c052436012556001600160a01b03808316608052811660a052604080516060808201835260fa80835260016020848101829052938501819052600791909155600881905560098190558351918201845260648083529282018190529201829052600a819055600b829055600c919091556200017e6b019d971e4fe8401e74000000600362000b81565b6200018a919062000ba1565b600d556001600160a01b038381166000908152600f602090815260408083208054600160ff1991821681179092553080865283862080548316841790556080518716808752848720805484168517905560a05190971680875284872080548416851790559086526010909452828520805482168317905592845281842080548416821790559383529091208054909116909117905562000237836b019d971e4fe8401e7400000062000292565b50505062000bf0565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216620002be5760405163ec442f0560e01b815260006004820152602401620000de565b620002cc60008383620002d0565b5050565b6001600160a01b038316620002f157620002ec8383836200053e565b505050565b6001600160a01b0383166000908152600f602052604081205460ff161580156200033457506001600160a01b0383166000908152600f602052604090205460ff16155b90508080156200035157506006546001600160a01b038581169116145b80156200036f57506011546012546200036b919062000bc4565b4311155b15620003875762000381838362000671565b50505050565b801562000415576014546001600160a01b038516600090815260136020526040902054620003b6919062000bc4565b421015620003f95760405162461bcd60e51b815260206004820152600f60248201526e436f6f6c646f776e2061637469766560881b6044820152606401620000de565b6001600160a01b03841660009081526013602052604090204290555b80156200042f5762000429848484620006d5565b6200043c565b6200043c8484846200053e565b6001600160a01b03831660009081526010602052604090205460ff16620004c957600d546001600160a01b0384166000908152602081905260409020541115620004c95760405162461bcd60e51b815260206004820152601860248201527f45786365656473206d61782077616c6c6574206c696d697400000000000000006044820152606401620000de565b6006546001600160a01b0385811691161480156200050657508162000503846001600160a01b031660009081526020819052604090205490565b10155b80156200052c57506001600160a01b03831660009081526010602052604090205460ff16155b15620003815762000381838362000843565b6001600160a01b0383166200056d57806002600082825462000561919062000bc4565b90915550620005e19050565b6001600160a01b03831660009081526020819052604090205481811015620005c25760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401620000de565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216620005ff576002805482900390556200061e565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200066491815260200190565b60405180910390a3505050565b60065460a0516200068d916001600160a01b031690836200053e565b816001600160a01b03167fab4a0400b4e49e5be3fcfd84afea49e7d6e0352a244e32f3734e2791532d887682604051620006c991815260200190565b60405180910390a25050565b6000620006e16200090a565b90506000612710826000015184620006fa919062000b81565b62000706919062000ba1565b905060006127108360200151856200071f919062000b81565b6200072b919062000ba1565b9050600061271084604001518662000744919062000b81565b62000750919062000ba1565b90506000818362000762868962000bda565b6200076e919062000bda565b6200077a919062000bda565b905080156200079057620007908888836200053e565b61010051600254118015620007a55750600084115b15620007c057620007c08860e051866200053e60201b60201c565b8215620007dc57620007dc88608051856200053e60201b60201c565b8115620007f857620007f88860a051846200053e60201b60201c565b60408051858152602081018590529081018390527f312c5308f42848705a866c73dec11fd0783c2d64aac6a97e94467062ad3f40589060600160405180910390a15050505050505050565b600d5460009062000859836301e1338062000b81565b62000865919062000ba1565b905062278d00811115620002ec57604051806040016040528082426200088c919062000bc4565b815260209081018490526001600160a01b0385166000818152600e8352604090208351815592909101516001909201919091557f5394ea92aca3ea4a83aa22b55619ded8d5ec09b9bfc1c5802c41ae182dfc878e83620008ed844262000bc4565b6040805192835260208301919091520160405180910390a2505050565b6200092f60405180606001604052806000815260200160008152602001600081525090565b60c05162000942906303c2670062000bc4565b4210156200096f575060408051606081018252600754815260085460208201526009549181019190915290565b5060408051606081018252600a548152600b546020820152600c549181019190915290565b80516001600160a01b0381168114620009ac57600080fd5b919050565b600080600060608486031215620009c757600080fd5b620009d28462000994565b9250620009e26020850162000994565b9150620009f26040850162000994565b90509250925092565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168062000a2657607f821691505b60208210810362000a4757634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002ec57600081815260208120601f850160051c8101602086101562000a765750805b601f850160051c820191505b8181101562000a975782815560010162000a82565b505050505050565b81516001600160401b0381111562000abb5762000abb620009fb565b62000ad38162000acc845462000a11565b8462000a4d565b602080601f83116001811462000b0b576000841562000af25750858301515b600019600386901b1c1916600185901b17855562000a97565b600085815260208120601f198616915b8281101562000b3c5788860151825594840194600190910190840162000b1b565b508582101562000b5b5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141762000b9b5762000b9b62000b6b565b92915050565b60008262000bbf57634e487b7160e01b600052601260045260246000fd5b500490565b8082018082111562000b9b5762000b9b62000b6b565b8181038181111562000b9b5762000b9b62000b6b565b60805160a05160c05160e0516101005161132362000c58600039600081816104500152610e5101526000610e91015260008181610416015261104a01526000818161036001528181610d4b0152610ef30152600081816103ad0152610ec201526113236000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c806384e92c00116100f9578063a9059cbb11610097578063e14e751911610071578063e14e751914610408578063e954f41d14610411578063f2fde38b14610438578063f5d7abb31461044b57600080fd5b8063a9059cbb14610395578063da19ddfb146103a8578063dd62ed3e146103cf57600080fd5b80638ebfc796116100d35780638ebfc7961461034057806395d89b41146103535780639e9df2b91461035b578063a06655a61461038257600080fd5b806384e92c0014610314578063876b33c81461031d5780638da5cb5b1461032f57600080fd5b806340a24e6c116101665780634ee13e97116101405780634ee13e97146102c75780635d0f1ada146102d057806370a08231146102e3578063715018a61461030c57600080fd5b806340a24e6c1461027e578063429494f21461029357806348d79155146102be57600080fd5b806318160ddd116101a257806318160ddd1461023757806323b872dd14610249578063313ce5671461025c57806332cb6b0c1461026b57600080fd5b806306fdde03146101c9578063095ea7b3146101e757806314b800b41461020a575b600080fd5b6101d1610472565b6040516101de91906110c4565b60405180910390f35b6101fa6101f536600461112e565b610504565b60405190151581526020016101de565b600a54600b54600c5461021c92919083565b604080519384526020840192909252908201526060016101de565b6002545b6040519081526020016101de565b6101fa610257366004611158565b61051e565b604051601281526020016101de565b61023b6b019d971e4fe8401e7400000081565b61029161028c366004611194565b610542565b005b6006546102a6906001600160a01b031681565b6040516001600160a01b0390911681526020016101de565b61023b600d5481565b61023b60115481565b6102916102de3660046111d0565b6105aa565b61023b6102f13660046111e9565b6001600160a01b031660009081526020819052604090205490565b610291610638565b61023b60125481565b60075460085460095461021c92919083565b6005546001600160a01b03166102a6565b61029161034e366004611194565b61064c565b6101d16106ac565b6102a67f000000000000000000000000000000000000000000000000000000000000000081565b6102916103903660046111e9565b6106bb565b6101fa6103a336600461112e565b61073b565b6102a67f000000000000000000000000000000000000000000000000000000000000000081565b61023b6103dd36600461120b565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61023b60145481565b61023b7f000000000000000000000000000000000000000000000000000000000000000081565b6102916104463660046111e9565b610749565b61023b7f000000000000000000000000000000000000000000000000000000000000000081565b6060600380546104819061123e565b80601f01602080910402602001604051908101604052809291908181526020018280546104ad9061123e565b80156104fa5780601f106104cf576101008083540402835291602001916104fa565b820191906000526020600020905b8154815290600101906020018083116104dd57829003601f168201915b5050505050905090565b600033610512818585610787565b60019150505b92915050565b60003361052c858285610799565b610537858585610818565b506001949350505050565b61054a610877565b6001600160a01b038216600081815260106020908152604091829020805460ff191685151590811790915591519182527fcb24e6b3b5c6d8781cb66cd454a8e78078dccd370402b5c2c3f2f92553556f9b91015b60405180910390a25050565b6105b2610877565b61012c8111156105fd5760405162461bcd60e51b8152602060048201526011602482015270436f6f6c646f776e20746f6f206c6f6e6760781b60448201526064015b60405180910390fd5b60148190556040518181527faa382e040a4d9efeb5a813fb9d768cb574053b0dfd7cdf78936a29006e0a7a1c9060200160405180910390a150565b610640610877565b61064a60006108a4565b565b610654610877565b6001600160a01b0382166000818152600f6020908152604091829020805460ff191685151590811790915591519182527f9f1eaee9ad9cb68284f0dc523aa42c465ed33b53f8da7fc7294ccea47358bbdf910161059e565b6060600480546104819061123e565b6106c3610877565b600680546001600160a01b0319166001600160a01b0383169081179091556000818152600f60209081526040808320805460ff1990811660019081179092556010909352818420805490931617909155517fe0d3fb541ce2b3c956d367ec89ad81e907e861539cdc01a6b81cd5652ae05f899190a250565b600033610512818585610818565b610751610877565b6001600160a01b03811661077b57604051631e4fbdf760e01b8152600060048201526024016105f4565b610784816108a4565b50565b61079483838360016108f6565b505050565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811015610812578181101561080357604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016105f4565b610812848484840360006108f6565b50505050565b6001600160a01b03831661084257604051634b637e8f60e11b8152600060048201526024016105f4565b6001600160a01b03821661086c5760405163ec442f0560e01b8152600060048201526024016105f4565b6107948383836109cb565b6005546001600160a01b0316331461064a5760405163118cdaa760e01b81523360048201526024016105f4565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0384166109205760405163e602df0560e01b8152600060048201526024016105f4565b6001600160a01b03831661094a57604051634a1406b160e11b8152600060048201526024016105f4565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561081257826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516109bd91815260200190565b60405180910390a350505050565b6001600160a01b0383166109e457610794838383610c0f565b6001600160a01b0383166000908152600f602052604081205460ff16158015610a2657506001600160a01b0383166000908152600f602052604090205460ff16155b9050808015610a4257506006546001600160a01b038581169116145b8015610a5d5750601154601254610a59919061128e565b4311155b15610a6c576108128383610d39565b8015610af5576014546001600160a01b038516600090815260136020526040902054610a98919061128e565b421015610ad95760405162461bcd60e51b815260206004820152600f60248201526e436f6f6c646f776e2061637469766560881b60448201526064016105f4565b6001600160a01b03841660009081526013602052604090204290555b8015610b0b57610b06848484610dab565b610b16565b610b16848484610c0f565b6001600160a01b03831660009081526010602052604090205460ff16610ba057600d546001600160a01b0384166000908152602081905260409020541115610ba05760405162461bcd60e51b815260206004820152601860248201527f45786365656473206d61782077616c6c6574206c696d6974000000000000000060448201526064016105f4565b6006546001600160a01b038581169116148015610bdb575081610bd8846001600160a01b031660009081526020819052604090205490565b10155b8015610c0057506001600160a01b03831660009081526010602052604090205460ff16155b15610812576108128383610f63565b6001600160a01b038316610c3a578060026000828254610c2f919061128e565b90915550610cac9050565b6001600160a01b03831660009081526020819052604090205481811015610c8d5760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016105f4565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216610cc857600280548290039055610ce7565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610d2c91815260200190565b60405180910390a3505050565b600654610d70906001600160a01b03167f000000000000000000000000000000000000000000000000000000000000000083610c0f565b816001600160a01b03167fab4a0400b4e49e5be3fcfd84afea49e7d6e0352a244e32f3734e2791532d88768260405161059e91815260200190565b6000610db5611021565b90506000612710826000015184610dcc91906112a1565b610dd691906112b8565b90506000612710836020015185610ded91906112a1565b610df791906112b8565b90506000612710846040015186610e0e91906112a1565b610e1891906112b8565b905060008183610e2886896112da565b610e3291906112da565b610e3c91906112da565b90508015610e4f57610e4f888883610c0f565b7f0000000000000000000000000000000000000000000000000000000000000000610e7960025490565b118015610e865750600084115b15610eb657610eb6887f000000000000000000000000000000000000000000000000000000000000000086610c0f565b8215610ee757610ee7887f000000000000000000000000000000000000000000000000000000000000000085610c0f565b8115610f1857610f18887f000000000000000000000000000000000000000000000000000000000000000084610c0f565b60408051858152602081018590529081018390527f312c5308f42848705a866c73dec11fd0783c2d64aac6a97e94467062ad3f40589060600160405180910390a15050505050505050565b600d54600090610f77836301e133806112a1565b610f8191906112b8565b905062278d008111156107945760405180604001604052808242610fa5919061128e565b815260209081018490526001600160a01b0385166000818152600e8352604090208351815592909101516001909201919091557f5394ea92aca3ea4a83aa22b55619ded8d5ec09b9bfc1c5802c41ae182dfc878e83611004844261128e565b6040805192835260208301919091520160405180910390a2505050565b61104560405180606001604052806000815260200160008152602001600081525090565b6110737f00000000000000000000000000000000000000000000000000000000000000006303c2670061128e565b42101561109f575060408051606081018252600754815260085460208201526009549181019190915290565b5060408051606081018252600a548152600b546020820152600c549181019190915290565b600060208083528351808285015260005b818110156110f1578581018301518582016040015282016110d5565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461112957600080fd5b919050565b6000806040838503121561114157600080fd5b61114a83611112565b946020939093013593505050565b60008060006060848603121561116d57600080fd5b61117684611112565b925061118460208501611112565b9150604084013590509250925092565b600080604083850312156111a757600080fd5b6111b083611112565b9150602083013580151581146111c557600080fd5b809150509250929050565b6000602082840312156111e257600080fd5b5035919050565b6000602082840312156111fb57600080fd5b61120482611112565b9392505050565b6000806040838503121561121e57600080fd5b61122783611112565b915061123560208401611112565b90509250929050565b600181811c9082168061125257607f821691505b60208210810361127257634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561051857610518611278565b808202811582820484141761051857610518611278565b6000826112d557634e487b7160e01b600052601260045260246000fd5b500490565b818103818111156105185761051861127856fea26469706673582212201252959e112f2b45e9d2b9cdae9fabc5f3d4c0d05bb99f233e5daf58494d3b7864736f6c63430008140033","opcodes":"PUSH2 0x120 PUSH1 0x40 MSTORE PUSH2 0xDEAD PUSH1 0xE0 MSTORE PUSH11 0x52B7D2DCC80CD2E4000000 PUSH2 0x100 MSTORE PUSH1 0x2 PUSH1 0x11 SSTORE PUSH1 0xF PUSH1 0x14 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1F7B CODESIZE SUB DUP1 PUSH3 0x1F7B DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x55 SWAP2 PUSH3 0x9B1 JUMP JUMPDEST DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH11 0x119C9959591BDB55195CDD PUSH1 0xAA SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x23 PUSH1 0xF9 SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0xA5 SWAP2 SWAP1 PUSH3 0xA9F JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0xB4 DUP3 DUP3 PUSH3 0xA9F JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0xE7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xF2 DUP2 PUSH3 0x240 JUMP JUMPDEST POP TIMESTAMP PUSH1 0xC0 MSTORE NUMBER PUSH1 0x12 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x80 MSTORE DUP2 AND PUSH1 0xA0 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP1 DUP3 ADD DUP4 MSTORE PUSH1 0xFA DUP1 DUP4 MSTORE PUSH1 0x1 PUSH1 0x20 DUP5 DUP2 ADD DUP3 SWAP1 MSTORE SWAP4 DUP6 ADD DUP2 SWAP1 MSTORE PUSH1 0x7 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x8 DUP2 SWAP1 SSTORE PUSH1 0x9 DUP2 SWAP1 SSTORE DUP4 MLOAD SWAP2 DUP3 ADD DUP5 MSTORE PUSH1 0x64 DUP1 DUP4 MSTORE SWAP3 DUP3 ADD DUP2 SWAP1 MSTORE SWAP3 ADD DUP3 SWAP1 MSTORE PUSH1 0xA DUP2 SWAP1 SSTORE PUSH1 0xB DUP3 SWAP1 SSTORE PUSH1 0xC SWAP2 SWAP1 SWAP2 SSTORE PUSH3 0x17E PUSH12 0x19D971E4FE8401E74000000 PUSH1 0x3 PUSH3 0xB81 JUMP JUMPDEST PUSH3 0x18A SWAP2 SWAP1 PUSH3 0xBA1 JUMP JUMPDEST PUSH1 0xD SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xFF NOT SWAP2 DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE ADDRESS DUP1 DUP7 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD DUP4 AND DUP5 OR SWAP1 SSTORE PUSH1 0x80 MLOAD DUP8 AND DUP1 DUP8 MSTORE DUP5 DUP8 KECCAK256 DUP1 SLOAD DUP5 AND DUP6 OR SWAP1 SSTORE PUSH1 0xA0 MLOAD SWAP1 SWAP8 AND DUP1 DUP8 MSTORE DUP5 DUP8 KECCAK256 DUP1 SLOAD DUP5 AND DUP6 OR SWAP1 SSTORE SWAP1 DUP7 MSTORE PUSH1 0x10 SWAP1 SWAP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD DUP3 AND DUP4 OR SWAP1 SSTORE SWAP3 DUP5 MSTORE DUP2 DUP5 KECCAK256 DUP1 SLOAD DUP5 AND DUP3 OR SWAP1 SSTORE SWAP4 DUP4 MSTORE SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH3 0x237 DUP4 PUSH12 0x19D971E4FE8401E74000000 PUSH3 0x292 JUMP JUMPDEST POP POP POP PUSH3 0xBF0 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x2BE JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH3 0xDE JUMP JUMPDEST PUSH3 0x2CC PUSH1 0x0 DUP4 DUP4 PUSH3 0x2D0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH3 0x2F1 JUMPI PUSH3 0x2EC DUP4 DUP4 DUP4 PUSH3 0x53E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH3 0x334 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST SWAP1 POP DUP1 DUP1 ISZERO PUSH3 0x351 JUMPI POP PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ JUMPDEST DUP1 ISZERO PUSH3 0x36F JUMPI POP PUSH1 0x11 SLOAD PUSH1 0x12 SLOAD PUSH3 0x36B SWAP2 SWAP1 PUSH3 0xBC4 JUMP JUMPDEST NUMBER GT ISZERO JUMPDEST ISZERO PUSH3 0x387 JUMPI PUSH3 0x381 DUP4 DUP4 PUSH3 0x671 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST DUP1 ISZERO PUSH3 0x415 JUMPI PUSH1 0x14 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH3 0x3B6 SWAP2 SWAP1 PUSH3 0xBC4 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH3 0x3F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x436F6F6C646F776E20616374697665 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0xDE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 TIMESTAMP SWAP1 SSTORE JUMPDEST DUP1 ISZERO PUSH3 0x42F JUMPI PUSH3 0x429 DUP5 DUP5 DUP5 PUSH3 0x6D5 JUMP JUMPDEST PUSH3 0x43C JUMP JUMPDEST PUSH3 0x43C DUP5 DUP5 DUP5 PUSH3 0x53E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH3 0x4C9 JUMPI PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD GT ISZERO PUSH3 0x4C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45786365656473206D61782077616C6C6574206C696D69740000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0xDE JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ DUP1 ISZERO PUSH3 0x506 JUMPI POP DUP2 PUSH3 0x503 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST LT ISZERO JUMPDEST DUP1 ISZERO PUSH3 0x52C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH3 0x381 JUMPI PUSH3 0x381 DUP4 DUP4 PUSH3 0x843 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH3 0x56D JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x561 SWAP2 SWAP1 PUSH3 0xBC4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH3 0x5E1 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH3 0x5C2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH3 0xDE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x5FF JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH3 0x61E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x664 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xA0 MLOAD PUSH3 0x68D SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP4 PUSH3 0x53E JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xAB4A0400B4E49E5BE3FCFD84AFEA49E7D6E0352A244E32F3734E2791532D8876 DUP3 PUSH1 0x40 MLOAD PUSH3 0x6C9 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x6E1 PUSH3 0x90A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2710 DUP3 PUSH1 0x0 ADD MLOAD DUP5 PUSH3 0x6FA SWAP2 SWAP1 PUSH3 0xB81 JUMP JUMPDEST PUSH3 0x706 SWAP2 SWAP1 PUSH3 0xBA1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2710 DUP4 PUSH1 0x20 ADD MLOAD DUP6 PUSH3 0x71F SWAP2 SWAP1 PUSH3 0xB81 JUMP JUMPDEST PUSH3 0x72B SWAP2 SWAP1 PUSH3 0xBA1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2710 DUP5 PUSH1 0x40 ADD MLOAD DUP7 PUSH3 0x744 SWAP2 SWAP1 PUSH3 0xB81 JUMP JUMPDEST PUSH3 0x750 SWAP2 SWAP1 PUSH3 0xBA1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP4 PUSH3 0x762 DUP7 DUP10 PUSH3 0xBDA JUMP JUMPDEST PUSH3 0x76E SWAP2 SWAP1 PUSH3 0xBDA JUMP JUMPDEST PUSH3 0x77A SWAP2 SWAP1 PUSH3 0xBDA JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH3 0x790 JUMPI PUSH3 0x790 DUP9 DUP9 DUP4 PUSH3 0x53E JUMP JUMPDEST PUSH2 0x100 MLOAD PUSH1 0x2 SLOAD GT DUP1 ISZERO PUSH3 0x7A5 JUMPI POP PUSH1 0x0 DUP5 GT JUMPDEST ISZERO PUSH3 0x7C0 JUMPI PUSH3 0x7C0 DUP9 PUSH1 0xE0 MLOAD DUP7 PUSH3 0x53E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP3 ISZERO PUSH3 0x7DC JUMPI PUSH3 0x7DC DUP9 PUSH1 0x80 MLOAD DUP6 PUSH3 0x53E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP2 ISZERO PUSH3 0x7F8 JUMPI PUSH3 0x7F8 DUP9 PUSH1 0xA0 MLOAD DUP5 PUSH3 0x53E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x312C5308F42848705A866C73DEC11FD0783C2D64AAC6A97E94467062AD3F4058 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x0 SWAP1 PUSH3 0x859 DUP4 PUSH4 0x1E13380 PUSH3 0xB81 JUMP JUMPDEST PUSH3 0x865 SWAP2 SWAP1 PUSH3 0xBA1 JUMP JUMPDEST SWAP1 POP PUSH3 0x278D00 DUP2 GT ISZERO PUSH3 0x2EC JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP3 TIMESTAMP PUSH3 0x88C SWAP2 SWAP1 PUSH3 0xBC4 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE DUP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 MLOAD DUP2 SSTORE SWAP3 SWAP1 SWAP2 ADD MLOAD PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH32 0x5394EA92ACA3EA4A83AA22B55619DED8D5EC09B9BFC1C5802C41AE182DFC878E DUP4 PUSH3 0x8ED DUP5 TIMESTAMP PUSH3 0xBC4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH3 0x92F PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0xC0 MLOAD PUSH3 0x942 SWAP1 PUSH4 0x3C26700 PUSH3 0xBC4 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH3 0x96F JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x7 SLOAD DUP2 MSTORE PUSH1 0x8 SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x9 SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0xA SLOAD DUP2 MSTORE PUSH1 0xB SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xC SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x9AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x9C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x9D2 DUP5 PUSH3 0x994 JUMP JUMPDEST SWAP3 POP PUSH3 0x9E2 PUSH1 0x20 DUP6 ADD PUSH3 0x994 JUMP JUMPDEST SWAP2 POP PUSH3 0x9F2 PUSH1 0x40 DUP6 ADD PUSH3 0x994 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0xA26 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0xA47 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x2EC JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0xA76 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0xA97 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xA82 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0xABB JUMPI PUSH3 0xABB PUSH3 0x9FB JUMP JUMPDEST PUSH3 0xAD3 DUP2 PUSH3 0xACC DUP5 SLOAD PUSH3 0xA11 JUMP JUMPDEST DUP5 PUSH3 0xA4D JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0xB0B JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0xAF2 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0xA97 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0xB3C JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0xB1B JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0xB5B JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH3 0xB9B JUMPI PUSH3 0xB9B PUSH3 0xB6B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH3 0xBBF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH3 0xB9B JUMPI PUSH3 0xB9B PUSH3 0xB6B JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH3 0xB9B JUMPI PUSH3 0xB9B PUSH3 0xB6B JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x1323 PUSH3 0xC58 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x450 ADD MSTORE PUSH2 0xE51 ADD MSTORE PUSH1 0x0 PUSH2 0xE91 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x416 ADD MSTORE PUSH2 0x104A ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x360 ADD MSTORE DUP2 DUP2 PUSH2 0xD4B ADD MSTORE PUSH2 0xEF3 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x3AD ADD MSTORE PUSH2 0xEC2 ADD MSTORE PUSH2 0x1323 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x84E92C00 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xE14E7519 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE14E7519 EQ PUSH2 0x408 JUMPI DUP1 PUSH4 0xE954F41D EQ PUSH2 0x411 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x438 JUMPI DUP1 PUSH4 0xF5D7ABB3 EQ PUSH2 0x44B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x395 JUMPI DUP1 PUSH4 0xDA19DDFB EQ PUSH2 0x3A8 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8EBFC796 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x8EBFC796 EQ PUSH2 0x340 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x353 JUMPI DUP1 PUSH4 0x9E9DF2B9 EQ PUSH2 0x35B JUMPI DUP1 PUSH4 0xA06655A6 EQ PUSH2 0x382 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x84E92C00 EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0x876B33C8 EQ PUSH2 0x31D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x32F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x40A24E6C GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x4EE13E97 GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x4EE13E97 EQ PUSH2 0x2C7 JUMPI DUP1 PUSH4 0x5D0F1ADA EQ PUSH2 0x2D0 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2E3 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x30C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x40A24E6C EQ PUSH2 0x27E JUMPI DUP1 PUSH4 0x429494F2 EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0x48D79155 EQ PUSH2 0x2BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0x32CB6B0C EQ PUSH2 0x26B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0x14B800B4 EQ PUSH2 0x20A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D1 PUSH2 0x472 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DE SWAP2 SWAP1 PUSH2 0x10C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FA PUSH2 0x1F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x112E JUMP JUMPDEST PUSH2 0x504 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1DE JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0xB SLOAD PUSH1 0xC SLOAD PUSH2 0x21C SWAP3 SWAP2 SWAP1 DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x1DE JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1DE JUMP JUMPDEST PUSH2 0x1FA PUSH2 0x257 CALLDATASIZE PUSH1 0x4 PUSH2 0x1158 JUMP JUMPDEST PUSH2 0x51E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1DE JUMP JUMPDEST PUSH2 0x23B PUSH12 0x19D971E4FE8401E74000000 DUP2 JUMP JUMPDEST PUSH2 0x291 PUSH2 0x28C CALLDATASIZE PUSH1 0x4 PUSH2 0x1194 JUMP JUMPDEST PUSH2 0x542 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x2A6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1DE JUMP JUMPDEST PUSH2 0x23B PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH2 0x23B PUSH1 0x11 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x291 PUSH2 0x2DE CALLDATASIZE PUSH1 0x4 PUSH2 0x11D0 JUMP JUMPDEST PUSH2 0x5AA JUMP JUMPDEST PUSH2 0x23B PUSH2 0x2F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x11E9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x291 PUSH2 0x638 JUMP JUMPDEST PUSH2 0x23B PUSH1 0x12 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH2 0x21C SWAP3 SWAP2 SWAP1 DUP4 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2A6 JUMP JUMPDEST PUSH2 0x291 PUSH2 0x34E CALLDATASIZE PUSH1 0x4 PUSH2 0x1194 JUMP JUMPDEST PUSH2 0x64C JUMP JUMPDEST PUSH2 0x1D1 PUSH2 0x6AC JUMP JUMPDEST PUSH2 0x2A6 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x291 PUSH2 0x390 CALLDATASIZE PUSH1 0x4 PUSH2 0x11E9 JUMP JUMPDEST PUSH2 0x6BB JUMP JUMPDEST PUSH2 0x1FA PUSH2 0x3A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x112E JUMP JUMPDEST PUSH2 0x73B JUMP JUMPDEST PUSH2 0x2A6 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x23B PUSH2 0x3DD CALLDATASIZE PUSH1 0x4 PUSH2 0x120B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x23B PUSH1 0x14 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x23B PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x291 PUSH2 0x446 CALLDATASIZE PUSH1 0x4 PUSH2 0x11E9 JUMP JUMPDEST PUSH2 0x749 JUMP JUMPDEST PUSH2 0x23B PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x481 SWAP1 PUSH2 0x123E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4AD SWAP1 PUSH2 0x123E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4FA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4CF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4FA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4DD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x512 DUP2 DUP6 DUP6 PUSH2 0x787 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x52C DUP6 DUP3 DUP6 PUSH2 0x799 JUMP JUMPDEST PUSH2 0x537 DUP6 DUP6 DUP6 PUSH2 0x818 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x54A PUSH2 0x877 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP6 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0xCB24E6B3B5C6D8781CB66CD454A8E78078DCCD370402B5C2C3F2F92553556F9B SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x5B2 PUSH2 0x877 JUMP JUMPDEST PUSH2 0x12C DUP2 GT ISZERO PUSH2 0x5FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x436F6F6C646F776E20746F6F206C6F6E67 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x14 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0xAA382E040A4D9EFEB5A813FB9D768CB574053B0DFD7CDF78936A29006E0A7A1C SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x640 PUSH2 0x877 JUMP JUMPDEST PUSH2 0x64A PUSH1 0x0 PUSH2 0x8A4 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x654 PUSH2 0x877 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP6 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x9F1EAEE9AD9CB68284F0DC523AA42C465ED33B53F8DA7FC7294CCEA47358BBDF SWAP2 ADD PUSH2 0x59E JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x481 SWAP1 PUSH2 0x123E JUMP JUMPDEST PUSH2 0x6C3 PUSH2 0x877 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT SWAP1 DUP2 AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x10 SWAP1 SWAP4 MSTORE DUP2 DUP5 KECCAK256 DUP1 SLOAD SWAP1 SWAP4 AND OR SWAP1 SWAP2 SSTORE MLOAD PUSH32 0xE0D3FB541CE2B3C956D367EC89AD81E907E861539CDC01A6B81CD5652AE05F89 SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x512 DUP2 DUP6 DUP6 PUSH2 0x818 JUMP JUMPDEST PUSH2 0x751 PUSH2 0x877 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x77B JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5F4 JUMP JUMPDEST PUSH2 0x784 DUP2 PUSH2 0x8A4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x794 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x8F6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 LT ISZERO PUSH2 0x812 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x803 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x5F4 JUMP JUMPDEST PUSH2 0x812 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x8F6 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x842 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x86C JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5F4 JUMP JUMPDEST PUSH2 0x794 DUP4 DUP4 DUP4 PUSH2 0x9CB JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x64A JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5F4 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x920 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x94A JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x812 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x9BD SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x9E4 JUMPI PUSH2 0x794 DUP4 DUP4 DUP4 PUSH2 0xC0F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xA26 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST SWAP1 POP DUP1 DUP1 ISZERO PUSH2 0xA42 JUMPI POP PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ JUMPDEST DUP1 ISZERO PUSH2 0xA5D JUMPI POP PUSH1 0x11 SLOAD PUSH1 0x12 SLOAD PUSH2 0xA59 SWAP2 SWAP1 PUSH2 0x128E JUMP JUMPDEST NUMBER GT ISZERO JUMPDEST ISZERO PUSH2 0xA6C JUMPI PUSH2 0x812 DUP4 DUP4 PUSH2 0xD39 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAF5 JUMPI PUSH1 0x14 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xA98 SWAP2 SWAP1 PUSH2 0x128E JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0xAD9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x436F6F6C646F776E20616374697665 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 TIMESTAMP SWAP1 SSTORE JUMPDEST DUP1 ISZERO PUSH2 0xB0B JUMPI PUSH2 0xB06 DUP5 DUP5 DUP5 PUSH2 0xDAB JUMP JUMPDEST PUSH2 0xB16 JUMP JUMPDEST PUSH2 0xB16 DUP5 DUP5 DUP5 PUSH2 0xC0F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xBA0 JUMPI PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD GT ISZERO PUSH2 0xBA0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45786365656473206D61782077616C6C6574206C696D69740000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5F4 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ DUP1 ISZERO PUSH2 0xBDB JUMPI POP DUP2 PUSH2 0xBD8 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xC00 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x812 JUMPI PUSH2 0x812 DUP4 DUP4 PUSH2 0xF63 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xC3A JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xC2F SWAP2 SWAP1 PUSH2 0x128E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xCAC SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xC8D JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x5F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xCC8 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0xCE7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xD2C SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0xD70 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x0 DUP4 PUSH2 0xC0F JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xAB4A0400B4E49E5BE3FCFD84AFEA49E7D6E0352A244E32F3734E2791532D8876 DUP3 PUSH1 0x40 MLOAD PUSH2 0x59E SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDB5 PUSH2 0x1021 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2710 DUP3 PUSH1 0x0 ADD MLOAD DUP5 PUSH2 0xDCC SWAP2 SWAP1 PUSH2 0x12A1 JUMP JUMPDEST PUSH2 0xDD6 SWAP2 SWAP1 PUSH2 0x12B8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2710 DUP4 PUSH1 0x20 ADD MLOAD DUP6 PUSH2 0xDED SWAP2 SWAP1 PUSH2 0x12A1 JUMP JUMPDEST PUSH2 0xDF7 SWAP2 SWAP1 PUSH2 0x12B8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2710 DUP5 PUSH1 0x40 ADD MLOAD DUP7 PUSH2 0xE0E SWAP2 SWAP1 PUSH2 0x12A1 JUMP JUMPDEST PUSH2 0xE18 SWAP2 SWAP1 PUSH2 0x12B8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP4 PUSH2 0xE28 DUP7 DUP10 PUSH2 0x12DA JUMP JUMPDEST PUSH2 0xE32 SWAP2 SWAP1 PUSH2 0x12DA JUMP JUMPDEST PUSH2 0xE3C SWAP2 SWAP1 PUSH2 0x12DA JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xE4F JUMPI PUSH2 0xE4F DUP9 DUP9 DUP4 PUSH2 0xC0F JUMP JUMPDEST PUSH32 0x0 PUSH2 0xE79 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST GT DUP1 ISZERO PUSH2 0xE86 JUMPI POP PUSH1 0x0 DUP5 GT JUMPDEST ISZERO PUSH2 0xEB6 JUMPI PUSH2 0xEB6 DUP9 PUSH32 0x0 DUP7 PUSH2 0xC0F JUMP JUMPDEST DUP3 ISZERO PUSH2 0xEE7 JUMPI PUSH2 0xEE7 DUP9 PUSH32 0x0 DUP6 PUSH2 0xC0F JUMP JUMPDEST DUP2 ISZERO PUSH2 0xF18 JUMPI PUSH2 0xF18 DUP9 PUSH32 0x0 DUP5 PUSH2 0xC0F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x312C5308F42848705A866C73DEC11FD0783C2D64AAC6A97E94467062AD3F4058 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x0 SWAP1 PUSH2 0xF77 DUP4 PUSH4 0x1E13380 PUSH2 0x12A1 JUMP JUMPDEST PUSH2 0xF81 SWAP2 SWAP1 PUSH2 0x12B8 JUMP JUMPDEST SWAP1 POP PUSH3 0x278D00 DUP2 GT ISZERO PUSH2 0x794 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP3 TIMESTAMP PUSH2 0xFA5 SWAP2 SWAP1 PUSH2 0x128E JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE DUP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 MLOAD DUP2 SSTORE SWAP3 SWAP1 SWAP2 ADD MLOAD PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH32 0x5394EA92ACA3EA4A83AA22B55619DED8D5EC09B9BFC1C5802C41AE182DFC878E DUP4 PUSH2 0x1004 DUP5 TIMESTAMP PUSH2 0x128E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH2 0x1045 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH2 0x1073 PUSH32 0x0 PUSH4 0x3C26700 PUSH2 0x128E JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x109F JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x7 SLOAD DUP2 MSTORE PUSH1 0x8 SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x9 SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0xA SLOAD DUP2 MSTORE PUSH1 0xB SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xC SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x10F1 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x10D5 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1129 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1141 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x114A DUP4 PUSH2 0x1112 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x116D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1176 DUP5 PUSH2 0x1112 JUMP JUMPDEST SWAP3 POP PUSH2 0x1184 PUSH1 0x20 DUP6 ADD PUSH2 0x1112 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11B0 DUP4 PUSH2 0x1112 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x11C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1204 DUP3 PUSH2 0x1112 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x121E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1227 DUP4 PUSH2 0x1112 JUMP JUMPDEST SWAP2 POP PUSH2 0x1235 PUSH1 0x20 DUP5 ADD PUSH2 0x1112 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1252 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1272 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x518 JUMPI PUSH2 0x518 PUSH2 0x1278 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x518 JUMPI PUSH2 0x518 PUSH2 0x1278 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x12D5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x518 JUMPI PUSH2 0x518 PUSH2 0x1278 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLT MSTORE SWAP6 SWAP15 GT 0x2F 0x2B GASLIMIT 0xE9 0xD2 0xB9 0xCD 0xAE SWAP16 0xAB 0xC5 RETURN 0xD4 0xC0 0xD0 JUMPDEST 0xB9 SWAP16 0x23 RETURNDATACOPY 0x5D 0xAF PC 0x49 0x4D EXTCODESIZE PUSH25 0x64736F6C634300081400330000000000000000000000000000 ","sourceMap":"250:6115:27:-:0;;;656:42;615:83;;812:18;765:65;;1143:1;1111:33;;1286:2;1246:42;;1797:839;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1919:13;1582:113:10;;;;;;;;;;;;;-1:-1:-1;;;1582:113:10;;;;;;;;;;;;;;;;-1:-1:-1;;;1582:113:10;;;1656:5;1648;:13;;;;;;:::i;:::-;-1:-1:-1;1671:7:10;:17;1681:7;1671;:17;:::i;:::-;-1:-1:-1;;;;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;3446:51:32;3419:18;;1322:31:0;;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;1963:15:27::2;1944:34;::::0;2008:12:::2;1988:17;:32:::0;-1:-1:-1;;;;;2030:35:27;;::::2;;::::0;2075:37;::::2;;::::0;-1:-1:-1;2140:20:27;;::::2;::::0;;::::2;::::0;;2150:3:::2;2140:20:::0;;;2155:1:::2;-1:-1:-1::0;2140:20:27;;::::2;::::0;;;;;;;;;2122:15:::2;:38:::0;;;;;;;;;;;;2188:20;;;;::::2;::::0;;2198:3:::2;2188:20:::0;;;;;::::2;::::0;;;;;;;;-1:-1:-1;2170:38:27;;;-1:-1:-1;2170:38:27;;;;;;;;2238:14:::2;741:18;2251:1;2238:14;:::i;:::-;2237:22;;;;:::i;:::-;2218:16;:41:::0;-1:-1:-1;;;;;2269:27:27;;::::2;;::::0;;;:12:::2;:27;::::0;;;;;;;:34;;2299:4:::2;-1:-1:-1::0;;2269:34:27;;::::2;::::0;::::2;::::0;;;2334:4:::2;2313:27:::0;;;;;;:34;;;::::2;::::0;::::2;::::0;;2370:16:::2;::::0;2357:30;::::2;::::0;;;;;;:37;;;::::2;::::0;::::2;::::0;;2417:17:::2;::::0;2404:31;;::::2;::::0;;;;;;:38;;;::::2;::::0;::::2;::::0;;2452:29;;;:14:::2;:29:::0;;;;;;:36;;;::::2;::::0;::::2;::::0;;2498:33;;;;;;:40;;;::::2;::::0;::::2;::::0;;2548:32;;;;;;:39;;;;::::2;::::0;;::::2;::::0;;2597:32:::2;2269:27:::0;741:18:::2;2597:5;:32::i;:::-;1797:839:::0;;;250:6115;;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;7362:208:10:-;-1:-1:-1;;;;;7432:21:10;;7428:91;;7476:32;;-1:-1:-1;;;7476:32:10;;7505:1;7476:32;;;3446:51:32;3419:18;;7476:32:10;3300:203:32;7428:91:10;7528:35;7544:1;7548:7;7557:5;7528:7;:35::i;:::-;7362:208;;:::o;2834:1049:27:-;-1:-1:-1;;;;;2925:18:27;;2921:68;;2947:31;2961:4;2967:2;2971:6;2947:13;:31::i;:::-;2834:1049;;;:::o;2921:68::-;-1:-1:-1;;;;;3023:18:27;;3007:12;3023:18;;;:12;:18;;;;;;;;3022:19;:40;;;;-1:-1:-1;;;;;;3046:16:27;;;;;;:12;:16;;;;;;;;3045:17;3022:40;3007:55;;3085:7;:34;;;;-1:-1:-1;3104:15:27;;-1:-1:-1;;;;;3096:23:27;;;3104:15;;3096:23;3085:34;:88;;;;;3159:14;;3139:17;;:34;;;;:::i;:::-;3123:12;:50;;3085:88;3081:172;;;3189:33;3211:2;3215:6;3189:21;:33::i;:::-;3236:7;2834:1049;;;:::o;3081:172::-;3266:7;3263:187;;;3342:22;;-1:-1:-1;;;;;3317:22:27;;;;;;:16;:22;;;;;;:47;;3342:22;3317:47;:::i;:::-;3298:15;:66;;3290:94;;;;-1:-1:-1;;;3290:94:27;;4367:2:32;3290:94:27;;;4349:21:32;4406:2;4386:18;;;4379:30;-1:-1:-1;;;4425:18:32;;;4418:45;4480:18;;3290:94:27;4165:339:32;3290:94:27;-1:-1:-1;;;;;3399:22:27;;;;;;:16;:22;;;;;3424:15;3399:40;;3263:187;3472:7;3468:135;;;3495:35;3513:4;3519:2;3523:6;3495:17;:35::i;:::-;3468:135;;;3561:31;3575:4;3581:2;3585:6;3561:13;:31::i;:::-;-1:-1:-1;;;;;3618:18:27;;;;;;:14;:18;;;;;;;;3613:120;;3677:16;;-1:-1:-1;;;;;3024:18:10;;2998:7;3024:18;;;;;;;;;;;3660:33:27;;3652:70;;;;-1:-1:-1;;;3652:70:27;;4711:2:32;3652:70:27;;;4693:21:32;4750:2;4730:18;;;4723:30;4789:26;4769:18;;;4762:54;4833:18;;3652:70:27;4509:348:32;3652:70:27;3754:15;;-1:-1:-1;;;;;3746:23:27;;;3754:15;;3746:23;:50;;;;-1:-1:-1;3790:6:27;3773:13;3783:2;-1:-1:-1;;;;;3024:18:10;2998:7;3024:18;;;;;;;;;;;;2933:116;3773:13:27;:23;;3746:50;:73;;;;-1:-1:-1;;;;;;3801:18:27;;;;;;:14;:18;;;;;;;;3800:19;3746:73;3742:135;;;3836:30;3855:2;3859:6;3836:18;:30::i;5912:1107:10:-;-1:-1:-1;;;;;6001:18:10;;5997:540;;6153:5;6137:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;5997:540:10;;-1:-1:-1;5997:540:10;;-1:-1:-1;;;;;6211:15:10;;6189:19;6211:15;;;;;;;;;;;6244:19;;;6240:115;;;6290:50;;-1:-1:-1;;;6290:50:10;;-1:-1:-1;;;;;5082:32:32;;6290:50:10;;;5064:51:32;5131:18;;;5124:34;;;5174:18;;;5167:34;;;5037:18;;6290:50:10;4862:345:32;6240:115:10;-1:-1:-1;;;;;6475:15:10;;:9;:15;;;;;;;;;;6493:19;;;;6475:37;;5997:540;-1:-1:-1;;;;;6551:16:10;;6547:425;;6714:12;:21;;;;;;;6547:425;;;-1:-1:-1;;;;;6925:13:10;;:9;:13;;;;;;;;;;:22;;;;;;6547:425;7002:2;-1:-1:-1;;;;;6987:25:10;6996:4;-1:-1:-1;;;;;6987:25:10;;7006:5;6987:25;;;;5358::32;;5346:2;5331:18;;5212:177;6987:25:10;;;;;;;;5912:1107;;;:::o;5605:206:27:-;5703:15;;5720:17;;5689:57;;-1:-1:-1;;;;;5703:15:27;;5739:6;5689:13;:57::i;:::-;5786:9;-1:-1:-1;;;;;5761:43:27;;5797:6;5761:43;;;;5358:25:32;;5346:2;5331:18;;5212:177;5761:43:27;;;;;;;;5605:206;;:::o;3889:1145::-;3976:28;4007:22;:20;:22::i;:::-;3976:53;;4039:18;4093:5;4070:11;:19;;;4061:6;:28;;;;:::i;:::-;4060:38;;;;:::i;:::-;4039:59;;4108:21;4168:5;4142:11;:22;;;4133:6;:31;;;;:::i;:::-;4132:41;;;;:::i;:::-;4108:65;;4183:23;4247:5;4219:11;:24;;;4210:6;:33;;;;:::i;:::-;4209:43;;;;:::i;:::-;4183:69;-1:-1:-1;4262:22:27;4183:69;4309:13;4287:19;4296:10;4287:6;:19;:::i;:::-;:35;;;;:::i;:::-;:53;;;;:::i;:::-;4262:78;-1:-1:-1;4354:18:27;;4351:87;;4388:39;4402:4;4408:2;4412:14;4388:13;:39::i;:::-;4476:19;;2881:12:10;;4460:35:27;:53;;;;;4512:1;4499:10;:14;4460:53;4456:129;;;4529:45;4543:4;4549:12;;4563:10;4529:13;;;:45;;:::i;:::-;4598:17;;4594:100;;4631:52;4645:4;4651:16;;4669:13;4631;;;:52;;:::i;:::-;4707:19;;4703:251;;4742:55;4756:4;4762:17;;4781:15;4742:13;;;:55;;:::i;:::-;4968:59;;;5729:25:32;;;5785:2;5770:18;;5763:34;;;5813:18;;;5806:34;;;4968:59:27;;5717:2:32;5702:18;4968:59:27;;;;;;;3966:1068;;;;;3889:1145;;;:::o;5250:349::-;5369:16;;5324:20;;5348:17;:6;5357:8;5348:17;:::i;:::-;5347:38;;;;:::i;:::-;5324:61;;5414:7;5399:12;:22;5395:198;;;5456:51;;;;;;;;5486:12;5468:15;:30;;;;:::i;:::-;5456:51;;;;;;;;;-1:-1:-1;;;;;5437:16:27;;-1:-1:-1;5437:16:27;;;:12;:16;;;;;:70;;;;;;;;;;;;;;;;;5526:56;5500:6;5551:30;5569:12;5551:15;:30;:::i;:::-;5526:56;;;6025:25:32;;;6081:2;6066:18;;6059:34;;;;5998:18;5526:56:27;;;;;;;5314:285;5250:349;;:::o;5044:200::-;5098:16;250:6115;;;;;;;;;;;;;;;;;;;;;;;;5098:16;5148;;:33;;5168:12;5148:33;:::i;:::-;5130:15;:51;5126:79;;;-1:-1:-1;5183:22:27;;;;;;;;5190:15;5183:22;;;;;;;;;;;;;;;;;;;5044:200::o;5126:79::-;-1:-1:-1;5215:22:27;;;;;;;;5222:15;5215:22;;;;;;;;;;;;;;;;;;;5044:200::o;14:177:32:-;93:13;;-1:-1:-1;;;;;135:31:32;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:378::-;284:6;292;300;353:2;341:9;332:7;328:23;324:32;321:52;;;369:1;366;359:12;321:52;392:40;422:9;392:40;:::i;:::-;382:50;;451:49;496:2;485:9;481:18;451:49;:::i;:::-;441:59;;519:49;564:2;553:9;549:18;519:49;:::i;:::-;509:59;;196:378;;;;;:::o;579:127::-;640:10;635:3;631:20;628:1;621:31;671:4;668:1;661:15;695:4;692:1;685:15;711:380;790:1;786:12;;;;833;;;854:61;;908:4;900:6;896:17;886:27;;854:61;961:2;953:6;950:14;930:18;927:38;924:161;;1007:10;1002:3;998:20;995:1;988:31;1042:4;1039:1;1032:15;1070:4;1067:1;1060:15;924:161;;711:380;;;:::o;1222:545::-;1324:2;1319:3;1316:11;1313:448;;;1360:1;1385:5;1381:2;1374:17;1430:4;1426:2;1416:19;1500:2;1488:10;1484:19;1481:1;1477:27;1471:4;1467:38;1536:4;1524:10;1521:20;1518:47;;;-1:-1:-1;1559:4:32;1518:47;1614:2;1609:3;1605:12;1602:1;1598:20;1592:4;1588:31;1578:41;;1669:82;1687:2;1680:5;1677:13;1669:82;;;1732:17;;;1713:1;1702:13;1669:82;;;1673:3;;;1222:545;;;:::o;1943:1352::-;2063:10;;-1:-1:-1;;;;;2085:30:32;;2082:56;;;2118:18;;:::i;:::-;2147:97;2237:6;2197:38;2229:4;2223:11;2197:38;:::i;:::-;2191:4;2147:97;:::i;:::-;2299:4;;2363:2;2352:14;;2380:1;2375:663;;;;3082:1;3099:6;3096:89;;;-1:-1:-1;3151:19:32;;;3145:26;3096:89;-1:-1:-1;;1900:1:32;1896:11;;;1892:24;1888:29;1878:40;1924:1;1920:11;;;1875:57;3198:81;;2345:944;;2375:663;1169:1;1162:14;;;1206:4;1193:18;;-1:-1:-1;;2411:20:32;;;2529:236;2543:7;2540:1;2537:14;2529:236;;;2632:19;;;2626:26;2611:42;;2724:27;;;;2692:1;2680:14;;;;2559:19;;2529:236;;;2533:3;2793:6;2784:7;2781:19;2778:201;;;2854:19;;;2848:26;-1:-1:-1;;2937:1:32;2933:14;;;2949:3;2929:24;2925:37;2921:42;2906:58;2891:74;;2778:201;-1:-1:-1;;;;;3025:1:32;3009:14;;;3005:22;2992:36;;-1:-1:-1;1943:1352:32:o;3508:127::-;3569:10;3564:3;3560:20;3557:1;3550:31;3600:4;3597:1;3590:15;3624:4;3621:1;3614:15;3640:168;3713:9;;;3744;;3761:15;;;3755:22;;3741:37;3731:71;;3782:18;;:::i;:::-;3640:168;;;;:::o;3813:217::-;3853:1;3879;3869:132;;3923:10;3918:3;3914:20;3911:1;3904:31;3958:4;3955:1;3948:15;3986:4;3983:1;3976:15;3869:132;-1:-1:-1;4015:9:32;;3813:217::o;4035:125::-;4100:9;;;4121:10;;;4118:36;;;4134:18;;:::i;5394:128::-;5461:9;;;5482:11;;;5479:37;;;5496:18;;:::i;5851:248::-;250:6115:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@BURN_STOP_THRESHOLD_8710":{"entryPoint":null,"id":8710,"parameterSlots":0,"returnSlots":0},"@LAUNCH_TIMESTAMP_8691":{"entryPoint":null,"id":8691,"parameterSlots":0,"returnSlots":0},"@MAX_SUPPLY_8703":{"entryPoint":null,"id":8703,"parameterSlots":0,"returnSlots":0},"@STAKING_CONTRACT_8687":{"entryPoint":null,"id":8687,"parameterSlots":0,"returnSlots":0},"@TREASURY_CONTRACT_8689":{"entryPoint":null,"id":8689,"parameterSlots":0,"returnSlots":0},"@_applyFirstBuyLock_9245":{"entryPoint":3939,"id":9245,"parameterSlots":2,"returnSlots":0},"@_approve_2032":{"entryPoint":1927,"id":2032,"parameterSlots":3,"returnSlots":0},"@_approve_2092":{"entryPoint":2294,"id":2092,"parameterSlots":4,"returnSlots":0},"@_checkOwner_84":{"entryPoint":2167,"id":84,"parameterSlots":0,"returnSlots":0},"@_getCurrentFeeConfig_9202":{"entryPoint":4129,"id":9202,"parameterSlots":0,"returnSlots":1},"@_handleBotTransaction_9266":{"entryPoint":3385,"id":9266,"parameterSlots":2,"returnSlots":0},"@_msgSender_3731":{"entryPoint":null,"id":3731,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_2140":{"entryPoint":1945,"id":2140,"parameterSlots":3,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":2212,"id":146,"parameterSlots":1,"returnSlots":0},"@_transferWithFees_9181":{"entryPoint":3499,"id":9181,"parameterSlots":3,"returnSlots":0},"@_transfer_1871":{"entryPoint":2072,"id":1871,"parameterSlots":3,"returnSlots":0},"@_update_1948":{"entryPoint":3087,"id":1948,"parameterSlots":3,"returnSlots":0},"@_update_9062":{"entryPoint":2507,"id":9062,"parameterSlots":3,"returnSlots":0},"@allowance_1768":{"entryPoint":null,"id":1768,"parameterSlots":2,"returnSlots":1},"@approve_1792":{"entryPoint":1284,"id":1792,"parameterSlots":2,"returnSlots":1},"@balanceOf_1727":{"entryPoint":null,"id":1727,"parameterSlots":1,"returnSlots":1},"@deadblockCount_8734":{"entryPoint":null,"id":8734,"parameterSlots":0,"returnSlots":0},"@decimals_1705":{"entryPoint":null,"id":1705,"parameterSlots":0,"returnSlots":1},"@dynamicCooldownSeconds_8743":{"entryPoint":null,"id":8743,"parameterSlots":0,"returnSlots":0},"@feeConfigPhase1_8713":{"entryPoint":null,"id":8713,"parameterSlots":0,"returnSlots":0},"@feeConfigPhase2_8716":{"entryPoint":null,"id":8716,"parameterSlots":0,"returnSlots":0},"@launchBlockNumber_8736":{"entryPoint":null,"id":8736,"parameterSlots":0,"returnSlots":0},"@maxWalletHolding_8718":{"entryPoint":null,"id":8718,"parameterSlots":0,"returnSlots":0},"@name_1687":{"entryPoint":1138,"id":1687,"parameterSlots":0,"returnSlots":1},"@owner_67":{"entryPoint":null,"id":67,"parameterSlots":0,"returnSlots":1},"@pancakeSwapPair_8693":{"entryPoint":null,"id":8693,"parameterSlots":0,"returnSlots":0},"@renounceOwnership_98":{"entryPoint":1592,"id":98,"parameterSlots":0,"returnSlots":0},"@setDynamicCooldown_9331":{"entryPoint":1450,"id":9331,"parameterSlots":1,"returnSlots":0},"@setFeeExempt_9287":{"entryPoint":1612,"id":9287,"parameterSlots":2,"returnSlots":0},"@setLimitExempt_9308":{"entryPoint":1346,"id":9308,"parameterSlots":2,"returnSlots":0},"@setPancakeSwapPair_8926":{"entryPoint":1723,"id":8926,"parameterSlots":1,"returnSlots":0},"@symbol_1696":{"entryPoint":1708,"id":1696,"parameterSlots":0,"returnSlots":1},"@totalSupply_1714":{"entryPoint":null,"id":1714,"parameterSlots":0,"returnSlots":1},"@transferFrom_1824":{"entryPoint":1310,"id":1824,"parameterSlots":3,"returnSlots":1},"@transferOwnership_126":{"entryPoint":1865,"id":126,"parameterSlots":1,"returnSlots":0},"@transfer_1751":{"entryPoint":1851,"id":1751,"parameterSlots":2,"returnSlots":1},"abi_decode_address":{"entryPoint":4370,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":4585,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":4619,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":4440,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_bool":{"entryPoint":4500,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":4398,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256":{"entryPoint":4560,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4292,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_16b8b32967dd4bc0aab6ef6923f02437ba7c233f8b9e5220aa29dfb26b9600be__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_74bfbd0e22b7de34cffebe5af74ea7eca5e99706ecb9129f4c3a64d8a95a2fa5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ba9c9c2e245f05e917cb9045a1f3ed4859eb132cf139db7a2104edf9d54d8366__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":4750,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":4792,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":4769,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":4826,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":4670,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":4728,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:6243:32","statements":[{"nodeType":"YulBlock","src":"6:3:32","statements":[]},{"body":{"nodeType":"YulBlock","src":"135:427:32","statements":[{"nodeType":"YulVariableDeclaration","src":"145:12:32","value":{"kind":"number","nodeType":"YulLiteral","src":"155:2:32","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"149:2:32","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"173:9:32"},{"name":"_1","nodeType":"YulIdentifier","src":"184:2:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"166:6:32"},"nodeType":"YulFunctionCall","src":"166:21:32"},"nodeType":"YulExpressionStatement","src":"166:21:32"},{"nodeType":"YulVariableDeclaration","src":"196:27:32","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"216:6:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"210:5:32"},"nodeType":"YulFunctionCall","src":"210:13:32"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"200:6:32","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"243:9:32"},{"name":"_1","nodeType":"YulIdentifier","src":"254:2:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"239:3:32"},"nodeType":"YulFunctionCall","src":"239:18:32"},{"name":"length","nodeType":"YulIdentifier","src":"259:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"232:6:32"},"nodeType":"YulFunctionCall","src":"232:34:32"},"nodeType":"YulExpressionStatement","src":"232:34:32"},{"nodeType":"YulVariableDeclaration","src":"275:10:32","value":{"kind":"number","nodeType":"YulLiteral","src":"284:1:32","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"279:1:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"344:90:32","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"373:9:32"},{"name":"i","nodeType":"YulIdentifier","src":"384:1:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"369:3:32"},"nodeType":"YulFunctionCall","src":"369:17:32"},{"kind":"number","nodeType":"YulLiteral","src":"388:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"365:3:32"},"nodeType":"YulFunctionCall","src":"365:26:32"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"407:6:32"},{"name":"i","nodeType":"YulIdentifier","src":"415:1:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"403:3:32"},"nodeType":"YulFunctionCall","src":"403:14:32"},{"name":"_1","nodeType":"YulIdentifier","src":"419:2:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"399:3:32"},"nodeType":"YulFunctionCall","src":"399:23:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"393:5:32"},"nodeType":"YulFunctionCall","src":"393:30:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"358:6:32"},"nodeType":"YulFunctionCall","src":"358:66:32"},"nodeType":"YulExpressionStatement","src":"358:66:32"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"305:1:32"},{"name":"length","nodeType":"YulIdentifier","src":"308:6:32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"302:2:32"},"nodeType":"YulFunctionCall","src":"302:13:32"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"316:19:32","statements":[{"nodeType":"YulAssignment","src":"318:15:32","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"327:1:32"},{"name":"_1","nodeType":"YulIdentifier","src":"330:2:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"323:3:32"},"nodeType":"YulFunctionCall","src":"323:10:32"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"318:1:32"}]}]},"pre":{"nodeType":"YulBlock","src":"298:3:32","statements":[]},"src":"294:140:32"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"458:9:32"},{"name":"length","nodeType":"YulIdentifier","src":"469:6:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"454:3:32"},"nodeType":"YulFunctionCall","src":"454:22:32"},{"kind":"number","nodeType":"YulLiteral","src":"478:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"450:3:32"},"nodeType":"YulFunctionCall","src":"450:31:32"},{"kind":"number","nodeType":"YulLiteral","src":"483:1:32","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"443:6:32"},"nodeType":"YulFunctionCall","src":"443:42:32"},"nodeType":"YulExpressionStatement","src":"443:42:32"},{"nodeType":"YulAssignment","src":"494:62:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"510:9:32"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"529:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"537:2:32","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"525:3:32"},"nodeType":"YulFunctionCall","src":"525:15:32"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"546:2:32","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"542:3:32"},"nodeType":"YulFunctionCall","src":"542:7:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"521:3:32"},"nodeType":"YulFunctionCall","src":"521:29:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"506:3:32"},"nodeType":"YulFunctionCall","src":"506:45:32"},{"kind":"number","nodeType":"YulLiteral","src":"553:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"502:3:32"},"nodeType":"YulFunctionCall","src":"502:54:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"494:4:32"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"104:9:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"115:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"126:4:32","type":""}],"src":"14:548:32"},{"body":{"nodeType":"YulBlock","src":"616:124:32","statements":[{"nodeType":"YulAssignment","src":"626:29:32","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"648:6:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"635:12:32"},"nodeType":"YulFunctionCall","src":"635:20:32"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"626:5:32"}]},{"body":{"nodeType":"YulBlock","src":"718:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"727:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"730:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"720:6:32"},"nodeType":"YulFunctionCall","src":"720:12:32"},"nodeType":"YulExpressionStatement","src":"720:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"677:5:32"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"688:5:32"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"703:3:32","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"708:1:32","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"699:3:32"},"nodeType":"YulFunctionCall","src":"699:11:32"},{"kind":"number","nodeType":"YulLiteral","src":"712:1:32","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"695:3:32"},"nodeType":"YulFunctionCall","src":"695:19:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"684:3:32"},"nodeType":"YulFunctionCall","src":"684:31:32"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"674:2:32"},"nodeType":"YulFunctionCall","src":"674:42:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"667:6:32"},"nodeType":"YulFunctionCall","src":"667:50:32"},"nodeType":"YulIf","src":"664:70:32"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"595:6:32","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"606:5:32","type":""}],"src":"567:173:32"},{"body":{"nodeType":"YulBlock","src":"832:167:32","statements":[{"body":{"nodeType":"YulBlock","src":"878:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"887:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"890:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"880:6:32"},"nodeType":"YulFunctionCall","src":"880:12:32"},"nodeType":"YulExpressionStatement","src":"880:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"853:7:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"862:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"849:3:32"},"nodeType":"YulFunctionCall","src":"849:23:32"},{"kind":"number","nodeType":"YulLiteral","src":"874:2:32","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"845:3:32"},"nodeType":"YulFunctionCall","src":"845:32:32"},"nodeType":"YulIf","src":"842:52:32"},{"nodeType":"YulAssignment","src":"903:39:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"932:9:32"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"913:18:32"},"nodeType":"YulFunctionCall","src":"913:29:32"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"903:6:32"}]},{"nodeType":"YulAssignment","src":"951:42:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"978:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"989:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"974:3:32"},"nodeType":"YulFunctionCall","src":"974:18:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"961:12:32"},"nodeType":"YulFunctionCall","src":"961:32:32"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"951:6:32"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"790:9:32","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"801:7:32","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"813:6:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"821:6:32","type":""}],"src":"745:254:32"},{"body":{"nodeType":"YulBlock","src":"1099:92:32","statements":[{"nodeType":"YulAssignment","src":"1109:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1121:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"1132:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1117:3:32"},"nodeType":"YulFunctionCall","src":"1117:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1109:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1151:9:32"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1176:6:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1169:6:32"},"nodeType":"YulFunctionCall","src":"1169:14:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1162:6:32"},"nodeType":"YulFunctionCall","src":"1162:22:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1144:6:32"},"nodeType":"YulFunctionCall","src":"1144:41:32"},"nodeType":"YulExpressionStatement","src":"1144:41:32"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1068:9:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1079:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1090:4:32","type":""}],"src":"1004:187:32"},{"body":{"nodeType":"YulBlock","src":"1353:162:32","statements":[{"nodeType":"YulAssignment","src":"1363:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1375:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"1386:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1371:3:32"},"nodeType":"YulFunctionCall","src":"1371:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1363:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1405:9:32"},{"name":"value0","nodeType":"YulIdentifier","src":"1416:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1398:6:32"},"nodeType":"YulFunctionCall","src":"1398:25:32"},"nodeType":"YulExpressionStatement","src":"1398:25:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1443:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"1454:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1439:3:32"},"nodeType":"YulFunctionCall","src":"1439:18:32"},{"name":"value1","nodeType":"YulIdentifier","src":"1459:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1432:6:32"},"nodeType":"YulFunctionCall","src":"1432:34:32"},"nodeType":"YulExpressionStatement","src":"1432:34:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1486:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"1497:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1482:3:32"},"nodeType":"YulFunctionCall","src":"1482:18:32"},{"name":"value2","nodeType":"YulIdentifier","src":"1502:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1475:6:32"},"nodeType":"YulFunctionCall","src":"1475:34:32"},"nodeType":"YulExpressionStatement","src":"1475:34:32"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1306:9:32","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1317:6:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1325:6:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1333:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1344:4:32","type":""}],"src":"1196:319:32"},{"body":{"nodeType":"YulBlock","src":"1621:76:32","statements":[{"nodeType":"YulAssignment","src":"1631:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1643:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"1654:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1639:3:32"},"nodeType":"YulFunctionCall","src":"1639:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1631:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1673:9:32"},{"name":"value0","nodeType":"YulIdentifier","src":"1684:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1666:6:32"},"nodeType":"YulFunctionCall","src":"1666:25:32"},"nodeType":"YulExpressionStatement","src":"1666:25:32"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1590:9:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1601:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1612:4:32","type":""}],"src":"1520:177:32"},{"body":{"nodeType":"YulBlock","src":"1806:224:32","statements":[{"body":{"nodeType":"YulBlock","src":"1852:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1861:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1864:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1854:6:32"},"nodeType":"YulFunctionCall","src":"1854:12:32"},"nodeType":"YulExpressionStatement","src":"1854:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1827:7:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"1836:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1823:3:32"},"nodeType":"YulFunctionCall","src":"1823:23:32"},{"kind":"number","nodeType":"YulLiteral","src":"1848:2:32","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1819:3:32"},"nodeType":"YulFunctionCall","src":"1819:32:32"},"nodeType":"YulIf","src":"1816:52:32"},{"nodeType":"YulAssignment","src":"1877:39:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1906:9:32"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1887:18:32"},"nodeType":"YulFunctionCall","src":"1887:29:32"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1877:6:32"}]},{"nodeType":"YulAssignment","src":"1925:48:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1958:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"1969:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1954:3:32"},"nodeType":"YulFunctionCall","src":"1954:18:32"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1935:18:32"},"nodeType":"YulFunctionCall","src":"1935:38:32"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1925:6:32"}]},{"nodeType":"YulAssignment","src":"1982:42:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2009:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"2020:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2005:3:32"},"nodeType":"YulFunctionCall","src":"2005:18:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1992:12:32"},"nodeType":"YulFunctionCall","src":"1992:32:32"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1982:6:32"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1756:9:32","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1767:7:32","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1779:6:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1787:6:32","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1795:6:32","type":""}],"src":"1702:328:32"},{"body":{"nodeType":"YulBlock","src":"2132:87:32","statements":[{"nodeType":"YulAssignment","src":"2142:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2154:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"2165:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2150:3:32"},"nodeType":"YulFunctionCall","src":"2150:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2142:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2184:9:32"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2199:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"2207:4:32","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2195:3:32"},"nodeType":"YulFunctionCall","src":"2195:17:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2177:6:32"},"nodeType":"YulFunctionCall","src":"2177:36:32"},"nodeType":"YulExpressionStatement","src":"2177:36:32"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2101:9:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2112:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2123:4:32","type":""}],"src":"2035:184:32"},{"body":{"nodeType":"YulBlock","src":"2308:263:32","statements":[{"body":{"nodeType":"YulBlock","src":"2354:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2363:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2366:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2356:6:32"},"nodeType":"YulFunctionCall","src":"2356:12:32"},"nodeType":"YulExpressionStatement","src":"2356:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2329:7:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"2338:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2325:3:32"},"nodeType":"YulFunctionCall","src":"2325:23:32"},{"kind":"number","nodeType":"YulLiteral","src":"2350:2:32","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2321:3:32"},"nodeType":"YulFunctionCall","src":"2321:32:32"},"nodeType":"YulIf","src":"2318:52:32"},{"nodeType":"YulAssignment","src":"2379:39:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2408:9:32"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2389:18:32"},"nodeType":"YulFunctionCall","src":"2389:29:32"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2379:6:32"}]},{"nodeType":"YulVariableDeclaration","src":"2427:45:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2457:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"2468:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2453:3:32"},"nodeType":"YulFunctionCall","src":"2453:18:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2440:12:32"},"nodeType":"YulFunctionCall","src":"2440:32:32"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2431:5:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"2525:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2534:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2537:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2527:6:32"},"nodeType":"YulFunctionCall","src":"2527:12:32"},"nodeType":"YulExpressionStatement","src":"2527:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2494:5:32"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2515:5:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2508:6:32"},"nodeType":"YulFunctionCall","src":"2508:13:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2501:6:32"},"nodeType":"YulFunctionCall","src":"2501:21:32"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2491:2:32"},"nodeType":"YulFunctionCall","src":"2491:32:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2484:6:32"},"nodeType":"YulFunctionCall","src":"2484:40:32"},"nodeType":"YulIf","src":"2481:60:32"},{"nodeType":"YulAssignment","src":"2550:15:32","value":{"name":"value","nodeType":"YulIdentifier","src":"2560:5:32"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2550:6:32"}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2266:9:32","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2277:7:32","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2289:6:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2297:6:32","type":""}],"src":"2224:347:32"},{"body":{"nodeType":"YulBlock","src":"2677:102:32","statements":[{"nodeType":"YulAssignment","src":"2687:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2699:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"2710:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2695:3:32"},"nodeType":"YulFunctionCall","src":"2695:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2687:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2729:9:32"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2744:6:32"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2760:3:32","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2765:1:32","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2756:3:32"},"nodeType":"YulFunctionCall","src":"2756:11:32"},{"kind":"number","nodeType":"YulLiteral","src":"2769:1:32","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2752:3:32"},"nodeType":"YulFunctionCall","src":"2752:19:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2740:3:32"},"nodeType":"YulFunctionCall","src":"2740:32:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2722:6:32"},"nodeType":"YulFunctionCall","src":"2722:51:32"},"nodeType":"YulExpressionStatement","src":"2722:51:32"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2646:9:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2657:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2668:4:32","type":""}],"src":"2576:203:32"},{"body":{"nodeType":"YulBlock","src":"2854:110:32","statements":[{"body":{"nodeType":"YulBlock","src":"2900:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2909:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2912:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2902:6:32"},"nodeType":"YulFunctionCall","src":"2902:12:32"},"nodeType":"YulExpressionStatement","src":"2902:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2875:7:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"2884:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2871:3:32"},"nodeType":"YulFunctionCall","src":"2871:23:32"},{"kind":"number","nodeType":"YulLiteral","src":"2896:2:32","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2867:3:32"},"nodeType":"YulFunctionCall","src":"2867:32:32"},"nodeType":"YulIf","src":"2864:52:32"},{"nodeType":"YulAssignment","src":"2925:33:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2948:9:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2935:12:32"},"nodeType":"YulFunctionCall","src":"2935:23:32"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2925:6:32"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2820:9:32","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2831:7:32","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2843:6:32","type":""}],"src":"2784:180:32"},{"body":{"nodeType":"YulBlock","src":"3039:116:32","statements":[{"body":{"nodeType":"YulBlock","src":"3085:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3094:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3097:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3087:6:32"},"nodeType":"YulFunctionCall","src":"3087:12:32"},"nodeType":"YulExpressionStatement","src":"3087:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3060:7:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"3069:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3056:3:32"},"nodeType":"YulFunctionCall","src":"3056:23:32"},{"kind":"number","nodeType":"YulLiteral","src":"3081:2:32","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3052:3:32"},"nodeType":"YulFunctionCall","src":"3052:32:32"},"nodeType":"YulIf","src":"3049:52:32"},{"nodeType":"YulAssignment","src":"3110:39:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3139:9:32"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"3120:18:32"},"nodeType":"YulFunctionCall","src":"3120:29:32"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3110:6:32"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3005:9:32","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3016:7:32","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3028:6:32","type":""}],"src":"2969:186:32"},{"body":{"nodeType":"YulBlock","src":"3247:173:32","statements":[{"body":{"nodeType":"YulBlock","src":"3293:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3302:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3305:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3295:6:32"},"nodeType":"YulFunctionCall","src":"3295:12:32"},"nodeType":"YulExpressionStatement","src":"3295:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3268:7:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"3277:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3264:3:32"},"nodeType":"YulFunctionCall","src":"3264:23:32"},{"kind":"number","nodeType":"YulLiteral","src":"3289:2:32","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3260:3:32"},"nodeType":"YulFunctionCall","src":"3260:32:32"},"nodeType":"YulIf","src":"3257:52:32"},{"nodeType":"YulAssignment","src":"3318:39:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3347:9:32"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"3328:18:32"},"nodeType":"YulFunctionCall","src":"3328:29:32"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3318:6:32"}]},{"nodeType":"YulAssignment","src":"3366:48:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3399:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"3410:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3395:3:32"},"nodeType":"YulFunctionCall","src":"3395:18:32"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"3376:18:32"},"nodeType":"YulFunctionCall","src":"3376:38:32"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3366:6:32"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3205:9:32","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3216:7:32","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3228:6:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3236:6:32","type":""}],"src":"3160:260:32"},{"body":{"nodeType":"YulBlock","src":"3480:325:32","statements":[{"nodeType":"YulAssignment","src":"3490:22:32","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3504:1:32","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"3507:4:32"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3500:3:32"},"nodeType":"YulFunctionCall","src":"3500:12:32"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3490:6:32"}]},{"nodeType":"YulVariableDeclaration","src":"3521:38:32","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3551:4:32"},{"kind":"number","nodeType":"YulLiteral","src":"3557:1:32","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3547:3:32"},"nodeType":"YulFunctionCall","src":"3547:12:32"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"3525:18:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"3598:31:32","statements":[{"nodeType":"YulAssignment","src":"3600:27:32","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3614:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"3622:4:32","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3610:3:32"},"nodeType":"YulFunctionCall","src":"3610:17:32"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3600:6:32"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3578:18:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3571:6:32"},"nodeType":"YulFunctionCall","src":"3571:26:32"},"nodeType":"YulIf","src":"3568:61:32"},{"body":{"nodeType":"YulBlock","src":"3688:111:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3709:1:32","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3716:3:32","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3721:10:32","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3712:3:32"},"nodeType":"YulFunctionCall","src":"3712:20:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3702:6:32"},"nodeType":"YulFunctionCall","src":"3702:31:32"},"nodeType":"YulExpressionStatement","src":"3702:31:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3753:1:32","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3756:4:32","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3746:6:32"},"nodeType":"YulFunctionCall","src":"3746:15:32"},"nodeType":"YulExpressionStatement","src":"3746:15:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3781:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3784:4:32","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3774:6:32"},"nodeType":"YulFunctionCall","src":"3774:15:32"},"nodeType":"YulExpressionStatement","src":"3774:15:32"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3644:18:32"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3667:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"3675:2:32","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3664:2:32"},"nodeType":"YulFunctionCall","src":"3664:14:32"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3641:2:32"},"nodeType":"YulFunctionCall","src":"3641:38:32"},"nodeType":"YulIf","src":"3638:161:32"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3460:4:32","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3469:6:32","type":""}],"src":"3425:380:32"},{"body":{"nodeType":"YulBlock","src":"3984:167:32","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4001:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"4012:2:32","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3994:6:32"},"nodeType":"YulFunctionCall","src":"3994:21:32"},"nodeType":"YulExpressionStatement","src":"3994:21:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4035:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"4046:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4031:3:32"},"nodeType":"YulFunctionCall","src":"4031:18:32"},{"kind":"number","nodeType":"YulLiteral","src":"4051:2:32","type":"","value":"17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4024:6:32"},"nodeType":"YulFunctionCall","src":"4024:30:32"},"nodeType":"YulExpressionStatement","src":"4024:30:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4074:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"4085:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4070:3:32"},"nodeType":"YulFunctionCall","src":"4070:18:32"},{"hexValue":"436f6f6c646f776e20746f6f206c6f6e67","kind":"string","nodeType":"YulLiteral","src":"4090:19:32","type":"","value":"Cooldown too long"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4063:6:32"},"nodeType":"YulFunctionCall","src":"4063:47:32"},"nodeType":"YulExpressionStatement","src":"4063:47:32"},{"nodeType":"YulAssignment","src":"4119:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4131:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"4142:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4127:3:32"},"nodeType":"YulFunctionCall","src":"4127:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4119:4:32"}]}]},"name":"abi_encode_tuple_t_stringliteral_ba9c9c2e245f05e917cb9045a1f3ed4859eb132cf139db7a2104edf9d54d8366__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3961:9:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3975:4:32","type":""}],"src":"3810:341:32"},{"body":{"nodeType":"YulBlock","src":"4313:188:32","statements":[{"nodeType":"YulAssignment","src":"4323:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4335:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"4346:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4331:3:32"},"nodeType":"YulFunctionCall","src":"4331:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4323:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4365:9:32"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4380:6:32"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4396:3:32","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"4401:1:32","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4392:3:32"},"nodeType":"YulFunctionCall","src":"4392:11:32"},{"kind":"number","nodeType":"YulLiteral","src":"4405:1:32","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4388:3:32"},"nodeType":"YulFunctionCall","src":"4388:19:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4376:3:32"},"nodeType":"YulFunctionCall","src":"4376:32:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4358:6:32"},"nodeType":"YulFunctionCall","src":"4358:51:32"},"nodeType":"YulExpressionStatement","src":"4358:51:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4429:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"4440:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4425:3:32"},"nodeType":"YulFunctionCall","src":"4425:18:32"},{"name":"value1","nodeType":"YulIdentifier","src":"4445:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4418:6:32"},"nodeType":"YulFunctionCall","src":"4418:34:32"},"nodeType":"YulExpressionStatement","src":"4418:34:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4472:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"4483:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4468:3:32"},"nodeType":"YulFunctionCall","src":"4468:18:32"},{"name":"value2","nodeType":"YulIdentifier","src":"4488:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4461:6:32"},"nodeType":"YulFunctionCall","src":"4461:34:32"},"nodeType":"YulExpressionStatement","src":"4461:34:32"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4266:9:32","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4277:6:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4285:6:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4293:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4304:4:32","type":""}],"src":"4156:345:32"},{"body":{"nodeType":"YulBlock","src":"4538:95:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4555:1:32","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4562:3:32","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"4567:10:32","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4558:3:32"},"nodeType":"YulFunctionCall","src":"4558:20:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4548:6:32"},"nodeType":"YulFunctionCall","src":"4548:31:32"},"nodeType":"YulExpressionStatement","src":"4548:31:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4595:1:32","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4598:4:32","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4588:6:32"},"nodeType":"YulFunctionCall","src":"4588:15:32"},"nodeType":"YulExpressionStatement","src":"4588:15:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4619:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4622:4:32","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4612:6:32"},"nodeType":"YulFunctionCall","src":"4612:15:32"},"nodeType":"YulExpressionStatement","src":"4612:15:32"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"4506:127:32"},{"body":{"nodeType":"YulBlock","src":"4686:77:32","statements":[{"nodeType":"YulAssignment","src":"4696:16:32","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4707:1:32"},{"name":"y","nodeType":"YulIdentifier","src":"4710:1:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4703:3:32"},"nodeType":"YulFunctionCall","src":"4703:9:32"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"4696:3:32"}]},{"body":{"nodeType":"YulBlock","src":"4735:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"4737:16:32"},"nodeType":"YulFunctionCall","src":"4737:18:32"},"nodeType":"YulExpressionStatement","src":"4737:18:32"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4727:1:32"},{"name":"sum","nodeType":"YulIdentifier","src":"4730:3:32"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4724:2:32"},"nodeType":"YulFunctionCall","src":"4724:10:32"},"nodeType":"YulIf","src":"4721:36:32"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"4669:1:32","type":""},{"name":"y","nodeType":"YulTypedName","src":"4672:1:32","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"4678:3:32","type":""}],"src":"4638:125:32"},{"body":{"nodeType":"YulBlock","src":"4942:165:32","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4959:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"4970:2:32","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4952:6:32"},"nodeType":"YulFunctionCall","src":"4952:21:32"},"nodeType":"YulExpressionStatement","src":"4952:21:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4993:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"5004:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4989:3:32"},"nodeType":"YulFunctionCall","src":"4989:18:32"},{"kind":"number","nodeType":"YulLiteral","src":"5009:2:32","type":"","value":"15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4982:6:32"},"nodeType":"YulFunctionCall","src":"4982:30:32"},"nodeType":"YulExpressionStatement","src":"4982:30:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5032:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"5043:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5028:3:32"},"nodeType":"YulFunctionCall","src":"5028:18:32"},{"hexValue":"436f6f6c646f776e20616374697665","kind":"string","nodeType":"YulLiteral","src":"5048:17:32","type":"","value":"Cooldown active"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5021:6:32"},"nodeType":"YulFunctionCall","src":"5021:45:32"},"nodeType":"YulExpressionStatement","src":"5021:45:32"},{"nodeType":"YulAssignment","src":"5075:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5087:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"5098:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5083:3:32"},"nodeType":"YulFunctionCall","src":"5083:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5075:4:32"}]}]},"name":"abi_encode_tuple_t_stringliteral_74bfbd0e22b7de34cffebe5af74ea7eca5e99706ecb9129f4c3a64d8a95a2fa5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4919:9:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4933:4:32","type":""}],"src":"4768:339:32"},{"body":{"nodeType":"YulBlock","src":"5286:174:32","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5303:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"5314:2:32","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5296:6:32"},"nodeType":"YulFunctionCall","src":"5296:21:32"},"nodeType":"YulExpressionStatement","src":"5296:21:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5337:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"5348:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5333:3:32"},"nodeType":"YulFunctionCall","src":"5333:18:32"},{"kind":"number","nodeType":"YulLiteral","src":"5353:2:32","type":"","value":"24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5326:6:32"},"nodeType":"YulFunctionCall","src":"5326:30:32"},"nodeType":"YulExpressionStatement","src":"5326:30:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5376:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"5387:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5372:3:32"},"nodeType":"YulFunctionCall","src":"5372:18:32"},{"hexValue":"45786365656473206d61782077616c6c6574206c696d6974","kind":"string","nodeType":"YulLiteral","src":"5392:26:32","type":"","value":"Exceeds max wallet limit"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5365:6:32"},"nodeType":"YulFunctionCall","src":"5365:54:32"},"nodeType":"YulExpressionStatement","src":"5365:54:32"},{"nodeType":"YulAssignment","src":"5428:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5440:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"5451:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5436:3:32"},"nodeType":"YulFunctionCall","src":"5436:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5428:4:32"}]}]},"name":"abi_encode_tuple_t_stringliteral_16b8b32967dd4bc0aab6ef6923f02437ba7c233f8b9e5220aa29dfb26b9600be__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5263:9:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5277:4:32","type":""}],"src":"5112:348:32"},{"body":{"nodeType":"YulBlock","src":"5517:116:32","statements":[{"nodeType":"YulAssignment","src":"5527:20:32","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5542:1:32"},{"name":"y","nodeType":"YulIdentifier","src":"5545:1:32"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5538:3:32"},"nodeType":"YulFunctionCall","src":"5538:9:32"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"5527:7:32"}]},{"body":{"nodeType":"YulBlock","src":"5605:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"5607:16:32"},"nodeType":"YulFunctionCall","src":"5607:18:32"},"nodeType":"YulExpressionStatement","src":"5607:18:32"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5576:1:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5569:6:32"},"nodeType":"YulFunctionCall","src":"5569:9:32"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"5583:1:32"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"5590:7:32"},{"name":"x","nodeType":"YulIdentifier","src":"5599:1:32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"5586:3:32"},"nodeType":"YulFunctionCall","src":"5586:15:32"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5580:2:32"},"nodeType":"YulFunctionCall","src":"5580:22:32"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5566:2:32"},"nodeType":"YulFunctionCall","src":"5566:37:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5559:6:32"},"nodeType":"YulFunctionCall","src":"5559:45:32"},"nodeType":"YulIf","src":"5556:71:32"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"5496:1:32","type":""},{"name":"y","nodeType":"YulTypedName","src":"5499:1:32","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"5505:7:32","type":""}],"src":"5465:168:32"},{"body":{"nodeType":"YulBlock","src":"5684:171:32","statements":[{"body":{"nodeType":"YulBlock","src":"5715:111:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5736:1:32","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5743:3:32","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"5748:10:32","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5739:3:32"},"nodeType":"YulFunctionCall","src":"5739:20:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5729:6:32"},"nodeType":"YulFunctionCall","src":"5729:31:32"},"nodeType":"YulExpressionStatement","src":"5729:31:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5780:1:32","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5783:4:32","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5773:6:32"},"nodeType":"YulFunctionCall","src":"5773:15:32"},"nodeType":"YulExpressionStatement","src":"5773:15:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5808:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5811:4:32","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5801:6:32"},"nodeType":"YulFunctionCall","src":"5801:15:32"},"nodeType":"YulExpressionStatement","src":"5801:15:32"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"5704:1:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5697:6:32"},"nodeType":"YulFunctionCall","src":"5697:9:32"},"nodeType":"YulIf","src":"5694:132:32"},{"nodeType":"YulAssignment","src":"5835:14:32","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5844:1:32"},{"name":"y","nodeType":"YulIdentifier","src":"5847:1:32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"5840:3:32"},"nodeType":"YulFunctionCall","src":"5840:9:32"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"5835:1:32"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"5669:1:32","type":""},{"name":"y","nodeType":"YulTypedName","src":"5672:1:32","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"5678:1:32","type":""}],"src":"5638:217:32"},{"body":{"nodeType":"YulBlock","src":"5909:79:32","statements":[{"nodeType":"YulAssignment","src":"5919:17:32","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5931:1:32"},{"name":"y","nodeType":"YulIdentifier","src":"5934:1:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5927:3:32"},"nodeType":"YulFunctionCall","src":"5927:9:32"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"5919:4:32"}]},{"body":{"nodeType":"YulBlock","src":"5960:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"5962:16:32"},"nodeType":"YulFunctionCall","src":"5962:18:32"},"nodeType":"YulExpressionStatement","src":"5962:18:32"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"5951:4:32"},{"name":"x","nodeType":"YulIdentifier","src":"5957:1:32"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5948:2:32"},"nodeType":"YulFunctionCall","src":"5948:11:32"},"nodeType":"YulIf","src":"5945:37:32"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"5891:1:32","type":""},{"name":"y","nodeType":"YulTypedName","src":"5894:1:32","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"5900:4:32","type":""}],"src":"5860:128:32"},{"body":{"nodeType":"YulBlock","src":"6122:119:32","statements":[{"nodeType":"YulAssignment","src":"6132:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6144:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"6155:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6140:3:32"},"nodeType":"YulFunctionCall","src":"6140:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6132:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6174:9:32"},{"name":"value0","nodeType":"YulIdentifier","src":"6185:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6167:6:32"},"nodeType":"YulFunctionCall","src":"6167:25:32"},"nodeType":"YulExpressionStatement","src":"6167:25:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6212:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"6223:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6208:3:32"},"nodeType":"YulFunctionCall","src":"6208:18:32"},{"name":"value1","nodeType":"YulIdentifier","src":"6228:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6201:6:32"},"nodeType":"YulFunctionCall","src":"6201:34:32"},"nodeType":"YulExpressionStatement","src":"6201:34:32"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6083:9:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6094:6:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6102:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6113:4:32","type":""}],"src":"5993:248:32"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_ba9c9c2e245f05e917cb9045a1f3ed4859eb132cf139db7a2104edf9d54d8366__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Cooldown too long\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_74bfbd0e22b7de34cffebe5af74ea7eca5e99706ecb9129f4c3a64d8a95a2fa5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Cooldown active\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_16b8b32967dd4bc0aab6ef6923f02437ba7c233f8b9e5220aa29dfb26b9600be__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Exceeds max wallet limit\")\n        tail := add(headStart, 96)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n}","id":32,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"8687":[{"length":32,"start":941},{"length":32,"start":3778}],"8689":[{"length":32,"start":864},{"length":32,"start":3403},{"length":32,"start":3827}],"8691":[{"length":32,"start":1046},{"length":32,"start":4170}],"8696":[{"length":32,"start":3729}],"8710":[{"length":32,"start":1104},{"length":32,"start":3665}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101c45760003560e01c806384e92c00116100f9578063a9059cbb11610097578063e14e751911610071578063e14e751914610408578063e954f41d14610411578063f2fde38b14610438578063f5d7abb31461044b57600080fd5b8063a9059cbb14610395578063da19ddfb146103a8578063dd62ed3e146103cf57600080fd5b80638ebfc796116100d35780638ebfc7961461034057806395d89b41146103535780639e9df2b91461035b578063a06655a61461038257600080fd5b806384e92c0014610314578063876b33c81461031d5780638da5cb5b1461032f57600080fd5b806340a24e6c116101665780634ee13e97116101405780634ee13e97146102c75780635d0f1ada146102d057806370a08231146102e3578063715018a61461030c57600080fd5b806340a24e6c1461027e578063429494f21461029357806348d79155146102be57600080fd5b806318160ddd116101a257806318160ddd1461023757806323b872dd14610249578063313ce5671461025c57806332cb6b0c1461026b57600080fd5b806306fdde03146101c9578063095ea7b3146101e757806314b800b41461020a575b600080fd5b6101d1610472565b6040516101de91906110c4565b60405180910390f35b6101fa6101f536600461112e565b610504565b60405190151581526020016101de565b600a54600b54600c5461021c92919083565b604080519384526020840192909252908201526060016101de565b6002545b6040519081526020016101de565b6101fa610257366004611158565b61051e565b604051601281526020016101de565b61023b6b019d971e4fe8401e7400000081565b61029161028c366004611194565b610542565b005b6006546102a6906001600160a01b031681565b6040516001600160a01b0390911681526020016101de565b61023b600d5481565b61023b60115481565b6102916102de3660046111d0565b6105aa565b61023b6102f13660046111e9565b6001600160a01b031660009081526020819052604090205490565b610291610638565b61023b60125481565b60075460085460095461021c92919083565b6005546001600160a01b03166102a6565b61029161034e366004611194565b61064c565b6101d16106ac565b6102a67f000000000000000000000000000000000000000000000000000000000000000081565b6102916103903660046111e9565b6106bb565b6101fa6103a336600461112e565b61073b565b6102a67f000000000000000000000000000000000000000000000000000000000000000081565b61023b6103dd36600461120b565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61023b60145481565b61023b7f000000000000000000000000000000000000000000000000000000000000000081565b6102916104463660046111e9565b610749565b61023b7f000000000000000000000000000000000000000000000000000000000000000081565b6060600380546104819061123e565b80601f01602080910402602001604051908101604052809291908181526020018280546104ad9061123e565b80156104fa5780601f106104cf576101008083540402835291602001916104fa565b820191906000526020600020905b8154815290600101906020018083116104dd57829003601f168201915b5050505050905090565b600033610512818585610787565b60019150505b92915050565b60003361052c858285610799565b610537858585610818565b506001949350505050565b61054a610877565b6001600160a01b038216600081815260106020908152604091829020805460ff191685151590811790915591519182527fcb24e6b3b5c6d8781cb66cd454a8e78078dccd370402b5c2c3f2f92553556f9b91015b60405180910390a25050565b6105b2610877565b61012c8111156105fd5760405162461bcd60e51b8152602060048201526011602482015270436f6f6c646f776e20746f6f206c6f6e6760781b60448201526064015b60405180910390fd5b60148190556040518181527faa382e040a4d9efeb5a813fb9d768cb574053b0dfd7cdf78936a29006e0a7a1c9060200160405180910390a150565b610640610877565b61064a60006108a4565b565b610654610877565b6001600160a01b0382166000818152600f6020908152604091829020805460ff191685151590811790915591519182527f9f1eaee9ad9cb68284f0dc523aa42c465ed33b53f8da7fc7294ccea47358bbdf910161059e565b6060600480546104819061123e565b6106c3610877565b600680546001600160a01b0319166001600160a01b0383169081179091556000818152600f60209081526040808320805460ff1990811660019081179092556010909352818420805490931617909155517fe0d3fb541ce2b3c956d367ec89ad81e907e861539cdc01a6b81cd5652ae05f899190a250565b600033610512818585610818565b610751610877565b6001600160a01b03811661077b57604051631e4fbdf760e01b8152600060048201526024016105f4565b610784816108a4565b50565b61079483838360016108f6565b505050565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811015610812578181101561080357604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016105f4565b610812848484840360006108f6565b50505050565b6001600160a01b03831661084257604051634b637e8f60e11b8152600060048201526024016105f4565b6001600160a01b03821661086c5760405163ec442f0560e01b8152600060048201526024016105f4565b6107948383836109cb565b6005546001600160a01b0316331461064a5760405163118cdaa760e01b81523360048201526024016105f4565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0384166109205760405163e602df0560e01b8152600060048201526024016105f4565b6001600160a01b03831661094a57604051634a1406b160e11b8152600060048201526024016105f4565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561081257826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516109bd91815260200190565b60405180910390a350505050565b6001600160a01b0383166109e457610794838383610c0f565b6001600160a01b0383166000908152600f602052604081205460ff16158015610a2657506001600160a01b0383166000908152600f602052604090205460ff16155b9050808015610a4257506006546001600160a01b038581169116145b8015610a5d5750601154601254610a59919061128e565b4311155b15610a6c576108128383610d39565b8015610af5576014546001600160a01b038516600090815260136020526040902054610a98919061128e565b421015610ad95760405162461bcd60e51b815260206004820152600f60248201526e436f6f6c646f776e2061637469766560881b60448201526064016105f4565b6001600160a01b03841660009081526013602052604090204290555b8015610b0b57610b06848484610dab565b610b16565b610b16848484610c0f565b6001600160a01b03831660009081526010602052604090205460ff16610ba057600d546001600160a01b0384166000908152602081905260409020541115610ba05760405162461bcd60e51b815260206004820152601860248201527f45786365656473206d61782077616c6c6574206c696d6974000000000000000060448201526064016105f4565b6006546001600160a01b038581169116148015610bdb575081610bd8846001600160a01b031660009081526020819052604090205490565b10155b8015610c0057506001600160a01b03831660009081526010602052604090205460ff16155b15610812576108128383610f63565b6001600160a01b038316610c3a578060026000828254610c2f919061128e565b90915550610cac9050565b6001600160a01b03831660009081526020819052604090205481811015610c8d5760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016105f4565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216610cc857600280548290039055610ce7565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610d2c91815260200190565b60405180910390a3505050565b600654610d70906001600160a01b03167f000000000000000000000000000000000000000000000000000000000000000083610c0f565b816001600160a01b03167fab4a0400b4e49e5be3fcfd84afea49e7d6e0352a244e32f3734e2791532d88768260405161059e91815260200190565b6000610db5611021565b90506000612710826000015184610dcc91906112a1565b610dd691906112b8565b90506000612710836020015185610ded91906112a1565b610df791906112b8565b90506000612710846040015186610e0e91906112a1565b610e1891906112b8565b905060008183610e2886896112da565b610e3291906112da565b610e3c91906112da565b90508015610e4f57610e4f888883610c0f565b7f0000000000000000000000000000000000000000000000000000000000000000610e7960025490565b118015610e865750600084115b15610eb657610eb6887f000000000000000000000000000000000000000000000000000000000000000086610c0f565b8215610ee757610ee7887f000000000000000000000000000000000000000000000000000000000000000085610c0f565b8115610f1857610f18887f000000000000000000000000000000000000000000000000000000000000000084610c0f565b60408051858152602081018590529081018390527f312c5308f42848705a866c73dec11fd0783c2d64aac6a97e94467062ad3f40589060600160405180910390a15050505050505050565b600d54600090610f77836301e133806112a1565b610f8191906112b8565b905062278d008111156107945760405180604001604052808242610fa5919061128e565b815260209081018490526001600160a01b0385166000818152600e8352604090208351815592909101516001909201919091557f5394ea92aca3ea4a83aa22b55619ded8d5ec09b9bfc1c5802c41ae182dfc878e83611004844261128e565b6040805192835260208301919091520160405180910390a2505050565b61104560405180606001604052806000815260200160008152602001600081525090565b6110737f00000000000000000000000000000000000000000000000000000000000000006303c2670061128e565b42101561109f575060408051606081018252600754815260085460208201526009549181019190915290565b5060408051606081018252600a548152600b546020820152600c549181019190915290565b600060208083528351808285015260005b818110156110f1578581018301518582016040015282016110d5565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461112957600080fd5b919050565b6000806040838503121561114157600080fd5b61114a83611112565b946020939093013593505050565b60008060006060848603121561116d57600080fd5b61117684611112565b925061118460208501611112565b9150604084013590509250925092565b600080604083850312156111a757600080fd5b6111b083611112565b9150602083013580151581146111c557600080fd5b809150509250929050565b6000602082840312156111e257600080fd5b5035919050565b6000602082840312156111fb57600080fd5b61120482611112565b9392505050565b6000806040838503121561121e57600080fd5b61122783611112565b915061123560208401611112565b90509250929050565b600181811c9082168061125257607f821691505b60208210810361127257634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561051857610518611278565b808202811582820484141761051857610518611278565b6000826112d557634e487b7160e01b600052601260045260246000fd5b500490565b818103818111156105185761051861127856fea26469706673582212201252959e112f2b45e9d2b9cdae9fabc5f3d4c0d05bb99f233e5daf58494d3b7864736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x84E92C00 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xE14E7519 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE14E7519 EQ PUSH2 0x408 JUMPI DUP1 PUSH4 0xE954F41D EQ PUSH2 0x411 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x438 JUMPI DUP1 PUSH4 0xF5D7ABB3 EQ PUSH2 0x44B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x395 JUMPI DUP1 PUSH4 0xDA19DDFB EQ PUSH2 0x3A8 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8EBFC796 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x8EBFC796 EQ PUSH2 0x340 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x353 JUMPI DUP1 PUSH4 0x9E9DF2B9 EQ PUSH2 0x35B JUMPI DUP1 PUSH4 0xA06655A6 EQ PUSH2 0x382 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x84E92C00 EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0x876B33C8 EQ PUSH2 0x31D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x32F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x40A24E6C GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x4EE13E97 GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x4EE13E97 EQ PUSH2 0x2C7 JUMPI DUP1 PUSH4 0x5D0F1ADA EQ PUSH2 0x2D0 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2E3 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x30C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x40A24E6C EQ PUSH2 0x27E JUMPI DUP1 PUSH4 0x429494F2 EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0x48D79155 EQ PUSH2 0x2BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0x32CB6B0C EQ PUSH2 0x26B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0x14B800B4 EQ PUSH2 0x20A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D1 PUSH2 0x472 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DE SWAP2 SWAP1 PUSH2 0x10C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FA PUSH2 0x1F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x112E JUMP JUMPDEST PUSH2 0x504 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1DE JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0xB SLOAD PUSH1 0xC SLOAD PUSH2 0x21C SWAP3 SWAP2 SWAP1 DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x1DE JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1DE JUMP JUMPDEST PUSH2 0x1FA PUSH2 0x257 CALLDATASIZE PUSH1 0x4 PUSH2 0x1158 JUMP JUMPDEST PUSH2 0x51E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1DE JUMP JUMPDEST PUSH2 0x23B PUSH12 0x19D971E4FE8401E74000000 DUP2 JUMP JUMPDEST PUSH2 0x291 PUSH2 0x28C CALLDATASIZE PUSH1 0x4 PUSH2 0x1194 JUMP JUMPDEST PUSH2 0x542 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x2A6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1DE JUMP JUMPDEST PUSH2 0x23B PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH2 0x23B PUSH1 0x11 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x291 PUSH2 0x2DE CALLDATASIZE PUSH1 0x4 PUSH2 0x11D0 JUMP JUMPDEST PUSH2 0x5AA JUMP JUMPDEST PUSH2 0x23B PUSH2 0x2F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x11E9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x291 PUSH2 0x638 JUMP JUMPDEST PUSH2 0x23B PUSH1 0x12 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH2 0x21C SWAP3 SWAP2 SWAP1 DUP4 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2A6 JUMP JUMPDEST PUSH2 0x291 PUSH2 0x34E CALLDATASIZE PUSH1 0x4 PUSH2 0x1194 JUMP JUMPDEST PUSH2 0x64C JUMP JUMPDEST PUSH2 0x1D1 PUSH2 0x6AC JUMP JUMPDEST PUSH2 0x2A6 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x291 PUSH2 0x390 CALLDATASIZE PUSH1 0x4 PUSH2 0x11E9 JUMP JUMPDEST PUSH2 0x6BB JUMP JUMPDEST PUSH2 0x1FA PUSH2 0x3A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x112E JUMP JUMPDEST PUSH2 0x73B JUMP JUMPDEST PUSH2 0x2A6 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x23B PUSH2 0x3DD CALLDATASIZE PUSH1 0x4 PUSH2 0x120B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x23B PUSH1 0x14 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x23B PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x291 PUSH2 0x446 CALLDATASIZE PUSH1 0x4 PUSH2 0x11E9 JUMP JUMPDEST PUSH2 0x749 JUMP JUMPDEST PUSH2 0x23B PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x481 SWAP1 PUSH2 0x123E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4AD SWAP1 PUSH2 0x123E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4FA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4CF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4FA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4DD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x512 DUP2 DUP6 DUP6 PUSH2 0x787 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x52C DUP6 DUP3 DUP6 PUSH2 0x799 JUMP JUMPDEST PUSH2 0x537 DUP6 DUP6 DUP6 PUSH2 0x818 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x54A PUSH2 0x877 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP6 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0xCB24E6B3B5C6D8781CB66CD454A8E78078DCCD370402B5C2C3F2F92553556F9B SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x5B2 PUSH2 0x877 JUMP JUMPDEST PUSH2 0x12C DUP2 GT ISZERO PUSH2 0x5FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x436F6F6C646F776E20746F6F206C6F6E67 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x14 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0xAA382E040A4D9EFEB5A813FB9D768CB574053B0DFD7CDF78936A29006E0A7A1C SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x640 PUSH2 0x877 JUMP JUMPDEST PUSH2 0x64A PUSH1 0x0 PUSH2 0x8A4 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x654 PUSH2 0x877 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP6 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x9F1EAEE9AD9CB68284F0DC523AA42C465ED33B53F8DA7FC7294CCEA47358BBDF SWAP2 ADD PUSH2 0x59E JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x481 SWAP1 PUSH2 0x123E JUMP JUMPDEST PUSH2 0x6C3 PUSH2 0x877 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT SWAP1 DUP2 AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x10 SWAP1 SWAP4 MSTORE DUP2 DUP5 KECCAK256 DUP1 SLOAD SWAP1 SWAP4 AND OR SWAP1 SWAP2 SSTORE MLOAD PUSH32 0xE0D3FB541CE2B3C956D367EC89AD81E907E861539CDC01A6B81CD5652AE05F89 SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x512 DUP2 DUP6 DUP6 PUSH2 0x818 JUMP JUMPDEST PUSH2 0x751 PUSH2 0x877 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x77B JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5F4 JUMP JUMPDEST PUSH2 0x784 DUP2 PUSH2 0x8A4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x794 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x8F6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 LT ISZERO PUSH2 0x812 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x803 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x5F4 JUMP JUMPDEST PUSH2 0x812 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x8F6 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x842 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x86C JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5F4 JUMP JUMPDEST PUSH2 0x794 DUP4 DUP4 DUP4 PUSH2 0x9CB JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x64A JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5F4 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x920 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x94A JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x812 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x9BD SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x9E4 JUMPI PUSH2 0x794 DUP4 DUP4 DUP4 PUSH2 0xC0F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xA26 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST SWAP1 POP DUP1 DUP1 ISZERO PUSH2 0xA42 JUMPI POP PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ JUMPDEST DUP1 ISZERO PUSH2 0xA5D JUMPI POP PUSH1 0x11 SLOAD PUSH1 0x12 SLOAD PUSH2 0xA59 SWAP2 SWAP1 PUSH2 0x128E JUMP JUMPDEST NUMBER GT ISZERO JUMPDEST ISZERO PUSH2 0xA6C JUMPI PUSH2 0x812 DUP4 DUP4 PUSH2 0xD39 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAF5 JUMPI PUSH1 0x14 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xA98 SWAP2 SWAP1 PUSH2 0x128E JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0xAD9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x436F6F6C646F776E20616374697665 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 TIMESTAMP SWAP1 SSTORE JUMPDEST DUP1 ISZERO PUSH2 0xB0B JUMPI PUSH2 0xB06 DUP5 DUP5 DUP5 PUSH2 0xDAB JUMP JUMPDEST PUSH2 0xB16 JUMP JUMPDEST PUSH2 0xB16 DUP5 DUP5 DUP5 PUSH2 0xC0F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xBA0 JUMPI PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD GT ISZERO PUSH2 0xBA0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45786365656473206D61782077616C6C6574206C696D69740000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5F4 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ DUP1 ISZERO PUSH2 0xBDB JUMPI POP DUP2 PUSH2 0xBD8 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xC00 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x812 JUMPI PUSH2 0x812 DUP4 DUP4 PUSH2 0xF63 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xC3A JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xC2F SWAP2 SWAP1 PUSH2 0x128E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xCAC SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xC8D JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x5F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xCC8 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0xCE7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xD2C SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0xD70 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x0 DUP4 PUSH2 0xC0F JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xAB4A0400B4E49E5BE3FCFD84AFEA49E7D6E0352A244E32F3734E2791532D8876 DUP3 PUSH1 0x40 MLOAD PUSH2 0x59E SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDB5 PUSH2 0x1021 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2710 DUP3 PUSH1 0x0 ADD MLOAD DUP5 PUSH2 0xDCC SWAP2 SWAP1 PUSH2 0x12A1 JUMP JUMPDEST PUSH2 0xDD6 SWAP2 SWAP1 PUSH2 0x12B8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2710 DUP4 PUSH1 0x20 ADD MLOAD DUP6 PUSH2 0xDED SWAP2 SWAP1 PUSH2 0x12A1 JUMP JUMPDEST PUSH2 0xDF7 SWAP2 SWAP1 PUSH2 0x12B8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2710 DUP5 PUSH1 0x40 ADD MLOAD DUP7 PUSH2 0xE0E SWAP2 SWAP1 PUSH2 0x12A1 JUMP JUMPDEST PUSH2 0xE18 SWAP2 SWAP1 PUSH2 0x12B8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP4 PUSH2 0xE28 DUP7 DUP10 PUSH2 0x12DA JUMP JUMPDEST PUSH2 0xE32 SWAP2 SWAP1 PUSH2 0x12DA JUMP JUMPDEST PUSH2 0xE3C SWAP2 SWAP1 PUSH2 0x12DA JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xE4F JUMPI PUSH2 0xE4F DUP9 DUP9 DUP4 PUSH2 0xC0F JUMP JUMPDEST PUSH32 0x0 PUSH2 0xE79 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST GT DUP1 ISZERO PUSH2 0xE86 JUMPI POP PUSH1 0x0 DUP5 GT JUMPDEST ISZERO PUSH2 0xEB6 JUMPI PUSH2 0xEB6 DUP9 PUSH32 0x0 DUP7 PUSH2 0xC0F JUMP JUMPDEST DUP3 ISZERO PUSH2 0xEE7 JUMPI PUSH2 0xEE7 DUP9 PUSH32 0x0 DUP6 PUSH2 0xC0F JUMP JUMPDEST DUP2 ISZERO PUSH2 0xF18 JUMPI PUSH2 0xF18 DUP9 PUSH32 0x0 DUP5 PUSH2 0xC0F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x312C5308F42848705A866C73DEC11FD0783C2D64AAC6A97E94467062AD3F4058 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x0 SWAP1 PUSH2 0xF77 DUP4 PUSH4 0x1E13380 PUSH2 0x12A1 JUMP JUMPDEST PUSH2 0xF81 SWAP2 SWAP1 PUSH2 0x12B8 JUMP JUMPDEST SWAP1 POP PUSH3 0x278D00 DUP2 GT ISZERO PUSH2 0x794 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP3 TIMESTAMP PUSH2 0xFA5 SWAP2 SWAP1 PUSH2 0x128E JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE DUP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 MLOAD DUP2 SSTORE SWAP3 SWAP1 SWAP2 ADD MLOAD PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH32 0x5394EA92ACA3EA4A83AA22B55619DED8D5EC09B9BFC1C5802C41AE182DFC878E DUP4 PUSH2 0x1004 DUP5 TIMESTAMP PUSH2 0x128E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH2 0x1045 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH2 0x1073 PUSH32 0x0 PUSH4 0x3C26700 PUSH2 0x128E JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x109F JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x7 SLOAD DUP2 MSTORE PUSH1 0x8 SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x9 SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0xA SLOAD DUP2 MSTORE PUSH1 0xB SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xC SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x10F1 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x10D5 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1129 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1141 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x114A DUP4 PUSH2 0x1112 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x116D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1176 DUP5 PUSH2 0x1112 JUMP JUMPDEST SWAP3 POP PUSH2 0x1184 PUSH1 0x20 DUP6 ADD PUSH2 0x1112 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11B0 DUP4 PUSH2 0x1112 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x11C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1204 DUP3 PUSH2 0x1112 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x121E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1227 DUP4 PUSH2 0x1112 JUMP JUMPDEST SWAP2 POP PUSH2 0x1235 PUSH1 0x20 DUP5 ADD PUSH2 0x1112 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1252 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1272 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x518 JUMPI PUSH2 0x518 PUSH2 0x1278 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x518 JUMPI PUSH2 0x518 PUSH2 0x1278 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x12D5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x518 JUMPI PUSH2 0x518 PUSH2 0x1278 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLT MSTORE SWAP6 SWAP15 GT 0x2F 0x2B GASLIMIT 0xE9 0xD2 0xB9 0xCD 0xAE SWAP16 0xAB 0xC5 RETURN 0xD4 0xC0 0xD0 JUMPDEST 0xB9 SWAP16 0x23 RETURNDATACOPY 0x5D 0xAF PC 0x49 0x4D EXTCODESIZE PUSH25 0x64736F6C634300081400330000000000000000000000000000 ","sourceMap":"250:6115:27:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89:10;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3902:186;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:32;;1162:22;1144:41;;1132:2;1117:18;3902:186:10;1004:187:32;874:32:27;;;;;;;;;;;;;;;;;1398:25:32;;;1454:2;1439:18;;1432:34;;;;1482:18;;;1475:34;1386:2;1371:18;874:32:27;1196:319:32;2803:97:10;2881:12;;2803:97;;;1666:25:32;;;1654:2;1639:18;2803:97:10;1520:177:32;4680:244:10;;;;;;:::i;:::-;;:::i;2688:82::-;;;2761:2;2177:36:32;;2165:2;2150:18;2688:82:10;2035:184:32;704:55:27;;741:18;704:55;;5979:159;;;;;;:::i;:::-;;:::i;:::-;;579:30;;;;;-1:-1:-1;;;;;579:30:27;;;;;;-1:-1:-1;;;;;2740:32:32;;;2722:51;;2710:2;2695:18;579:30:27;2576:203:32;912:31:27;;;;;;1111:33;;;;;;6143:220;;;;;;:::i;:::-;;:::i;2933:116:10:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3024:18:10;2998:7;3024:18;;;;;;;;;;;;2933:116;2293:101:0;;;:::i;1150:32:27:-;;;;;;836;;;;;;;;;;;;;1638:85:0;1710:6;;-1:-1:-1;;;;;1710:6:0;1638:85;;5821:153:27;;;;;;:::i;:::-;;:::i;1962:93:10:-;;;:::i;484:42:27:-;;;;;2646:178;;;;;;:::i;:::-;;:::i;3244::10:-;;;;;;:::i;:::-;;:::i;437:41:27:-;;;;;3455:140:10;;;;;;:::i;:::-;-1:-1:-1;;;;;3561:18:10;;;3535:7;3561:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3455:140;1246:42:27;;;;;;532:41;;;;;2543:215:0;;;;;;:::i;:::-;;:::i;765:65:27:-;;;;;1760:89:10;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3902:186::-;3975:4;735:10:16;4029:31:10;735:10:16;4045:7:10;4054:5;4029:8;:31::i;:::-;4077:4;4070:11;;;3902:186;;;;;:::o;4680:244::-;4767:4;735:10:16;4823:37:10;4839:4;735:10:16;4854:5:10;4823:15;:37::i;:::-;4870:26;4880:4;4886:2;4890:5;4870:9;:26::i;:::-;-1:-1:-1;4913:4:10;;4680:244;-1:-1:-1;;;;4680:244:10:o;5979:159:27:-;1531:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;6054:23:27;::::1;;::::0;;;:14:::1;:23;::::0;;;;;;;;:34;;-1:-1:-1;;6054:34:27::1;::::0;::::1;;::::0;;::::1;::::0;;;6095:40;;1144:41:32;;;6095:40:27::1;::::0;1117:18:32;6095:40:27::1;;;;;;;;5979:159:::0;;:::o;6143:220::-;1531:13:0;:11;:13::i;:::-;6248:3:27::1;6226:18;:25;;6218:55;;;::::0;-1:-1:-1;;;6218:55:27;;4012:2:32;6218:55:27::1;::::0;::::1;3994:21:32::0;4051:2;4031:18;;;4024:30;-1:-1:-1;;;4070:18:32;;;4063:47;4127:18;;6218:55:27::1;;;;;;;;;6275:22;:43:::0;;;6325:35:::1;::::0;1666:25:32;;;6325:35:27::1;::::0;1654:2:32;1639:18;6325:35:27::1;;;;;;;6143:220:::0;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;5821:153:27:-;1531:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;5894:21:27;::::1;;::::0;;;:12:::1;:21;::::0;;;;;;;;:32;;-1:-1:-1;;5894:32:27::1;::::0;::::1;;::::0;;::::1;::::0;;;5933:38;;1144:41:32;;;5933:38:27::1;::::0;1117:18:32;5933:38:27::1;1004:187:32::0;1962:93:10;2009:13;2041:7;2034:14;;;;;:::i;2646:178:27:-;1531:13:0;:11;:13::i;:::-;2708:15:27::1;:23:::0;;-1:-1:-1;;;;;;2708:23:27::1;-1:-1:-1::0;;;;;2708:23:27;::::1;::::0;;::::1;::::0;;;-1:-1:-1;2733:19:27;;;:12:::1;:19;::::0;;;;;;;:26;;-1:-1:-1;;2733:26:27;;::::1;-1:-1:-1::0;2733:26:27;;::::1;::::0;;;2761:14:::1;:21:::0;;;;;;:28;;;;::::1;;::::0;;;2796:25;::::1;::::0;-1:-1:-1;2796:25:27::1;2646:178:::0;:::o;3244::10:-;3313:4;735:10:16;3367:27:10;735:10:16;3384:2:10;3388:5;3367:9;:27::i;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;2722:51:32::0;2695:18;;2672:31:0::1;2576:203:32::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;8630:128:10:-;8714:37;8723:5;8730:7;8739:5;8746:4;8714:8;:37::i;:::-;8630:128;;;:::o;10319:476::-;-1:-1:-1;;;;;3561:18:10;;;10418:24;3561:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10484:36:10;;10480:309;;;10559:5;10540:16;:24;10536:130;;;10591:60;;-1:-1:-1;;;10591:60:10;;-1:-1:-1;;;;;4376:32:32;;10591:60:10;;;4358:51:32;4425:18;;;4418:34;;;4468:18;;;4461:34;;;4331:18;;10591:60:10;4156:345:32;10536:130:10;10707:57;10716:5;10723:7;10751:5;10732:16;:24;10758:5;10707:8;:57::i;:::-;10408:387;10319:476;;;:::o;5297:300::-;-1:-1:-1;;;;;5380:18:10;;5376:86;;5421:30;;-1:-1:-1;;;5421:30:10;;5448:1;5421:30;;;2722:51:32;2695:18;;5421:30:10;2576:203:32;5376:86:10;-1:-1:-1;;;;;5475:16:10;;5471:86;;5514:32;;-1:-1:-1;;;5514:32:10;;5543:1;5514:32;;;2722:51:32;2695:18;;5514:32:10;2576:203:32;5471:86:10;5566:24;5574:4;5580:2;5584:5;5566:7;:24::i;1796:162:0:-;1710:6;;-1:-1:-1;;;;;1710:6:0;735:10:16;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:16;1901:40:0;;;2722:51:32;2695:18;;1901:40:0;2576:203:32;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;9605:432:10:-;-1:-1:-1;;;;;9717:19:10;;9713:89;;9759:32;;-1:-1:-1;;;9759:32:10;;9788:1;9759:32;;;2722:51:32;2695:18;;9759:32:10;2576:203:32;9713:89:10;-1:-1:-1;;;;;9815:21:10;;9811:90;;9859:31;;-1:-1:-1;;;9859:31:10;;9887:1;9859:31;;;2722:51:32;2695:18;;9859:31:10;2576:203:32;9811:90:10;-1:-1:-1;;;;;9910:18:10;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;9955:76;;;;10005:7;-1:-1:-1;;;;;9989:31:10;9998:5;-1:-1:-1;;;;;9989:31:10;;10014:5;9989:31;;;;1666:25:32;;1654:2;1639:18;;1520:177;9989:31:10;;;;;;;;9605:432;;;;:::o;2834:1049:27:-;-1:-1:-1;;;;;2925:18:27;;2921:68;;2947:31;2961:4;2967:2;2971:6;2947:13;:31::i;2921:68::-;-1:-1:-1;;;;;3023:18:27;;3007:12;3023:18;;;:12;:18;;;;;;;;3022:19;:40;;;;-1:-1:-1;;;;;;3046:16:27;;;;;;:12;:16;;;;;;;;3045:17;3022:40;3007:55;;3085:7;:34;;;;-1:-1:-1;3104:15:27;;-1:-1:-1;;;;;3096:23:27;;;3104:15;;3096:23;3085:34;:88;;;;;3159:14;;3139:17;;:34;;;;:::i;:::-;3123:12;:50;;3085:88;3081:172;;;3189:33;3211:2;3215:6;3189:21;:33::i;3081:172::-;3266:7;3263:187;;;3342:22;;-1:-1:-1;;;;;3317:22:27;;;;;;:16;:22;;;;;;:47;;3342:22;3317:47;:::i;:::-;3298:15;:66;;3290:94;;;;-1:-1:-1;;;3290:94:27;;4970:2:32;3290:94:27;;;4952:21:32;5009:2;4989:18;;;4982:30;-1:-1:-1;;;5028:18:32;;;5021:45;5083:18;;3290:94:27;4768:339:32;3290:94:27;-1:-1:-1;;;;;3399:22:27;;;;;;:16;:22;;;;;3424:15;3399:40;;3263:187;3472:7;3468:135;;;3495:35;3513:4;3519:2;3523:6;3495:17;:35::i;:::-;3468:135;;;3561:31;3575:4;3581:2;3585:6;3561:13;:31::i;:::-;-1:-1:-1;;;;;3618:18:27;;;;;;:14;:18;;;;;;;;3613:120;;3677:16;;-1:-1:-1;;;;;3024:18:10;;2998:7;3024:18;;;;;;;;;;;3660:33:27;;3652:70;;;;-1:-1:-1;;;3652:70:27;;5314:2:32;3652:70:27;;;5296:21:32;5353:2;5333:18;;;5326:30;5392:26;5372:18;;;5365:54;5436:18;;3652:70:27;5112:348:32;3652:70:27;3754:15;;-1:-1:-1;;;;;3746:23:27;;;3754:15;;3746:23;:50;;;;;3790:6;3773:13;3783:2;-1:-1:-1;;;;;3024:18:10;2998:7;3024:18;;;;;;;;;;;;2933:116;3773:13:27;:23;;3746:50;:73;;;;-1:-1:-1;;;;;;3801:18:27;;;;;;:14;:18;;;;;;;;3800:19;3746:73;3742:135;;;3836:30;3855:2;3859:6;3836:18;:30::i;5912:1107:10:-;-1:-1:-1;;;;;6001:18:10;;5997:540;;6153:5;6137:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;5997:540:10;;-1:-1:-1;5997:540:10;;-1:-1:-1;;;;;6211:15:10;;6189:19;6211:15;;;;;;;;;;;6244:19;;;6240:115;;;6290:50;;-1:-1:-1;;;6290:50:10;;-1:-1:-1;;;;;4376:32:32;;6290:50:10;;;4358:51:32;4425:18;;;4418:34;;;4468:18;;;4461:34;;;4331:18;;6290:50:10;4156:345:32;6240:115:10;-1:-1:-1;;;;;6475:15:10;;:9;:15;;;;;;;;;;6493:19;;;;6475:37;;5997:540;-1:-1:-1;;;;;6551:16:10;;6547:425;;6714:12;:21;;;;;;;6547:425;;;-1:-1:-1;;;;;6925:13:10;;:9;:13;;;;;;;;;;:22;;;;;;6547:425;7002:2;-1:-1:-1;;;;;6987:25:10;6996:4;-1:-1:-1;;;;;6987:25:10;;7006:5;6987:25;;;;1666::32;;1654:2;1639:18;;1520:177;6987:25:10;;;;;;;;5912:1107;;;:::o;5605:206:27:-;5703:15;;5689:57;;-1:-1:-1;;;;;5703:15:27;5720:17;5739:6;5689:13;:57::i;:::-;5786:9;-1:-1:-1;;;;;5761:43:27;;5797:6;5761:43;;;;1666:25:32;;1654:2;1639:18;;1520:177;3889:1145:27;3976:28;4007:22;:20;:22::i;:::-;3976:53;;4039:18;4093:5;4070:11;:19;;;4061:6;:28;;;;:::i;:::-;4060:38;;;;:::i;:::-;4039:59;;4108:21;4168:5;4142:11;:22;;;4133:6;:31;;;;:::i;:::-;4132:41;;;;:::i;:::-;4108:65;;4183:23;4247:5;4219:11;:24;;;4210:6;:33;;;;:::i;:::-;4209:43;;;;:::i;:::-;4183:69;-1:-1:-1;4262:22:27;4183:69;4309:13;4287:19;4296:10;4287:6;:19;:::i;:::-;:35;;;;:::i;:::-;:53;;;;:::i;:::-;4262:78;-1:-1:-1;4354:18:27;;4351:87;;4388:39;4402:4;4408:2;4412:14;4388:13;:39::i;:::-;4476:19;4460:13;2881:12:10;;;2803:97;4460:13:27;:35;:53;;;;;4512:1;4499:10;:14;4460:53;4456:129;;;4529:45;4543:4;4549:12;4563:10;4529:13;:45::i;:::-;4598:17;;4594:100;;4631:52;4645:4;4651:16;4669:13;4631;:52::i;:::-;4707:19;;4703:251;;4742:55;4756:4;4762:17;4781:15;4742:13;:55::i;:::-;4968:59;;;1398:25:32;;;1454:2;1439:18;;1432:34;;;1482:18;;;1475:34;;;4968:59:27;;1386:2:32;1371:18;4968:59:27;;;;;;;3966:1068;;;;;3889:1145;;;:::o;5250:349::-;5369:16;;5324:20;;5348:17;:6;5357:8;5348:17;:::i;:::-;5347:38;;;;:::i;:::-;5324:61;;5414:7;5399:12;:22;5395:198;;;5456:51;;;;;;;;5486:12;5468:15;:30;;;;:::i;:::-;5456:51;;;;;;;;;-1:-1:-1;;;;;5437:16:27;;-1:-1:-1;5437:16:27;;;:12;:16;;;;;:70;;;;;;;;;;;;;;;;;5526:56;5500:6;5551:30;5569:12;5551:15;:30;:::i;:::-;5526:56;;;6167:25:32;;;6223:2;6208:18;;6201:34;;;;6140:18;5526:56:27;;;;;;;5314:285;5250:349;;:::o;5044:200::-;5098:16;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;5098:16:27;5148:33;:16;5168:12;5148:33;:::i;:::-;5130:15;:51;5126:79;;;-1:-1:-1;5183:22:27;;;;;;;;5190:15;5183:22;;;;;;;;;;;;;;;;;;;5044:200::o;5126:79::-;-1:-1:-1;5215:22:27;;;;;;;;5222:15;5215:22;;;;;;;;;;;;;;;;;;;5044:200::o;14:548:32:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:32;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:32:o;1702:328::-;1779:6;1787;1795;1848:2;1836:9;1827:7;1823:23;1819:32;1816:52;;;1864:1;1861;1854:12;1816:52;1887:29;1906:9;1887:29;:::i;:::-;1877:39;;1935:38;1969:2;1958:9;1954:18;1935:38;:::i;:::-;1925:48;;2020:2;2009:9;2005:18;1992:32;1982:42;;1702:328;;;;;:::o;2224:347::-;2289:6;2297;2350:2;2338:9;2329:7;2325:23;2321:32;2318:52;;;2366:1;2363;2356:12;2318:52;2389:29;2408:9;2389:29;:::i;:::-;2379:39;;2468:2;2457:9;2453:18;2440:32;2515:5;2508:13;2501:21;2494:5;2491:32;2481:60;;2537:1;2534;2527:12;2481:60;2560:5;2550:15;;;2224:347;;;;;:::o;2784:180::-;2843:6;2896:2;2884:9;2875:7;2871:23;2867:32;2864:52;;;2912:1;2909;2902:12;2864:52;-1:-1:-1;2935:23:32;;2784:180;-1:-1:-1;2784:180:32:o;2969:186::-;3028:6;3081:2;3069:9;3060:7;3056:23;3052:32;3049:52;;;3097:1;3094;3087:12;3049:52;3120:29;3139:9;3120:29;:::i;:::-;3110:39;2969:186;-1:-1:-1;;;2969:186:32:o;3160:260::-;3228:6;3236;3289:2;3277:9;3268:7;3264:23;3260:32;3257:52;;;3305:1;3302;3295:12;3257:52;3328:29;3347:9;3328:29;:::i;:::-;3318:39;;3376:38;3410:2;3399:9;3395:18;3376:38;:::i;:::-;3366:48;;3160:260;;;;;:::o;3425:380::-;3504:1;3500:12;;;;3547;;;3568:61;;3622:4;3614:6;3610:17;3600:27;;3568:61;3675:2;3667:6;3664:14;3644:18;3641:38;3638:161;;3721:10;3716:3;3712:20;3709:1;3702:31;3756:4;3753:1;3746:15;3784:4;3781:1;3774:15;3638:161;;3425:380;;;:::o;4506:127::-;4567:10;4562:3;4558:20;4555:1;4548:31;4598:4;4595:1;4588:15;4622:4;4619:1;4612:15;4638:125;4703:9;;;4724:10;;;4721:36;;;4737:18;;:::i;5465:168::-;5538:9;;;5569;;5586:15;;;5580:22;;5566:37;5556:71;;5607:18;;:::i;5638:217::-;5678:1;5704;5694:132;;5748:10;5743:3;5739:20;5736:1;5729:31;5783:4;5780:1;5773:15;5811:4;5808:1;5801:15;5694:132;-1:-1:-1;5840:9:32;;5638:217::o;5860:128::-;5927:9;;;5948:11;;;5945:37;;;5962:18;;:::i"},"methodIdentifiers":{"BURN_STOP_THRESHOLD()":"f5d7abb3","LAUNCH_TIMESTAMP()":"e954f41d","MAX_SUPPLY()":"32cb6b0c","STAKING_CONTRACT()":"da19ddfb","TREASURY_CONTRACT()":"9e9df2b9","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","deadblockCount()":"4ee13e97","decimals()":"313ce567","dynamicCooldownSeconds()":"e14e7519","feeConfigPhase1()":"876b33c8","feeConfigPhase2()":"14b800b4","launchBlockNumber()":"84e92c00","maxWalletHolding()":"48d79155","name()":"06fdde03","owner()":"8da5cb5b","pancakeSwapPair()":"429494f2","renounceOwnership()":"715018a6","setDynamicCooldown(uint256)":"5d0f1ada","setFeeExempt(address,bool)":"8ebfc796","setLimitExempt(address,bool)":"40a24e6c","setPancakeSwapPair(address)":"a06655a6","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_initialOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_stakingContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_treasuryContract\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"botAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BotTransactionRedirected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newCooldown\",\"type\":\"uint256\"}],\"name\":\"CooldownChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isExempt\",\"type\":\"bool\"}],\"name\":\"FeeExemptionChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"burnAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stakingAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidityAmount\",\"type\":\"uint256\"}],\"name\":\"FeesDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isExempt\",\"type\":\"bool\"}],\"name\":\"LimitExemptionChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"name\":\"PancakeSwapPairSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lockUntil\",\"type\":\"uint256\"}],\"name\":\"WalletLocked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BURN_STOP_THRESHOLD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LAUNCH_TIMESTAMP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STAKING_CONTRACT\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TREASURY_CONTRACT\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deadblockCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dynamicCooldownSeconds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeConfigPhase1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"burnFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakingFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidityFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeConfigPhase2\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"burnFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakingFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidityFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchBlockNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxWalletHolding\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pancakeSwapPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newCooldownSeconds\",\"type\":\"uint256\"}],\"name\":\"setDynamicCooldown\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isExempt\",\"type\":\"bool\"}],\"name\":\"setFeeExempt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isExempt\",\"type\":\"bool\"}],\"name\":\"setLimitExempt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pair\",\"type\":\"address\"}],\"name\":\"setPancakeSwapPair\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/F.sol\":\"F\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/F.sol\":{\"keccak256\":\"0xc9a6011c2001a1c16be1f21c60e1939c01200bd3f83f20d626ae217ad9c2540d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f531725fa76b475dbe7eafa25eb159b8f985bc05095c38807ab3ec536a4c7a96\",\"dweb:/ipfs/QmZ9txrGEApQT3WVgz1naNQkpW9FyEvGXdJdPnCjt2tYew\"]}},\"version\":1}"},"ITreasury":{"abi":[{"inputs":[{"internalType":"uint256","name":"liquidityFeeAmount","type":"uint256"}],"name":"depositFees","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"depositFees(uint256)":"ebdac090"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidityFeeAmount\",\"type\":\"uint256\"}],\"name\":\"depositFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/F.sol\":\"ITreasury\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/F.sol\":{\"keccak256\":\"0xc9a6011c2001a1c16be1f21c60e1939c01200bd3f83f20d626ae217ad9c2540d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f531725fa76b475dbe7eafa25eb159b8f985bc05095c38807ab3ec536a4c7a96\",\"dweb:/ipfs/QmZ9txrGEApQT3WVgz1naNQkpW9FyEvGXdJdPnCjt2tYew\"]}},\"version\":1}"}},"contracts/RewardManager.sol":{"RewardManager":{"abi":[{"inputs":[{"internalType":"string","name":"_initialBaseURI","type":"string"},{"internalType":"address","name":"_initialOwner","type":"address"},{"internalType":"address","name":"_royaltyReceiver","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"newURI","type":"string"}],"name":"BaseURIUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"bytes32","name":"newRoot","type":"bytes32"}],"name":"MerkleRootUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"NFTClaimed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"receiver","type":"address"},{"indexed":false,"internalType":"uint96","name":"fraction","type":"uint96"}],"name":"RoyaltyInfoUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"baseURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes32[]","name":"merkleProof","type":"bytes32[]"}],"name":"claimNFT","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address","name":"","type":"address"}],"name":"hasClaimed","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"merkleRoots","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"mintedCounts","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"royaltyFraction","outputs":[{"internalType":"uint96","name":"","type":"uint96"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"_salePrice","type":"uint256"}],"name":"royaltyInfo","outputs":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"royaltyAmount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"royaltyRecipient","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_newBaseURI","type":"string"}],"name":"setBaseURI","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes32","name":"_newRoot","type":"bytes32"}],"name":"setMerkleRoot","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_receiver","type":"address"},{"internalType":"uint96","name":"_fraction","type":"uint96"}],"name":"setRoyaltyInfo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"supplyLimits","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_435":{"entryPoint":null,"id":435,"parameterSlots":1,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_9439":{"entryPoint":null,"id":9439,"parameterSlots":3,"returnSlots":0},"@_setURI_1052":{"entryPoint":327,"id":1052,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":345,"id":146,"parameterSlots":1,"returnSlots":0},"abi_decode_address_fromMemory":{"entryPoint":449,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_addresst_address_fromMemory":{"entryPoint":478,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":788,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":871,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":728,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":427,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4341:32","statements":[{"nodeType":"YulBlock","src":"6:3:32","statements":[]},{"body":{"nodeType":"YulBlock","src":"46:95:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"63:1:32","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"70:3:32","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"75:10:32","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"66:3:32"},"nodeType":"YulFunctionCall","src":"66:20:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56:6:32"},"nodeType":"YulFunctionCall","src":"56:31:32"},"nodeType":"YulExpressionStatement","src":"56:31:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:1:32","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"106:4:32","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"96:6:32"},"nodeType":"YulFunctionCall","src":"96:15:32"},"nodeType":"YulExpressionStatement","src":"96:15:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"127:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"130:4:32","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"120:6:32"},"nodeType":"YulFunctionCall","src":"120:15:32"},"nodeType":"YulExpressionStatement","src":"120:15:32"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"14:127:32"},{"body":{"nodeType":"YulBlock","src":"206:117:32","statements":[{"nodeType":"YulAssignment","src":"216:22:32","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"231:6:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"225:5:32"},"nodeType":"YulFunctionCall","src":"225:13:32"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"216:5:32"}]},{"body":{"nodeType":"YulBlock","src":"301:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"310:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"313:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"303:6:32"},"nodeType":"YulFunctionCall","src":"303:12:32"},"nodeType":"YulExpressionStatement","src":"303:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"260:5:32"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"271:5:32"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"286:3:32","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"291:1:32","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"282:3:32"},"nodeType":"YulFunctionCall","src":"282:11:32"},{"kind":"number","nodeType":"YulLiteral","src":"295:1:32","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"278:3:32"},"nodeType":"YulFunctionCall","src":"278:19:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"267:3:32"},"nodeType":"YulFunctionCall","src":"267:31:32"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"257:2:32"},"nodeType":"YulFunctionCall","src":"257:42:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"250:6:32"},"nodeType":"YulFunctionCall","src":"250:50:32"},"nodeType":"YulIf","src":"247:70:32"}]},"name":"abi_decode_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"185:6:32","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"196:5:32","type":""}],"src":"146:177:32"},{"body":{"nodeType":"YulBlock","src":"453:1089:32","statements":[{"body":{"nodeType":"YulBlock","src":"499:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"508:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"511:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"501:6:32"},"nodeType":"YulFunctionCall","src":"501:12:32"},"nodeType":"YulExpressionStatement","src":"501:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"474:7:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"483:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"470:3:32"},"nodeType":"YulFunctionCall","src":"470:23:32"},{"kind":"number","nodeType":"YulLiteral","src":"495:2:32","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"466:3:32"},"nodeType":"YulFunctionCall","src":"466:32:32"},"nodeType":"YulIf","src":"463:52:32"},{"nodeType":"YulVariableDeclaration","src":"524:30:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"544:9:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"538:5:32"},"nodeType":"YulFunctionCall","src":"538:16:32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"528:6:32","type":""}]},{"nodeType":"YulVariableDeclaration","src":"563:28:32","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"581:2:32","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"585:1:32","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"577:3:32"},"nodeType":"YulFunctionCall","src":"577:10:32"},{"kind":"number","nodeType":"YulLiteral","src":"589:1:32","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"573:3:32"},"nodeType":"YulFunctionCall","src":"573:18:32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"567:2:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"618:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"627:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"630:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"620:6:32"},"nodeType":"YulFunctionCall","src":"620:12:32"},"nodeType":"YulExpressionStatement","src":"620:12:32"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"606:6:32"},{"name":"_1","nodeType":"YulIdentifier","src":"614:2:32"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"603:2:32"},"nodeType":"YulFunctionCall","src":"603:14:32"},"nodeType":"YulIf","src":"600:34:32"},{"nodeType":"YulVariableDeclaration","src":"643:32:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"657:9:32"},{"name":"offset","nodeType":"YulIdentifier","src":"668:6:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"653:3:32"},"nodeType":"YulFunctionCall","src":"653:22:32"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"647:2:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"723:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"732:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"735:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"725:6:32"},"nodeType":"YulFunctionCall","src":"725:12:32"},"nodeType":"YulExpressionStatement","src":"725:12:32"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"702:2:32"},{"kind":"number","nodeType":"YulLiteral","src":"706:4:32","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"698:3:32"},"nodeType":"YulFunctionCall","src":"698:13:32"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"713:7:32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"694:3:32"},"nodeType":"YulFunctionCall","src":"694:27:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"687:6:32"},"nodeType":"YulFunctionCall","src":"687:35:32"},"nodeType":"YulIf","src":"684:55:32"},{"nodeType":"YulVariableDeclaration","src":"748:19:32","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"764:2:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"758:5:32"},"nodeType":"YulFunctionCall","src":"758:9:32"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"752:2:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"790:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"792:16:32"},"nodeType":"YulFunctionCall","src":"792:18:32"},"nodeType":"YulExpressionStatement","src":"792:18:32"}]},"condition":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"782:2:32"},{"name":"_1","nodeType":"YulIdentifier","src":"786:2:32"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"779:2:32"},"nodeType":"YulFunctionCall","src":"779:10:32"},"nodeType":"YulIf","src":"776:36:32"},{"nodeType":"YulVariableDeclaration","src":"821:17:32","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"835:2:32","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"831:3:32"},"nodeType":"YulFunctionCall","src":"831:7:32"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"825:2:32","type":""}]},{"nodeType":"YulVariableDeclaration","src":"847:23:32","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"867:2:32","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"861:5:32"},"nodeType":"YulFunctionCall","src":"861:9:32"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"851:6:32","type":""}]},{"nodeType":"YulVariableDeclaration","src":"879:71:32","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"901:6:32"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"925:2:32"},{"kind":"number","nodeType":"YulLiteral","src":"929:4:32","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"921:3:32"},"nodeType":"YulFunctionCall","src":"921:13:32"},{"name":"_4","nodeType":"YulIdentifier","src":"936:2:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"917:3:32"},"nodeType":"YulFunctionCall","src":"917:22:32"},{"kind":"number","nodeType":"YulLiteral","src":"941:2:32","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"913:3:32"},"nodeType":"YulFunctionCall","src":"913:31:32"},{"name":"_4","nodeType":"YulIdentifier","src":"946:2:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"909:3:32"},"nodeType":"YulFunctionCall","src":"909:40:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"897:3:32"},"nodeType":"YulFunctionCall","src":"897:53:32"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"883:10:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"1009:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1011:16:32"},"nodeType":"YulFunctionCall","src":"1011:18:32"},"nodeType":"YulExpressionStatement","src":"1011:18:32"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"968:10:32"},{"name":"_1","nodeType":"YulIdentifier","src":"980:2:32"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"965:2:32"},"nodeType":"YulFunctionCall","src":"965:18:32"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"988:10:32"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1000:6:32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"985:2:32"},"nodeType":"YulFunctionCall","src":"985:22:32"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"962:2:32"},"nodeType":"YulFunctionCall","src":"962:46:32"},"nodeType":"YulIf","src":"959:72:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1047:2:32","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1051:10:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1040:6:32"},"nodeType":"YulFunctionCall","src":"1040:22:32"},"nodeType":"YulExpressionStatement","src":"1040:22:32"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1078:6:32"},{"name":"_3","nodeType":"YulIdentifier","src":"1086:2:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1071:6:32"},"nodeType":"YulFunctionCall","src":"1071:18:32"},"nodeType":"YulExpressionStatement","src":"1071:18:32"},{"nodeType":"YulVariableDeclaration","src":"1098:14:32","value":{"kind":"number","nodeType":"YulLiteral","src":"1108:4:32","type":"","value":"0x20"},"variables":[{"name":"_5","nodeType":"YulTypedName","src":"1102:2:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"1158:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1167:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1170:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1160:6:32"},"nodeType":"YulFunctionCall","src":"1160:12:32"},"nodeType":"YulExpressionStatement","src":"1160:12:32"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"1135:2:32"},{"name":"_3","nodeType":"YulIdentifier","src":"1139:2:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1131:3:32"},"nodeType":"YulFunctionCall","src":"1131:11:32"},{"name":"_5","nodeType":"YulIdentifier","src":"1144:2:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1127:3:32"},"nodeType":"YulFunctionCall","src":"1127:20:32"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1149:7:32"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1124:2:32"},"nodeType":"YulFunctionCall","src":"1124:33:32"},"nodeType":"YulIf","src":"1121:53:32"},{"nodeType":"YulVariableDeclaration","src":"1183:10:32","value":{"kind":"number","nodeType":"YulLiteral","src":"1192:1:32","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1187:1:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"1248:83:32","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1277:6:32"},{"name":"i","nodeType":"YulIdentifier","src":"1285:1:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1273:3:32"},"nodeType":"YulFunctionCall","src":"1273:14:32"},{"name":"_5","nodeType":"YulIdentifier","src":"1289:2:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1269:3:32"},"nodeType":"YulFunctionCall","src":"1269:23:32"},{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"1308:2:32"},{"name":"i","nodeType":"YulIdentifier","src":"1312:1:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1304:3:32"},"nodeType":"YulFunctionCall","src":"1304:10:32"},{"name":"_5","nodeType":"YulIdentifier","src":"1316:2:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1300:3:32"},"nodeType":"YulFunctionCall","src":"1300:19:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1294:5:32"},"nodeType":"YulFunctionCall","src":"1294:26:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1262:6:32"},"nodeType":"YulFunctionCall","src":"1262:59:32"},"nodeType":"YulExpressionStatement","src":"1262:59:32"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1213:1:32"},{"name":"_3","nodeType":"YulIdentifier","src":"1216:2:32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1210:2:32"},"nodeType":"YulFunctionCall","src":"1210:9:32"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1220:19:32","statements":[{"nodeType":"YulAssignment","src":"1222:15:32","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1231:1:32"},{"name":"_5","nodeType":"YulIdentifier","src":"1234:2:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1227:3:32"},"nodeType":"YulFunctionCall","src":"1227:10:32"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1222:1:32"}]}]},"pre":{"nodeType":"YulBlock","src":"1206:3:32","statements":[]},"src":"1202:129:32"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1355:6:32"},{"name":"_3","nodeType":"YulIdentifier","src":"1363:2:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1351:3:32"},"nodeType":"YulFunctionCall","src":"1351:15:32"},{"name":"_5","nodeType":"YulIdentifier","src":"1368:2:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1347:3:32"},"nodeType":"YulFunctionCall","src":"1347:24:32"},{"kind":"number","nodeType":"YulLiteral","src":"1373:1:32","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1340:6:32"},"nodeType":"YulFunctionCall","src":"1340:35:32"},"nodeType":"YulExpressionStatement","src":"1340:35:32"},{"nodeType":"YulAssignment","src":"1384:16:32","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"1394:6:32"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1384:6:32"}]},{"nodeType":"YulAssignment","src":"1409:59:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1453:9:32"},{"name":"_5","nodeType":"YulIdentifier","src":"1464:2:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1449:3:32"},"nodeType":"YulFunctionCall","src":"1449:18:32"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"1419:29:32"},"nodeType":"YulFunctionCall","src":"1419:49:32"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1409:6:32"}]},{"nodeType":"YulAssignment","src":"1477:59:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1521:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"1532:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1517:3:32"},"nodeType":"YulFunctionCall","src":"1517:18:32"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"1487:29:32"},"nodeType":"YulFunctionCall","src":"1487:49:32"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1477:6:32"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_addresst_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"403:9:32","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"414:7:32","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"426:6:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"434:6:32","type":""},{"name":"value2","nodeType":"YulTypedName","src":"442:6:32","type":""}],"src":"328:1214:32"},{"body":{"nodeType":"YulBlock","src":"1648:102:32","statements":[{"nodeType":"YulAssignment","src":"1658:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1670:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"1681:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1666:3:32"},"nodeType":"YulFunctionCall","src":"1666:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1658:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1700:9:32"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1715:6:32"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1731:3:32","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1736:1:32","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1727:3:32"},"nodeType":"YulFunctionCall","src":"1727:11:32"},{"kind":"number","nodeType":"YulLiteral","src":"1740:1:32","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1723:3:32"},"nodeType":"YulFunctionCall","src":"1723:19:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1711:3:32"},"nodeType":"YulFunctionCall","src":"1711:32:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1693:6:32"},"nodeType":"YulFunctionCall","src":"1693:51:32"},"nodeType":"YulExpressionStatement","src":"1693:51:32"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1617:9:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1628:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1639:4:32","type":""}],"src":"1547:203:32"},{"body":{"nodeType":"YulBlock","src":"1810:325:32","statements":[{"nodeType":"YulAssignment","src":"1820:22:32","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1834:1:32","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"1837:4:32"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1830:3:32"},"nodeType":"YulFunctionCall","src":"1830:12:32"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1820:6:32"}]},{"nodeType":"YulVariableDeclaration","src":"1851:38:32","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1881:4:32"},{"kind":"number","nodeType":"YulLiteral","src":"1887:1:32","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1877:3:32"},"nodeType":"YulFunctionCall","src":"1877:12:32"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"1855:18:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"1928:31:32","statements":[{"nodeType":"YulAssignment","src":"1930:27:32","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1944:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"1952:4:32","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1940:3:32"},"nodeType":"YulFunctionCall","src":"1940:17:32"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1930:6:32"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1908:18:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1901:6:32"},"nodeType":"YulFunctionCall","src":"1901:26:32"},"nodeType":"YulIf","src":"1898:61:32"},{"body":{"nodeType":"YulBlock","src":"2018:111:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2039:1:32","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2046:3:32","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2051:10:32","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2042:3:32"},"nodeType":"YulFunctionCall","src":"2042:20:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2032:6:32"},"nodeType":"YulFunctionCall","src":"2032:31:32"},"nodeType":"YulExpressionStatement","src":"2032:31:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2083:1:32","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2086:4:32","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2076:6:32"},"nodeType":"YulFunctionCall","src":"2076:15:32"},"nodeType":"YulExpressionStatement","src":"2076:15:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2111:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2114:4:32","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2104:6:32"},"nodeType":"YulFunctionCall","src":"2104:15:32"},"nodeType":"YulExpressionStatement","src":"2104:15:32"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1974:18:32"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1997:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"2005:2:32","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1994:2:32"},"nodeType":"YulFunctionCall","src":"1994:14:32"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1971:2:32"},"nodeType":"YulFunctionCall","src":"1971:38:32"},"nodeType":"YulIf","src":"1968:161:32"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1790:4:32","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1799:6:32","type":""}],"src":"1755:380:32"},{"body":{"nodeType":"YulBlock","src":"2196:65:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2213:1:32","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"2216:3:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2206:6:32"},"nodeType":"YulFunctionCall","src":"2206:14:32"},"nodeType":"YulExpressionStatement","src":"2206:14:32"},{"nodeType":"YulAssignment","src":"2229:26:32","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2247:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2250:4:32","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2237:9:32"},"nodeType":"YulFunctionCall","src":"2237:18:32"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"2229:4:32"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"2179:3:32","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"2187:4:32","type":""}],"src":"2140:121:32"},{"body":{"nodeType":"YulBlock","src":"2347:464:32","statements":[{"body":{"nodeType":"YulBlock","src":"2380:425:32","statements":[{"nodeType":"YulVariableDeclaration","src":"2394:11:32","value":{"kind":"number","nodeType":"YulLiteral","src":"2404:1:32","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2398:2:32","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2425:2:32"},{"name":"array","nodeType":"YulIdentifier","src":"2429:5:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2418:6:32"},"nodeType":"YulFunctionCall","src":"2418:17:32"},"nodeType":"YulExpressionStatement","src":"2418:17:32"},{"nodeType":"YulVariableDeclaration","src":"2448:31:32","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2470:2:32"},{"kind":"number","nodeType":"YulLiteral","src":"2474:4:32","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2460:9:32"},"nodeType":"YulFunctionCall","src":"2460:19:32"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"2452:4:32","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2492:57:32","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2515:4:32"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2525:1:32","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2532:10:32"},{"kind":"number","nodeType":"YulLiteral","src":"2544:2:32","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2528:3:32"},"nodeType":"YulFunctionCall","src":"2528:19:32"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2521:3:32"},"nodeType":"YulFunctionCall","src":"2521:27:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2511:3:32"},"nodeType":"YulFunctionCall","src":"2511:38:32"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"2496:11:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"2586:23:32","statements":[{"nodeType":"YulAssignment","src":"2588:19:32","value":{"name":"data","nodeType":"YulIdentifier","src":"2603:4:32"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"2588:11:32"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2568:10:32"},{"kind":"number","nodeType":"YulLiteral","src":"2580:4:32","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2565:2:32"},"nodeType":"YulFunctionCall","src":"2565:20:32"},"nodeType":"YulIf","src":"2562:47:32"},{"nodeType":"YulVariableDeclaration","src":"2622:41:32","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2636:4:32"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2646:1:32","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2653:3:32"},{"kind":"number","nodeType":"YulLiteral","src":"2658:2:32","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2649:3:32"},"nodeType":"YulFunctionCall","src":"2649:12:32"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2642:3:32"},"nodeType":"YulFunctionCall","src":"2642:20:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2632:3:32"},"nodeType":"YulFunctionCall","src":"2632:31:32"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"2626:2:32","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2676:24:32","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"2689:11:32"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"2680:5:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"2774:21:32","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2783:5:32"},{"name":"_1","nodeType":"YulIdentifier","src":"2790:2:32"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2776:6:32"},"nodeType":"YulFunctionCall","src":"2776:17:32"},"nodeType":"YulExpressionStatement","src":"2776:17:32"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2724:5:32"},{"name":"_2","nodeType":"YulIdentifier","src":"2731:2:32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2721:2:32"},"nodeType":"YulFunctionCall","src":"2721:13:32"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2735:26:32","statements":[{"nodeType":"YulAssignment","src":"2737:22:32","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2750:5:32"},{"kind":"number","nodeType":"YulLiteral","src":"2757:1:32","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2746:3:32"},"nodeType":"YulFunctionCall","src":"2746:13:32"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"2737:5:32"}]}]},"pre":{"nodeType":"YulBlock","src":"2717:3:32","statements":[]},"src":"2713:82:32"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2363:3:32"},{"kind":"number","nodeType":"YulLiteral","src":"2368:2:32","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2360:2:32"},"nodeType":"YulFunctionCall","src":"2360:11:32"},"nodeType":"YulIf","src":"2357:448:32"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"2319:5:32","type":""},{"name":"len","nodeType":"YulTypedName","src":"2326:3:32","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"2331:10:32","type":""}],"src":"2266:545:32"},{"body":{"nodeType":"YulBlock","src":"2901:81:32","statements":[{"nodeType":"YulAssignment","src":"2911:65:32","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2926:4:32"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2944:1:32","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"2947:3:32"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2940:3:32"},"nodeType":"YulFunctionCall","src":"2940:11:32"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2957:1:32","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2953:3:32"},"nodeType":"YulFunctionCall","src":"2953:6:32"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2936:3:32"},"nodeType":"YulFunctionCall","src":"2936:24:32"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2932:3:32"},"nodeType":"YulFunctionCall","src":"2932:29:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2922:3:32"},"nodeType":"YulFunctionCall","src":"2922:40:32"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2968:1:32","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"2971:3:32"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2964:3:32"},"nodeType":"YulFunctionCall","src":"2964:11:32"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2919:2:32"},"nodeType":"YulFunctionCall","src":"2919:57:32"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"2911:4:32"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2878:4:32","type":""},{"name":"len","nodeType":"YulTypedName","src":"2884:3:32","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"2892:4:32","type":""}],"src":"2816:166:32"},{"body":{"nodeType":"YulBlock","src":"3083:1256:32","statements":[{"nodeType":"YulVariableDeclaration","src":"3093:24:32","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3113:3:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3107:5:32"},"nodeType":"YulFunctionCall","src":"3107:10:32"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"3097:6:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"3160:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3162:16:32"},"nodeType":"YulFunctionCall","src":"3162:18:32"},"nodeType":"YulExpressionStatement","src":"3162:18:32"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"3132:6:32"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3148:2:32","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"3152:1:32","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3144:3:32"},"nodeType":"YulFunctionCall","src":"3144:10:32"},{"kind":"number","nodeType":"YulLiteral","src":"3156:1:32","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3140:3:32"},"nodeType":"YulFunctionCall","src":"3140:18:32"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3129:2:32"},"nodeType":"YulFunctionCall","src":"3129:30:32"},"nodeType":"YulIf","src":"3126:56:32"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3235:4:32"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3273:4:32"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"3267:5:32"},"nodeType":"YulFunctionCall","src":"3267:11:32"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"3241:25:32"},"nodeType":"YulFunctionCall","src":"3241:38:32"},{"name":"newLen","nodeType":"YulIdentifier","src":"3281:6:32"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"3191:43:32"},"nodeType":"YulFunctionCall","src":"3191:97:32"},"nodeType":"YulExpressionStatement","src":"3191:97:32"},{"nodeType":"YulVariableDeclaration","src":"3297:18:32","value":{"kind":"number","nodeType":"YulLiteral","src":"3314:1:32","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"3301:9:32","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3324:23:32","value":{"kind":"number","nodeType":"YulLiteral","src":"3343:4:32","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"3328:11:32","type":""}]},{"nodeType":"YulAssignment","src":"3356:24:32","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3369:11:32"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3356:9:32"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"3426:656:32","statements":[{"nodeType":"YulVariableDeclaration","src":"3440:35:32","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"3459:6:32"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3471:2:32","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3467:3:32"},"nodeType":"YulFunctionCall","src":"3467:7:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3455:3:32"},"nodeType":"YulFunctionCall","src":"3455:20:32"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"3444:7:32","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3488:49:32","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3532:4:32"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"3502:29:32"},"nodeType":"YulFunctionCall","src":"3502:35:32"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"3492:6:32","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3550:10:32","value":{"kind":"number","nodeType":"YulLiteral","src":"3559:1:32","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3554:1:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"3637:172:32","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3662:6:32"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3680:3:32"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"3685:9:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3676:3:32"},"nodeType":"YulFunctionCall","src":"3676:19:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3670:5:32"},"nodeType":"YulFunctionCall","src":"3670:26:32"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3655:6:32"},"nodeType":"YulFunctionCall","src":"3655:42:32"},"nodeType":"YulExpressionStatement","src":"3655:42:32"},{"nodeType":"YulAssignment","src":"3714:24:32","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3728:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"3736:1:32","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3724:3:32"},"nodeType":"YulFunctionCall","src":"3724:14:32"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3714:6:32"}]},{"nodeType":"YulAssignment","src":"3755:40:32","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3772:9:32"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3783:11:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3768:3:32"},"nodeType":"YulFunctionCall","src":"3768:27:32"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3755:9:32"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3584:1:32"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"3587:7:32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3581:2:32"},"nodeType":"YulFunctionCall","src":"3581:14:32"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3596:28:32","statements":[{"nodeType":"YulAssignment","src":"3598:24:32","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3607:1:32"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3610:11:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3603:3:32"},"nodeType":"YulFunctionCall","src":"3603:19:32"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3598:1:32"}]}]},"pre":{"nodeType":"YulBlock","src":"3577:3:32","statements":[]},"src":"3573:236:32"},{"body":{"nodeType":"YulBlock","src":"3857:166:32","statements":[{"nodeType":"YulVariableDeclaration","src":"3875:43:32","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3902:3:32"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"3907:9:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3898:3:32"},"nodeType":"YulFunctionCall","src":"3898:19:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3892:5:32"},"nodeType":"YulFunctionCall","src":"3892:26:32"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"3879:9:32","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3942:6:32"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"3954:9:32"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3981:1:32","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"3984:6:32"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3977:3:32"},"nodeType":"YulFunctionCall","src":"3977:14:32"},{"kind":"number","nodeType":"YulLiteral","src":"3993:3:32","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3973:3:32"},"nodeType":"YulFunctionCall","src":"3973:24:32"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4003:1:32","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3999:3:32"},"nodeType":"YulFunctionCall","src":"3999:6:32"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3969:3:32"},"nodeType":"YulFunctionCall","src":"3969:37:32"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3965:3:32"},"nodeType":"YulFunctionCall","src":"3965:42:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3950:3:32"},"nodeType":"YulFunctionCall","src":"3950:58:32"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3935:6:32"},"nodeType":"YulFunctionCall","src":"3935:74:32"},"nodeType":"YulExpressionStatement","src":"3935:74:32"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"3828:7:32"},{"name":"newLen","nodeType":"YulIdentifier","src":"3837:6:32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3825:2:32"},"nodeType":"YulFunctionCall","src":"3825:19:32"},"nodeType":"YulIf","src":"3822:201:32"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4043:4:32"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4057:1:32","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"4060:6:32"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4053:3:32"},"nodeType":"YulFunctionCall","src":"4053:14:32"},{"kind":"number","nodeType":"YulLiteral","src":"4069:1:32","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4049:3:32"},"nodeType":"YulFunctionCall","src":"4049:22:32"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4036:6:32"},"nodeType":"YulFunctionCall","src":"4036:36:32"},"nodeType":"YulExpressionStatement","src":"4036:36:32"}]},"nodeType":"YulCase","src":"3419:663:32","value":{"kind":"number","nodeType":"YulLiteral","src":"3424:1:32","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"4099:234:32","statements":[{"nodeType":"YulVariableDeclaration","src":"4113:14:32","value":{"kind":"number","nodeType":"YulLiteral","src":"4126:1:32","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"4117:5:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"4162:67:32","statements":[{"nodeType":"YulAssignment","src":"4180:35:32","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4199:3:32"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4204:9:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4195:3:32"},"nodeType":"YulFunctionCall","src":"4195:19:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4189:5:32"},"nodeType":"YulFunctionCall","src":"4189:26:32"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4180:5:32"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"4143:6:32"},"nodeType":"YulIf","src":"4140:89:32"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4249:4:32"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4308:5:32"},{"name":"newLen","nodeType":"YulIdentifier","src":"4315:6:32"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"4255:52:32"},"nodeType":"YulFunctionCall","src":"4255:67:32"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4242:6:32"},"nodeType":"YulFunctionCall","src":"4242:81:32"},"nodeType":"YulExpressionStatement","src":"4242:81:32"}]},"nodeType":"YulCase","src":"4091:242:32","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"3399:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"3407:2:32","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3396:2:32"},"nodeType":"YulFunctionCall","src":"3396:14:32"},"nodeType":"YulSwitch","src":"3389:944:32"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"3068:4:32","type":""},{"name":"src","nodeType":"YulTypedName","src":"3074:3:32","type":""}],"src":"2987:1352:32"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := mload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        let _5 := 0x20\n        if gt(add(add(_2, _3), _5), dataEnd) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _3) { i := add(i, _5) }\n        {\n            mstore(add(add(memPtr, i), _5), mload(add(add(_2, i), _5)))\n        }\n        mstore(add(add(memPtr, _3), _5), 0)\n        value0 := memPtr\n        value1 := abi_decode_address_fromMemory(add(headStart, _5))\n        value2 := abi_decode_address_fromMemory(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}","id":32,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b50604051620021da380380620021da8339810160408190526200003491620001de565b8183620000418162000147565b506001600160a01b0381166200007157604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b6200007c8162000159565b5060046200008b848262000367565b506001600160a01b0316607d60a11b176009555050600860205262030d407f6add646517a5b0f6793cd5891b7937d28a5b2981a5d88ebc7cd776088fea904155620186a07f625b35f5e76f098dd7c3a05b10e2e5e78a4a01228d60c3b143426cdf36d2645555620138807f9321edea6e3be4df59a344b401fab4f888b556fda1f954244cff9204bad624b855600560005261c3507f91238f30f286c9a1c6e901c4eda3b214c381c846e3dbe48df95c21488e8e1fdb5562000433565b600262000155828262000367565b5050565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b0381168114620001d957600080fd5b919050565b600080600060608486031215620001f457600080fd5b83516001600160401b03808211156200020c57600080fd5b818601915086601f8301126200022157600080fd5b815181811115620002365762000236620001ab565b604051601f8201601f19908116603f01168101908382118183101715620002615762000261620001ab565b816040528281526020935089848487010111156200027e57600080fd5b600091505b82821015620002a2578482018401518183018501529083019062000283565b6000848483010152809750505050620002bd818701620001c1565b93505050620002cf60408501620001c1565b90509250925092565b600181811c90821680620002ed57607f821691505b6020821081036200030e57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200036257600081815260208120601f850160051c810160208610156200033d5750805b601f850160051c820191505b818110156200035e5782815560010162000349565b5050505b505050565b81516001600160401b03811115620003835762000383620001ab565b6200039b81620003948454620002d8565b8462000314565b602080601f831160018114620003d35760008415620003ba5750858301515b600019600386901b1c1916600185901b1785556200035e565b600085815260208120601f198616915b828110156200040457888601518255948401946001909101908401620003e3565b5085821015620004235787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b611d9780620004436000396000f3fe608060405234801561001057600080fd5b506004361061014c5760003560e01c8063715018a6116100c3578063a22cb4651161007c578063a22cb46514610327578063d8b2eb991461033a578063e7dee99f1461035a578063e985e9c51461038c578063f242432a1461039f578063f2fde38b146103b257600080fd5b8063715018a61461028d57806371c5ecb114610295578063765b1845146102b5578063873f6f9e146102c85780638da5cb5b146102f65780639354f1751461030757600080fd5b80632a55205a116101155780632a55205a146101e25780632eb2c2d6146102145780634c00de82146102275780634e1273f41461025257806355f804b3146102725780636c0360eb1461028557600080fd5b8062fdd58e1461015157806301ffc9a71461017757806302fa7c471461019a5780630e89341c146101af57806318712c21146101cf575b600080fd5b61016461015f3660046113c4565b6103c5565b6040519081526020015b60405180910390f35b61018a610185366004611404565b6103ed565b604051901515815260200161016e565b6101ad6101a8366004611421565b61043d565b005b6101c26101bd366004611464565b61049e565b60405161016e91906114cd565b6101ad6101dd3660046114e0565b6104d2565b6101f56101f03660046114e0565b610574565b604080516001600160a01b03909316835260208301919091520161016e565b6101ad610222366004611650565b6105ba565b60095461023a906001600160a01b031681565b6040516001600160a01b03909116815260200161016e565b6102656102603660046116fa565b610621565b60405161016e91906117f5565b6101ad610280366004611808565b6106f6565b6101c2610745565b6101ad6107d3565b6101646102a3366004611464565b60056020526000908152604090205481565b6101ad6102c3366004611851565b6107e7565b61018a6102d63660046118d0565b600660209081526000928352604080842090915290825290205460ff1681565b6003546001600160a01b031661023a565b610164610315366004611464565b60086020526000908152604090205481565b6101ad6103353660046118fc565b610a54565b610164610348366004611464565b60076020526000908152604090205481565b60095461037490600160a01b90046001600160601b031681565b6040516001600160601b03909116815260200161016e565b61018a61039a36600461192d565b610a63565b6101ad6103ad366004611957565b610a91565b6101ad6103c03660046119bc565b610af0565b6000818152602081815260408083206001600160a01b03861684529091529020545b92915050565b60006001600160e01b03198216636cdb3d1360e11b148061041e57506001600160e01b031982166303a24d0760e21b145b806103e757506301ffc9a760e01b6001600160e01b03198316146103e7565b610445610b2e565b6001600160a01b038216600160a01b6001600160601b03831690810282176009556040519081527fae1d656a1268648b04ffa79c1416f05879338ae295aae3234d8db217356a1c62906020015b60405180910390a25050565b606060046104ab83610b5b565b6040516020016104bc929190611a11565b6040516020818303038152906040529050919050565b6104da610b2e565b600182101580156104ec575060058211155b61052f5760405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081d1bdad95b9259608a1b60448201526064015b60405180910390fd5b600082815260056020526040908190208290555182907f9ff79792a92b66fee090acb66e07837a2edb31ee6b9780fa551fd04b79dffcd2906104929084815260200190565b60095460009081906001600160a01b03811690612710906105a590600160a01b90046001600160601b031686611abe565b6105af9190611aeb565b915091509250929050565b336001600160a01b03861681148015906105db57506105d98682610a63565b155b1561060c5760405163711bec9160e11b81526001600160a01b03808316600483015287166024820152604401610526565b6106198686868686610c64565b505050505050565b606081518351146106525781518351604051635b05999160e01b815260048101929092526024820152604401610526565b6000835167ffffffffffffffff81111561066e5761066e611502565b604051908082528060200260200182016040528015610697578160200160208202803683370190505b50905060005b84518110156106ee576020808202860101516106c1906020808402870101516103c5565b8282815181106106d3576106d3611aff565b60209081029190910101526106e781611b15565b905061069d565b509392505050565b6106fe610b2e565b600461070a8282611b79565b507f6741b2fc379fad678116fe3d4d4b9a1a184ab53ba36b86ad0fa66340b1ab41ad8160405161073a91906114cd565b60405180910390a150565b60048054610752906119d7565b80601f016020809104026020016040519081016040528092919081815260200182805461077e906119d7565b80156107cb5780601f106107a0576101008083540402835291602001916107cb565b820191906000526020600020905b8154815290600101906020018083116107ae57829003601f168201915b505050505081565b6107db610b2e565b6107e56000610ccb565b565b600183101580156107f9575060058311155b6108375760405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081d1bdad95b9259608a1b6044820152606401610526565b600083815260066020908152604080832033845290915290205460ff16156108935760405162461bcd60e51b815260206004820152600f60248201526e105b1c9958591e4818db185a5b5959608a1b6044820152606401610526565b6000838152600860205260409020541561090657600083815260086020908152604080832054600790925290912054106109065760405162461bcd60e51b815260206004820152601460248201527314dd5c1c1b1e481b1a5b5a5d081c995858da195960621b6044820152606401610526565b6040516bffffffffffffffffffffffff193360601b16602082015260009060340160405160208183030381529060405280519060200120905061098a8383808060200260200160405190810160405280939291908181526020018383602002808284376000920182905250898152600560205260409020549250859150610d1d9050565b6109c65760405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b210383937b7b360991b6044820152606401610526565b60008481526006602090815260408083203384528252808320805460ff1916600117905586835260079091528120805491610a0083611b15565b9190505550610a213385600160405180602001604052806000815250610d33565b604051849033907fb792983f4be9cd6a6722f6cf3c136d8cf44f77c5cf7cb263f75f36b04806a01b90600090a350505050565b610a5f338383610d90565b5050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b336001600160a01b0386168114801590610ab25750610ab08682610a63565b155b15610ae35760405163711bec9160e11b81526001600160a01b03808316600483015287166024820152604401610526565b6106198686868686610e26565b610af8610b2e565b6001600160a01b038116610b2257604051631e4fbdf760e01b815260006004820152602401610526565b610b2b81610ccb565b50565b6003546001600160a01b031633146107e55760405163118cdaa760e01b8152336004820152602401610526565b606081600003610b825750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610bac5780610b9681611b15565b9150610ba59050600a83611aeb565b9150610b86565b60008167ffffffffffffffff811115610bc757610bc7611502565b6040519080825280601f01601f191660200182016040528015610bf1576020820181803683370190505b5090505b8415610c5c57610c06600183611c39565b9150610c13600a86611c4c565b610c1e906030611c60565b60f81b818381518110610c3357610c33611aff565b60200101906001600160f81b031916908160001a905350610c55600a86611aeb565b9450610bf5565b949350505050565b6001600160a01b038416610c8e57604051632bfa23e760e11b815260006004820152602401610526565b6001600160a01b038516610cb757604051626a0d4560e21b815260006004820152602401610526565b610cc48585858585610eb4565b5050505050565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600082610d2a8584610f07565b14949350505050565b6001600160a01b038416610d5d57604051632bfa23e760e11b815260006004820152602401610526565b60408051600180825260208201869052818301908152606082018590526080820190925290610619600087848487610eb4565b6001600160a01b038216610db95760405162ced3e160e81b815260006004820152602401610526565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b038416610e5057604051632bfa23e760e11b815260006004820152602401610526565b6001600160a01b038516610e7957604051626a0d4560e21b815260006004820152602401610526565b60408051600180825260208201869052818301908152606082018590526080820190925290610eab8787848487610eb4565b50505050505050565b610ec085858585610f4c565b6001600160a01b03841615610cc45782513390600103610ef95760208481015190840151610ef2838989858589611169565b5050610619565b61061981878787878761128d565b600081815b84518110156106ee57610f3882868381518110610f2b57610f2b611aff565b6020026020010151611376565b915080610f4481611b15565b915050610f0c565b8051825114610f7b5781518151604051635b05999160e01b815260048101929092526024820152604401610526565b3360005b835181101561108a576020818102858101820151908501909101516001600160a01b03881615611032576000828152602081815260408083206001600160a01b038c1684529091529020548181101561100b576040516303dee4c560e01b81526001600160a01b038a166004820152602481018290526044810183905260648101849052608401610526565b6000838152602081815260408083206001600160a01b038d16845290915290209082900390555b6001600160a01b03871615611077576000828152602081815260408083206001600160a01b038b16845290915281208054839290611071908490611c60565b90915550505b50508061108390611b15565b9050610f7f565b50825160010361110b5760208301516000906020840151909150856001600160a01b0316876001600160a01b0316846001600160a01b03167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6285856040516110fc929190918252602082015260400190565b60405180910390a45050610cc4565b836001600160a01b0316856001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb868660405161115a929190611c73565b60405180910390a45050505050565b6001600160a01b0384163b156106195760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906111ad9089908990889088908890600401611ca1565b6020604051808303816000875af19250505080156111e8575060408051601f3d908101601f191682019092526111e591810190611ce6565b60015b611251573d808015611216576040519150601f19603f3d011682016040523d82523d6000602084013e61121b565b606091505b50805160000361124957604051632bfa23e760e11b81526001600160a01b0386166004820152602401610526565b805160208201fd5b6001600160e01b0319811663f23a6e6160e01b14610eab57604051632bfa23e760e11b81526001600160a01b0386166004820152602401610526565b6001600160a01b0384163b156106195760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906112d19089908990889088908890600401611d03565b6020604051808303816000875af192505050801561130c575060408051601f3d908101601f1916820190925261130991810190611ce6565b60015b61133a573d808015611216576040519150601f19603f3d011682016040523d82523d6000602084013e61121b565b6001600160e01b0319811663bc197c8160e01b14610eab57604051632bfa23e760e11b81526001600160a01b0386166004820152602401610526565b60008183106113925760008281526020849052604090206113a1565b60008381526020839052604090205b9392505050565b80356001600160a01b03811681146113bf57600080fd5b919050565b600080604083850312156113d757600080fd5b6113e0836113a8565b946020939093013593505050565b6001600160e01b031981168114610b2b57600080fd5b60006020828403121561141657600080fd5b81356113a1816113ee565b6000806040838503121561143457600080fd5b61143d836113a8565b915060208301356001600160601b038116811461145957600080fd5b809150509250929050565b60006020828403121561147657600080fd5b5035919050565b60005b83811015611498578181015183820152602001611480565b50506000910152565b600081518084526114b981602086016020860161147d565b601f01601f19169290920160200192915050565b6020815260006113a160208301846114a1565b600080604083850312156114f357600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561154157611541611502565b604052919050565b600067ffffffffffffffff82111561156357611563611502565b5060051b60200190565b600082601f83011261157e57600080fd5b8135602061159361158e83611549565b611518565b82815260059290921b840181019181810190868411156115b257600080fd5b8286015b848110156115cd57803583529183019183016115b6565b509695505050505050565b600067ffffffffffffffff8311156115f2576115f2611502565b611605601f8401601f1916602001611518565b905082815283838301111561161957600080fd5b828260208301376000602084830101529392505050565b600082601f83011261164157600080fd5b6113a1838335602085016115d8565b600080600080600060a0868803121561166857600080fd5b611671866113a8565b945061167f602087016113a8565b9350604086013567ffffffffffffffff8082111561169c57600080fd5b6116a889838a0161156d565b945060608801359150808211156116be57600080fd5b6116ca89838a0161156d565b935060808801359150808211156116e057600080fd5b506116ed88828901611630565b9150509295509295909350565b6000806040838503121561170d57600080fd5b823567ffffffffffffffff8082111561172557600080fd5b818501915085601f83011261173957600080fd5b8135602061174961158e83611549565b82815260059290921b8401810191818101908984111561176857600080fd5b948201945b8386101561178d5761177e866113a8565b8252948201949082019061176d565b965050860135925050808211156117a357600080fd5b506117b08582860161156d565b9150509250929050565b600081518084526020808501945080840160005b838110156117ea578151875295820195908201906001016117ce565b509495945050505050565b6020815260006113a160208301846117ba565b60006020828403121561181a57600080fd5b813567ffffffffffffffff81111561183157600080fd5b8201601f8101841361184257600080fd5b610c5c848235602084016115d8565b60008060006040848603121561186657600080fd5b83359250602084013567ffffffffffffffff8082111561188557600080fd5b818601915086601f83011261189957600080fd5b8135818111156118a857600080fd5b8760208260051b85010111156118bd57600080fd5b6020830194508093505050509250925092565b600080604083850312156118e357600080fd5b823591506118f3602084016113a8565b90509250929050565b6000806040838503121561190f57600080fd5b611918836113a8565b91506020830135801515811461145957600080fd5b6000806040838503121561194057600080fd5b611949836113a8565b91506118f3602084016113a8565b600080600080600060a0868803121561196f57600080fd5b611978866113a8565b9450611986602087016113a8565b93506040860135925060608601359150608086013567ffffffffffffffff8111156119b057600080fd5b6116ed88828901611630565b6000602082840312156119ce57600080fd5b6113a1826113a8565b600181811c908216806119eb57607f821691505b602082108103611a0b57634e487b7160e01b600052602260045260246000fd5b50919050565b6000808454611a1f816119d7565b60018281168015611a375760018114611a4c57611a7b565b60ff1984168752821515830287019450611a7b565b8860005260208060002060005b85811015611a725781548a820152908401908201611a59565b50505082870194505b505050508351611a8f81836020880161147d565b64173539b7b760d91b9101908152600501949350505050565b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176103e7576103e7611aa8565b634e487b7160e01b600052601260045260246000fd5b600082611afa57611afa611ad5565b500490565b634e487b7160e01b600052603260045260246000fd5b600060018201611b2757611b27611aa8565b5060010190565b601f821115611b7457600081815260208120601f850160051c81016020861015611b555750805b601f850160051c820191505b8181101561061957828155600101611b61565b505050565b815167ffffffffffffffff811115611b9357611b93611502565b611ba781611ba184546119d7565b84611b2e565b602080601f831160018114611bdc5760008415611bc45750858301515b600019600386901b1c1916600185901b178555610619565b600085815260208120601f198616915b82811015611c0b57888601518255948401946001909101908401611bec565b5085821015611c295787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b818103818111156103e7576103e7611aa8565b600082611c5b57611c5b611ad5565b500690565b808201808211156103e7576103e7611aa8565b604081526000611c8660408301856117ba565b8281036020840152611c9881856117ba565b95945050505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a060808201819052600090611cdb908301846114a1565b979650505050505050565b600060208284031215611cf857600080fd5b81516113a1816113ee565b6001600160a01b0386811682528516602082015260a060408201819052600090611d2f908301866117ba565b8281036060840152611d4181866117ba565b90508281036080840152611d5581856114a1565b9897505050505050505056fea2646970667358221220b55523b84826b9480fdc169256cb07be6b90f99f716096de28b7c4dff712f19064736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x21DA CODESIZE SUB DUP1 PUSH3 0x21DA DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x1DE JUMP JUMPDEST DUP2 DUP4 PUSH3 0x41 DUP2 PUSH3 0x147 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0x71 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x7C DUP2 PUSH3 0x159 JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x8B DUP5 DUP3 PUSH3 0x367 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x7D PUSH1 0xA1 SHL OR PUSH1 0x9 SSTORE POP POP PUSH1 0x8 PUSH1 0x20 MSTORE PUSH3 0x30D40 PUSH32 0x6ADD646517A5B0F6793CD5891B7937D28A5B2981A5D88EBC7CD776088FEA9041 SSTORE PUSH3 0x186A0 PUSH32 0x625B35F5E76F098DD7C3A05B10E2E5E78A4A01228D60C3B143426CDF36D26455 SSTORE PUSH3 0x13880 PUSH32 0x9321EDEA6E3BE4DF59A344B401FAB4F888B556FDA1F954244CFF9204BAD624B8 SSTORE PUSH1 0x5 PUSH1 0x0 MSTORE PUSH2 0xC350 PUSH32 0x91238F30F286C9A1C6E901C4EDA3B214C381C846E3DBE48DF95C21488E8E1FDB SSTORE PUSH3 0x433 JUMP JUMPDEST PUSH1 0x2 PUSH3 0x155 DUP3 DUP3 PUSH3 0x367 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x1D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x1F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x20C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x221 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH3 0x236 JUMPI PUSH3 0x236 PUSH3 0x1AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x261 JUMPI PUSH3 0x261 PUSH3 0x1AB JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE PUSH1 0x20 SWAP4 POP DUP10 DUP5 DUP5 DUP8 ADD ADD GT ISZERO PUSH3 0x27E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP3 DUP3 LT ISZERO PUSH3 0x2A2 JUMPI DUP5 DUP3 ADD DUP5 ADD MLOAD DUP2 DUP4 ADD DUP6 ADD MSTORE SWAP1 DUP4 ADD SWAP1 PUSH3 0x283 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP8 POP POP POP POP PUSH3 0x2BD DUP2 DUP8 ADD PUSH3 0x1C1 JUMP JUMPDEST SWAP4 POP POP POP PUSH3 0x2CF PUSH1 0x40 DUP6 ADD PUSH3 0x1C1 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x2ED JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x30E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x362 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x33D JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x35E JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x349 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x383 JUMPI PUSH3 0x383 PUSH3 0x1AB JUMP JUMPDEST PUSH3 0x39B DUP2 PUSH3 0x394 DUP5 SLOAD PUSH3 0x2D8 JUMP JUMPDEST DUP5 PUSH3 0x314 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x3D3 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x3BA JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x35E JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x404 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x3E3 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x423 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1D97 DUP1 PUSH3 0x443 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x327 JUMPI DUP1 PUSH4 0xD8B2EB99 EQ PUSH2 0x33A JUMPI DUP1 PUSH4 0xE7DEE99F EQ PUSH2 0x35A JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x38C JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x39F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0x71C5ECB1 EQ PUSH2 0x295 JUMPI DUP1 PUSH4 0x765B1845 EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0x873F6F9E EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2F6 JUMPI DUP1 PUSH4 0x9354F175 EQ PUSH2 0x307 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2A55205A GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x2A55205A EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x4C00DE82 EQ PUSH2 0x227 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0x55F804B3 EQ PUSH2 0x272 JUMPI DUP1 PUSH4 0x6C0360EB EQ PUSH2 0x285 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x2FA7C47 EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x1AF JUMPI DUP1 PUSH4 0x18712C21 EQ PUSH2 0x1CF JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x164 PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0x13C4 JUMP JUMPDEST PUSH2 0x3C5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18A PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0x1404 JUMP JUMPDEST PUSH2 0x3ED JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16E JUMP JUMPDEST PUSH2 0x1AD PUSH2 0x1A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1421 JUMP JUMPDEST PUSH2 0x43D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C2 PUSH2 0x1BD CALLDATASIZE PUSH1 0x4 PUSH2 0x1464 JUMP JUMPDEST PUSH2 0x49E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16E SWAP2 SWAP1 PUSH2 0x14CD JUMP JUMPDEST PUSH2 0x1AD PUSH2 0x1DD CALLDATASIZE PUSH1 0x4 PUSH2 0x14E0 JUMP JUMPDEST PUSH2 0x4D2 JUMP JUMPDEST PUSH2 0x1F5 PUSH2 0x1F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x14E0 JUMP JUMPDEST PUSH2 0x574 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x16E JUMP JUMPDEST PUSH2 0x1AD PUSH2 0x222 CALLDATASIZE PUSH1 0x4 PUSH2 0x1650 JUMP JUMPDEST PUSH2 0x5BA JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x23A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16E JUMP JUMPDEST PUSH2 0x265 PUSH2 0x260 CALLDATASIZE PUSH1 0x4 PUSH2 0x16FA JUMP JUMPDEST PUSH2 0x621 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16E SWAP2 SWAP1 PUSH2 0x17F5 JUMP JUMPDEST PUSH2 0x1AD PUSH2 0x280 CALLDATASIZE PUSH1 0x4 PUSH2 0x1808 JUMP JUMPDEST PUSH2 0x6F6 JUMP JUMPDEST PUSH2 0x1C2 PUSH2 0x745 JUMP JUMPDEST PUSH2 0x1AD PUSH2 0x7D3 JUMP JUMPDEST PUSH2 0x164 PUSH2 0x2A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1464 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1AD PUSH2 0x2C3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1851 JUMP JUMPDEST PUSH2 0x7E7 JUMP JUMPDEST PUSH2 0x18A PUSH2 0x2D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x18D0 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x23A JUMP JUMPDEST PUSH2 0x164 PUSH2 0x315 CALLDATASIZE PUSH1 0x4 PUSH2 0x1464 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1AD PUSH2 0x335 CALLDATASIZE PUSH1 0x4 PUSH2 0x18FC JUMP JUMPDEST PUSH2 0xA54 JUMP JUMPDEST PUSH2 0x164 PUSH2 0x348 CALLDATASIZE PUSH1 0x4 PUSH2 0x1464 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x374 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16E JUMP JUMPDEST PUSH2 0x18A PUSH2 0x39A CALLDATASIZE PUSH1 0x4 PUSH2 0x192D JUMP JUMPDEST PUSH2 0xA63 JUMP JUMPDEST PUSH2 0x1AD PUSH2 0x3AD CALLDATASIZE PUSH1 0x4 PUSH2 0x1957 JUMP JUMPDEST PUSH2 0xA91 JUMP JUMPDEST PUSH2 0x1AD PUSH2 0x3C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x19BC JUMP JUMPDEST PUSH2 0xAF0 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x41E JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x3E7 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x3E7 JUMP JUMPDEST PUSH2 0x445 PUSH2 0xB2E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP4 AND SWAP1 DUP2 MUL DUP3 OR PUSH1 0x9 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xAE1D656A1268648B04FFA79C1416F05879338AE295AAE3234D8DB217356A1C62 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 PUSH2 0x4AB DUP4 PUSH2 0xB5B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x4BC SWAP3 SWAP2 SWAP1 PUSH2 0x1A11 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4DA PUSH2 0xB2E JUMP JUMPDEST PUSH1 0x1 DUP3 LT ISZERO DUP1 ISZERO PUSH2 0x4EC JUMPI POP PUSH1 0x5 DUP3 GT ISZERO JUMPDEST PUSH2 0x52F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x125B9D985B1A59081D1BDAD95B9259 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP3 SWAP1 SSTORE MLOAD DUP3 SWAP1 PUSH32 0x9FF79792A92B66FEE090ACB66E07837A2EDB31EE6B9780FA551FD04B79DFFCD2 SWAP1 PUSH2 0x492 SWAP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 PUSH2 0x2710 SWAP1 PUSH2 0x5A5 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND DUP7 PUSH2 0x1ABE JUMP JUMPDEST PUSH2 0x5AF SWAP2 SWAP1 PUSH2 0x1AEB JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0x5DB JUMPI POP PUSH2 0x5D9 DUP7 DUP3 PUSH2 0xA63 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x60C JUMPI PUSH1 0x40 MLOAD PUSH4 0x711BEC91 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x4 DUP4 ADD MSTORE DUP8 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x526 JUMP JUMPDEST PUSH2 0x619 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0xC64 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x652 JUMPI DUP2 MLOAD DUP4 MLOAD PUSH1 0x40 MLOAD PUSH4 0x5B059991 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x526 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x66E JUMPI PUSH2 0x66E PUSH2 0x1502 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x697 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x6EE JUMPI PUSH1 0x20 DUP1 DUP3 MUL DUP7 ADD ADD MLOAD PUSH2 0x6C1 SWAP1 PUSH1 0x20 DUP1 DUP5 MUL DUP8 ADD ADD MLOAD PUSH2 0x3C5 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x6D3 JUMPI PUSH2 0x6D3 PUSH2 0x1AFF JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x6E7 DUP2 PUSH2 0x1B15 JUMP JUMPDEST SWAP1 POP PUSH2 0x69D JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x6FE PUSH2 0xB2E JUMP JUMPDEST PUSH1 0x4 PUSH2 0x70A DUP3 DUP3 PUSH2 0x1B79 JUMP JUMPDEST POP PUSH32 0x6741B2FC379FAD678116FE3D4D4B9A1A184AB53BA36B86AD0FA66340B1AB41AD DUP2 PUSH1 0x40 MLOAD PUSH2 0x73A SWAP2 SWAP1 PUSH2 0x14CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH2 0x752 SWAP1 PUSH2 0x19D7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x77E SWAP1 PUSH2 0x19D7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7CB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7A0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7CB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7AE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH2 0x7DB PUSH2 0xB2E JUMP JUMPDEST PUSH2 0x7E5 PUSH1 0x0 PUSH2 0xCCB JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 DUP4 LT ISZERO DUP1 ISZERO PUSH2 0x7F9 JUMPI POP PUSH1 0x5 DUP4 GT ISZERO JUMPDEST PUSH2 0x837 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x125B9D985B1A59081D1BDAD95B9259 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x526 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x893 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x105B1C9958591E4818DB185A5B5959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x526 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x906 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x7 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD LT PUSH2 0x906 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14DD5C1C1B1E481B1A5B5A5D081C995858DA1959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x526 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT CALLER PUSH1 0x60 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x34 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x98A DUP4 DUP4 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP DUP10 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP3 POP DUP6 SWAP2 POP PUSH2 0xD1D SWAP1 POP JUMP JUMPDEST PUSH2 0x9C6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x24B73B30B634B210383937B7B3 PUSH1 0x99 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x526 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP7 DUP4 MSTORE PUSH1 0x7 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0xA00 DUP4 PUSH2 0x1B15 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0xA21 CALLER DUP6 PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xD33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 SWAP1 CALLER SWAP1 PUSH32 0xB792983F4BE9CD6A6722F6CF3C136D8CF44F77C5CF7CB263F75F36B04806A01B SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH2 0xA5F CALLER DUP4 DUP4 PUSH2 0xD90 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0xAB2 JUMPI POP PUSH2 0xAB0 DUP7 DUP3 PUSH2 0xA63 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xAE3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x711BEC91 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x4 DUP4 ADD MSTORE DUP8 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x526 JUMP JUMPDEST PUSH2 0x619 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0xE26 JUMP JUMPDEST PUSH2 0xAF8 PUSH2 0xB2E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB22 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x526 JUMP JUMPDEST PUSH2 0xB2B DUP2 PUSH2 0xCCB JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7E5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x526 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 SUB PUSH2 0xB82 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0xBAC JUMPI DUP1 PUSH2 0xB96 DUP2 PUSH2 0x1B15 JUMP JUMPDEST SWAP2 POP PUSH2 0xBA5 SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x1AEB JUMP JUMPDEST SWAP2 POP PUSH2 0xB86 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBC7 JUMPI PUSH2 0xBC7 PUSH2 0x1502 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xBF1 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0xC5C JUMPI PUSH2 0xC06 PUSH1 0x1 DUP4 PUSH2 0x1C39 JUMP JUMPDEST SWAP2 POP PUSH2 0xC13 PUSH1 0xA DUP7 PUSH2 0x1C4C JUMP JUMPDEST PUSH2 0xC1E SWAP1 PUSH1 0x30 PUSH2 0x1C60 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xC33 JUMPI PUSH2 0xC33 PUSH2 0x1AFF JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0xC55 PUSH1 0xA DUP7 PUSH2 0x1AEB JUMP JUMPDEST SWAP5 POP PUSH2 0xBF5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xC8E JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x526 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0xCB7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x6A0D45 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x526 JUMP JUMPDEST PUSH2 0xCC4 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xEB4 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xD2A DUP6 DUP5 PUSH2 0xF07 JUMP JUMPDEST EQ SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xD5D JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x526 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP7 SWAP1 MSTORE DUP2 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x60 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH2 0x619 PUSH1 0x0 DUP8 DUP5 DUP5 DUP8 PUSH2 0xEB4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xDB9 JUMPI PUSH1 0x40 MLOAD PUSH3 0xCED3E1 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x526 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xE50 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x526 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0xE79 JUMPI PUSH1 0x40 MLOAD PUSH3 0x6A0D45 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x526 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP7 SWAP1 MSTORE DUP2 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x60 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH2 0xEAB DUP8 DUP8 DUP5 DUP5 DUP8 PUSH2 0xEB4 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xEC0 DUP6 DUP6 DUP6 DUP6 PUSH2 0xF4C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO PUSH2 0xCC4 JUMPI DUP3 MLOAD CALLER SWAP1 PUSH1 0x1 SUB PUSH2 0xEF9 JUMPI PUSH1 0x20 DUP5 DUP2 ADD MLOAD SWAP1 DUP5 ADD MLOAD PUSH2 0xEF2 DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0x1169 JUMP JUMPDEST POP POP PUSH2 0x619 JUMP JUMPDEST PUSH2 0x619 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x128D JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x6EE JUMPI PUSH2 0xF38 DUP3 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xF2B JUMPI PUSH2 0xF2B PUSH2 0x1AFF JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1376 JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0xF44 DUP2 PUSH2 0x1B15 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xF0C JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0xF7B JUMPI DUP2 MLOAD DUP2 MLOAD PUSH1 0x40 MLOAD PUSH4 0x5B059991 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x526 JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x108A JUMPI PUSH1 0x20 DUP2 DUP2 MUL DUP6 DUP2 ADD DUP3 ADD MLOAD SWAP1 DUP6 ADD SWAP1 SWAP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND ISZERO PUSH2 0x1032 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x100B JUMPI PUSH1 0x40 MLOAD PUSH4 0x3DEE4C5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x84 ADD PUSH2 0x526 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND ISZERO PUSH2 0x1077 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1071 SWAP1 DUP5 SWAP1 PUSH2 0x1C60 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST POP POP DUP1 PUSH2 0x1083 SWAP1 PUSH2 0x1B15 JUMP JUMPDEST SWAP1 POP PUSH2 0xF7F JUMP JUMPDEST POP DUP3 MLOAD PUSH1 0x1 SUB PUSH2 0x110B JUMPI PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x0 SWAP1 PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP2 POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x10FC SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH2 0xCC4 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x115A SWAP3 SWAP2 SWAP1 PUSH2 0x1C73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x619 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0x11AD SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1CA1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x11E8 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x11E5 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1CE6 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1251 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x1216 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x121B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x1249 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x526 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0xEAB JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x526 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x619 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x12D1 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1D03 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x130C JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1309 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1CE6 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x133A JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x1216 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x121B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0xEAB JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x526 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x1392 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP5 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x13A1 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP4 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x13BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13E0 DUP4 PUSH2 0x13A8 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xB2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1416 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x13A1 DUP2 PUSH2 0x13EE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1434 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x143D DUP4 PUSH2 0x13A8 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1459 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1476 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1498 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1480 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x14B9 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x147D JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x13A1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x14A1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1541 JUMPI PUSH2 0x1541 PUSH2 0x1502 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1563 JUMPI PUSH2 0x1563 PUSH2 0x1502 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x157E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x1593 PUSH2 0x158E DUP4 PUSH2 0x1549 JUMP JUMPDEST PUSH2 0x1518 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x15B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x15CD JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x15B6 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH2 0x15F2 JUMPI PUSH2 0x15F2 PUSH2 0x1502 JUMP JUMPDEST PUSH2 0x1605 PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x1518 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE DUP4 DUP4 DUP4 ADD GT ISZERO PUSH2 0x1619 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP3 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1641 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13A1 DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x15D8 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1668 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1671 DUP7 PUSH2 0x13A8 JUMP JUMPDEST SWAP5 POP PUSH2 0x167F PUSH1 0x20 DUP8 ADD PUSH2 0x13A8 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x169C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16A8 DUP10 DUP4 DUP11 ADD PUSH2 0x156D JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x16BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16CA DUP10 DUP4 DUP11 ADD PUSH2 0x156D JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x16E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16ED DUP9 DUP3 DUP10 ADD PUSH2 0x1630 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x170D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1725 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1739 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x1749 PUSH2 0x158E DUP4 PUSH2 0x1549 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP10 DUP5 GT ISZERO PUSH2 0x1768 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x178D JUMPI PUSH2 0x177E DUP7 PUSH2 0x13A8 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x176D JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x17A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17B0 DUP6 DUP3 DUP7 ADD PUSH2 0x156D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x17EA JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x17CE JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x13A1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x17BA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x181A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1831 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x1842 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC5C DUP5 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x15D8 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1866 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1885 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1899 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x18A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x18BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP5 POP DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x18F3 PUSH1 0x20 DUP5 ADD PUSH2 0x13A8 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x190F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1918 DUP4 PUSH2 0x13A8 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1459 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1940 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1949 DUP4 PUSH2 0x13A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x18F3 PUSH1 0x20 DUP5 ADD PUSH2 0x13A8 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x196F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1978 DUP7 PUSH2 0x13A8 JUMP JUMPDEST SWAP5 POP PUSH2 0x1986 PUSH1 0x20 DUP8 ADD PUSH2 0x13A8 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16ED DUP9 DUP3 DUP10 ADD PUSH2 0x1630 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13A1 DUP3 PUSH2 0x13A8 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x19EB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1A0B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 SLOAD PUSH2 0x1A1F DUP2 PUSH2 0x19D7 JUMP JUMPDEST PUSH1 0x1 DUP3 DUP2 AND DUP1 ISZERO PUSH2 0x1A37 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x1A4C JUMPI PUSH2 0x1A7B JUMP JUMPDEST PUSH1 0xFF NOT DUP5 AND DUP8 MSTORE DUP3 ISZERO ISZERO DUP4 MUL DUP8 ADD SWAP5 POP PUSH2 0x1A7B JUMP JUMPDEST DUP9 PUSH1 0x0 MSTORE PUSH1 0x20 DUP1 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1A72 JUMPI DUP2 SLOAD DUP11 DUP3 ADD MSTORE SWAP1 DUP5 ADD SWAP1 DUP3 ADD PUSH2 0x1A59 JUMP JUMPDEST POP POP POP DUP3 DUP8 ADD SWAP5 POP JUMPDEST POP POP POP POP DUP4 MLOAD PUSH2 0x1A8F DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x147D JUMP JUMPDEST PUSH5 0x173539B7B7 PUSH1 0xD9 SHL SWAP2 ADD SWAP1 DUP2 MSTORE PUSH1 0x5 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x3E7 JUMPI PUSH2 0x3E7 PUSH2 0x1AA8 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1AFA JUMPI PUSH2 0x1AFA PUSH2 0x1AD5 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1B27 JUMPI PUSH2 0x1B27 PUSH2 0x1AA8 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1B74 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x1B55 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x619 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1B61 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B93 JUMPI PUSH2 0x1B93 PUSH2 0x1502 JUMP JUMPDEST PUSH2 0x1BA7 DUP2 PUSH2 0x1BA1 DUP5 SLOAD PUSH2 0x19D7 JUMP JUMPDEST DUP5 PUSH2 0x1B2E JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1BDC JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x1BC4 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x619 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1C0B JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x1BEC JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x1C29 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x3E7 JUMPI PUSH2 0x3E7 PUSH2 0x1AA8 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1C5B JUMPI PUSH2 0x1C5B PUSH2 0x1AD5 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x3E7 JUMPI PUSH2 0x3E7 PUSH2 0x1AA8 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1C86 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x17BA JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1C98 DUP2 DUP6 PUSH2 0x17BA JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1CDB SWAP1 DUP4 ADD DUP5 PUSH2 0x14A1 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x13A1 DUP2 PUSH2 0x13EE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1D2F SWAP1 DUP4 ADD DUP7 PUSH2 0x17BA JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1D41 DUP2 DUP7 PUSH2 0x17BA JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x1D55 DUP2 DUP6 PUSH2 0x14A1 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB5 SSTORE 0x23 0xB8 BASEFEE 0x26 0xB9 BASEFEE 0xF 0xDC AND SWAP3 JUMP 0xCB SMOD 0xBE PUSH12 0x90F99F716096DE28B7C4DFF7 SLT CALL SWAP1 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"239:2991:28:-:0;;;867:392;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;992:13;967:15;1291:13:5;967:15:28;1291:7:5;:13::i;:::-;-1:-1:-1;;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;1693:51:32;1666:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;1017:7:28::2;:25;1027:15:::0;1017:7;:25:::2;:::i;:::-;-1:-1:-1::0;;;;;;1052:35:28::2;-1:-1:-1::0;;;1097:21:28::2;1052:16;1097:21:::0;-1:-1:-1;;1128:12:28::2;:15;::::0;1146:6:::2;1128:15:::0;:24;1180:6:::2;1162:15:::0;:24;1214:5:::2;1196:15:::0;:23;1242:1:::2;-1:-1:-1::0;1229:15:28;1247:5:::2;1229:15:::0;:23;239:2991;;10098:86:5;10164:4;:13;10171:6;10164:4;:13;:::i;:::-;;10098:86;:::o;2912:187:0:-;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;14:127:32:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:177;225:13;;-1:-1:-1;;;;;267:31:32;;257:42;;247:70;;313:1;310;303:12;247:70;146:177;;;:::o;328:1214::-;426:6;434;442;495:2;483:9;474:7;470:23;466:32;463:52;;;511:1;508;501:12;463:52;538:16;;-1:-1:-1;;;;;603:14:32;;;600:34;;;630:1;627;620:12;600:34;668:6;657:9;653:22;643:32;;713:7;706:4;702:2;698:13;694:27;684:55;;735:1;732;725:12;684:55;764:2;758:9;786:2;782;779:10;776:36;;;792:18;;:::i;:::-;867:2;861:9;835:2;921:13;;-1:-1:-1;;917:22:32;;;941:2;913:31;909:40;897:53;;;965:18;;;985:22;;;962:46;959:72;;;1011:18;;:::i;:::-;1051:10;1047:2;1040:22;1086:2;1078:6;1071:18;1108:4;1098:14;;1149:7;1144:2;1139;1135;1131:11;1127:20;1124:33;1121:53;;;1170:1;1167;1160:12;1121:53;1192:1;1183:10;;1202:129;1216:2;1213:1;1210:9;1202:129;;;1304:10;;;1300:19;;1294:26;1273:14;;;1269:23;;1262:59;1227:10;;;;1202:129;;;1373:1;1368:2;1363;1355:6;1351:15;1347:24;1340:35;1394:6;1384:16;;;;;1419:49;1464:2;1453:9;1449:18;1419:49;:::i;:::-;1409:59;;;;1487:49;1532:2;1521:9;1517:18;1487:49;:::i;:::-;1477:59;;328:1214;;;;;:::o;1755:380::-;1834:1;1830:12;;;;1877;;;1898:61;;1952:4;1944:6;1940:17;1930:27;;1898:61;2005:2;1997:6;1994:14;1974:18;1971:38;1968:161;;2051:10;2046:3;2042:20;2039:1;2032:31;2086:4;2083:1;2076:15;2114:4;2111:1;2104:15;1968:161;;1755:380;;;:::o;2266:545::-;2368:2;2363:3;2360:11;2357:448;;;2404:1;2429:5;2425:2;2418:17;2474:4;2470:2;2460:19;2544:2;2532:10;2528:19;2525:1;2521:27;2515:4;2511:38;2580:4;2568:10;2565:20;2562:47;;;-1:-1:-1;2603:4:32;2562:47;2658:2;2653:3;2649:12;2646:1;2642:20;2636:4;2632:31;2622:41;;2713:82;2731:2;2724:5;2721:13;2713:82;;;2776:17;;;2757:1;2746:13;2713:82;;;2717:3;;;2357:448;2266:545;;;:::o;2987:1352::-;3107:10;;-1:-1:-1;;;;;3129:30:32;;3126:56;;;3162:18;;:::i;:::-;3191:97;3281:6;3241:38;3273:4;3267:11;3241:38;:::i;:::-;3235:4;3191:97;:::i;:::-;3343:4;;3407:2;3396:14;;3424:1;3419:663;;;;4126:1;4143:6;4140:89;;;-1:-1:-1;4195:19:32;;;4189:26;4140:89;-1:-1:-1;;2944:1:32;2940:11;;;2936:24;2932:29;2922:40;2968:1;2964:11;;;2919:57;4242:81;;3389:944;;3419:663;2213:1;2206:14;;;2250:4;2237:18;;-1:-1:-1;;3455:20:32;;;3573:236;3587:7;3584:1;3581:14;3573:236;;;3676:19;;;3670:26;3655:42;;3768:27;;;;3736:1;3724:14;;;;3603:19;;3573:236;;;3577:3;3837:6;3828:7;3825:19;3822:201;;;3898:19;;;3892:26;-1:-1:-1;;3981:1:32;3977:14;;;3993:3;3973:24;3969:37;3965:42;3950:58;3935:74;;3822:201;-1:-1:-1;;;;;4069:1:32;4053:14;;;4049:22;4036:36;;-1:-1:-1;2987:1352:32:o;:::-;239:2991:28;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_asSingletonArrays_1290":{"entryPoint":null,"id":1290,"parameterSlots":2,"returnSlots":2},"@_checkOwner_84":{"entryPoint":2862,"id":84,"parameterSlots":0,"returnSlots":0},"@_mint_1104":{"entryPoint":3379,"id":1104,"parameterSlots":4,"returnSlots":0},"@_msgSender_3731":{"entryPoint":null,"id":3731,"parameterSlots":0,"returnSlots":1},"@_safeBatchTransferFrom_1041":{"entryPoint":3172,"id":1041,"parameterSlots":5,"returnSlots":0},"@_safeTransferFrom_986":{"entryPoint":3622,"id":986,"parameterSlots":5,"returnSlots":0},"@_setApprovalForAll_1274":{"entryPoint":3472,"id":1274,"parameterSlots":3,"returnSlots":0},"@_toString_9728":{"entryPoint":2907,"id":9728,"parameterSlots":1,"returnSlots":1},"@_transferOwnership_146":{"entryPoint":3275,"id":146,"parameterSlots":1,"returnSlots":0},"@_updateWithAcceptanceCheck_920":{"entryPoint":3764,"id":920,"parameterSlots":5,"returnSlots":0},"@_update_840":{"entryPoint":3916,"id":840,"parameterSlots":4,"returnSlots":0},"@balanceOfBatch_564":{"entryPoint":1569,"id":564,"parameterSlots":2,"returnSlots":1},"@balanceOf_494":{"entryPoint":965,"id":494,"parameterSlots":2,"returnSlots":1},"@baseURI_9343":{"entryPoint":1861,"id":9343,"parameterSlots":0,"returnSlots":0},"@checkOnERC1155BatchReceived_1625":{"entryPoint":4749,"id":1625,"parameterSlots":6,"returnSlots":0},"@checkOnERC1155Received_1551":{"entryPoint":4457,"id":1551,"parameterSlots":6,"returnSlots":0},"@claimNFT_9538":{"entryPoint":2023,"id":9538,"parameterSlots":3,"returnSlots":0},"@commutativeKeccak256_4151":{"entryPoint":4982,"id":4151,"parameterSlots":2,"returnSlots":1},"@efficientKeccak256_4163":{"entryPoint":null,"id":4163,"parameterSlots":2,"returnSlots":1},"@hasClaimed_9353":{"entryPoint":null,"id":9353,"parameterSlots":0,"returnSlots":0},"@isApprovedForAll_597":{"entryPoint":2659,"id":597,"parameterSlots":2,"returnSlots":1},"@merkleRoots_9347":{"entryPoint":null,"id":9347,"parameterSlots":0,"returnSlots":0},"@mintedCounts_9357":{"entryPoint":null,"id":9357,"parameterSlots":0,"returnSlots":0},"@owner_67":{"entryPoint":null,"id":67,"parameterSlots":0,"returnSlots":1},"@processProof_4234":{"entryPoint":3847,"id":4234,"parameterSlots":2,"returnSlots":1},"@renounceOwnership_98":{"entryPoint":2003,"id":98,"parameterSlots":0,"returnSlots":0},"@royaltyFraction_9365":{"entryPoint":null,"id":9365,"parameterSlots":0,"returnSlots":0},"@royaltyInfo_9580":{"entryPoint":1396,"id":9580,"parameterSlots":2,"returnSlots":2},"@royaltyRecipient_9363":{"entryPoint":null,"id":9363,"parameterSlots":0,"returnSlots":0},"@safeBatchTransferFrom_687":{"entryPoint":1466,"id":687,"parameterSlots":5,"returnSlots":0},"@safeTransferFrom_641":{"entryPoint":2705,"id":641,"parameterSlots":5,"returnSlots":0},"@setApprovalForAll_580":{"entryPoint":2644,"id":580,"parameterSlots":2,"returnSlots":0},"@setBaseURI_9628":{"entryPoint":1782,"id":9628,"parameterSlots":1,"returnSlots":0},"@setMerkleRoot_9612":{"entryPoint":1234,"id":9612,"parameterSlots":2,"returnSlots":0},"@setRoyaltyInfo_9651":{"entryPoint":1085,"id":9651,"parameterSlots":2,"returnSlots":0},"@supplyLimits_9361":{"entryPoint":null,"id":9361,"parameterSlots":0,"returnSlots":0},"@supportsInterface_466":{"entryPoint":1005,"id":466,"parameterSlots":1,"returnSlots":1},"@supportsInterface_5260":{"entryPoint":null,"id":5260,"parameterSlots":1,"returnSlots":1},"@transferOwnership_126":{"entryPoint":2800,"id":126,"parameterSlots":1,"returnSlots":0},"@unsafeMemoryAccess_3579":{"entryPoint":null,"id":3579,"parameterSlots":2,"returnSlots":1},"@unsafeMemoryAccess_3605":{"entryPoint":null,"id":3605,"parameterSlots":2,"returnSlots":1},"@uri_9559":{"entryPoint":1182,"id":9559,"parameterSlots":1,"returnSlots":1},"@verify_4193":{"entryPoint":3357,"id":4193,"parameterSlots":3,"returnSlots":1},"abi_decode_address":{"entryPoint":5032,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_array_uint256_dyn":{"entryPoint":5485,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_available_length_bytes":{"entryPoint":5592,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_bytes":{"entryPoint":5680,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":6588,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":6445,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr":{"entryPoint":5712,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr":{"entryPoint":6487,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_addresst_bool":{"entryPoint":6396,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":5060,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint96":{"entryPoint":5153,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":5882,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":5124,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":7398,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptr":{"entryPoint":6152,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":5220,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_address":{"entryPoint":6352,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_array$_t_bytes32_$dyn_calldata_ptr":{"entryPoint":6225,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256t_bytes32":{"entryPoint":5344,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_array_uint256_dyn":{"entryPoint":6074,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":5281,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_address__to_t_address__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_string_storage_t_string_memory_ptr_t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":6673,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":7427,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":7329,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":6133,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":7283,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5325,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_47dcc88603f32730c5f1349ee02d9fe469c193c742f38ce12c7b0ba84c66c8a4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_dbb8b2d35c676776519896c045ce9c5b267915e4127b1aa1fa65a56a3d2b2639__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f563795e1c522302826c31e2514b6e741825cdb656e643a68a551481a38b3699__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":5400,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_array_uint256_dyn":{"entryPoint":5449,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":7264,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":6891,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":6846,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":7225,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":6958,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":7033,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":5245,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":6615,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"increment_t_uint256":{"entryPoint":6933,"id":null,"parameterSlots":1,"returnSlots":1},"mod_t_uint256":{"entryPoint":7244,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":6824,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":6869,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":6911,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":5378,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_bytes4":{"entryPoint":5102,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:21151:32","statements":[{"nodeType":"YulBlock","src":"6:3:32","statements":[]},{"body":{"nodeType":"YulBlock","src":"63:124:32","statements":[{"nodeType":"YulAssignment","src":"73:29:32","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"95:6:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"82:12:32"},"nodeType":"YulFunctionCall","src":"82:20:32"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"73:5:32"}]},{"body":{"nodeType":"YulBlock","src":"165:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"174:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"177:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"167:6:32"},"nodeType":"YulFunctionCall","src":"167:12:32"},"nodeType":"YulExpressionStatement","src":"167:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"124:5:32"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"135:5:32"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:3:32","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"155:1:32","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"146:3:32"},"nodeType":"YulFunctionCall","src":"146:11:32"},{"kind":"number","nodeType":"YulLiteral","src":"159:1:32","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"142:3:32"},"nodeType":"YulFunctionCall","src":"142:19:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"131:3:32"},"nodeType":"YulFunctionCall","src":"131:31:32"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"121:2:32"},"nodeType":"YulFunctionCall","src":"121:42:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"114:6:32"},"nodeType":"YulFunctionCall","src":"114:50:32"},"nodeType":"YulIf","src":"111:70:32"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"42:6:32","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:32","type":""}],"src":"14:173:32"},{"body":{"nodeType":"YulBlock","src":"279:167:32","statements":[{"body":{"nodeType":"YulBlock","src":"325:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"334:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"337:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"327:6:32"},"nodeType":"YulFunctionCall","src":"327:12:32"},"nodeType":"YulExpressionStatement","src":"327:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"300:7:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"309:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"296:3:32"},"nodeType":"YulFunctionCall","src":"296:23:32"},{"kind":"number","nodeType":"YulLiteral","src":"321:2:32","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"292:3:32"},"nodeType":"YulFunctionCall","src":"292:32:32"},"nodeType":"YulIf","src":"289:52:32"},{"nodeType":"YulAssignment","src":"350:39:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"379:9:32"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"360:18:32"},"nodeType":"YulFunctionCall","src":"360:29:32"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"350:6:32"}]},{"nodeType":"YulAssignment","src":"398:42:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"425:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"436:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"421:3:32"},"nodeType":"YulFunctionCall","src":"421:18:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"408:12:32"},"nodeType":"YulFunctionCall","src":"408:32:32"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"398:6:32"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"237:9:32","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"248:7:32","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"260:6:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"268:6:32","type":""}],"src":"192:254:32"},{"body":{"nodeType":"YulBlock","src":"552:76:32","statements":[{"nodeType":"YulAssignment","src":"562:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"574:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"585:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"570:3:32"},"nodeType":"YulFunctionCall","src":"570:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"562:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"604:9:32"},{"name":"value0","nodeType":"YulIdentifier","src":"615:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"597:6:32"},"nodeType":"YulFunctionCall","src":"597:25:32"},"nodeType":"YulExpressionStatement","src":"597:25:32"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"521:9:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"532:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"543:4:32","type":""}],"src":"451:177:32"},{"body":{"nodeType":"YulBlock","src":"677:87:32","statements":[{"body":{"nodeType":"YulBlock","src":"742:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"751:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"754:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"744:6:32"},"nodeType":"YulFunctionCall","src":"744:12:32"},"nodeType":"YulExpressionStatement","src":"744:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"700:5:32"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"711:5:32"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"722:3:32","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"727:10:32","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"718:3:32"},"nodeType":"YulFunctionCall","src":"718:20:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"707:3:32"},"nodeType":"YulFunctionCall","src":"707:32:32"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"697:2:32"},"nodeType":"YulFunctionCall","src":"697:43:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"690:6:32"},"nodeType":"YulFunctionCall","src":"690:51:32"},"nodeType":"YulIf","src":"687:71:32"}]},"name":"validator_revert_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"666:5:32","type":""}],"src":"633:131:32"},{"body":{"nodeType":"YulBlock","src":"838:176:32","statements":[{"body":{"nodeType":"YulBlock","src":"884:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"893:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"896:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"886:6:32"},"nodeType":"YulFunctionCall","src":"886:12:32"},"nodeType":"YulExpressionStatement","src":"886:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"859:7:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"868:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"855:3:32"},"nodeType":"YulFunctionCall","src":"855:23:32"},{"kind":"number","nodeType":"YulLiteral","src":"880:2:32","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"851:3:32"},"nodeType":"YulFunctionCall","src":"851:32:32"},"nodeType":"YulIf","src":"848:52:32"},{"nodeType":"YulVariableDeclaration","src":"909:36:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"935:9:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"922:12:32"},"nodeType":"YulFunctionCall","src":"922:23:32"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"913:5:32","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"978:5:32"}],"functionName":{"name":"validator_revert_bytes4","nodeType":"YulIdentifier","src":"954:23:32"},"nodeType":"YulFunctionCall","src":"954:30:32"},"nodeType":"YulExpressionStatement","src":"954:30:32"},{"nodeType":"YulAssignment","src":"993:15:32","value":{"name":"value","nodeType":"YulIdentifier","src":"1003:5:32"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"993:6:32"}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"804:9:32","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"815:7:32","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"827:6:32","type":""}],"src":"769:245:32"},{"body":{"nodeType":"YulBlock","src":"1114:92:32","statements":[{"nodeType":"YulAssignment","src":"1124:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1136:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"1147:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1132:3:32"},"nodeType":"YulFunctionCall","src":"1132:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1124:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1166:9:32"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1191:6:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1184:6:32"},"nodeType":"YulFunctionCall","src":"1184:14:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1177:6:32"},"nodeType":"YulFunctionCall","src":"1177:22:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1159:6:32"},"nodeType":"YulFunctionCall","src":"1159:41:32"},"nodeType":"YulExpressionStatement","src":"1159:41:32"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1083:9:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1094:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1105:4:32","type":""}],"src":"1019:187:32"},{"body":{"nodeType":"YulBlock","src":"1297:280:32","statements":[{"body":{"nodeType":"YulBlock","src":"1343:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1352:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1355:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1345:6:32"},"nodeType":"YulFunctionCall","src":"1345:12:32"},"nodeType":"YulExpressionStatement","src":"1345:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1318:7:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"1327:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1314:3:32"},"nodeType":"YulFunctionCall","src":"1314:23:32"},{"kind":"number","nodeType":"YulLiteral","src":"1339:2:32","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1310:3:32"},"nodeType":"YulFunctionCall","src":"1310:32:32"},"nodeType":"YulIf","src":"1307:52:32"},{"nodeType":"YulAssignment","src":"1368:39:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1397:9:32"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1378:18:32"},"nodeType":"YulFunctionCall","src":"1378:29:32"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1368:6:32"}]},{"nodeType":"YulVariableDeclaration","src":"1416:45:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1446:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"1457:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1442:3:32"},"nodeType":"YulFunctionCall","src":"1442:18:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1429:12:32"},"nodeType":"YulFunctionCall","src":"1429:32:32"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1420:5:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"1531:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1540:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1543:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1533:6:32"},"nodeType":"YulFunctionCall","src":"1533:12:32"},"nodeType":"YulExpressionStatement","src":"1533:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1483:5:32"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1494:5:32"},{"kind":"number","nodeType":"YulLiteral","src":"1501:26:32","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1490:3:32"},"nodeType":"YulFunctionCall","src":"1490:38:32"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1480:2:32"},"nodeType":"YulFunctionCall","src":"1480:49:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1473:6:32"},"nodeType":"YulFunctionCall","src":"1473:57:32"},"nodeType":"YulIf","src":"1470:77:32"},{"nodeType":"YulAssignment","src":"1556:15:32","value":{"name":"value","nodeType":"YulIdentifier","src":"1566:5:32"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1556:6:32"}]}]},"name":"abi_decode_tuple_t_addresst_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1255:9:32","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1266:7:32","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1278:6:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1286:6:32","type":""}],"src":"1211:366:32"},{"body":{"nodeType":"YulBlock","src":"1652:110:32","statements":[{"body":{"nodeType":"YulBlock","src":"1698:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1707:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1710:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1700:6:32"},"nodeType":"YulFunctionCall","src":"1700:12:32"},"nodeType":"YulExpressionStatement","src":"1700:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1673:7:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"1682:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1669:3:32"},"nodeType":"YulFunctionCall","src":"1669:23:32"},{"kind":"number","nodeType":"YulLiteral","src":"1694:2:32","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1665:3:32"},"nodeType":"YulFunctionCall","src":"1665:32:32"},"nodeType":"YulIf","src":"1662:52:32"},{"nodeType":"YulAssignment","src":"1723:33:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1746:9:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1733:12:32"},"nodeType":"YulFunctionCall","src":"1733:23:32"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1723:6:32"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1618:9:32","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1629:7:32","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1641:6:32","type":""}],"src":"1582:180:32"},{"body":{"nodeType":"YulBlock","src":"1833:184:32","statements":[{"nodeType":"YulVariableDeclaration","src":"1843:10:32","value":{"kind":"number","nodeType":"YulLiteral","src":"1852:1:32","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1847:1:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"1912:63:32","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1937:3:32"},{"name":"i","nodeType":"YulIdentifier","src":"1942:1:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1933:3:32"},"nodeType":"YulFunctionCall","src":"1933:11:32"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1956:3:32"},{"name":"i","nodeType":"YulIdentifier","src":"1961:1:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1952:3:32"},"nodeType":"YulFunctionCall","src":"1952:11:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1946:5:32"},"nodeType":"YulFunctionCall","src":"1946:18:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1926:6:32"},"nodeType":"YulFunctionCall","src":"1926:39:32"},"nodeType":"YulExpressionStatement","src":"1926:39:32"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1873:1:32"},{"name":"length","nodeType":"YulIdentifier","src":"1876:6:32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1870:2:32"},"nodeType":"YulFunctionCall","src":"1870:13:32"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1884:19:32","statements":[{"nodeType":"YulAssignment","src":"1886:15:32","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1895:1:32"},{"kind":"number","nodeType":"YulLiteral","src":"1898:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1891:3:32"},"nodeType":"YulFunctionCall","src":"1891:10:32"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1886:1:32"}]}]},"pre":{"nodeType":"YulBlock","src":"1866:3:32","statements":[]},"src":"1862:113:32"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1995:3:32"},{"name":"length","nodeType":"YulIdentifier","src":"2000:6:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1991:3:32"},"nodeType":"YulFunctionCall","src":"1991:16:32"},{"kind":"number","nodeType":"YulLiteral","src":"2009:1:32","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1984:6:32"},"nodeType":"YulFunctionCall","src":"1984:27:32"},"nodeType":"YulExpressionStatement","src":"1984:27:32"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1811:3:32","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1816:3:32","type":""},{"name":"length","nodeType":"YulTypedName","src":"1821:6:32","type":""}],"src":"1767:250:32"},{"body":{"nodeType":"YulBlock","src":"2072:221:32","statements":[{"nodeType":"YulVariableDeclaration","src":"2082:26:32","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2102:5:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2096:5:32"},"nodeType":"YulFunctionCall","src":"2096:12:32"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2086:6:32","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2124:3:32"},{"name":"length","nodeType":"YulIdentifier","src":"2129:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2117:6:32"},"nodeType":"YulFunctionCall","src":"2117:19:32"},"nodeType":"YulExpressionStatement","src":"2117:19:32"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2184:5:32"},{"kind":"number","nodeType":"YulLiteral","src":"2191:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2180:3:32"},"nodeType":"YulFunctionCall","src":"2180:16:32"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2202:3:32"},{"kind":"number","nodeType":"YulLiteral","src":"2207:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2198:3:32"},"nodeType":"YulFunctionCall","src":"2198:14:32"},{"name":"length","nodeType":"YulIdentifier","src":"2214:6:32"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2145:34:32"},"nodeType":"YulFunctionCall","src":"2145:76:32"},"nodeType":"YulExpressionStatement","src":"2145:76:32"},{"nodeType":"YulAssignment","src":"2230:57:32","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2245:3:32"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2258:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"2266:2:32","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2254:3:32"},"nodeType":"YulFunctionCall","src":"2254:15:32"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2275:2:32","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2271:3:32"},"nodeType":"YulFunctionCall","src":"2271:7:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2250:3:32"},"nodeType":"YulFunctionCall","src":"2250:29:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2241:3:32"},"nodeType":"YulFunctionCall","src":"2241:39:32"},{"kind":"number","nodeType":"YulLiteral","src":"2282:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2237:3:32"},"nodeType":"YulFunctionCall","src":"2237:50:32"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2230:3:32"}]}]},"name":"abi_encode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2049:5:32","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2056:3:32","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2064:3:32","type":""}],"src":"2022:271:32"},{"body":{"nodeType":"YulBlock","src":"2419:99:32","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2436:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"2447:2:32","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2429:6:32"},"nodeType":"YulFunctionCall","src":"2429:21:32"},"nodeType":"YulExpressionStatement","src":"2429:21:32"},{"nodeType":"YulAssignment","src":"2459:53:32","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2485:6:32"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2497:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"2508:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2493:3:32"},"nodeType":"YulFunctionCall","src":"2493:18:32"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"2467:17:32"},"nodeType":"YulFunctionCall","src":"2467:45:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2459:4:32"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2388:9:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2399:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2410:4:32","type":""}],"src":"2298:220:32"},{"body":{"nodeType":"YulBlock","src":"2610:161:32","statements":[{"body":{"nodeType":"YulBlock","src":"2656:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2665:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2668:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2658:6:32"},"nodeType":"YulFunctionCall","src":"2658:12:32"},"nodeType":"YulExpressionStatement","src":"2658:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2631:7:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"2640:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2627:3:32"},"nodeType":"YulFunctionCall","src":"2627:23:32"},{"kind":"number","nodeType":"YulLiteral","src":"2652:2:32","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2623:3:32"},"nodeType":"YulFunctionCall","src":"2623:32:32"},"nodeType":"YulIf","src":"2620:52:32"},{"nodeType":"YulAssignment","src":"2681:33:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2704:9:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2691:12:32"},"nodeType":"YulFunctionCall","src":"2691:23:32"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2681:6:32"}]},{"nodeType":"YulAssignment","src":"2723:42:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2750:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"2761:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2746:3:32"},"nodeType":"YulFunctionCall","src":"2746:18:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2733:12:32"},"nodeType":"YulFunctionCall","src":"2733:32:32"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2723:6:32"}]}]},"name":"abi_decode_tuple_t_uint256t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2568:9:32","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2579:7:32","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2591:6:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2599:6:32","type":""}],"src":"2523:248:32"},{"body":{"nodeType":"YulBlock","src":"2863:161:32","statements":[{"body":{"nodeType":"YulBlock","src":"2909:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2918:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2921:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2911:6:32"},"nodeType":"YulFunctionCall","src":"2911:12:32"},"nodeType":"YulExpressionStatement","src":"2911:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2884:7:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"2893:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2880:3:32"},"nodeType":"YulFunctionCall","src":"2880:23:32"},{"kind":"number","nodeType":"YulLiteral","src":"2905:2:32","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2876:3:32"},"nodeType":"YulFunctionCall","src":"2876:32:32"},"nodeType":"YulIf","src":"2873:52:32"},{"nodeType":"YulAssignment","src":"2934:33:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2957:9:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2944:12:32"},"nodeType":"YulFunctionCall","src":"2944:23:32"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2934:6:32"}]},{"nodeType":"YulAssignment","src":"2976:42:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3003:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"3014:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2999:3:32"},"nodeType":"YulFunctionCall","src":"2999:18:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2986:12:32"},"nodeType":"YulFunctionCall","src":"2986:32:32"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2976:6:32"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2821:9:32","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2832:7:32","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2844:6:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2852:6:32","type":""}],"src":"2776:248:32"},{"body":{"nodeType":"YulBlock","src":"3158:145:32","statements":[{"nodeType":"YulAssignment","src":"3168:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3180:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"3191:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3176:3:32"},"nodeType":"YulFunctionCall","src":"3176:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3168:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3210:9:32"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3225:6:32"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3241:3:32","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"3246:1:32","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3237:3:32"},"nodeType":"YulFunctionCall","src":"3237:11:32"},{"kind":"number","nodeType":"YulLiteral","src":"3250:1:32","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3233:3:32"},"nodeType":"YulFunctionCall","src":"3233:19:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3221:3:32"},"nodeType":"YulFunctionCall","src":"3221:32:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3203:6:32"},"nodeType":"YulFunctionCall","src":"3203:51:32"},"nodeType":"YulExpressionStatement","src":"3203:51:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3274:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"3285:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3270:3:32"},"nodeType":"YulFunctionCall","src":"3270:18:32"},{"name":"value1","nodeType":"YulIdentifier","src":"3290:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3263:6:32"},"nodeType":"YulFunctionCall","src":"3263:34:32"},"nodeType":"YulExpressionStatement","src":"3263:34:32"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3119:9:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3130:6:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3138:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3149:4:32","type":""}],"src":"3029:274:32"},{"body":{"nodeType":"YulBlock","src":"3340:95:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3357:1:32","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3364:3:32","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3369:10:32","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3360:3:32"},"nodeType":"YulFunctionCall","src":"3360:20:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3350:6:32"},"nodeType":"YulFunctionCall","src":"3350:31:32"},"nodeType":"YulExpressionStatement","src":"3350:31:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3397:1:32","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3400:4:32","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3390:6:32"},"nodeType":"YulFunctionCall","src":"3390:15:32"},"nodeType":"YulExpressionStatement","src":"3390:15:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3421:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3424:4:32","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3414:6:32"},"nodeType":"YulFunctionCall","src":"3414:15:32"},"nodeType":"YulExpressionStatement","src":"3414:15:32"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"3308:127:32"},{"body":{"nodeType":"YulBlock","src":"3485:230:32","statements":[{"nodeType":"YulAssignment","src":"3495:19:32","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3511:2:32","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3505:5:32"},"nodeType":"YulFunctionCall","src":"3505:9:32"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3495:6:32"}]},{"nodeType":"YulVariableDeclaration","src":"3523:58:32","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3545:6:32"},{"arguments":[{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"3561:4:32"},{"kind":"number","nodeType":"YulLiteral","src":"3567:2:32","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3557:3:32"},"nodeType":"YulFunctionCall","src":"3557:13:32"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3576:2:32","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3572:3:32"},"nodeType":"YulFunctionCall","src":"3572:7:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3553:3:32"},"nodeType":"YulFunctionCall","src":"3553:27:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3541:3:32"},"nodeType":"YulFunctionCall","src":"3541:40:32"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"3527:10:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"3656:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3658:16:32"},"nodeType":"YulFunctionCall","src":"3658:18:32"},"nodeType":"YulExpressionStatement","src":"3658:18:32"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3599:10:32"},{"kind":"number","nodeType":"YulLiteral","src":"3611:18:32","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3596:2:32"},"nodeType":"YulFunctionCall","src":"3596:34:32"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3635:10:32"},{"name":"memPtr","nodeType":"YulIdentifier","src":"3647:6:32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3632:2:32"},"nodeType":"YulFunctionCall","src":"3632:22:32"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3593:2:32"},"nodeType":"YulFunctionCall","src":"3593:62:32"},"nodeType":"YulIf","src":"3590:88:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3694:2:32","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3698:10:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3687:6:32"},"nodeType":"YulFunctionCall","src":"3687:22:32"},"nodeType":"YulExpressionStatement","src":"3687:22:32"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"3465:4:32","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"3474:6:32","type":""}],"src":"3440:275:32"},{"body":{"nodeType":"YulBlock","src":"3789:114:32","statements":[{"body":{"nodeType":"YulBlock","src":"3833:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3835:16:32"},"nodeType":"YulFunctionCall","src":"3835:18:32"},"nodeType":"YulExpressionStatement","src":"3835:18:32"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3805:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"3813:18:32","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3802:2:32"},"nodeType":"YulFunctionCall","src":"3802:30:32"},"nodeType":"YulIf","src":"3799:56:32"},{"nodeType":"YulAssignment","src":"3864:33:32","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3880:1:32","type":"","value":"5"},{"name":"length","nodeType":"YulIdentifier","src":"3883:6:32"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3876:3:32"},"nodeType":"YulFunctionCall","src":"3876:14:32"},{"kind":"number","nodeType":"YulLiteral","src":"3892:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3872:3:32"},"nodeType":"YulFunctionCall","src":"3872:25:32"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"3864:4:32"}]}]},"name":"array_allocation_size_array_uint256_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"3769:6:32","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"3780:4:32","type":""}],"src":"3720:183:32"},{"body":{"nodeType":"YulBlock","src":"3972:598:32","statements":[{"body":{"nodeType":"YulBlock","src":"4021:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4030:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4033:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4023:6:32"},"nodeType":"YulFunctionCall","src":"4023:12:32"},"nodeType":"YulExpressionStatement","src":"4023:12:32"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4000:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"4008:4:32","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3996:3:32"},"nodeType":"YulFunctionCall","src":"3996:17:32"},{"name":"end","nodeType":"YulIdentifier","src":"4015:3:32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3992:3:32"},"nodeType":"YulFunctionCall","src":"3992:27:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3985:6:32"},"nodeType":"YulFunctionCall","src":"3985:35:32"},"nodeType":"YulIf","src":"3982:55:32"},{"nodeType":"YulVariableDeclaration","src":"4046:30:32","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4069:6:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4056:12:32"},"nodeType":"YulFunctionCall","src":"4056:20:32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"4050:2:32","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4085:14:32","value":{"kind":"number","nodeType":"YulLiteral","src":"4095:4:32","type":"","value":"0x20"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"4089:2:32","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4108:71:32","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"4175:2:32"}],"functionName":{"name":"array_allocation_size_array_uint256_dyn","nodeType":"YulIdentifier","src":"4135:39:32"},"nodeType":"YulFunctionCall","src":"4135:43:32"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"4119:15:32"},"nodeType":"YulFunctionCall","src":"4119:60:32"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"4112:3:32","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4188:16:32","value":{"name":"dst","nodeType":"YulIdentifier","src":"4201:3:32"},"variables":[{"name":"dst_1","nodeType":"YulTypedName","src":"4192:5:32","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4220:3:32"},{"name":"_1","nodeType":"YulIdentifier","src":"4225:2:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4213:6:32"},"nodeType":"YulFunctionCall","src":"4213:15:32"},"nodeType":"YulExpressionStatement","src":"4213:15:32"},{"nodeType":"YulAssignment","src":"4237:19:32","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4248:3:32"},{"name":"_2","nodeType":"YulIdentifier","src":"4253:2:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4244:3:32"},"nodeType":"YulFunctionCall","src":"4244:12:32"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"4237:3:32"}]},{"nodeType":"YulVariableDeclaration","src":"4265:46:32","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4287:6:32"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4299:1:32","type":"","value":"5"},{"name":"_1","nodeType":"YulIdentifier","src":"4302:2:32"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4295:3:32"},"nodeType":"YulFunctionCall","src":"4295:10:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4283:3:32"},"nodeType":"YulFunctionCall","src":"4283:23:32"},{"name":"_2","nodeType":"YulIdentifier","src":"4308:2:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4279:3:32"},"nodeType":"YulFunctionCall","src":"4279:32:32"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"4269:6:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"4339:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4348:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4351:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4341:6:32"},"nodeType":"YulFunctionCall","src":"4341:12:32"},"nodeType":"YulExpressionStatement","src":"4341:12:32"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"4326:6:32"},{"name":"end","nodeType":"YulIdentifier","src":"4334:3:32"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4323:2:32"},"nodeType":"YulFunctionCall","src":"4323:15:32"},"nodeType":"YulIf","src":"4320:35:32"},{"nodeType":"YulVariableDeclaration","src":"4364:26:32","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4379:6:32"},{"name":"_2","nodeType":"YulIdentifier","src":"4387:2:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4375:3:32"},"nodeType":"YulFunctionCall","src":"4375:15:32"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"4368:3:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"4455:86:32","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4476:3:32"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4494:3:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4481:12:32"},"nodeType":"YulFunctionCall","src":"4481:17:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4469:6:32"},"nodeType":"YulFunctionCall","src":"4469:30:32"},"nodeType":"YulExpressionStatement","src":"4469:30:32"},{"nodeType":"YulAssignment","src":"4512:19:32","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4523:3:32"},{"name":"_2","nodeType":"YulIdentifier","src":"4528:2:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4519:3:32"},"nodeType":"YulFunctionCall","src":"4519:12:32"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"4512:3:32"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4410:3:32"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"4415:6:32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4407:2:32"},"nodeType":"YulFunctionCall","src":"4407:15:32"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4423:23:32","statements":[{"nodeType":"YulAssignment","src":"4425:19:32","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4436:3:32"},{"name":"_2","nodeType":"YulIdentifier","src":"4441:2:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4432:3:32"},"nodeType":"YulFunctionCall","src":"4432:12:32"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"4425:3:32"}]}]},"pre":{"nodeType":"YulBlock","src":"4403:3:32","statements":[]},"src":"4399:142:32"},{"nodeType":"YulAssignment","src":"4550:14:32","value":{"name":"dst_1","nodeType":"YulIdentifier","src":"4559:5:32"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"4550:5:32"}]}]},"name":"abi_decode_array_uint256_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3946:6:32","type":""},{"name":"end","nodeType":"YulTypedName","src":"3954:3:32","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"3962:5:32","type":""}],"src":"3908:662:32"},{"body":{"nodeType":"YulBlock","src":"4649:332:32","statements":[{"body":{"nodeType":"YulBlock","src":"4693:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4695:16:32"},"nodeType":"YulFunctionCall","src":"4695:18:32"},"nodeType":"YulExpressionStatement","src":"4695:18:32"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4665:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"4673:18:32","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4662:2:32"},"nodeType":"YulFunctionCall","src":"4662:30:32"},"nodeType":"YulIf","src":"4659:56:32"},{"nodeType":"YulAssignment","src":"4724:66:32","value":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4761:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"4769:2:32","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4757:3:32"},"nodeType":"YulFunctionCall","src":"4757:15:32"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4778:2:32","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4774:3:32"},"nodeType":"YulFunctionCall","src":"4774:7:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4753:3:32"},"nodeType":"YulFunctionCall","src":"4753:29:32"},{"kind":"number","nodeType":"YulLiteral","src":"4784:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4749:3:32"},"nodeType":"YulFunctionCall","src":"4749:40:32"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"4733:15:32"},"nodeType":"YulFunctionCall","src":"4733:57:32"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"4724:5:32"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"4806:5:32"},{"name":"length","nodeType":"YulIdentifier","src":"4813:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4799:6:32"},"nodeType":"YulFunctionCall","src":"4799:21:32"},"nodeType":"YulExpressionStatement","src":"4799:21:32"},{"body":{"nodeType":"YulBlock","src":"4858:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4867:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4870:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4860:6:32"},"nodeType":"YulFunctionCall","src":"4860:12:32"},"nodeType":"YulExpressionStatement","src":"4860:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4839:3:32"},{"name":"length","nodeType":"YulIdentifier","src":"4844:6:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4835:3:32"},"nodeType":"YulFunctionCall","src":"4835:16:32"},{"name":"end","nodeType":"YulIdentifier","src":"4853:3:32"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4832:2:32"},"nodeType":"YulFunctionCall","src":"4832:25:32"},"nodeType":"YulIf","src":"4829:45:32"},{"expression":{"arguments":[{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"4900:5:32"},{"kind":"number","nodeType":"YulLiteral","src":"4907:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4896:3:32"},"nodeType":"YulFunctionCall","src":"4896:16:32"},{"name":"src","nodeType":"YulIdentifier","src":"4914:3:32"},{"name":"length","nodeType":"YulIdentifier","src":"4919:6:32"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"4883:12:32"},"nodeType":"YulFunctionCall","src":"4883:43:32"},"nodeType":"YulExpressionStatement","src":"4883:43:32"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"4950:5:32"},{"name":"length","nodeType":"YulIdentifier","src":"4957:6:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4946:3:32"},"nodeType":"YulFunctionCall","src":"4946:18:32"},{"kind":"number","nodeType":"YulLiteral","src":"4966:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4942:3:32"},"nodeType":"YulFunctionCall","src":"4942:29:32"},{"kind":"number","nodeType":"YulLiteral","src":"4973:1:32","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4935:6:32"},"nodeType":"YulFunctionCall","src":"4935:40:32"},"nodeType":"YulExpressionStatement","src":"4935:40:32"}]},"name":"abi_decode_available_length_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"4618:3:32","type":""},{"name":"length","nodeType":"YulTypedName","src":"4623:6:32","type":""},{"name":"end","nodeType":"YulTypedName","src":"4631:3:32","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"4639:5:32","type":""}],"src":"4575:406:32"},{"body":{"nodeType":"YulBlock","src":"5038:168:32","statements":[{"body":{"nodeType":"YulBlock","src":"5087:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5096:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5099:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5089:6:32"},"nodeType":"YulFunctionCall","src":"5089:12:32"},"nodeType":"YulExpressionStatement","src":"5089:12:32"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5066:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"5074:4:32","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5062:3:32"},"nodeType":"YulFunctionCall","src":"5062:17:32"},{"name":"end","nodeType":"YulIdentifier","src":"5081:3:32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5058:3:32"},"nodeType":"YulFunctionCall","src":"5058:27:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5051:6:32"},"nodeType":"YulFunctionCall","src":"5051:35:32"},"nodeType":"YulIf","src":"5048:55:32"},{"nodeType":"YulAssignment","src":"5112:88:32","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5159:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"5167:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5155:3:32"},"nodeType":"YulFunctionCall","src":"5155:17:32"},{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5187:6:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5174:12:32"},"nodeType":"YulFunctionCall","src":"5174:20:32"},{"name":"end","nodeType":"YulIdentifier","src":"5196:3:32"}],"functionName":{"name":"abi_decode_available_length_bytes","nodeType":"YulIdentifier","src":"5121:33:32"},"nodeType":"YulFunctionCall","src":"5121:79:32"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"5112:5:32"}]}]},"name":"abi_decode_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5012:6:32","type":""},{"name":"end","nodeType":"YulTypedName","src":"5020:3:32","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"5028:5:32","type":""}],"src":"4986:220:32"},{"body":{"nodeType":"YulBlock","src":"5408:746:32","statements":[{"body":{"nodeType":"YulBlock","src":"5455:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5464:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5467:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5457:6:32"},"nodeType":"YulFunctionCall","src":"5457:12:32"},"nodeType":"YulExpressionStatement","src":"5457:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5429:7:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"5438:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5425:3:32"},"nodeType":"YulFunctionCall","src":"5425:23:32"},{"kind":"number","nodeType":"YulLiteral","src":"5450:3:32","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5421:3:32"},"nodeType":"YulFunctionCall","src":"5421:33:32"},"nodeType":"YulIf","src":"5418:53:32"},{"nodeType":"YulAssignment","src":"5480:39:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5509:9:32"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"5490:18:32"},"nodeType":"YulFunctionCall","src":"5490:29:32"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5480:6:32"}]},{"nodeType":"YulAssignment","src":"5528:48:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5561:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"5572:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5557:3:32"},"nodeType":"YulFunctionCall","src":"5557:18:32"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"5538:18:32"},"nodeType":"YulFunctionCall","src":"5538:38:32"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5528:6:32"}]},{"nodeType":"YulVariableDeclaration","src":"5585:46:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5616:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"5627:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5612:3:32"},"nodeType":"YulFunctionCall","src":"5612:18:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5599:12:32"},"nodeType":"YulFunctionCall","src":"5599:32:32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5589:6:32","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5640:28:32","value":{"kind":"number","nodeType":"YulLiteral","src":"5650:18:32","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"5644:2:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"5695:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5704:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5707:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5697:6:32"},"nodeType":"YulFunctionCall","src":"5697:12:32"},"nodeType":"YulExpressionStatement","src":"5697:12:32"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5683:6:32"},{"name":"_1","nodeType":"YulIdentifier","src":"5691:2:32"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5680:2:32"},"nodeType":"YulFunctionCall","src":"5680:14:32"},"nodeType":"YulIf","src":"5677:34:32"},{"nodeType":"YulAssignment","src":"5720:71:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5763:9:32"},{"name":"offset","nodeType":"YulIdentifier","src":"5774:6:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5759:3:32"},"nodeType":"YulFunctionCall","src":"5759:22:32"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5783:7:32"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nodeType":"YulIdentifier","src":"5730:28:32"},"nodeType":"YulFunctionCall","src":"5730:61:32"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5720:6:32"}]},{"nodeType":"YulVariableDeclaration","src":"5800:48:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5833:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"5844:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5829:3:32"},"nodeType":"YulFunctionCall","src":"5829:18:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5816:12:32"},"nodeType":"YulFunctionCall","src":"5816:32:32"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"5804:8:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"5877:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5886:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5889:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5879:6:32"},"nodeType":"YulFunctionCall","src":"5879:12:32"},"nodeType":"YulExpressionStatement","src":"5879:12:32"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"5863:8:32"},{"name":"_1","nodeType":"YulIdentifier","src":"5873:2:32"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5860:2:32"},"nodeType":"YulFunctionCall","src":"5860:16:32"},"nodeType":"YulIf","src":"5857:36:32"},{"nodeType":"YulAssignment","src":"5902:73:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5945:9:32"},{"name":"offset_1","nodeType":"YulIdentifier","src":"5956:8:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5941:3:32"},"nodeType":"YulFunctionCall","src":"5941:24:32"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5967:7:32"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nodeType":"YulIdentifier","src":"5912:28:32"},"nodeType":"YulFunctionCall","src":"5912:63:32"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"5902:6:32"}]},{"nodeType":"YulVariableDeclaration","src":"5984:49:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6017:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"6028:3:32","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6013:3:32"},"nodeType":"YulFunctionCall","src":"6013:19:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6000:12:32"},"nodeType":"YulFunctionCall","src":"6000:33:32"},"variables":[{"name":"offset_2","nodeType":"YulTypedName","src":"5988:8:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"6062:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6071:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6074:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6064:6:32"},"nodeType":"YulFunctionCall","src":"6064:12:32"},"nodeType":"YulExpressionStatement","src":"6064:12:32"}]},"condition":{"arguments":[{"name":"offset_2","nodeType":"YulIdentifier","src":"6048:8:32"},{"name":"_1","nodeType":"YulIdentifier","src":"6058:2:32"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6045:2:32"},"nodeType":"YulFunctionCall","src":"6045:16:32"},"nodeType":"YulIf","src":"6042:36:32"},{"nodeType":"YulAssignment","src":"6087:61:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6118:9:32"},{"name":"offset_2","nodeType":"YulIdentifier","src":"6129:8:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6114:3:32"},"nodeType":"YulFunctionCall","src":"6114:24:32"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6140:7:32"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"6097:16:32"},"nodeType":"YulFunctionCall","src":"6097:51:32"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"6087:6:32"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5342:9:32","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5353:7:32","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5365:6:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5373:6:32","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5381:6:32","type":""},{"name":"value3","nodeType":"YulTypedName","src":"5389:6:32","type":""},{"name":"value4","nodeType":"YulTypedName","src":"5397:6:32","type":""}],"src":"5211:943:32"},{"body":{"nodeType":"YulBlock","src":"6260:102:32","statements":[{"nodeType":"YulAssignment","src":"6270:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6282:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"6293:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6278:3:32"},"nodeType":"YulFunctionCall","src":"6278:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6270:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6312:9:32"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6327:6:32"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6343:3:32","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"6348:1:32","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6339:3:32"},"nodeType":"YulFunctionCall","src":"6339:11:32"},{"kind":"number","nodeType":"YulLiteral","src":"6352:1:32","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6335:3:32"},"nodeType":"YulFunctionCall","src":"6335:19:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6323:3:32"},"nodeType":"YulFunctionCall","src":"6323:32:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6305:6:32"},"nodeType":"YulFunctionCall","src":"6305:51:32"},"nodeType":"YulExpressionStatement","src":"6305:51:32"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6229:9:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6240:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6251:4:32","type":""}],"src":"6159:203:32"},{"body":{"nodeType":"YulBlock","src":"6504:1009:32","statements":[{"body":{"nodeType":"YulBlock","src":"6550:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6559:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6562:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6552:6:32"},"nodeType":"YulFunctionCall","src":"6552:12:32"},"nodeType":"YulExpressionStatement","src":"6552:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6525:7:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"6534:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6521:3:32"},"nodeType":"YulFunctionCall","src":"6521:23:32"},{"kind":"number","nodeType":"YulLiteral","src":"6546:2:32","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6517:3:32"},"nodeType":"YulFunctionCall","src":"6517:32:32"},"nodeType":"YulIf","src":"6514:52:32"},{"nodeType":"YulVariableDeclaration","src":"6575:37:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6602:9:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6589:12:32"},"nodeType":"YulFunctionCall","src":"6589:23:32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6579:6:32","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6621:28:32","value":{"kind":"number","nodeType":"YulLiteral","src":"6631:18:32","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"6625:2:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"6676:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6685:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6688:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6678:6:32"},"nodeType":"YulFunctionCall","src":"6678:12:32"},"nodeType":"YulExpressionStatement","src":"6678:12:32"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6664:6:32"},{"name":"_1","nodeType":"YulIdentifier","src":"6672:2:32"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6661:2:32"},"nodeType":"YulFunctionCall","src":"6661:14:32"},"nodeType":"YulIf","src":"6658:34:32"},{"nodeType":"YulVariableDeclaration","src":"6701:32:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6715:9:32"},{"name":"offset","nodeType":"YulIdentifier","src":"6726:6:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6711:3:32"},"nodeType":"YulFunctionCall","src":"6711:22:32"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"6705:2:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"6781:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6790:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6793:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6783:6:32"},"nodeType":"YulFunctionCall","src":"6783:12:32"},"nodeType":"YulExpressionStatement","src":"6783:12:32"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"6760:2:32"},{"kind":"number","nodeType":"YulLiteral","src":"6764:4:32","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6756:3:32"},"nodeType":"YulFunctionCall","src":"6756:13:32"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6771:7:32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6752:3:32"},"nodeType":"YulFunctionCall","src":"6752:27:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6745:6:32"},"nodeType":"YulFunctionCall","src":"6745:35:32"},"nodeType":"YulIf","src":"6742:55:32"},{"nodeType":"YulVariableDeclaration","src":"6806:26:32","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"6829:2:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6816:12:32"},"nodeType":"YulFunctionCall","src":"6816:16:32"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"6810:2:32","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6841:14:32","value":{"kind":"number","nodeType":"YulLiteral","src":"6851:4:32","type":"","value":"0x20"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"6845:2:32","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6864:71:32","value":{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"6931:2:32"}],"functionName":{"name":"array_allocation_size_array_uint256_dyn","nodeType":"YulIdentifier","src":"6891:39:32"},"nodeType":"YulFunctionCall","src":"6891:43:32"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"6875:15:32"},"nodeType":"YulFunctionCall","src":"6875:60:32"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"6868:3:32","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6944:16:32","value":{"name":"dst","nodeType":"YulIdentifier","src":"6957:3:32"},"variables":[{"name":"dst_1","nodeType":"YulTypedName","src":"6948:5:32","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6976:3:32"},{"name":"_3","nodeType":"YulIdentifier","src":"6981:2:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6969:6:32"},"nodeType":"YulFunctionCall","src":"6969:15:32"},"nodeType":"YulExpressionStatement","src":"6969:15:32"},{"nodeType":"YulAssignment","src":"6993:19:32","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7004:3:32"},{"name":"_4","nodeType":"YulIdentifier","src":"7009:2:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7000:3:32"},"nodeType":"YulFunctionCall","src":"7000:12:32"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"6993:3:32"}]},{"nodeType":"YulVariableDeclaration","src":"7021:42:32","value":{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"7043:2:32"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7051:1:32","type":"","value":"5"},{"name":"_3","nodeType":"YulIdentifier","src":"7054:2:32"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7047:3:32"},"nodeType":"YulFunctionCall","src":"7047:10:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7039:3:32"},"nodeType":"YulFunctionCall","src":"7039:19:32"},{"name":"_4","nodeType":"YulIdentifier","src":"7060:2:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7035:3:32"},"nodeType":"YulFunctionCall","src":"7035:28:32"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"7025:6:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"7095:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7104:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7107:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7097:6:32"},"nodeType":"YulFunctionCall","src":"7097:12:32"},"nodeType":"YulExpressionStatement","src":"7097:12:32"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"7078:6:32"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7086:7:32"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7075:2:32"},"nodeType":"YulFunctionCall","src":"7075:19:32"},"nodeType":"YulIf","src":"7072:39:32"},{"nodeType":"YulVariableDeclaration","src":"7120:22:32","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"7135:2:32"},{"name":"_4","nodeType":"YulIdentifier","src":"7139:2:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7131:3:32"},"nodeType":"YulFunctionCall","src":"7131:11:32"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"7124:3:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"7207:92:32","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7228:3:32"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7252:3:32"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"7233:18:32"},"nodeType":"YulFunctionCall","src":"7233:23:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7221:6:32"},"nodeType":"YulFunctionCall","src":"7221:36:32"},"nodeType":"YulExpressionStatement","src":"7221:36:32"},{"nodeType":"YulAssignment","src":"7270:19:32","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7281:3:32"},{"name":"_4","nodeType":"YulIdentifier","src":"7286:2:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7277:3:32"},"nodeType":"YulFunctionCall","src":"7277:12:32"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"7270:3:32"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7162:3:32"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"7167:6:32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7159:2:32"},"nodeType":"YulFunctionCall","src":"7159:15:32"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7175:23:32","statements":[{"nodeType":"YulAssignment","src":"7177:19:32","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7188:3:32"},{"name":"_4","nodeType":"YulIdentifier","src":"7193:2:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7184:3:32"},"nodeType":"YulFunctionCall","src":"7184:12:32"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"7177:3:32"}]}]},"pre":{"nodeType":"YulBlock","src":"7155:3:32","statements":[]},"src":"7151:148:32"},{"nodeType":"YulAssignment","src":"7308:15:32","value":{"name":"dst_1","nodeType":"YulIdentifier","src":"7318:5:32"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7308:6:32"}]},{"nodeType":"YulVariableDeclaration","src":"7332:48:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7365:9:32"},{"name":"_4","nodeType":"YulIdentifier","src":"7376:2:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7361:3:32"},"nodeType":"YulFunctionCall","src":"7361:18:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7348:12:32"},"nodeType":"YulFunctionCall","src":"7348:32:32"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"7336:8:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"7409:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7418:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7421:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7411:6:32"},"nodeType":"YulFunctionCall","src":"7411:12:32"},"nodeType":"YulExpressionStatement","src":"7411:12:32"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"7395:8:32"},{"name":"_1","nodeType":"YulIdentifier","src":"7405:2:32"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7392:2:32"},"nodeType":"YulFunctionCall","src":"7392:16:32"},"nodeType":"YulIf","src":"7389:36:32"},{"nodeType":"YulAssignment","src":"7434:73:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7477:9:32"},{"name":"offset_1","nodeType":"YulIdentifier","src":"7488:8:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7473:3:32"},"nodeType":"YulFunctionCall","src":"7473:24:32"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7499:7:32"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nodeType":"YulIdentifier","src":"7444:28:32"},"nodeType":"YulFunctionCall","src":"7444:63:32"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7434:6:32"}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6462:9:32","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6473:7:32","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6485:6:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6493:6:32","type":""}],"src":"6367:1146:32"},{"body":{"nodeType":"YulBlock","src":"7579:374:32","statements":[{"nodeType":"YulVariableDeclaration","src":"7589:26:32","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7609:5:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7603:5:32"},"nodeType":"YulFunctionCall","src":"7603:12:32"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"7593:6:32","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7631:3:32"},{"name":"length","nodeType":"YulIdentifier","src":"7636:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7624:6:32"},"nodeType":"YulFunctionCall","src":"7624:19:32"},"nodeType":"YulExpressionStatement","src":"7624:19:32"},{"nodeType":"YulVariableDeclaration","src":"7652:14:32","value":{"kind":"number","nodeType":"YulLiteral","src":"7662:4:32","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"7656:2:32","type":""}]},{"nodeType":"YulAssignment","src":"7675:19:32","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7686:3:32"},{"name":"_1","nodeType":"YulIdentifier","src":"7691:2:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7682:3:32"},"nodeType":"YulFunctionCall","src":"7682:12:32"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7675:3:32"}]},{"nodeType":"YulVariableDeclaration","src":"7703:28:32","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7721:5:32"},{"name":"_1","nodeType":"YulIdentifier","src":"7728:2:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7717:3:32"},"nodeType":"YulFunctionCall","src":"7717:14:32"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"7707:6:32","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7740:10:32","value":{"kind":"number","nodeType":"YulLiteral","src":"7749:1:32","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"7744:1:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"7808:120:32","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7829:3:32"},{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"7840:6:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7834:5:32"},"nodeType":"YulFunctionCall","src":"7834:13:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7822:6:32"},"nodeType":"YulFunctionCall","src":"7822:26:32"},"nodeType":"YulExpressionStatement","src":"7822:26:32"},{"nodeType":"YulAssignment","src":"7861:19:32","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7872:3:32"},{"name":"_1","nodeType":"YulIdentifier","src":"7877:2:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7868:3:32"},"nodeType":"YulFunctionCall","src":"7868:12:32"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7861:3:32"}]},{"nodeType":"YulAssignment","src":"7893:25:32","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"7907:6:32"},{"name":"_1","nodeType":"YulIdentifier","src":"7915:2:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7903:3:32"},"nodeType":"YulFunctionCall","src":"7903:15:32"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"7893:6:32"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7770:1:32"},{"name":"length","nodeType":"YulIdentifier","src":"7773:6:32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7767:2:32"},"nodeType":"YulFunctionCall","src":"7767:13:32"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7781:18:32","statements":[{"nodeType":"YulAssignment","src":"7783:14:32","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7792:1:32"},{"kind":"number","nodeType":"YulLiteral","src":"7795:1:32","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7788:3:32"},"nodeType":"YulFunctionCall","src":"7788:9:32"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"7783:1:32"}]}]},"pre":{"nodeType":"YulBlock","src":"7763:3:32","statements":[]},"src":"7759:169:32"},{"nodeType":"YulAssignment","src":"7937:10:32","value":{"name":"pos","nodeType":"YulIdentifier","src":"7944:3:32"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7937:3:32"}]}]},"name":"abi_encode_array_uint256_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7556:5:32","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7563:3:32","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7571:3:32","type":""}],"src":"7518:435:32"},{"body":{"nodeType":"YulBlock","src":"8109:110:32","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8126:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"8137:2:32","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8119:6:32"},"nodeType":"YulFunctionCall","src":"8119:21:32"},"nodeType":"YulExpressionStatement","src":"8119:21:32"},{"nodeType":"YulAssignment","src":"8149:64:32","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8186:6:32"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8198:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"8209:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8194:3:32"},"nodeType":"YulFunctionCall","src":"8194:18:32"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"8157:28:32"},"nodeType":"YulFunctionCall","src":"8157:56:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8149:4:32"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8078:9:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8089:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8100:4:32","type":""}],"src":"7958:261:32"},{"body":{"nodeType":"YulBlock","src":"8304:370:32","statements":[{"body":{"nodeType":"YulBlock","src":"8350:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8359:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8362:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8352:6:32"},"nodeType":"YulFunctionCall","src":"8352:12:32"},"nodeType":"YulExpressionStatement","src":"8352:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8325:7:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"8334:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8321:3:32"},"nodeType":"YulFunctionCall","src":"8321:23:32"},{"kind":"number","nodeType":"YulLiteral","src":"8346:2:32","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8317:3:32"},"nodeType":"YulFunctionCall","src":"8317:32:32"},"nodeType":"YulIf","src":"8314:52:32"},{"nodeType":"YulVariableDeclaration","src":"8375:37:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8402:9:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8389:12:32"},"nodeType":"YulFunctionCall","src":"8389:23:32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8379:6:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"8455:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8464:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8467:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8457:6:32"},"nodeType":"YulFunctionCall","src":"8457:12:32"},"nodeType":"YulExpressionStatement","src":"8457:12:32"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8427:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"8435:18:32","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8424:2:32"},"nodeType":"YulFunctionCall","src":"8424:30:32"},"nodeType":"YulIf","src":"8421:50:32"},{"nodeType":"YulVariableDeclaration","src":"8480:32:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8494:9:32"},{"name":"offset","nodeType":"YulIdentifier","src":"8505:6:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8490:3:32"},"nodeType":"YulFunctionCall","src":"8490:22:32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"8484:2:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"8560:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8569:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8572:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8562:6:32"},"nodeType":"YulFunctionCall","src":"8562:12:32"},"nodeType":"YulExpressionStatement","src":"8562:12:32"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"8539:2:32"},{"kind":"number","nodeType":"YulLiteral","src":"8543:4:32","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8535:3:32"},"nodeType":"YulFunctionCall","src":"8535:13:32"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8550:7:32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8531:3:32"},"nodeType":"YulFunctionCall","src":"8531:27:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8524:6:32"},"nodeType":"YulFunctionCall","src":"8524:35:32"},"nodeType":"YulIf","src":"8521:55:32"},{"nodeType":"YulAssignment","src":"8585:83:32","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"8633:2:32"},{"kind":"number","nodeType":"YulLiteral","src":"8637:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8629:3:32"},"nodeType":"YulFunctionCall","src":"8629:11:32"},{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"8655:2:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8642:12:32"},"nodeType":"YulFunctionCall","src":"8642:16:32"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8660:7:32"}],"functionName":{"name":"abi_decode_available_length_bytes","nodeType":"YulIdentifier","src":"8595:33:32"},"nodeType":"YulFunctionCall","src":"8595:73:32"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8585:6:32"}]}]},"name":"abi_decode_tuple_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8270:9:32","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8281:7:32","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8293:6:32","type":""}],"src":"8224:450:32"},{"body":{"nodeType":"YulBlock","src":"8780:76:32","statements":[{"nodeType":"YulAssignment","src":"8790:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8802:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"8813:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8798:3:32"},"nodeType":"YulFunctionCall","src":"8798:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8790:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8832:9:32"},{"name":"value0","nodeType":"YulIdentifier","src":"8843:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8825:6:32"},"nodeType":"YulFunctionCall","src":"8825:25:32"},"nodeType":"YulExpressionStatement","src":"8825:25:32"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8749:9:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8760:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8771:4:32","type":""}],"src":"8679:177:32"},{"body":{"nodeType":"YulBlock","src":"8983:561:32","statements":[{"body":{"nodeType":"YulBlock","src":"9029:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9038:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9041:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9031:6:32"},"nodeType":"YulFunctionCall","src":"9031:12:32"},"nodeType":"YulExpressionStatement","src":"9031:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9004:7:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"9013:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9000:3:32"},"nodeType":"YulFunctionCall","src":"9000:23:32"},{"kind":"number","nodeType":"YulLiteral","src":"9025:2:32","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8996:3:32"},"nodeType":"YulFunctionCall","src":"8996:32:32"},"nodeType":"YulIf","src":"8993:52:32"},{"nodeType":"YulAssignment","src":"9054:33:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9077:9:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9064:12:32"},"nodeType":"YulFunctionCall","src":"9064:23:32"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9054:6:32"}]},{"nodeType":"YulVariableDeclaration","src":"9096:46:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9127:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"9138:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9123:3:32"},"nodeType":"YulFunctionCall","src":"9123:18:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9110:12:32"},"nodeType":"YulFunctionCall","src":"9110:32:32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9100:6:32","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9151:28:32","value":{"kind":"number","nodeType":"YulLiteral","src":"9161:18:32","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"9155:2:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"9206:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9215:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9218:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9208:6:32"},"nodeType":"YulFunctionCall","src":"9208:12:32"},"nodeType":"YulExpressionStatement","src":"9208:12:32"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9194:6:32"},{"name":"_1","nodeType":"YulIdentifier","src":"9202:2:32"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9191:2:32"},"nodeType":"YulFunctionCall","src":"9191:14:32"},"nodeType":"YulIf","src":"9188:34:32"},{"nodeType":"YulVariableDeclaration","src":"9231:32:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9245:9:32"},{"name":"offset","nodeType":"YulIdentifier","src":"9256:6:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9241:3:32"},"nodeType":"YulFunctionCall","src":"9241:22:32"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"9235:2:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"9311:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9320:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9323:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9313:6:32"},"nodeType":"YulFunctionCall","src":"9313:12:32"},"nodeType":"YulExpressionStatement","src":"9313:12:32"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"9290:2:32"},{"kind":"number","nodeType":"YulLiteral","src":"9294:4:32","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9286:3:32"},"nodeType":"YulFunctionCall","src":"9286:13:32"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9301:7:32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9282:3:32"},"nodeType":"YulFunctionCall","src":"9282:27:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9275:6:32"},"nodeType":"YulFunctionCall","src":"9275:35:32"},"nodeType":"YulIf","src":"9272:55:32"},{"nodeType":"YulVariableDeclaration","src":"9336:30:32","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"9363:2:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9350:12:32"},"nodeType":"YulFunctionCall","src":"9350:16:32"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"9340:6:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"9393:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9402:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9405:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9395:6:32"},"nodeType":"YulFunctionCall","src":"9395:12:32"},"nodeType":"YulExpressionStatement","src":"9395:12:32"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9381:6:32"},{"name":"_1","nodeType":"YulIdentifier","src":"9389:2:32"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9378:2:32"},"nodeType":"YulFunctionCall","src":"9378:14:32"},"nodeType":"YulIf","src":"9375:34:32"},{"body":{"nodeType":"YulBlock","src":"9467:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9476:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9479:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9469:6:32"},"nodeType":"YulFunctionCall","src":"9469:12:32"},"nodeType":"YulExpressionStatement","src":"9469:12:32"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"9432:2:32"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9440:1:32","type":"","value":"5"},{"name":"length","nodeType":"YulIdentifier","src":"9443:6:32"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9436:3:32"},"nodeType":"YulFunctionCall","src":"9436:14:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9428:3:32"},"nodeType":"YulFunctionCall","src":"9428:23:32"},{"kind":"number","nodeType":"YulLiteral","src":"9453:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9424:3:32"},"nodeType":"YulFunctionCall","src":"9424:32:32"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9458:7:32"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9421:2:32"},"nodeType":"YulFunctionCall","src":"9421:45:32"},"nodeType":"YulIf","src":"9418:65:32"},{"nodeType":"YulAssignment","src":"9492:21:32","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"9506:2:32"},{"kind":"number","nodeType":"YulLiteral","src":"9510:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9502:3:32"},"nodeType":"YulFunctionCall","src":"9502:11:32"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9492:6:32"}]},{"nodeType":"YulAssignment","src":"9522:16:32","value":{"name":"length","nodeType":"YulIdentifier","src":"9532:6:32"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"9522:6:32"}]}]},"name":"abi_decode_tuple_t_uint256t_array$_t_bytes32_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8933:9:32","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8944:7:32","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8956:6:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8964:6:32","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8972:6:32","type":""}],"src":"8861:683:32"},{"body":{"nodeType":"YulBlock","src":"9636:167:32","statements":[{"body":{"nodeType":"YulBlock","src":"9682:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9691:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9694:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9684:6:32"},"nodeType":"YulFunctionCall","src":"9684:12:32"},"nodeType":"YulExpressionStatement","src":"9684:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9657:7:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"9666:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9653:3:32"},"nodeType":"YulFunctionCall","src":"9653:23:32"},{"kind":"number","nodeType":"YulLiteral","src":"9678:2:32","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9649:3:32"},"nodeType":"YulFunctionCall","src":"9649:32:32"},"nodeType":"YulIf","src":"9646:52:32"},{"nodeType":"YulAssignment","src":"9707:33:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9730:9:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9717:12:32"},"nodeType":"YulFunctionCall","src":"9717:23:32"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9707:6:32"}]},{"nodeType":"YulAssignment","src":"9749:48:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9782:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"9793:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9778:3:32"},"nodeType":"YulFunctionCall","src":"9778:18:32"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"9759:18:32"},"nodeType":"YulFunctionCall","src":"9759:38:32"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9749:6:32"}]}]},"name":"abi_decode_tuple_t_uint256t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9594:9:32","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9605:7:32","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9617:6:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9625:6:32","type":""}],"src":"9549:254:32"},{"body":{"nodeType":"YulBlock","src":"9892:263:32","statements":[{"body":{"nodeType":"YulBlock","src":"9938:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9947:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9950:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9940:6:32"},"nodeType":"YulFunctionCall","src":"9940:12:32"},"nodeType":"YulExpressionStatement","src":"9940:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9913:7:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"9922:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9909:3:32"},"nodeType":"YulFunctionCall","src":"9909:23:32"},{"kind":"number","nodeType":"YulLiteral","src":"9934:2:32","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9905:3:32"},"nodeType":"YulFunctionCall","src":"9905:32:32"},"nodeType":"YulIf","src":"9902:52:32"},{"nodeType":"YulAssignment","src":"9963:39:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9992:9:32"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"9973:18:32"},"nodeType":"YulFunctionCall","src":"9973:29:32"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9963:6:32"}]},{"nodeType":"YulVariableDeclaration","src":"10011:45:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10041:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"10052:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10037:3:32"},"nodeType":"YulFunctionCall","src":"10037:18:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10024:12:32"},"nodeType":"YulFunctionCall","src":"10024:32:32"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"10015:5:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"10109:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10118:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10121:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10111:6:32"},"nodeType":"YulFunctionCall","src":"10111:12:32"},"nodeType":"YulExpressionStatement","src":"10111:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10078:5:32"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10099:5:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10092:6:32"},"nodeType":"YulFunctionCall","src":"10092:13:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10085:6:32"},"nodeType":"YulFunctionCall","src":"10085:21:32"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10075:2:32"},"nodeType":"YulFunctionCall","src":"10075:32:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10068:6:32"},"nodeType":"YulFunctionCall","src":"10068:40:32"},"nodeType":"YulIf","src":"10065:60:32"},{"nodeType":"YulAssignment","src":"10134:15:32","value":{"name":"value","nodeType":"YulIdentifier","src":"10144:5:32"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10134:6:32"}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9850:9:32","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9861:7:32","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9873:6:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9881:6:32","type":""}],"src":"9808:347:32"},{"body":{"nodeType":"YulBlock","src":"10259:109:32","statements":[{"nodeType":"YulAssignment","src":"10269:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10281:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"10292:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10277:3:32"},"nodeType":"YulFunctionCall","src":"10277:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10269:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10311:9:32"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10326:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"10334:26:32","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10322:3:32"},"nodeType":"YulFunctionCall","src":"10322:39:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10304:6:32"},"nodeType":"YulFunctionCall","src":"10304:58:32"},"nodeType":"YulExpressionStatement","src":"10304:58:32"}]},"name":"abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10228:9:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10239:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10250:4:32","type":""}],"src":"10160:208:32"},{"body":{"nodeType":"YulBlock","src":"10460:173:32","statements":[{"body":{"nodeType":"YulBlock","src":"10506:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10515:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10518:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10508:6:32"},"nodeType":"YulFunctionCall","src":"10508:12:32"},"nodeType":"YulExpressionStatement","src":"10508:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10481:7:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"10490:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10477:3:32"},"nodeType":"YulFunctionCall","src":"10477:23:32"},{"kind":"number","nodeType":"YulLiteral","src":"10502:2:32","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10473:3:32"},"nodeType":"YulFunctionCall","src":"10473:32:32"},"nodeType":"YulIf","src":"10470:52:32"},{"nodeType":"YulAssignment","src":"10531:39:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10560:9:32"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"10541:18:32"},"nodeType":"YulFunctionCall","src":"10541:29:32"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10531:6:32"}]},{"nodeType":"YulAssignment","src":"10579:48:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10612:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"10623:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10608:3:32"},"nodeType":"YulFunctionCall","src":"10608:18:32"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"10589:18:32"},"nodeType":"YulFunctionCall","src":"10589:38:32"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10579:6:32"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10418:9:32","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10429:7:32","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10441:6:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10449:6:32","type":""}],"src":"10373:260:32"},{"body":{"nodeType":"YulBlock","src":"10785:459:32","statements":[{"body":{"nodeType":"YulBlock","src":"10832:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10841:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10844:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10834:6:32"},"nodeType":"YulFunctionCall","src":"10834:12:32"},"nodeType":"YulExpressionStatement","src":"10834:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10806:7:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"10815:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10802:3:32"},"nodeType":"YulFunctionCall","src":"10802:23:32"},{"kind":"number","nodeType":"YulLiteral","src":"10827:3:32","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10798:3:32"},"nodeType":"YulFunctionCall","src":"10798:33:32"},"nodeType":"YulIf","src":"10795:53:32"},{"nodeType":"YulAssignment","src":"10857:39:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10886:9:32"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"10867:18:32"},"nodeType":"YulFunctionCall","src":"10867:29:32"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10857:6:32"}]},{"nodeType":"YulAssignment","src":"10905:48:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10938:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"10949:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10934:3:32"},"nodeType":"YulFunctionCall","src":"10934:18:32"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"10915:18:32"},"nodeType":"YulFunctionCall","src":"10915:38:32"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10905:6:32"}]},{"nodeType":"YulAssignment","src":"10962:42:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10989:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"11000:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10985:3:32"},"nodeType":"YulFunctionCall","src":"10985:18:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10972:12:32"},"nodeType":"YulFunctionCall","src":"10972:32:32"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"10962:6:32"}]},{"nodeType":"YulAssignment","src":"11013:42:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11040:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"11051:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11036:3:32"},"nodeType":"YulFunctionCall","src":"11036:18:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11023:12:32"},"nodeType":"YulFunctionCall","src":"11023:32:32"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"11013:6:32"}]},{"nodeType":"YulVariableDeclaration","src":"11064:47:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11095:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"11106:3:32","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11091:3:32"},"nodeType":"YulFunctionCall","src":"11091:19:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11078:12:32"},"nodeType":"YulFunctionCall","src":"11078:33:32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11068:6:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"11154:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11163:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11166:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11156:6:32"},"nodeType":"YulFunctionCall","src":"11156:12:32"},"nodeType":"YulExpressionStatement","src":"11156:12:32"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11126:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"11134:18:32","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11123:2:32"},"nodeType":"YulFunctionCall","src":"11123:30:32"},"nodeType":"YulIf","src":"11120:50:32"},{"nodeType":"YulAssignment","src":"11179:59:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11210:9:32"},{"name":"offset","nodeType":"YulIdentifier","src":"11221:6:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11206:3:32"},"nodeType":"YulFunctionCall","src":"11206:22:32"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11230:7:32"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"11189:16:32"},"nodeType":"YulFunctionCall","src":"11189:49:32"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"11179:6:32"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10719:9:32","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10730:7:32","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10742:6:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10750:6:32","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10758:6:32","type":""},{"name":"value3","nodeType":"YulTypedName","src":"10766:6:32","type":""},{"name":"value4","nodeType":"YulTypedName","src":"10774:6:32","type":""}],"src":"10638:606:32"},{"body":{"nodeType":"YulBlock","src":"11319:116:32","statements":[{"body":{"nodeType":"YulBlock","src":"11365:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11374:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11377:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11367:6:32"},"nodeType":"YulFunctionCall","src":"11367:12:32"},"nodeType":"YulExpressionStatement","src":"11367:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11340:7:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"11349:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11336:3:32"},"nodeType":"YulFunctionCall","src":"11336:23:32"},{"kind":"number","nodeType":"YulLiteral","src":"11361:2:32","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11332:3:32"},"nodeType":"YulFunctionCall","src":"11332:32:32"},"nodeType":"YulIf","src":"11329:52:32"},{"nodeType":"YulAssignment","src":"11390:39:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11419:9:32"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"11400:18:32"},"nodeType":"YulFunctionCall","src":"11400:29:32"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11390:6:32"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11285:9:32","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11296:7:32","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11308:6:32","type":""}],"src":"11249:186:32"},{"body":{"nodeType":"YulBlock","src":"11495:325:32","statements":[{"nodeType":"YulAssignment","src":"11505:22:32","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11519:1:32","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"11522:4:32"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"11515:3:32"},"nodeType":"YulFunctionCall","src":"11515:12:32"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"11505:6:32"}]},{"nodeType":"YulVariableDeclaration","src":"11536:38:32","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"11566:4:32"},{"kind":"number","nodeType":"YulLiteral","src":"11572:1:32","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11562:3:32"},"nodeType":"YulFunctionCall","src":"11562:12:32"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"11540:18:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"11613:31:32","statements":[{"nodeType":"YulAssignment","src":"11615:27:32","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11629:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"11637:4:32","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11625:3:32"},"nodeType":"YulFunctionCall","src":"11625:17:32"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"11615:6:32"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"11593:18:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11586:6:32"},"nodeType":"YulFunctionCall","src":"11586:26:32"},"nodeType":"YulIf","src":"11583:61:32"},{"body":{"nodeType":"YulBlock","src":"11703:111:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11724:1:32","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11731:3:32","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"11736:10:32","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"11727:3:32"},"nodeType":"YulFunctionCall","src":"11727:20:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11717:6:32"},"nodeType":"YulFunctionCall","src":"11717:31:32"},"nodeType":"YulExpressionStatement","src":"11717:31:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11768:1:32","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"11771:4:32","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11761:6:32"},"nodeType":"YulFunctionCall","src":"11761:15:32"},"nodeType":"YulExpressionStatement","src":"11761:15:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11796:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11799:4:32","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11789:6:32"},"nodeType":"YulFunctionCall","src":"11789:15:32"},"nodeType":"YulExpressionStatement","src":"11789:15:32"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"11659:18:32"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11682:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"11690:2:32","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11679:2:32"},"nodeType":"YulFunctionCall","src":"11679:14:32"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"11656:2:32"},"nodeType":"YulFunctionCall","src":"11656:38:32"},"nodeType":"YulIf","src":"11653:161:32"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"11475:4:32","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"11484:6:32","type":""}],"src":"11440:380:32"},{"body":{"nodeType":"YulBlock","src":"11881:65:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11898:1:32","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"11901:3:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11891:6:32"},"nodeType":"YulFunctionCall","src":"11891:14:32"},"nodeType":"YulExpressionStatement","src":"11891:14:32"},{"nodeType":"YulAssignment","src":"11914:26:32","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11932:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11935:4:32","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"11922:9:32"},"nodeType":"YulFunctionCall","src":"11922:18:32"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"11914:4:32"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"11864:3:32","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"11872:4:32","type":""}],"src":"11825:121:32"},{"body":{"nodeType":"YulBlock","src":"12236:902:32","statements":[{"nodeType":"YulVariableDeclaration","src":"12246:12:32","value":{"kind":"number","nodeType":"YulLiteral","src":"12257:1:32","type":"","value":"0"},"variables":[{"name":"ret","nodeType":"YulTypedName","src":"12250:3:32","type":""}]},{"nodeType":"YulVariableDeclaration","src":"12267:30:32","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12290:6:32"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"12284:5:32"},"nodeType":"YulFunctionCall","src":"12284:13:32"},"variables":[{"name":"slotValue","nodeType":"YulTypedName","src":"12271:9:32","type":""}]},{"nodeType":"YulVariableDeclaration","src":"12306:50:32","value":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"12346:9:32"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"12320:25:32"},"nodeType":"YulFunctionCall","src":"12320:36:32"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"12310:6:32","type":""}]},{"nodeType":"YulVariableDeclaration","src":"12365:11:32","value":{"kind":"number","nodeType":"YulLiteral","src":"12375:1:32","type":"","value":"1"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"12369:2:32","type":""}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"12426:126:32","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12447:3:32"},{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"12456:9:32"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12471:3:32","type":"","value":"255"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"12467:3:32"},"nodeType":"YulFunctionCall","src":"12467:8:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12452:3:32"},"nodeType":"YulFunctionCall","src":"12452:24:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12440:6:32"},"nodeType":"YulFunctionCall","src":"12440:37:32"},"nodeType":"YulExpressionStatement","src":"12440:37:32"},{"nodeType":"YulAssignment","src":"12490:52:32","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12501:3:32"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"12510:6:32"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"12532:6:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12525:6:32"},"nodeType":"YulFunctionCall","src":"12525:14:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12518:6:32"},"nodeType":"YulFunctionCall","src":"12518:22:32"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"12506:3:32"},"nodeType":"YulFunctionCall","src":"12506:35:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12497:3:32"},"nodeType":"YulFunctionCall","src":"12497:45:32"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"12490:3:32"}]}]},"nodeType":"YulCase","src":"12419:133:32","value":{"kind":"number","nodeType":"YulLiteral","src":"12424:1:32","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"12568:349:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12589:1:32","type":"","value":"0"},{"name":"value0","nodeType":"YulIdentifier","src":"12592:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12582:6:32"},"nodeType":"YulFunctionCall","src":"12582:17:32"},"nodeType":"YulExpressionStatement","src":"12582:17:32"},{"nodeType":"YulVariableDeclaration","src":"12612:14:32","value":{"kind":"number","nodeType":"YulLiteral","src":"12622:4:32","type":"","value":"0x20"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"12616:2:32","type":""}]},{"nodeType":"YulVariableDeclaration","src":"12639:31:32","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12664:1:32","type":"","value":"0"},{"name":"_2","nodeType":"YulIdentifier","src":"12667:2:32"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"12654:9:32"},"nodeType":"YulFunctionCall","src":"12654:16:32"},"variables":[{"name":"dataPos","nodeType":"YulTypedName","src":"12643:7:32","type":""}]},{"nodeType":"YulVariableDeclaration","src":"12683:10:32","value":{"kind":"number","nodeType":"YulLiteral","src":"12692:1:32","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"12687:1:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"12760:111:32","statements":[{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12789:3:32"},{"name":"i","nodeType":"YulIdentifier","src":"12794:1:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12785:3:32"},"nodeType":"YulFunctionCall","src":"12785:11:32"},{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"12804:7:32"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"12798:5:32"},"nodeType":"YulFunctionCall","src":"12798:14:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12778:6:32"},"nodeType":"YulFunctionCall","src":"12778:35:32"},"nodeType":"YulExpressionStatement","src":"12778:35:32"},{"nodeType":"YulAssignment","src":"12830:27:32","value":{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"12845:7:32"},{"name":"_1","nodeType":"YulIdentifier","src":"12854:2:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12841:3:32"},"nodeType":"YulFunctionCall","src":"12841:16:32"},"variableNames":[{"name":"dataPos","nodeType":"YulIdentifier","src":"12830:7:32"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"12717:1:32"},{"name":"length","nodeType":"YulIdentifier","src":"12720:6:32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12714:2:32"},"nodeType":"YulFunctionCall","src":"12714:13:32"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"12728:19:32","statements":[{"nodeType":"YulAssignment","src":"12730:15:32","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"12739:1:32"},{"name":"_2","nodeType":"YulIdentifier","src":"12742:2:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12735:3:32"},"nodeType":"YulFunctionCall","src":"12735:10:32"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"12730:1:32"}]}]},"pre":{"nodeType":"YulBlock","src":"12710:3:32","statements":[]},"src":"12706:165:32"},{"nodeType":"YulAssignment","src":"12884:23:32","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12895:3:32"},{"name":"length","nodeType":"YulIdentifier","src":"12900:6:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12891:3:32"},"nodeType":"YulFunctionCall","src":"12891:16:32"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"12884:3:32"}]}]},"nodeType":"YulCase","src":"12561:356:32","value":{"kind":"number","nodeType":"YulLiteral","src":"12566:1:32","type":"","value":"1"}}],"expression":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"12396:9:32"},{"name":"_1","nodeType":"YulIdentifier","src":"12407:2:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12392:3:32"},"nodeType":"YulFunctionCall","src":"12392:18:32"},"nodeType":"YulSwitch","src":"12385:532:32"},{"nodeType":"YulVariableDeclaration","src":"12926:29:32","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"12948:6:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12942:5:32"},"nodeType":"YulFunctionCall","src":"12942:13:32"},"variables":[{"name":"length_1","nodeType":"YulTypedName","src":"12930:8:32","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"13003:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"13011:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12999:3:32"},"nodeType":"YulFunctionCall","src":"12999:17:32"},{"name":"ret","nodeType":"YulIdentifier","src":"13018:3:32"},{"name":"length_1","nodeType":"YulIdentifier","src":"13023:8:32"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"12964:34:32"},"nodeType":"YulFunctionCall","src":"12964:68:32"},"nodeType":"YulExpressionStatement","src":"12964:68:32"},{"nodeType":"YulVariableDeclaration","src":"13041:31:32","value":{"arguments":[{"name":"ret","nodeType":"YulIdentifier","src":"13058:3:32"},{"name":"length_1","nodeType":"YulIdentifier","src":"13063:8:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13054:3:32"},"nodeType":"YulFunctionCall","src":"13054:18:32"},"variables":[{"name":"end_1","nodeType":"YulTypedName","src":"13045:5:32","type":""}]},{"expression":{"arguments":[{"name":"end_1","nodeType":"YulIdentifier","src":"13088:5:32"},{"hexValue":"2e6a736f6e","kind":"string","nodeType":"YulLiteral","src":"13095:7:32","type":"","value":".json"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13081:6:32"},"nodeType":"YulFunctionCall","src":"13081:22:32"},"nodeType":"YulExpressionStatement","src":"13081:22:32"},{"nodeType":"YulAssignment","src":"13112:20:32","value":{"arguments":[{"name":"end_1","nodeType":"YulIdentifier","src":"13123:5:32"},{"kind":"number","nodeType":"YulLiteral","src":"13130:1:32","type":"","value":"5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13119:3:32"},"nodeType":"YulFunctionCall","src":"13119:13:32"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13112:3:32"}]}]},"name":"abi_encode_tuple_packed_t_string_storage_t_string_memory_ptr_t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12204:3:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12209:6:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12217:6:32","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12228:3:32","type":""}],"src":"11951:1187:32"},{"body":{"nodeType":"YulBlock","src":"13317:165:32","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13334:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"13345:2:32","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13327:6:32"},"nodeType":"YulFunctionCall","src":"13327:21:32"},"nodeType":"YulExpressionStatement","src":"13327:21:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13368:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"13379:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13364:3:32"},"nodeType":"YulFunctionCall","src":"13364:18:32"},{"kind":"number","nodeType":"YulLiteral","src":"13384:2:32","type":"","value":"15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13357:6:32"},"nodeType":"YulFunctionCall","src":"13357:30:32"},"nodeType":"YulExpressionStatement","src":"13357:30:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13407:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"13418:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13403:3:32"},"nodeType":"YulFunctionCall","src":"13403:18:32"},{"hexValue":"496e76616c696420746f6b656e4964","kind":"string","nodeType":"YulLiteral","src":"13423:17:32","type":"","value":"Invalid tokenId"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13396:6:32"},"nodeType":"YulFunctionCall","src":"13396:45:32"},"nodeType":"YulExpressionStatement","src":"13396:45:32"},{"nodeType":"YulAssignment","src":"13450:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13462:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"13473:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13458:3:32"},"nodeType":"YulFunctionCall","src":"13458:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13450:4:32"}]}]},"name":"abi_encode_tuple_t_stringliteral_47dcc88603f32730c5f1349ee02d9fe469c193c742f38ce12c7b0ba84c66c8a4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13294:9:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13308:4:32","type":""}],"src":"13143:339:32"},{"body":{"nodeType":"YulBlock","src":"13519:95:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13536:1:32","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13543:3:32","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"13548:10:32","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"13539:3:32"},"nodeType":"YulFunctionCall","src":"13539:20:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13529:6:32"},"nodeType":"YulFunctionCall","src":"13529:31:32"},"nodeType":"YulExpressionStatement","src":"13529:31:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13576:1:32","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"13579:4:32","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13569:6:32"},"nodeType":"YulFunctionCall","src":"13569:15:32"},"nodeType":"YulExpressionStatement","src":"13569:15:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13600:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13603:4:32","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13593:6:32"},"nodeType":"YulFunctionCall","src":"13593:15:32"},"nodeType":"YulExpressionStatement","src":"13593:15:32"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"13487:127:32"},{"body":{"nodeType":"YulBlock","src":"13671:116:32","statements":[{"nodeType":"YulAssignment","src":"13681:20:32","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"13696:1:32"},{"name":"y","nodeType":"YulIdentifier","src":"13699:1:32"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"13692:3:32"},"nodeType":"YulFunctionCall","src":"13692:9:32"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"13681:7:32"}]},{"body":{"nodeType":"YulBlock","src":"13759:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"13761:16:32"},"nodeType":"YulFunctionCall","src":"13761:18:32"},"nodeType":"YulExpressionStatement","src":"13761:18:32"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"13730:1:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13723:6:32"},"nodeType":"YulFunctionCall","src":"13723:9:32"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"13737:1:32"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"13744:7:32"},{"name":"x","nodeType":"YulIdentifier","src":"13753:1:32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"13740:3:32"},"nodeType":"YulFunctionCall","src":"13740:15:32"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"13734:2:32"},"nodeType":"YulFunctionCall","src":"13734:22:32"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"13720:2:32"},"nodeType":"YulFunctionCall","src":"13720:37:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13713:6:32"},"nodeType":"YulFunctionCall","src":"13713:45:32"},"nodeType":"YulIf","src":"13710:71:32"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"13650:1:32","type":""},{"name":"y","nodeType":"YulTypedName","src":"13653:1:32","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"13659:7:32","type":""}],"src":"13619:168:32"},{"body":{"nodeType":"YulBlock","src":"13824:95:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13841:1:32","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13848:3:32","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"13853:10:32","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"13844:3:32"},"nodeType":"YulFunctionCall","src":"13844:20:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13834:6:32"},"nodeType":"YulFunctionCall","src":"13834:31:32"},"nodeType":"YulExpressionStatement","src":"13834:31:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13881:1:32","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"13884:4:32","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13874:6:32"},"nodeType":"YulFunctionCall","src":"13874:15:32"},"nodeType":"YulExpressionStatement","src":"13874:15:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13905:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13908:4:32","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13898:6:32"},"nodeType":"YulFunctionCall","src":"13898:15:32"},"nodeType":"YulExpressionStatement","src":"13898:15:32"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"13792:127:32"},{"body":{"nodeType":"YulBlock","src":"13970:74:32","statements":[{"body":{"nodeType":"YulBlock","src":"13993:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"13995:16:32"},"nodeType":"YulFunctionCall","src":"13995:18:32"},"nodeType":"YulExpressionStatement","src":"13995:18:32"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"13990:1:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13983:6:32"},"nodeType":"YulFunctionCall","src":"13983:9:32"},"nodeType":"YulIf","src":"13980:35:32"},{"nodeType":"YulAssignment","src":"14024:14:32","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"14033:1:32"},{"name":"y","nodeType":"YulIdentifier","src":"14036:1:32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"14029:3:32"},"nodeType":"YulFunctionCall","src":"14029:9:32"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"14024:1:32"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"13955:1:32","type":""},{"name":"y","nodeType":"YulTypedName","src":"13958:1:32","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"13964:1:32","type":""}],"src":"13924:120:32"},{"body":{"nodeType":"YulBlock","src":"14178:175:32","statements":[{"nodeType":"YulAssignment","src":"14188:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14200:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"14211:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14196:3:32"},"nodeType":"YulFunctionCall","src":"14196:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14188:4:32"}]},{"nodeType":"YulVariableDeclaration","src":"14223:29:32","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14241:3:32","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"14246:1:32","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"14237:3:32"},"nodeType":"YulFunctionCall","src":"14237:11:32"},{"kind":"number","nodeType":"YulLiteral","src":"14250:1:32","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14233:3:32"},"nodeType":"YulFunctionCall","src":"14233:19:32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"14227:2:32","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14268:9:32"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14283:6:32"},{"name":"_1","nodeType":"YulIdentifier","src":"14291:2:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14279:3:32"},"nodeType":"YulFunctionCall","src":"14279:15:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14261:6:32"},"nodeType":"YulFunctionCall","src":"14261:34:32"},"nodeType":"YulExpressionStatement","src":"14261:34:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14315:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"14326:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14311:3:32"},"nodeType":"YulFunctionCall","src":"14311:18:32"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"14335:6:32"},{"name":"_1","nodeType":"YulIdentifier","src":"14343:2:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14331:3:32"},"nodeType":"YulFunctionCall","src":"14331:15:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14304:6:32"},"nodeType":"YulFunctionCall","src":"14304:43:32"},"nodeType":"YulExpressionStatement","src":"14304:43:32"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14139:9:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14150:6:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14158:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14169:4:32","type":""}],"src":"14049:304:32"},{"body":{"nodeType":"YulBlock","src":"14487:119:32","statements":[{"nodeType":"YulAssignment","src":"14497:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14509:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"14520:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14505:3:32"},"nodeType":"YulFunctionCall","src":"14505:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14497:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14539:9:32"},{"name":"value0","nodeType":"YulIdentifier","src":"14550:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14532:6:32"},"nodeType":"YulFunctionCall","src":"14532:25:32"},"nodeType":"YulExpressionStatement","src":"14532:25:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14577:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"14588:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14573:3:32"},"nodeType":"YulFunctionCall","src":"14573:18:32"},{"name":"value1","nodeType":"YulIdentifier","src":"14593:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14566:6:32"},"nodeType":"YulFunctionCall","src":"14566:34:32"},"nodeType":"YulExpressionStatement","src":"14566:34:32"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14448:9:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14459:6:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14467:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14478:4:32","type":""}],"src":"14358:248:32"},{"body":{"nodeType":"YulBlock","src":"14643:95:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14660:1:32","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14667:3:32","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"14672:10:32","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"14663:3:32"},"nodeType":"YulFunctionCall","src":"14663:20:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14653:6:32"},"nodeType":"YulFunctionCall","src":"14653:31:32"},"nodeType":"YulExpressionStatement","src":"14653:31:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14700:1:32","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"14703:4:32","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14693:6:32"},"nodeType":"YulFunctionCall","src":"14693:15:32"},"nodeType":"YulExpressionStatement","src":"14693:15:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14724:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14727:4:32","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14717:6:32"},"nodeType":"YulFunctionCall","src":"14717:15:32"},"nodeType":"YulExpressionStatement","src":"14717:15:32"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"14611:127:32"},{"body":{"nodeType":"YulBlock","src":"14790:88:32","statements":[{"body":{"nodeType":"YulBlock","src":"14821:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"14823:16:32"},"nodeType":"YulFunctionCall","src":"14823:18:32"},"nodeType":"YulExpressionStatement","src":"14823:18:32"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14806:5:32"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14817:1:32","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"14813:3:32"},"nodeType":"YulFunctionCall","src":"14813:6:32"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"14803:2:32"},"nodeType":"YulFunctionCall","src":"14803:17:32"},"nodeType":"YulIf","src":"14800:43:32"},{"nodeType":"YulAssignment","src":"14852:20:32","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14863:5:32"},{"kind":"number","nodeType":"YulLiteral","src":"14870:1:32","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14859:3:32"},"nodeType":"YulFunctionCall","src":"14859:13:32"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"14852:3:32"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14772:5:32","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"14782:3:32","type":""}],"src":"14743:135:32"},{"body":{"nodeType":"YulBlock","src":"14964:464:32","statements":[{"body":{"nodeType":"YulBlock","src":"14997:425:32","statements":[{"nodeType":"YulVariableDeclaration","src":"15011:11:32","value":{"kind":"number","nodeType":"YulLiteral","src":"15021:1:32","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"15015:2:32","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"15042:2:32"},{"name":"array","nodeType":"YulIdentifier","src":"15046:5:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15035:6:32"},"nodeType":"YulFunctionCall","src":"15035:17:32"},"nodeType":"YulExpressionStatement","src":"15035:17:32"},{"nodeType":"YulVariableDeclaration","src":"15065:31:32","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"15087:2:32"},{"kind":"number","nodeType":"YulLiteral","src":"15091:4:32","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"15077:9:32"},"nodeType":"YulFunctionCall","src":"15077:19:32"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"15069:4:32","type":""}]},{"nodeType":"YulVariableDeclaration","src":"15109:57:32","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"15132:4:32"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15142:1:32","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"15149:10:32"},{"kind":"number","nodeType":"YulLiteral","src":"15161:2:32","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15145:3:32"},"nodeType":"YulFunctionCall","src":"15145:19:32"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"15138:3:32"},"nodeType":"YulFunctionCall","src":"15138:27:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15128:3:32"},"nodeType":"YulFunctionCall","src":"15128:38:32"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"15113:11:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"15203:23:32","statements":[{"nodeType":"YulAssignment","src":"15205:19:32","value":{"name":"data","nodeType":"YulIdentifier","src":"15220:4:32"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"15205:11:32"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"15185:10:32"},{"kind":"number","nodeType":"YulLiteral","src":"15197:4:32","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"15182:2:32"},"nodeType":"YulFunctionCall","src":"15182:20:32"},"nodeType":"YulIf","src":"15179:47:32"},{"nodeType":"YulVariableDeclaration","src":"15239:41:32","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"15253:4:32"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15263:1:32","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"15270:3:32"},{"kind":"number","nodeType":"YulLiteral","src":"15275:2:32","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15266:3:32"},"nodeType":"YulFunctionCall","src":"15266:12:32"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"15259:3:32"},"nodeType":"YulFunctionCall","src":"15259:20:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15249:3:32"},"nodeType":"YulFunctionCall","src":"15249:31:32"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"15243:2:32","type":""}]},{"nodeType":"YulVariableDeclaration","src":"15293:24:32","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"15306:11:32"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"15297:5:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"15391:21:32","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"15400:5:32"},{"name":"_1","nodeType":"YulIdentifier","src":"15407:2:32"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"15393:6:32"},"nodeType":"YulFunctionCall","src":"15393:17:32"},"nodeType":"YulExpressionStatement","src":"15393:17:32"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"15341:5:32"},{"name":"_2","nodeType":"YulIdentifier","src":"15348:2:32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"15338:2:32"},"nodeType":"YulFunctionCall","src":"15338:13:32"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"15352:26:32","statements":[{"nodeType":"YulAssignment","src":"15354:22:32","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"15367:5:32"},{"kind":"number","nodeType":"YulLiteral","src":"15374:1:32","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15363:3:32"},"nodeType":"YulFunctionCall","src":"15363:13:32"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"15354:5:32"}]}]},"pre":{"nodeType":"YulBlock","src":"15334:3:32","statements":[]},"src":"15330:82:32"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"14980:3:32"},{"kind":"number","nodeType":"YulLiteral","src":"14985:2:32","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14977:2:32"},"nodeType":"YulFunctionCall","src":"14977:11:32"},"nodeType":"YulIf","src":"14974:448:32"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"14936:5:32","type":""},{"name":"len","nodeType":"YulTypedName","src":"14943:3:32","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"14948:10:32","type":""}],"src":"14883:545:32"},{"body":{"nodeType":"YulBlock","src":"15518:81:32","statements":[{"nodeType":"YulAssignment","src":"15528:65:32","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"15543:4:32"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15561:1:32","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"15564:3:32"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"15557:3:32"},"nodeType":"YulFunctionCall","src":"15557:11:32"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15574:1:32","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"15570:3:32"},"nodeType":"YulFunctionCall","src":"15570:6:32"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"15553:3:32"},"nodeType":"YulFunctionCall","src":"15553:24:32"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"15549:3:32"},"nodeType":"YulFunctionCall","src":"15549:29:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15539:3:32"},"nodeType":"YulFunctionCall","src":"15539:40:32"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15585:1:32","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"15588:3:32"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"15581:3:32"},"nodeType":"YulFunctionCall","src":"15581:11:32"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"15536:2:32"},"nodeType":"YulFunctionCall","src":"15536:57:32"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"15528:4:32"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"15495:4:32","type":""},{"name":"len","nodeType":"YulTypedName","src":"15501:3:32","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"15509:4:32","type":""}],"src":"15433:166:32"},{"body":{"nodeType":"YulBlock","src":"15700:1256:32","statements":[{"nodeType":"YulVariableDeclaration","src":"15710:24:32","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"15730:3:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15724:5:32"},"nodeType":"YulFunctionCall","src":"15724:10:32"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"15714:6:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"15777:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"15779:16:32"},"nodeType":"YulFunctionCall","src":"15779:18:32"},"nodeType":"YulExpressionStatement","src":"15779:18:32"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"15749:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"15757:18:32","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"15746:2:32"},"nodeType":"YulFunctionCall","src":"15746:30:32"},"nodeType":"YulIf","src":"15743:56:32"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"15852:4:32"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"15890:4:32"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"15884:5:32"},"nodeType":"YulFunctionCall","src":"15884:11:32"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"15858:25:32"},"nodeType":"YulFunctionCall","src":"15858:38:32"},{"name":"newLen","nodeType":"YulIdentifier","src":"15898:6:32"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"15808:43:32"},"nodeType":"YulFunctionCall","src":"15808:97:32"},"nodeType":"YulExpressionStatement","src":"15808:97:32"},{"nodeType":"YulVariableDeclaration","src":"15914:18:32","value":{"kind":"number","nodeType":"YulLiteral","src":"15931:1:32","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"15918:9:32","type":""}]},{"nodeType":"YulVariableDeclaration","src":"15941:23:32","value":{"kind":"number","nodeType":"YulLiteral","src":"15960:4:32","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"15945:11:32","type":""}]},{"nodeType":"YulAssignment","src":"15973:24:32","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"15986:11:32"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"15973:9:32"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"16043:656:32","statements":[{"nodeType":"YulVariableDeclaration","src":"16057:35:32","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"16076:6:32"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16088:2:32","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"16084:3:32"},"nodeType":"YulFunctionCall","src":"16084:7:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16072:3:32"},"nodeType":"YulFunctionCall","src":"16072:20:32"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"16061:7:32","type":""}]},{"nodeType":"YulVariableDeclaration","src":"16105:49:32","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"16149:4:32"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"16119:29:32"},"nodeType":"YulFunctionCall","src":"16119:35:32"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"16109:6:32","type":""}]},{"nodeType":"YulVariableDeclaration","src":"16167:10:32","value":{"kind":"number","nodeType":"YulLiteral","src":"16176:1:32","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"16171:1:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"16254:172:32","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"16279:6:32"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"16297:3:32"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"16302:9:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16293:3:32"},"nodeType":"YulFunctionCall","src":"16293:19:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16287:5:32"},"nodeType":"YulFunctionCall","src":"16287:26:32"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"16272:6:32"},"nodeType":"YulFunctionCall","src":"16272:42:32"},"nodeType":"YulExpressionStatement","src":"16272:42:32"},{"nodeType":"YulAssignment","src":"16331:24:32","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"16345:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"16353:1:32","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16341:3:32"},"nodeType":"YulFunctionCall","src":"16341:14:32"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"16331:6:32"}]},{"nodeType":"YulAssignment","src":"16372:40:32","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"16389:9:32"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"16400:11:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16385:3:32"},"nodeType":"YulFunctionCall","src":"16385:27:32"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"16372:9:32"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"16201:1:32"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"16204:7:32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"16198:2:32"},"nodeType":"YulFunctionCall","src":"16198:14:32"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"16213:28:32","statements":[{"nodeType":"YulAssignment","src":"16215:24:32","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"16224:1:32"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"16227:11:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16220:3:32"},"nodeType":"YulFunctionCall","src":"16220:19:32"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"16215:1:32"}]}]},"pre":{"nodeType":"YulBlock","src":"16194:3:32","statements":[]},"src":"16190:236:32"},{"body":{"nodeType":"YulBlock","src":"16474:166:32","statements":[{"nodeType":"YulVariableDeclaration","src":"16492:43:32","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"16519:3:32"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"16524:9:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16515:3:32"},"nodeType":"YulFunctionCall","src":"16515:19:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16509:5:32"},"nodeType":"YulFunctionCall","src":"16509:26:32"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"16496:9:32","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"16559:6:32"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"16571:9:32"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16598:1:32","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"16601:6:32"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"16594:3:32"},"nodeType":"YulFunctionCall","src":"16594:14:32"},{"kind":"number","nodeType":"YulLiteral","src":"16610:3:32","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16590:3:32"},"nodeType":"YulFunctionCall","src":"16590:24:32"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16620:1:32","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"16616:3:32"},"nodeType":"YulFunctionCall","src":"16616:6:32"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"16586:3:32"},"nodeType":"YulFunctionCall","src":"16586:37:32"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"16582:3:32"},"nodeType":"YulFunctionCall","src":"16582:42:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16567:3:32"},"nodeType":"YulFunctionCall","src":"16567:58:32"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"16552:6:32"},"nodeType":"YulFunctionCall","src":"16552:74:32"},"nodeType":"YulExpressionStatement","src":"16552:74:32"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"16445:7:32"},{"name":"newLen","nodeType":"YulIdentifier","src":"16454:6:32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"16442:2:32"},"nodeType":"YulFunctionCall","src":"16442:19:32"},"nodeType":"YulIf","src":"16439:201:32"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"16660:4:32"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16674:1:32","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"16677:6:32"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"16670:3:32"},"nodeType":"YulFunctionCall","src":"16670:14:32"},{"kind":"number","nodeType":"YulLiteral","src":"16686:1:32","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16666:3:32"},"nodeType":"YulFunctionCall","src":"16666:22:32"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"16653:6:32"},"nodeType":"YulFunctionCall","src":"16653:36:32"},"nodeType":"YulExpressionStatement","src":"16653:36:32"}]},"nodeType":"YulCase","src":"16036:663:32","value":{"kind":"number","nodeType":"YulLiteral","src":"16041:1:32","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"16716:234:32","statements":[{"nodeType":"YulVariableDeclaration","src":"16730:14:32","value":{"kind":"number","nodeType":"YulLiteral","src":"16743:1:32","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"16734:5:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"16779:67:32","statements":[{"nodeType":"YulAssignment","src":"16797:35:32","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"16816:3:32"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"16821:9:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16812:3:32"},"nodeType":"YulFunctionCall","src":"16812:19:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16806:5:32"},"nodeType":"YulFunctionCall","src":"16806:26:32"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"16797:5:32"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"16760:6:32"},"nodeType":"YulIf","src":"16757:89:32"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"16866:4:32"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16925:5:32"},{"name":"newLen","nodeType":"YulIdentifier","src":"16932:6:32"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"16872:52:32"},"nodeType":"YulFunctionCall","src":"16872:67:32"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"16859:6:32"},"nodeType":"YulFunctionCall","src":"16859:81:32"},"nodeType":"YulExpressionStatement","src":"16859:81:32"}]},"nodeType":"YulCase","src":"16708:242:32","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"16016:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"16024:2:32","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16013:2:32"},"nodeType":"YulFunctionCall","src":"16013:14:32"},"nodeType":"YulSwitch","src":"16006:944:32"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"15685:4:32","type":""},{"name":"src","nodeType":"YulTypedName","src":"15691:3:32","type":""}],"src":"15604:1352:32"},{"body":{"nodeType":"YulBlock","src":"17135:165:32","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17152:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"17163:2:32","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17145:6:32"},"nodeType":"YulFunctionCall","src":"17145:21:32"},"nodeType":"YulExpressionStatement","src":"17145:21:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17186:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"17197:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17182:3:32"},"nodeType":"YulFunctionCall","src":"17182:18:32"},{"kind":"number","nodeType":"YulLiteral","src":"17202:2:32","type":"","value":"15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17175:6:32"},"nodeType":"YulFunctionCall","src":"17175:30:32"},"nodeType":"YulExpressionStatement","src":"17175:30:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17225:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"17236:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17221:3:32"},"nodeType":"YulFunctionCall","src":"17221:18:32"},{"hexValue":"416c726561647920636c61696d6564","kind":"string","nodeType":"YulLiteral","src":"17241:17:32","type":"","value":"Already claimed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17214:6:32"},"nodeType":"YulFunctionCall","src":"17214:45:32"},"nodeType":"YulExpressionStatement","src":"17214:45:32"},{"nodeType":"YulAssignment","src":"17268:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17280:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"17291:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17276:3:32"},"nodeType":"YulFunctionCall","src":"17276:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17268:4:32"}]}]},"name":"abi_encode_tuple_t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17112:9:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17126:4:32","type":""}],"src":"16961:339:32"},{"body":{"nodeType":"YulBlock","src":"17479:170:32","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17496:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"17507:2:32","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17489:6:32"},"nodeType":"YulFunctionCall","src":"17489:21:32"},"nodeType":"YulExpressionStatement","src":"17489:21:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17530:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"17541:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17526:3:32"},"nodeType":"YulFunctionCall","src":"17526:18:32"},{"kind":"number","nodeType":"YulLiteral","src":"17546:2:32","type":"","value":"20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17519:6:32"},"nodeType":"YulFunctionCall","src":"17519:30:32"},"nodeType":"YulExpressionStatement","src":"17519:30:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17569:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"17580:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17565:3:32"},"nodeType":"YulFunctionCall","src":"17565:18:32"},{"hexValue":"537570706c79206c696d69742072656163686564","kind":"string","nodeType":"YulLiteral","src":"17585:22:32","type":"","value":"Supply limit reached"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17558:6:32"},"nodeType":"YulFunctionCall","src":"17558:50:32"},"nodeType":"YulExpressionStatement","src":"17558:50:32"},{"nodeType":"YulAssignment","src":"17617:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17629:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"17640:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17625:3:32"},"nodeType":"YulFunctionCall","src":"17625:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17617:4:32"}]}]},"name":"abi_encode_tuple_t_stringliteral_f563795e1c522302826c31e2514b6e741825cdb656e643a68a551481a38b3699__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17456:9:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17470:4:32","type":""}],"src":"17305:344:32"},{"body":{"nodeType":"YulBlock","src":"17773:110:32","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17790:3:32"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17803:2:32","type":"","value":"96"},{"name":"value0","nodeType":"YulIdentifier","src":"17807:6:32"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"17799:3:32"},"nodeType":"YulFunctionCall","src":"17799:15:32"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17820:26:32","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"17816:3:32"},"nodeType":"YulFunctionCall","src":"17816:31:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17795:3:32"},"nodeType":"YulFunctionCall","src":"17795:53:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17783:6:32"},"nodeType":"YulFunctionCall","src":"17783:66:32"},"nodeType":"YulExpressionStatement","src":"17783:66:32"},{"nodeType":"YulAssignment","src":"17858:19:32","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17869:3:32"},{"kind":"number","nodeType":"YulLiteral","src":"17874:2:32","type":"","value":"20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17865:3:32"},"nodeType":"YulFunctionCall","src":"17865:12:32"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17858:3:32"}]}]},"name":"abi_encode_tuple_packed_t_address__to_t_address__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17749:3:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17754:6:32","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17765:3:32","type":""}],"src":"17654:229:32"},{"body":{"nodeType":"YulBlock","src":"18062:163:32","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18079:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"18090:2:32","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18072:6:32"},"nodeType":"YulFunctionCall","src":"18072:21:32"},"nodeType":"YulExpressionStatement","src":"18072:21:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18113:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"18124:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18109:3:32"},"nodeType":"YulFunctionCall","src":"18109:18:32"},{"kind":"number","nodeType":"YulLiteral","src":"18129:2:32","type":"","value":"13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18102:6:32"},"nodeType":"YulFunctionCall","src":"18102:30:32"},"nodeType":"YulExpressionStatement","src":"18102:30:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18152:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"18163:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18148:3:32"},"nodeType":"YulFunctionCall","src":"18148:18:32"},{"hexValue":"496e76616c69642070726f6f66","kind":"string","nodeType":"YulLiteral","src":"18168:15:32","type":"","value":"Invalid proof"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18141:6:32"},"nodeType":"YulFunctionCall","src":"18141:43:32"},"nodeType":"YulExpressionStatement","src":"18141:43:32"},{"nodeType":"YulAssignment","src":"18193:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18205:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"18216:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18201:3:32"},"nodeType":"YulFunctionCall","src":"18201:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18193:4:32"}]}]},"name":"abi_encode_tuple_t_stringliteral_dbb8b2d35c676776519896c045ce9c5b267915e4127b1aa1fa65a56a3d2b2639__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18039:9:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18053:4:32","type":""}],"src":"17888:337:32"},{"body":{"nodeType":"YulBlock","src":"18279:79:32","statements":[{"nodeType":"YulAssignment","src":"18289:17:32","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18301:1:32"},{"name":"y","nodeType":"YulIdentifier","src":"18304:1:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18297:3:32"},"nodeType":"YulFunctionCall","src":"18297:9:32"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"18289:4:32"}]},{"body":{"nodeType":"YulBlock","src":"18330:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"18332:16:32"},"nodeType":"YulFunctionCall","src":"18332:18:32"},"nodeType":"YulExpressionStatement","src":"18332:18:32"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"18321:4:32"},{"name":"x","nodeType":"YulIdentifier","src":"18327:1:32"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18318:2:32"},"nodeType":"YulFunctionCall","src":"18318:11:32"},"nodeType":"YulIf","src":"18315:37:32"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"18261:1:32","type":""},{"name":"y","nodeType":"YulTypedName","src":"18264:1:32","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"18270:4:32","type":""}],"src":"18230:128:32"},{"body":{"nodeType":"YulBlock","src":"18401:74:32","statements":[{"body":{"nodeType":"YulBlock","src":"18424:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"18426:16:32"},"nodeType":"YulFunctionCall","src":"18426:18:32"},"nodeType":"YulExpressionStatement","src":"18426:18:32"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"18421:1:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18414:6:32"},"nodeType":"YulFunctionCall","src":"18414:9:32"},"nodeType":"YulIf","src":"18411:35:32"},{"nodeType":"YulAssignment","src":"18455:14:32","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18464:1:32"},{"name":"y","nodeType":"YulIdentifier","src":"18467:1:32"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"18460:3:32"},"nodeType":"YulFunctionCall","src":"18460:9:32"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"18455:1:32"}]}]},"name":"mod_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"18386:1:32","type":""},{"name":"y","nodeType":"YulTypedName","src":"18389:1:32","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"18395:1:32","type":""}],"src":"18363:112:32"},{"body":{"nodeType":"YulBlock","src":"18528:77:32","statements":[{"nodeType":"YulAssignment","src":"18538:16:32","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18549:1:32"},{"name":"y","nodeType":"YulIdentifier","src":"18552:1:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18545:3:32"},"nodeType":"YulFunctionCall","src":"18545:9:32"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"18538:3:32"}]},{"body":{"nodeType":"YulBlock","src":"18577:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"18579:16:32"},"nodeType":"YulFunctionCall","src":"18579:18:32"},"nodeType":"YulExpressionStatement","src":"18579:18:32"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18569:1:32"},{"name":"sum","nodeType":"YulIdentifier","src":"18572:3:32"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18566:2:32"},"nodeType":"YulFunctionCall","src":"18566:10:32"},"nodeType":"YulIf","src":"18563:36:32"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"18511:1:32","type":""},{"name":"y","nodeType":"YulTypedName","src":"18514:1:32","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"18520:3:32","type":""}],"src":"18480:125:32"},{"body":{"nodeType":"YulBlock","src":"18795:232:32","statements":[{"nodeType":"YulAssignment","src":"18805:27:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18817:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"18828:3:32","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18813:3:32"},"nodeType":"YulFunctionCall","src":"18813:19:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18805:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18848:9:32"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18863:6:32"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18879:3:32","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"18884:1:32","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"18875:3:32"},"nodeType":"YulFunctionCall","src":"18875:11:32"},{"kind":"number","nodeType":"YulLiteral","src":"18888:1:32","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18871:3:32"},"nodeType":"YulFunctionCall","src":"18871:19:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18859:3:32"},"nodeType":"YulFunctionCall","src":"18859:32:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18841:6:32"},"nodeType":"YulFunctionCall","src":"18841:51:32"},"nodeType":"YulExpressionStatement","src":"18841:51:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18912:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"18923:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18908:3:32"},"nodeType":"YulFunctionCall","src":"18908:18:32"},{"name":"value1","nodeType":"YulIdentifier","src":"18928:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18901:6:32"},"nodeType":"YulFunctionCall","src":"18901:34:32"},"nodeType":"YulExpressionStatement","src":"18901:34:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18955:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"18966:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18951:3:32"},"nodeType":"YulFunctionCall","src":"18951:18:32"},{"name":"value2","nodeType":"YulIdentifier","src":"18971:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18944:6:32"},"nodeType":"YulFunctionCall","src":"18944:34:32"},"nodeType":"YulExpressionStatement","src":"18944:34:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18998:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"19009:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18994:3:32"},"nodeType":"YulFunctionCall","src":"18994:18:32"},{"name":"value3","nodeType":"YulIdentifier","src":"19014:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18987:6:32"},"nodeType":"YulFunctionCall","src":"18987:34:32"},"nodeType":"YulExpressionStatement","src":"18987:34:32"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18740:9:32","type":""},{"name":"value3","nodeType":"YulTypedName","src":"18751:6:32","type":""},{"name":"value2","nodeType":"YulTypedName","src":"18759:6:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18767:6:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18775:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18786:4:32","type":""}],"src":"18610:417:32"},{"body":{"nodeType":"YulBlock","src":"19261:236:32","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19278:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"19289:2:32","type":"","value":"64"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19271:6:32"},"nodeType":"YulFunctionCall","src":"19271:21:32"},"nodeType":"YulExpressionStatement","src":"19271:21:32"},{"nodeType":"YulVariableDeclaration","src":"19301:70:32","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"19344:6:32"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19356:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"19367:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19352:3:32"},"nodeType":"YulFunctionCall","src":"19352:18:32"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"19315:28:32"},"nodeType":"YulFunctionCall","src":"19315:56:32"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"19305:6:32","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19391:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"19402:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19387:3:32"},"nodeType":"YulFunctionCall","src":"19387:18:32"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"19411:6:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"19419:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19407:3:32"},"nodeType":"YulFunctionCall","src":"19407:22:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19380:6:32"},"nodeType":"YulFunctionCall","src":"19380:50:32"},"nodeType":"YulExpressionStatement","src":"19380:50:32"},{"nodeType":"YulAssignment","src":"19439:52:32","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"19476:6:32"},{"name":"tail_1","nodeType":"YulIdentifier","src":"19484:6:32"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"19447:28:32"},"nodeType":"YulFunctionCall","src":"19447:44:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19439:4:32"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19222:9:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"19233:6:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19241:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19252:4:32","type":""}],"src":"19032:465:32"},{"body":{"nodeType":"YulBlock","src":"19733:330:32","statements":[{"nodeType":"YulVariableDeclaration","src":"19743:29:32","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19761:3:32","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"19766:1:32","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"19757:3:32"},"nodeType":"YulFunctionCall","src":"19757:11:32"},{"kind":"number","nodeType":"YulLiteral","src":"19770:1:32","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19753:3:32"},"nodeType":"YulFunctionCall","src":"19753:19:32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"19747:2:32","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19788:9:32"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"19803:6:32"},{"name":"_1","nodeType":"YulIdentifier","src":"19811:2:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19799:3:32"},"nodeType":"YulFunctionCall","src":"19799:15:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19781:6:32"},"nodeType":"YulFunctionCall","src":"19781:34:32"},"nodeType":"YulExpressionStatement","src":"19781:34:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19835:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"19846:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19831:3:32"},"nodeType":"YulFunctionCall","src":"19831:18:32"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"19855:6:32"},{"name":"_1","nodeType":"YulIdentifier","src":"19863:2:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19851:3:32"},"nodeType":"YulFunctionCall","src":"19851:15:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19824:6:32"},"nodeType":"YulFunctionCall","src":"19824:43:32"},"nodeType":"YulExpressionStatement","src":"19824:43:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19887:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"19898:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19883:3:32"},"nodeType":"YulFunctionCall","src":"19883:18:32"},{"name":"value2","nodeType":"YulIdentifier","src":"19903:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19876:6:32"},"nodeType":"YulFunctionCall","src":"19876:34:32"},"nodeType":"YulExpressionStatement","src":"19876:34:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19930:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"19941:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19926:3:32"},"nodeType":"YulFunctionCall","src":"19926:18:32"},{"name":"value3","nodeType":"YulIdentifier","src":"19946:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19919:6:32"},"nodeType":"YulFunctionCall","src":"19919:34:32"},"nodeType":"YulExpressionStatement","src":"19919:34:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19973:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"19984:3:32","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19969:3:32"},"nodeType":"YulFunctionCall","src":"19969:19:32"},{"kind":"number","nodeType":"YulLiteral","src":"19990:3:32","type":"","value":"160"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19962:6:32"},"nodeType":"YulFunctionCall","src":"19962:32:32"},"nodeType":"YulExpressionStatement","src":"19962:32:32"},{"nodeType":"YulAssignment","src":"20003:54:32","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"20029:6:32"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20041:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"20052:3:32","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20037:3:32"},"nodeType":"YulFunctionCall","src":"20037:19:32"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"20011:17:32"},"nodeType":"YulFunctionCall","src":"20011:46:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20003:4:32"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19670:9:32","type":""},{"name":"value4","nodeType":"YulTypedName","src":"19681:6:32","type":""},{"name":"value3","nodeType":"YulTypedName","src":"19689:6:32","type":""},{"name":"value2","nodeType":"YulTypedName","src":"19697:6:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"19705:6:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19713:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19724:4:32","type":""}],"src":"19502:561:32"},{"body":{"nodeType":"YulBlock","src":"20148:169:32","statements":[{"body":{"nodeType":"YulBlock","src":"20194:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20203:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20206:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20196:6:32"},"nodeType":"YulFunctionCall","src":"20196:12:32"},"nodeType":"YulExpressionStatement","src":"20196:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"20169:7:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"20178:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20165:3:32"},"nodeType":"YulFunctionCall","src":"20165:23:32"},{"kind":"number","nodeType":"YulLiteral","src":"20190:2:32","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"20161:3:32"},"nodeType":"YulFunctionCall","src":"20161:32:32"},"nodeType":"YulIf","src":"20158:52:32"},{"nodeType":"YulVariableDeclaration","src":"20219:29:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20238:9:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20232:5:32"},"nodeType":"YulFunctionCall","src":"20232:16:32"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"20223:5:32","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20281:5:32"}],"functionName":{"name":"validator_revert_bytes4","nodeType":"YulIdentifier","src":"20257:23:32"},"nodeType":"YulFunctionCall","src":"20257:30:32"},"nodeType":"YulExpressionStatement","src":"20257:30:32"},{"nodeType":"YulAssignment","src":"20296:15:32","value":{"name":"value","nodeType":"YulIdentifier","src":"20306:5:32"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"20296:6:32"}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20114:9:32","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"20125:7:32","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"20137:6:32","type":""}],"src":"20068:249:32"},{"body":{"nodeType":"YulBlock","src":"20653:496:32","statements":[{"nodeType":"YulVariableDeclaration","src":"20663:29:32","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20681:3:32","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"20686:1:32","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"20677:3:32"},"nodeType":"YulFunctionCall","src":"20677:11:32"},{"kind":"number","nodeType":"YulLiteral","src":"20690:1:32","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20673:3:32"},"nodeType":"YulFunctionCall","src":"20673:19:32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"20667:2:32","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20708:9:32"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"20723:6:32"},{"name":"_1","nodeType":"YulIdentifier","src":"20731:2:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20719:3:32"},"nodeType":"YulFunctionCall","src":"20719:15:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20701:6:32"},"nodeType":"YulFunctionCall","src":"20701:34:32"},"nodeType":"YulExpressionStatement","src":"20701:34:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20755:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"20766:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20751:3:32"},"nodeType":"YulFunctionCall","src":"20751:18:32"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"20775:6:32"},{"name":"_1","nodeType":"YulIdentifier","src":"20783:2:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20771:3:32"},"nodeType":"YulFunctionCall","src":"20771:15:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20744:6:32"},"nodeType":"YulFunctionCall","src":"20744:43:32"},"nodeType":"YulExpressionStatement","src":"20744:43:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20807:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"20818:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20803:3:32"},"nodeType":"YulFunctionCall","src":"20803:18:32"},{"kind":"number","nodeType":"YulLiteral","src":"20823:3:32","type":"","value":"160"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20796:6:32"},"nodeType":"YulFunctionCall","src":"20796:31:32"},"nodeType":"YulExpressionStatement","src":"20796:31:32"},{"nodeType":"YulVariableDeclaration","src":"20836:71:32","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"20879:6:32"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20891:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"20902:3:32","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20887:3:32"},"nodeType":"YulFunctionCall","src":"20887:19:32"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"20850:28:32"},"nodeType":"YulFunctionCall","src":"20850:57:32"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"20840:6:32","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20927:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"20938:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20923:3:32"},"nodeType":"YulFunctionCall","src":"20923:18:32"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"20947:6:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"20955:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20943:3:32"},"nodeType":"YulFunctionCall","src":"20943:22:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20916:6:32"},"nodeType":"YulFunctionCall","src":"20916:50:32"},"nodeType":"YulExpressionStatement","src":"20916:50:32"},{"nodeType":"YulVariableDeclaration","src":"20975:58:32","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"21018:6:32"},{"name":"tail_1","nodeType":"YulIdentifier","src":"21026:6:32"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"20989:28:32"},"nodeType":"YulFunctionCall","src":"20989:44:32"},"variables":[{"name":"tail_2","nodeType":"YulTypedName","src":"20979:6:32","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21053:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"21064:3:32","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21049:3:32"},"nodeType":"YulFunctionCall","src":"21049:19:32"},{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"21074:6:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"21082:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21070:3:32"},"nodeType":"YulFunctionCall","src":"21070:22:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21042:6:32"},"nodeType":"YulFunctionCall","src":"21042:51:32"},"nodeType":"YulExpressionStatement","src":"21042:51:32"},{"nodeType":"YulAssignment","src":"21102:41:32","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"21128:6:32"},{"name":"tail_2","nodeType":"YulIdentifier","src":"21136:6:32"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"21110:17:32"},"nodeType":"YulFunctionCall","src":"21110:33:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21102:4:32"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20590:9:32","type":""},{"name":"value4","nodeType":"YulTypedName","src":"20601:6:32","type":""},{"name":"value3","nodeType":"YulTypedName","src":"20609:6:32","type":""},{"name":"value2","nodeType":"YulTypedName","src":"20617:6:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20625:6:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20633:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20644:4:32","type":""}],"src":"20322:827:32"}]},"contents":"{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_addresst_uint96(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffff))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256t_bytes32(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_uint256_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_uint256_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_available_length_bytes(src, length, end) -> array\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        array := allocate_memory(add(and(add(length, 31), not(31)), 0x20))\n        mstore(array, length)\n        if gt(add(src, length), end) { revert(0, 0) }\n        calldatacopy(add(array, 0x20), src, length)\n        mstore(add(add(array, length), 0x20), 0)\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        array := abi_decode_available_length_bytes(add(offset, 0x20), calldataload(offset), end)\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value3 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 128))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset_2), dataEnd)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        let _4 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_uint256_dyn(_3))\n        let dst_1 := dst\n        mstore(dst, _3)\n        dst := add(dst, _4)\n        let srcEnd := add(add(_2, shl(5, _3)), _4)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_2, _4)\n        for { } lt(src, srcEnd) { src := add(src, _4) }\n        {\n            mstore(dst, abi_decode_address(src))\n            dst := add(dst, _4)\n        }\n        value0 := dst_1\n        let offset_1 := calldataload(add(headStart, _4))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_encode_array_uint256_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_array_uint256_dyn(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value0 := abi_decode_available_length_bytes(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256t_array$_t_bytes32_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, shl(5, length)), 32), dataEnd) { revert(0, 0) }\n        value1 := add(_2, 32)\n        value2 := length\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function abi_encode_tuple_packed_t_string_storage_t_string_memory_ptr_t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let ret := 0\n        let slotValue := sload(value0)\n        let length := extract_byte_array_length(slotValue)\n        let _1 := 1\n        switch and(slotValue, _1)\n        case 0 {\n            mstore(pos, and(slotValue, not(255)))\n            ret := add(pos, mul(length, iszero(iszero(length))))\n        }\n        case 1 {\n            mstore(0, value0)\n            let _2 := 0x20\n            let dataPos := keccak256(0, _2)\n            let i := 0\n            for { } lt(i, length) { i := add(i, _2) }\n            {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, _1)\n            }\n            ret := add(pos, length)\n        }\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), ret, length_1)\n        let end_1 := add(ret, length_1)\n        mstore(end_1, \".json\")\n        end := add(end_1, 5)\n    }\n    function abi_encode_tuple_t_stringliteral_47dcc88603f32730c5f1349ee02d9fe469c193c742f38ce12c7b0ba84c66c8a4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Invalid tokenId\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Already claimed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f563795e1c522302826c31e2514b6e741825cdb656e643a68a551481a38b3699__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Supply limit reached\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_address__to_t_address__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, and(shl(96, value0), not(0xffffffffffffffffffffffff)))\n        end := add(pos, 20)\n    }\n    function abi_encode_tuple_t_stringliteral_dbb8b2d35c676776519896c045ce9c5b267915e4127b1aa1fa65a56a3d2b2639__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"Invalid proof\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_array_uint256_dyn(value0, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_array_uint256_dyn(value1, tail_1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 160)\n        tail := abi_encode_string(value4, add(headStart, 160))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), 160)\n        let tail_1 := abi_encode_array_uint256_dyn(value2, add(headStart, 160))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        let tail_2 := abi_encode_array_uint256_dyn(value3, tail_1)\n        mstore(add(headStart, 128), sub(tail_2, headStart))\n        tail := abi_encode_string(value4, tail_2)\n    }\n}","id":32,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061014c5760003560e01c8063715018a6116100c3578063a22cb4651161007c578063a22cb46514610327578063d8b2eb991461033a578063e7dee99f1461035a578063e985e9c51461038c578063f242432a1461039f578063f2fde38b146103b257600080fd5b8063715018a61461028d57806371c5ecb114610295578063765b1845146102b5578063873f6f9e146102c85780638da5cb5b146102f65780639354f1751461030757600080fd5b80632a55205a116101155780632a55205a146101e25780632eb2c2d6146102145780634c00de82146102275780634e1273f41461025257806355f804b3146102725780636c0360eb1461028557600080fd5b8062fdd58e1461015157806301ffc9a71461017757806302fa7c471461019a5780630e89341c146101af57806318712c21146101cf575b600080fd5b61016461015f3660046113c4565b6103c5565b6040519081526020015b60405180910390f35b61018a610185366004611404565b6103ed565b604051901515815260200161016e565b6101ad6101a8366004611421565b61043d565b005b6101c26101bd366004611464565b61049e565b60405161016e91906114cd565b6101ad6101dd3660046114e0565b6104d2565b6101f56101f03660046114e0565b610574565b604080516001600160a01b03909316835260208301919091520161016e565b6101ad610222366004611650565b6105ba565b60095461023a906001600160a01b031681565b6040516001600160a01b03909116815260200161016e565b6102656102603660046116fa565b610621565b60405161016e91906117f5565b6101ad610280366004611808565b6106f6565b6101c2610745565b6101ad6107d3565b6101646102a3366004611464565b60056020526000908152604090205481565b6101ad6102c3366004611851565b6107e7565b61018a6102d63660046118d0565b600660209081526000928352604080842090915290825290205460ff1681565b6003546001600160a01b031661023a565b610164610315366004611464565b60086020526000908152604090205481565b6101ad6103353660046118fc565b610a54565b610164610348366004611464565b60076020526000908152604090205481565b60095461037490600160a01b90046001600160601b031681565b6040516001600160601b03909116815260200161016e565b61018a61039a36600461192d565b610a63565b6101ad6103ad366004611957565b610a91565b6101ad6103c03660046119bc565b610af0565b6000818152602081815260408083206001600160a01b03861684529091529020545b92915050565b60006001600160e01b03198216636cdb3d1360e11b148061041e57506001600160e01b031982166303a24d0760e21b145b806103e757506301ffc9a760e01b6001600160e01b03198316146103e7565b610445610b2e565b6001600160a01b038216600160a01b6001600160601b03831690810282176009556040519081527fae1d656a1268648b04ffa79c1416f05879338ae295aae3234d8db217356a1c62906020015b60405180910390a25050565b606060046104ab83610b5b565b6040516020016104bc929190611a11565b6040516020818303038152906040529050919050565b6104da610b2e565b600182101580156104ec575060058211155b61052f5760405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081d1bdad95b9259608a1b60448201526064015b60405180910390fd5b600082815260056020526040908190208290555182907f9ff79792a92b66fee090acb66e07837a2edb31ee6b9780fa551fd04b79dffcd2906104929084815260200190565b60095460009081906001600160a01b03811690612710906105a590600160a01b90046001600160601b031686611abe565b6105af9190611aeb565b915091509250929050565b336001600160a01b03861681148015906105db57506105d98682610a63565b155b1561060c5760405163711bec9160e11b81526001600160a01b03808316600483015287166024820152604401610526565b6106198686868686610c64565b505050505050565b606081518351146106525781518351604051635b05999160e01b815260048101929092526024820152604401610526565b6000835167ffffffffffffffff81111561066e5761066e611502565b604051908082528060200260200182016040528015610697578160200160208202803683370190505b50905060005b84518110156106ee576020808202860101516106c1906020808402870101516103c5565b8282815181106106d3576106d3611aff565b60209081029190910101526106e781611b15565b905061069d565b509392505050565b6106fe610b2e565b600461070a8282611b79565b507f6741b2fc379fad678116fe3d4d4b9a1a184ab53ba36b86ad0fa66340b1ab41ad8160405161073a91906114cd565b60405180910390a150565b60048054610752906119d7565b80601f016020809104026020016040519081016040528092919081815260200182805461077e906119d7565b80156107cb5780601f106107a0576101008083540402835291602001916107cb565b820191906000526020600020905b8154815290600101906020018083116107ae57829003601f168201915b505050505081565b6107db610b2e565b6107e56000610ccb565b565b600183101580156107f9575060058311155b6108375760405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081d1bdad95b9259608a1b6044820152606401610526565b600083815260066020908152604080832033845290915290205460ff16156108935760405162461bcd60e51b815260206004820152600f60248201526e105b1c9958591e4818db185a5b5959608a1b6044820152606401610526565b6000838152600860205260409020541561090657600083815260086020908152604080832054600790925290912054106109065760405162461bcd60e51b815260206004820152601460248201527314dd5c1c1b1e481b1a5b5a5d081c995858da195960621b6044820152606401610526565b6040516bffffffffffffffffffffffff193360601b16602082015260009060340160405160208183030381529060405280519060200120905061098a8383808060200260200160405190810160405280939291908181526020018383602002808284376000920182905250898152600560205260409020549250859150610d1d9050565b6109c65760405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b210383937b7b360991b6044820152606401610526565b60008481526006602090815260408083203384528252808320805460ff1916600117905586835260079091528120805491610a0083611b15565b9190505550610a213385600160405180602001604052806000815250610d33565b604051849033907fb792983f4be9cd6a6722f6cf3c136d8cf44f77c5cf7cb263f75f36b04806a01b90600090a350505050565b610a5f338383610d90565b5050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b336001600160a01b0386168114801590610ab25750610ab08682610a63565b155b15610ae35760405163711bec9160e11b81526001600160a01b03808316600483015287166024820152604401610526565b6106198686868686610e26565b610af8610b2e565b6001600160a01b038116610b2257604051631e4fbdf760e01b815260006004820152602401610526565b610b2b81610ccb565b50565b6003546001600160a01b031633146107e55760405163118cdaa760e01b8152336004820152602401610526565b606081600003610b825750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610bac5780610b9681611b15565b9150610ba59050600a83611aeb565b9150610b86565b60008167ffffffffffffffff811115610bc757610bc7611502565b6040519080825280601f01601f191660200182016040528015610bf1576020820181803683370190505b5090505b8415610c5c57610c06600183611c39565b9150610c13600a86611c4c565b610c1e906030611c60565b60f81b818381518110610c3357610c33611aff565b60200101906001600160f81b031916908160001a905350610c55600a86611aeb565b9450610bf5565b949350505050565b6001600160a01b038416610c8e57604051632bfa23e760e11b815260006004820152602401610526565b6001600160a01b038516610cb757604051626a0d4560e21b815260006004820152602401610526565b610cc48585858585610eb4565b5050505050565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600082610d2a8584610f07565b14949350505050565b6001600160a01b038416610d5d57604051632bfa23e760e11b815260006004820152602401610526565b60408051600180825260208201869052818301908152606082018590526080820190925290610619600087848487610eb4565b6001600160a01b038216610db95760405162ced3e160e81b815260006004820152602401610526565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b038416610e5057604051632bfa23e760e11b815260006004820152602401610526565b6001600160a01b038516610e7957604051626a0d4560e21b815260006004820152602401610526565b60408051600180825260208201869052818301908152606082018590526080820190925290610eab8787848487610eb4565b50505050505050565b610ec085858585610f4c565b6001600160a01b03841615610cc45782513390600103610ef95760208481015190840151610ef2838989858589611169565b5050610619565b61061981878787878761128d565b600081815b84518110156106ee57610f3882868381518110610f2b57610f2b611aff565b6020026020010151611376565b915080610f4481611b15565b915050610f0c565b8051825114610f7b5781518151604051635b05999160e01b815260048101929092526024820152604401610526565b3360005b835181101561108a576020818102858101820151908501909101516001600160a01b03881615611032576000828152602081815260408083206001600160a01b038c1684529091529020548181101561100b576040516303dee4c560e01b81526001600160a01b038a166004820152602481018290526044810183905260648101849052608401610526565b6000838152602081815260408083206001600160a01b038d16845290915290209082900390555b6001600160a01b03871615611077576000828152602081815260408083206001600160a01b038b16845290915281208054839290611071908490611c60565b90915550505b50508061108390611b15565b9050610f7f565b50825160010361110b5760208301516000906020840151909150856001600160a01b0316876001600160a01b0316846001600160a01b03167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6285856040516110fc929190918252602082015260400190565b60405180910390a45050610cc4565b836001600160a01b0316856001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb868660405161115a929190611c73565b60405180910390a45050505050565b6001600160a01b0384163b156106195760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906111ad9089908990889088908890600401611ca1565b6020604051808303816000875af19250505080156111e8575060408051601f3d908101601f191682019092526111e591810190611ce6565b60015b611251573d808015611216576040519150601f19603f3d011682016040523d82523d6000602084013e61121b565b606091505b50805160000361124957604051632bfa23e760e11b81526001600160a01b0386166004820152602401610526565b805160208201fd5b6001600160e01b0319811663f23a6e6160e01b14610eab57604051632bfa23e760e11b81526001600160a01b0386166004820152602401610526565b6001600160a01b0384163b156106195760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906112d19089908990889088908890600401611d03565b6020604051808303816000875af192505050801561130c575060408051601f3d908101601f1916820190925261130991810190611ce6565b60015b61133a573d808015611216576040519150601f19603f3d011682016040523d82523d6000602084013e61121b565b6001600160e01b0319811663bc197c8160e01b14610eab57604051632bfa23e760e11b81526001600160a01b0386166004820152602401610526565b60008183106113925760008281526020849052604090206113a1565b60008381526020839052604090205b9392505050565b80356001600160a01b03811681146113bf57600080fd5b919050565b600080604083850312156113d757600080fd5b6113e0836113a8565b946020939093013593505050565b6001600160e01b031981168114610b2b57600080fd5b60006020828403121561141657600080fd5b81356113a1816113ee565b6000806040838503121561143457600080fd5b61143d836113a8565b915060208301356001600160601b038116811461145957600080fd5b809150509250929050565b60006020828403121561147657600080fd5b5035919050565b60005b83811015611498578181015183820152602001611480565b50506000910152565b600081518084526114b981602086016020860161147d565b601f01601f19169290920160200192915050565b6020815260006113a160208301846114a1565b600080604083850312156114f357600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561154157611541611502565b604052919050565b600067ffffffffffffffff82111561156357611563611502565b5060051b60200190565b600082601f83011261157e57600080fd5b8135602061159361158e83611549565b611518565b82815260059290921b840181019181810190868411156115b257600080fd5b8286015b848110156115cd57803583529183019183016115b6565b509695505050505050565b600067ffffffffffffffff8311156115f2576115f2611502565b611605601f8401601f1916602001611518565b905082815283838301111561161957600080fd5b828260208301376000602084830101529392505050565b600082601f83011261164157600080fd5b6113a1838335602085016115d8565b600080600080600060a0868803121561166857600080fd5b611671866113a8565b945061167f602087016113a8565b9350604086013567ffffffffffffffff8082111561169c57600080fd5b6116a889838a0161156d565b945060608801359150808211156116be57600080fd5b6116ca89838a0161156d565b935060808801359150808211156116e057600080fd5b506116ed88828901611630565b9150509295509295909350565b6000806040838503121561170d57600080fd5b823567ffffffffffffffff8082111561172557600080fd5b818501915085601f83011261173957600080fd5b8135602061174961158e83611549565b82815260059290921b8401810191818101908984111561176857600080fd5b948201945b8386101561178d5761177e866113a8565b8252948201949082019061176d565b965050860135925050808211156117a357600080fd5b506117b08582860161156d565b9150509250929050565b600081518084526020808501945080840160005b838110156117ea578151875295820195908201906001016117ce565b509495945050505050565b6020815260006113a160208301846117ba565b60006020828403121561181a57600080fd5b813567ffffffffffffffff81111561183157600080fd5b8201601f8101841361184257600080fd5b610c5c848235602084016115d8565b60008060006040848603121561186657600080fd5b83359250602084013567ffffffffffffffff8082111561188557600080fd5b818601915086601f83011261189957600080fd5b8135818111156118a857600080fd5b8760208260051b85010111156118bd57600080fd5b6020830194508093505050509250925092565b600080604083850312156118e357600080fd5b823591506118f3602084016113a8565b90509250929050565b6000806040838503121561190f57600080fd5b611918836113a8565b91506020830135801515811461145957600080fd5b6000806040838503121561194057600080fd5b611949836113a8565b91506118f3602084016113a8565b600080600080600060a0868803121561196f57600080fd5b611978866113a8565b9450611986602087016113a8565b93506040860135925060608601359150608086013567ffffffffffffffff8111156119b057600080fd5b6116ed88828901611630565b6000602082840312156119ce57600080fd5b6113a1826113a8565b600181811c908216806119eb57607f821691505b602082108103611a0b57634e487b7160e01b600052602260045260246000fd5b50919050565b6000808454611a1f816119d7565b60018281168015611a375760018114611a4c57611a7b565b60ff1984168752821515830287019450611a7b565b8860005260208060002060005b85811015611a725781548a820152908401908201611a59565b50505082870194505b505050508351611a8f81836020880161147d565b64173539b7b760d91b9101908152600501949350505050565b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176103e7576103e7611aa8565b634e487b7160e01b600052601260045260246000fd5b600082611afa57611afa611ad5565b500490565b634e487b7160e01b600052603260045260246000fd5b600060018201611b2757611b27611aa8565b5060010190565b601f821115611b7457600081815260208120601f850160051c81016020861015611b555750805b601f850160051c820191505b8181101561061957828155600101611b61565b505050565b815167ffffffffffffffff811115611b9357611b93611502565b611ba781611ba184546119d7565b84611b2e565b602080601f831160018114611bdc5760008415611bc45750858301515b600019600386901b1c1916600185901b178555610619565b600085815260208120601f198616915b82811015611c0b57888601518255948401946001909101908401611bec565b5085821015611c295787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b818103818111156103e7576103e7611aa8565b600082611c5b57611c5b611ad5565b500690565b808201808211156103e7576103e7611aa8565b604081526000611c8660408301856117ba565b8281036020840152611c9881856117ba565b95945050505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a060808201819052600090611cdb908301846114a1565b979650505050505050565b600060208284031215611cf857600080fd5b81516113a1816113ee565b6001600160a01b0386811682528516602082015260a060408201819052600090611d2f908301866117ba565b8281036060840152611d4181866117ba565b90508281036080840152611d5581856114a1565b9897505050505050505056fea2646970667358221220b55523b84826b9480fdc169256cb07be6b90f99f716096de28b7c4dff712f19064736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x327 JUMPI DUP1 PUSH4 0xD8B2EB99 EQ PUSH2 0x33A JUMPI DUP1 PUSH4 0xE7DEE99F EQ PUSH2 0x35A JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x38C JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x39F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0x71C5ECB1 EQ PUSH2 0x295 JUMPI DUP1 PUSH4 0x765B1845 EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0x873F6F9E EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2F6 JUMPI DUP1 PUSH4 0x9354F175 EQ PUSH2 0x307 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2A55205A GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x2A55205A EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x4C00DE82 EQ PUSH2 0x227 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0x55F804B3 EQ PUSH2 0x272 JUMPI DUP1 PUSH4 0x6C0360EB EQ PUSH2 0x285 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x2FA7C47 EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x1AF JUMPI DUP1 PUSH4 0x18712C21 EQ PUSH2 0x1CF JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x164 PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0x13C4 JUMP JUMPDEST PUSH2 0x3C5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18A PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0x1404 JUMP JUMPDEST PUSH2 0x3ED JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16E JUMP JUMPDEST PUSH2 0x1AD PUSH2 0x1A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1421 JUMP JUMPDEST PUSH2 0x43D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C2 PUSH2 0x1BD CALLDATASIZE PUSH1 0x4 PUSH2 0x1464 JUMP JUMPDEST PUSH2 0x49E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16E SWAP2 SWAP1 PUSH2 0x14CD JUMP JUMPDEST PUSH2 0x1AD PUSH2 0x1DD CALLDATASIZE PUSH1 0x4 PUSH2 0x14E0 JUMP JUMPDEST PUSH2 0x4D2 JUMP JUMPDEST PUSH2 0x1F5 PUSH2 0x1F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x14E0 JUMP JUMPDEST PUSH2 0x574 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x16E JUMP JUMPDEST PUSH2 0x1AD PUSH2 0x222 CALLDATASIZE PUSH1 0x4 PUSH2 0x1650 JUMP JUMPDEST PUSH2 0x5BA JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x23A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16E JUMP JUMPDEST PUSH2 0x265 PUSH2 0x260 CALLDATASIZE PUSH1 0x4 PUSH2 0x16FA JUMP JUMPDEST PUSH2 0x621 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16E SWAP2 SWAP1 PUSH2 0x17F5 JUMP JUMPDEST PUSH2 0x1AD PUSH2 0x280 CALLDATASIZE PUSH1 0x4 PUSH2 0x1808 JUMP JUMPDEST PUSH2 0x6F6 JUMP JUMPDEST PUSH2 0x1C2 PUSH2 0x745 JUMP JUMPDEST PUSH2 0x1AD PUSH2 0x7D3 JUMP JUMPDEST PUSH2 0x164 PUSH2 0x2A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1464 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1AD PUSH2 0x2C3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1851 JUMP JUMPDEST PUSH2 0x7E7 JUMP JUMPDEST PUSH2 0x18A PUSH2 0x2D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x18D0 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x23A JUMP JUMPDEST PUSH2 0x164 PUSH2 0x315 CALLDATASIZE PUSH1 0x4 PUSH2 0x1464 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1AD PUSH2 0x335 CALLDATASIZE PUSH1 0x4 PUSH2 0x18FC JUMP JUMPDEST PUSH2 0xA54 JUMP JUMPDEST PUSH2 0x164 PUSH2 0x348 CALLDATASIZE PUSH1 0x4 PUSH2 0x1464 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x374 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16E JUMP JUMPDEST PUSH2 0x18A PUSH2 0x39A CALLDATASIZE PUSH1 0x4 PUSH2 0x192D JUMP JUMPDEST PUSH2 0xA63 JUMP JUMPDEST PUSH2 0x1AD PUSH2 0x3AD CALLDATASIZE PUSH1 0x4 PUSH2 0x1957 JUMP JUMPDEST PUSH2 0xA91 JUMP JUMPDEST PUSH2 0x1AD PUSH2 0x3C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x19BC JUMP JUMPDEST PUSH2 0xAF0 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x41E JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x3E7 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x3E7 JUMP JUMPDEST PUSH2 0x445 PUSH2 0xB2E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP4 AND SWAP1 DUP2 MUL DUP3 OR PUSH1 0x9 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xAE1D656A1268648B04FFA79C1416F05879338AE295AAE3234D8DB217356A1C62 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 PUSH2 0x4AB DUP4 PUSH2 0xB5B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x4BC SWAP3 SWAP2 SWAP1 PUSH2 0x1A11 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4DA PUSH2 0xB2E JUMP JUMPDEST PUSH1 0x1 DUP3 LT ISZERO DUP1 ISZERO PUSH2 0x4EC JUMPI POP PUSH1 0x5 DUP3 GT ISZERO JUMPDEST PUSH2 0x52F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x125B9D985B1A59081D1BDAD95B9259 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP3 SWAP1 SSTORE MLOAD DUP3 SWAP1 PUSH32 0x9FF79792A92B66FEE090ACB66E07837A2EDB31EE6B9780FA551FD04B79DFFCD2 SWAP1 PUSH2 0x492 SWAP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 PUSH2 0x2710 SWAP1 PUSH2 0x5A5 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND DUP7 PUSH2 0x1ABE JUMP JUMPDEST PUSH2 0x5AF SWAP2 SWAP1 PUSH2 0x1AEB JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0x5DB JUMPI POP PUSH2 0x5D9 DUP7 DUP3 PUSH2 0xA63 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x60C JUMPI PUSH1 0x40 MLOAD PUSH4 0x711BEC91 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x4 DUP4 ADD MSTORE DUP8 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x526 JUMP JUMPDEST PUSH2 0x619 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0xC64 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x652 JUMPI DUP2 MLOAD DUP4 MLOAD PUSH1 0x40 MLOAD PUSH4 0x5B059991 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x526 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x66E JUMPI PUSH2 0x66E PUSH2 0x1502 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x697 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x6EE JUMPI PUSH1 0x20 DUP1 DUP3 MUL DUP7 ADD ADD MLOAD PUSH2 0x6C1 SWAP1 PUSH1 0x20 DUP1 DUP5 MUL DUP8 ADD ADD MLOAD PUSH2 0x3C5 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x6D3 JUMPI PUSH2 0x6D3 PUSH2 0x1AFF JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x6E7 DUP2 PUSH2 0x1B15 JUMP JUMPDEST SWAP1 POP PUSH2 0x69D JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x6FE PUSH2 0xB2E JUMP JUMPDEST PUSH1 0x4 PUSH2 0x70A DUP3 DUP3 PUSH2 0x1B79 JUMP JUMPDEST POP PUSH32 0x6741B2FC379FAD678116FE3D4D4B9A1A184AB53BA36B86AD0FA66340B1AB41AD DUP2 PUSH1 0x40 MLOAD PUSH2 0x73A SWAP2 SWAP1 PUSH2 0x14CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH2 0x752 SWAP1 PUSH2 0x19D7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x77E SWAP1 PUSH2 0x19D7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7CB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7A0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7CB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7AE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH2 0x7DB PUSH2 0xB2E JUMP JUMPDEST PUSH2 0x7E5 PUSH1 0x0 PUSH2 0xCCB JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 DUP4 LT ISZERO DUP1 ISZERO PUSH2 0x7F9 JUMPI POP PUSH1 0x5 DUP4 GT ISZERO JUMPDEST PUSH2 0x837 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x125B9D985B1A59081D1BDAD95B9259 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x526 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x893 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x105B1C9958591E4818DB185A5B5959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x526 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x906 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x7 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD LT PUSH2 0x906 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14DD5C1C1B1E481B1A5B5A5D081C995858DA1959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x526 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT CALLER PUSH1 0x60 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x34 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x98A DUP4 DUP4 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP DUP10 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP3 POP DUP6 SWAP2 POP PUSH2 0xD1D SWAP1 POP JUMP JUMPDEST PUSH2 0x9C6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x24B73B30B634B210383937B7B3 PUSH1 0x99 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x526 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP7 DUP4 MSTORE PUSH1 0x7 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0xA00 DUP4 PUSH2 0x1B15 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0xA21 CALLER DUP6 PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xD33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 SWAP1 CALLER SWAP1 PUSH32 0xB792983F4BE9CD6A6722F6CF3C136D8CF44F77C5CF7CB263F75F36B04806A01B SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH2 0xA5F CALLER DUP4 DUP4 PUSH2 0xD90 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0xAB2 JUMPI POP PUSH2 0xAB0 DUP7 DUP3 PUSH2 0xA63 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xAE3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x711BEC91 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x4 DUP4 ADD MSTORE DUP8 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x526 JUMP JUMPDEST PUSH2 0x619 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0xE26 JUMP JUMPDEST PUSH2 0xAF8 PUSH2 0xB2E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB22 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x526 JUMP JUMPDEST PUSH2 0xB2B DUP2 PUSH2 0xCCB JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7E5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x526 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 SUB PUSH2 0xB82 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0xBAC JUMPI DUP1 PUSH2 0xB96 DUP2 PUSH2 0x1B15 JUMP JUMPDEST SWAP2 POP PUSH2 0xBA5 SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x1AEB JUMP JUMPDEST SWAP2 POP PUSH2 0xB86 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBC7 JUMPI PUSH2 0xBC7 PUSH2 0x1502 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xBF1 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0xC5C JUMPI PUSH2 0xC06 PUSH1 0x1 DUP4 PUSH2 0x1C39 JUMP JUMPDEST SWAP2 POP PUSH2 0xC13 PUSH1 0xA DUP7 PUSH2 0x1C4C JUMP JUMPDEST PUSH2 0xC1E SWAP1 PUSH1 0x30 PUSH2 0x1C60 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xC33 JUMPI PUSH2 0xC33 PUSH2 0x1AFF JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0xC55 PUSH1 0xA DUP7 PUSH2 0x1AEB JUMP JUMPDEST SWAP5 POP PUSH2 0xBF5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xC8E JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x526 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0xCB7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x6A0D45 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x526 JUMP JUMPDEST PUSH2 0xCC4 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xEB4 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xD2A DUP6 DUP5 PUSH2 0xF07 JUMP JUMPDEST EQ SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xD5D JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x526 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP7 SWAP1 MSTORE DUP2 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x60 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH2 0x619 PUSH1 0x0 DUP8 DUP5 DUP5 DUP8 PUSH2 0xEB4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xDB9 JUMPI PUSH1 0x40 MLOAD PUSH3 0xCED3E1 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x526 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xE50 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x526 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0xE79 JUMPI PUSH1 0x40 MLOAD PUSH3 0x6A0D45 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x526 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP7 SWAP1 MSTORE DUP2 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x60 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH2 0xEAB DUP8 DUP8 DUP5 DUP5 DUP8 PUSH2 0xEB4 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xEC0 DUP6 DUP6 DUP6 DUP6 PUSH2 0xF4C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO PUSH2 0xCC4 JUMPI DUP3 MLOAD CALLER SWAP1 PUSH1 0x1 SUB PUSH2 0xEF9 JUMPI PUSH1 0x20 DUP5 DUP2 ADD MLOAD SWAP1 DUP5 ADD MLOAD PUSH2 0xEF2 DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0x1169 JUMP JUMPDEST POP POP PUSH2 0x619 JUMP JUMPDEST PUSH2 0x619 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x128D JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x6EE JUMPI PUSH2 0xF38 DUP3 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xF2B JUMPI PUSH2 0xF2B PUSH2 0x1AFF JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1376 JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0xF44 DUP2 PUSH2 0x1B15 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xF0C JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0xF7B JUMPI DUP2 MLOAD DUP2 MLOAD PUSH1 0x40 MLOAD PUSH4 0x5B059991 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x526 JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x108A JUMPI PUSH1 0x20 DUP2 DUP2 MUL DUP6 DUP2 ADD DUP3 ADD MLOAD SWAP1 DUP6 ADD SWAP1 SWAP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND ISZERO PUSH2 0x1032 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x100B JUMPI PUSH1 0x40 MLOAD PUSH4 0x3DEE4C5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x84 ADD PUSH2 0x526 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND ISZERO PUSH2 0x1077 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1071 SWAP1 DUP5 SWAP1 PUSH2 0x1C60 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST POP POP DUP1 PUSH2 0x1083 SWAP1 PUSH2 0x1B15 JUMP JUMPDEST SWAP1 POP PUSH2 0xF7F JUMP JUMPDEST POP DUP3 MLOAD PUSH1 0x1 SUB PUSH2 0x110B JUMPI PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x0 SWAP1 PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP2 POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x10FC SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH2 0xCC4 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x115A SWAP3 SWAP2 SWAP1 PUSH2 0x1C73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x619 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0x11AD SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1CA1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x11E8 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x11E5 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1CE6 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1251 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x1216 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x121B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x1249 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x526 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0xEAB JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x526 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x619 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x12D1 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1D03 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x130C JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1309 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1CE6 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x133A JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x1216 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x121B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0xEAB JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x526 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x1392 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP5 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x13A1 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP4 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x13BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13E0 DUP4 PUSH2 0x13A8 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xB2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1416 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x13A1 DUP2 PUSH2 0x13EE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1434 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x143D DUP4 PUSH2 0x13A8 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1459 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1476 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1498 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1480 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x14B9 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x147D JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x13A1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x14A1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1541 JUMPI PUSH2 0x1541 PUSH2 0x1502 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1563 JUMPI PUSH2 0x1563 PUSH2 0x1502 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x157E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x1593 PUSH2 0x158E DUP4 PUSH2 0x1549 JUMP JUMPDEST PUSH2 0x1518 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x15B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x15CD JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x15B6 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH2 0x15F2 JUMPI PUSH2 0x15F2 PUSH2 0x1502 JUMP JUMPDEST PUSH2 0x1605 PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x1518 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE DUP4 DUP4 DUP4 ADD GT ISZERO PUSH2 0x1619 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP3 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1641 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13A1 DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x15D8 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1668 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1671 DUP7 PUSH2 0x13A8 JUMP JUMPDEST SWAP5 POP PUSH2 0x167F PUSH1 0x20 DUP8 ADD PUSH2 0x13A8 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x169C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16A8 DUP10 DUP4 DUP11 ADD PUSH2 0x156D JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x16BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16CA DUP10 DUP4 DUP11 ADD PUSH2 0x156D JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x16E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16ED DUP9 DUP3 DUP10 ADD PUSH2 0x1630 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x170D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1725 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1739 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x1749 PUSH2 0x158E DUP4 PUSH2 0x1549 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP10 DUP5 GT ISZERO PUSH2 0x1768 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x178D JUMPI PUSH2 0x177E DUP7 PUSH2 0x13A8 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x176D JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x17A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17B0 DUP6 DUP3 DUP7 ADD PUSH2 0x156D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x17EA JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x17CE JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x13A1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x17BA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x181A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1831 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x1842 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC5C DUP5 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x15D8 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1866 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1885 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1899 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x18A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x18BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP5 POP DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x18F3 PUSH1 0x20 DUP5 ADD PUSH2 0x13A8 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x190F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1918 DUP4 PUSH2 0x13A8 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1459 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1940 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1949 DUP4 PUSH2 0x13A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x18F3 PUSH1 0x20 DUP5 ADD PUSH2 0x13A8 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x196F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1978 DUP7 PUSH2 0x13A8 JUMP JUMPDEST SWAP5 POP PUSH2 0x1986 PUSH1 0x20 DUP8 ADD PUSH2 0x13A8 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16ED DUP9 DUP3 DUP10 ADD PUSH2 0x1630 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13A1 DUP3 PUSH2 0x13A8 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x19EB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1A0B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 SLOAD PUSH2 0x1A1F DUP2 PUSH2 0x19D7 JUMP JUMPDEST PUSH1 0x1 DUP3 DUP2 AND DUP1 ISZERO PUSH2 0x1A37 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x1A4C JUMPI PUSH2 0x1A7B JUMP JUMPDEST PUSH1 0xFF NOT DUP5 AND DUP8 MSTORE DUP3 ISZERO ISZERO DUP4 MUL DUP8 ADD SWAP5 POP PUSH2 0x1A7B JUMP JUMPDEST DUP9 PUSH1 0x0 MSTORE PUSH1 0x20 DUP1 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1A72 JUMPI DUP2 SLOAD DUP11 DUP3 ADD MSTORE SWAP1 DUP5 ADD SWAP1 DUP3 ADD PUSH2 0x1A59 JUMP JUMPDEST POP POP POP DUP3 DUP8 ADD SWAP5 POP JUMPDEST POP POP POP POP DUP4 MLOAD PUSH2 0x1A8F DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x147D JUMP JUMPDEST PUSH5 0x173539B7B7 PUSH1 0xD9 SHL SWAP2 ADD SWAP1 DUP2 MSTORE PUSH1 0x5 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x3E7 JUMPI PUSH2 0x3E7 PUSH2 0x1AA8 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1AFA JUMPI PUSH2 0x1AFA PUSH2 0x1AD5 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1B27 JUMPI PUSH2 0x1B27 PUSH2 0x1AA8 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1B74 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x1B55 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x619 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1B61 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B93 JUMPI PUSH2 0x1B93 PUSH2 0x1502 JUMP JUMPDEST PUSH2 0x1BA7 DUP2 PUSH2 0x1BA1 DUP5 SLOAD PUSH2 0x19D7 JUMP JUMPDEST DUP5 PUSH2 0x1B2E JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1BDC JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x1BC4 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x619 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1C0B JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x1BEC JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x1C29 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x3E7 JUMPI PUSH2 0x3E7 PUSH2 0x1AA8 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1C5B JUMPI PUSH2 0x1C5B PUSH2 0x1AD5 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x3E7 JUMPI PUSH2 0x3E7 PUSH2 0x1AA8 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1C86 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x17BA JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1C98 DUP2 DUP6 PUSH2 0x17BA JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1CDB SWAP1 DUP4 ADD DUP5 PUSH2 0x14A1 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x13A1 DUP2 PUSH2 0x13EE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1D2F SWAP1 DUP4 ADD DUP7 PUSH2 0x17BA JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1D41 DUP2 DUP7 PUSH2 0x17BA JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x1D55 DUP2 DUP6 PUSH2 0x14A1 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB5 SSTORE 0x23 0xB8 BASEFEE 0x26 0xB9 BASEFEE 0xF 0xDC AND SWAP3 JUMP 0xCB SMOD 0xBE PUSH12 0x90F99F716096DE28B7C4DFF7 SLT CALL SWAP1 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"239:2991:28:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2187:132:5;;;;;;:::i;:::-;;:::i;:::-;;;597:25:32;;;585:2;570:18;2187:132:5;;;;;;;;1345:305;;;;;;:::i;:::-;;:::i;:::-;;;1184:14:32;;1177:22;1159:41;;1147:2;1132:18;1345:305:5;1019:187:32;2629::28;;;;;;:::i;:::-;;:::i;:::-;;1940:149;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2283:212::-;;;;;;:::i;:::-;;:::i;2094:184::-;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;3221:32:32;;;3203:51;;3285:2;3270:18;;3263:34;;;;3176:18;2094:184:28;3029:274:32;3820:429:5;;;;;;:::i;:::-;;:::i;541:31:28:-;;;;;-1:-1:-1;;;;;541:31:28;;;;;;-1:-1:-1;;;;;6323:32:32;;;6305:51;;6293:2;6278:18;541:31:28;6159:203:32;2476:552:5;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2500:124:28:-;;;;;;:::i;:::-;;:::i;288:21::-;;;:::i;2293:101:0:-;;;:::i;315:46:28:-;;;;;;:::i;:::-;;;;;;;;;;;;;;1264:671;;;;;;:::i;:::-;;:::i;367:62::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;1638:85:0;1710:6;;-1:-1:-1;;;;;1710:6:0;1638:85;;488:47:28;;;;;;:::i;:::-;;;;;;;;;;;;;;3063:144:5;;;;;;:::i;:::-;;:::i;435:47:28:-;;;;;;:::i;:::-;;;;;;;;;;;;;;578:29;;;;;-1:-1:-1;;;578:29:28;;-1:-1:-1;;;;;578:29:28;;;;;;-1:-1:-1;;;;;10322:39:32;;;10304:58;;10292:2;10277:18;578:29:28;10160:208:32;3242:157:5;;;;;;:::i;:::-;;:::i;3434:351::-;;;;;;:::i;:::-;;:::i;2543:215:0:-;;;;;;:::i;:::-;;:::i;2187:132:5:-;2264:7;2290:13;;;;;;;;;;;-1:-1:-1;;;;;2290:22:5;;;;;;;;;;2187:132;;;;;:::o;1345:305::-;1447:4;-1:-1:-1;;;;;;1482:41:5;;-1:-1:-1;;;1482:41:5;;:109;;-1:-1:-1;;;;;;;1539:52:5;;-1:-1:-1;;;1539:52:5;1482:109;:161;;;-1:-1:-1;;;;;;;;;;829:40:23;;;1607:36:5;730:146:23;2629:187:28;1531:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;2709:28:28;::::1;-1:-1:-1::0;;;;;;;;2739:27:28;::::1;::::0;;::::1;::::0;::::1;2709:16;2739:27:::0;2773:40:::1;::::0;10304:58:32;;;2773:40:28::1;::::0;10292:2:32;10277:18;2773:40:28::1;;;;;;;;2629:187:::0;;:::o;1940:149::-;2000:13;2048:7;2057:18;2067:7;2057:9;:18::i;:::-;2031:54;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2017:69;;1940:149;;;:::o;2283:212::-;1531:13:0;:11;:13::i;:::-;2379:1:28::1;2368:7;:12;;:28;;;;;2395:1;2384:7;:12;;2368:28;2360:56;;;::::0;-1:-1:-1;;;2360:56:28;;13345:2:32;2360:56:28::1;::::0;::::1;13327:21:32::0;13384:2;13364:18;;;13357:30;-1:-1:-1;;;13403:18:32;;;13396:45;13458:18;;2360:56:28::1;;;;;;;;;2418:20;::::0;;;:11:::1;:20;::::0;;;;;;:31;;;2456:36;2430:7;;2456:36:::1;::::0;::::1;::::0;2441:8;597:25:32;;585:2;570:18;;451:177;2094:184:28;2218:16;;2167;;;;-1:-1:-1;;;;;2218:16:28;;;2269:5;;2237:28;;-1:-1:-1;;;2250:15:28;;-1:-1:-1;;;;;2250:15:28;2237:10;:28;:::i;:::-;2236:38;;;;:::i;:::-;2210:65;;;;2094:184;;;;;:::o;3820:429:5:-;735:10:16;-1:-1:-1;;;;;4057:14:5;;;;;;;:49;;;4076:30;4093:4;4099:6;4076:16;:30::i;:::-;4075:31;4057:49;4053:129;;;4129:42;;-1:-1:-1;;;4129:42:5;;-1:-1:-1;;;;;14279:15:32;;;4129:42:5;;;14261:34:32;14331:15;;14311:18;;;14304:43;14196:18;;4129:42:5;14049:304:32;4053:129:5;4191:51;4214:4;4220:2;4224:3;4229:6;4237:4;4191:22;:51::i;:::-;4004:245;3820:429;;;;;:::o;2476:552::-;2600:16;2651:3;:10;2632:8;:15;:29;2628:121;;2710:10;;2722:15;;2684:54;;-1:-1:-1;;;2684:54:5;;;;;14532:25:32;;;;14573:18;;;14566:34;14505:18;;2684:54:5;14358:248:32;2628:121:5;2759:30;2806:8;:15;2792:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2792:30:5;;2759:63;;2838:9;2833:158;2857:8;:15;2853:1;:19;2833:158;;;17259:4:14;17250:14;;;17230:35;;;17224:42;2912:68:5;;17259:4:14;17250:14;;;17230:35;;;17224:42;2187:132:5;:::i;2912:68::-;2893:13;2907:1;2893:16;;;;;;;;:::i;:::-;;;;;;;;;;:87;2874:3;;;:::i;:::-;;;2833:158;;;-1:-1:-1;3008:13:5;2476:552;-1:-1:-1;;;2476:552:5:o;2500:124:28:-;1531:13:0;:11;:13::i;:::-;2566:7:28::1;:21;2576:11:::0;2566:7;:21:::1;:::i;:::-;;2594:27;2609:11;2594:27;;;;;;:::i;:::-;;;;;;;;2500:124:::0;:::o;288:21::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1264:671:28:-;1369:1;1358:7;:12;;:28;;;;;1385:1;1374:7;:12;;1358:28;1350:56;;;;-1:-1:-1;;;1350:56:28;;13345:2:32;1350:56:28;;;13327:21:32;13384:2;13364:18;;;13357:30;-1:-1:-1;;;13403:18:32;;;13396:45;13458:18;;1350:56:28;13143:339:32;1350:56:28;1425:19;;;;:10;:19;;;;;;;;1445:10;1425:31;;;;;;;;;;1424:32;1416:60;;;;-1:-1:-1;;;1416:60:28;;17163:2:32;1416:60:28;;;17145:21:32;17202:2;17182:18;;;17175:30;-1:-1:-1;;;17221:18:32;;;17214:45;17276:18;;1416:60:28;16961:339:32;1416:60:28;1514:1;1490:21;;;:12;:21;;;;;;:25;1486:114;;1551:21;;;;:12;:21;;;;;;;;;1527:12;:21;;;;;;;:45;1519:78;;;;-1:-1:-1;;;1519:78:28;;17507:2:32;1519:78:28;;;17489:21:32;17546:2;17526:18;;;17519:30;-1:-1:-1;;;17565:18:32;;;17558:50;17625:18;;1519:78:28;17305:344:32;1519:78:28;1634:28;;-1:-1:-1;;1651:10:28;17803:2:32;17799:15;17795:53;1634:28:28;;;17783:66:32;1609:12:28;;17865::32;;1634:28:28;;;;;;;;;;;;1624:39;;;;;;1609:54;;1681:59;1700:11;;1681:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1713:20:28;;;:11;:20;;;;;;;-1:-1:-1;1735:4:28;;-1:-1:-1;1681:18:28;;-1:-1:-1;1681:59:28:i;:::-;1673:85;;;;-1:-1:-1;;;1673:85:28;;18090:2:32;1673:85:28;;;18072:21:32;18129:2;18109:18;;;18102:30;-1:-1:-1;;;18148:18:32;;;18141:43;18201:18;;1673:85:28;17888:337:32;1673:85:28;1768:19;;;;:10;:19;;;;;;;;1788:10;1768:31;;;;;;;:38;;-1:-1:-1;;1768:38:28;1802:4;1768:38;;;1816:21;;;:12;:21;;;;;:23;;;;;;:::i;:::-;;;;;;1849:33;1855:10;1867:7;1876:1;1849:33;;;;;;;;;;;;:5;:33::i;:::-;1897:31;;1920:7;;1908:10;;1897:31;;;;;1340:595;1264:671;;;:::o;3063:144:5:-;3148:52;735:10:16;3181:8:5;3191;3148:18;:52::i;:::-;3063:144;;:::o;3242:157::-;-1:-1:-1;;;;;3355:27:5;;;3332:4;3355:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;3242:157::o;3434:351::-;735:10:16;-1:-1:-1;;;;;3600:14:5;;;;;;;:49;;;3619:30;3636:4;3642:6;3619:16;:30::i;:::-;3618:31;3600:49;3596:129;;;3672:42;;-1:-1:-1;;;3672:42:5;;-1:-1:-1;;;;;14279:15:32;;;3672:42:5;;;14261:34:32;14331:15;;14311:18;;;14304:43;14196:18;;3672:42:5;14049:304:32;3596:129:5;3734:44;3752:4;3758:2;3762;3766:5;3773:4;3734:17;:44::i;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;6305:51:32::0;6278:18;;2672:31:0::1;6159:203:32::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1710:6;;-1:-1:-1;;;;;1710:6:0;735:10:16;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:16;1901:40:0;;;6305:51:32;6278:18;;1901:40:0;6159:203:32;2821:407:28;2877:13;2906:5;2915:1;2906:10;2902:26;;-1:-1:-1;;2918:10:28;;;;;;;;;;;;-1:-1:-1;;;2918:10:28;;;;;2821:407::o;2902:26::-;2953:5;2938:12;2984:43;2991:9;;2984:43;;3004:8;;;;:::i;:::-;;-1:-1:-1;3014:10:28;;-1:-1:-1;3022:2:28;3014:10;;:::i;:::-;;;2984:43;;;3036:19;3068:6;3058:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3058:17:28;;3036:39;;3085:106;3092:10;;3085:106;;3106:11;3116:1;3106:11;;:::i;:::-;;-1:-1:-1;3162:10:28;3170:2;3162:5;:10;:::i;:::-;3149:24;;:2;:24;:::i;:::-;3136:39;;3119:6;3126;3119:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;3119:56:28;;;;;;;;-1:-1:-1;3177:11:28;3186:2;3177:11;;:::i;:::-;;;3085:106;;;3214:6;2821:407;-1:-1:-1;;;;2821:407:28:o;8831:445:5:-;-1:-1:-1;;;;;9024:16:5;;9020:88;;9063:34;;-1:-1:-1;;;9063:34:5;;9094:1;9063:34;;;6305:51:32;6278:18;;9063:34:5;6159:203:32;9020:88:5;-1:-1:-1;;;;;9121:18:5;;9117:88;;9162:32;;-1:-1:-1;;;9162:32:5;;9191:1;9162:32;;;6305:51:32;6278:18;;9162:32:5;6159:203:32;9117:88:5;9214:55;9241:4;9247:2;9251:3;9256:6;9264:4;9214:26;:55::i;:::-;8831:445;;;;;:::o;2912:187:0:-;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;1902:154:22:-;1993:4;2045;2016:25;2029:5;2036:4;2016:12;:25::i;:::-;:33;;1902:154;-1:-1:-1;;;;1902:154:22:o;10562:346:5:-;-1:-1:-1;;;;;10658:16:5;;10654:88;;10697:34;;-1:-1:-1;;;10697:34:5;;10728:1;10697:34;;;6305:51:32;6278:18;;10697:34:5;6159:203:32;10654:88:5;13782:4;13776:11;;13852:1;13837:17;;;13983:4;13971:17;;13964:35;;;14100:17;;;14130;;;13623:23;14167:17;;14160:35;;;14303:17;;;14290:31;;;13776:11;10840:61;-1:-1:-1;10879:2:5;13776:11;14100:17;10896:4;10840:26;:61::i;13084:315::-;-1:-1:-1;;;;;13191:22:5;;13187:94;;13236:34;;-1:-1:-1;;;13236:34:5;;13267:1;13236:34;;;6305:51:32;6278:18;;13236:34:5;6159:203:32;13187:94:5;-1:-1:-1;;;;;13290:25:5;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;13290:46:5;;;;;;;;;;13351:41;;1159::32;;;13351::5;;1132:18:32;13351:41:5;;;;;;;13084:315;;;:::o;7967:463::-;-1:-1:-1;;;;;8089:16:5;;8085:88;;8128:34;;-1:-1:-1;;;8128:34:5;;8159:1;8128:34;;;6305:51:32;6278:18;;8128:34:5;6159:203:32;8085:88:5;-1:-1:-1;;;;;8186:18:5;;8182:88;;8227:32;;-1:-1:-1;;;8227:32:5;;8256:1;8227:32;;;6305:51:32;6278:18;;8227:32:5;6159:203:32;8182:88:5;13782:4;13776:11;;13852:1;13837:17;;;13983:4;13971:17;;13964:35;;;14100:17;;;14130;;;13623:23;14167:17;;14160:35;;;14303:17;;;14290:31;;;13776:11;8368:55;8395:4;8401:2;13776:11;14100:17;8418:4;8368:26;:55::i;:::-;8075:355;;7967:463;;;;;:::o;6810:700::-;7011:30;7019:4;7025:2;7029:3;7034:6;7011:7;:30::i;:::-;-1:-1:-1;;;;;7055:16:5;;;7051:453;;7136:10;;735::16;;7150:1:5;7136:15;7132:362;;17259:4:14;17230:35;;;17224:42;17230:35;;;17224:42;7289:72:5;7325:8;7335:4;7341:2;17224:42:14;;7356:4:5;7289:35;:72::i;:::-;7153:223;;7132:362;;;7400:79;7441:8;7451:4;7457:2;7461:3;7466:6;7474:4;7400:40;:79::i;2457:308:22:-;2540:7;2582:4;2540:7;2596:134;2620:5;:12;2616:1;:16;2596:134;;;2668:51;2696:12;2710:5;2716:1;2710:8;;;;;;;;:::i;:::-;;;;;;;2668:27;:51::i;:::-;2653:66;-1:-1:-1;2634:3:22;;;;:::i;:::-;;;;2596:134;;4950:1281:5;5085:6;:13;5071:3;:10;:27;5067:117;;5147:10;;5159:13;;5121:52;;-1:-1:-1;;;5121:52:5;;;;;14532:25:32;;;;14573:18;;;14566:34;14505:18;;5121:52:5;14358:248:32;5067:117:5;735:10:16;5194:16:5;5236:691;5260:3;:10;5256:1;:14;5236:691;;;17259:4:14;17250:14;;;17230:35;;;;;17224:42;17230:35;;;;;;17224:42;-1:-1:-1;;;;;5406:18:5;;;5402:420;;5444:19;5466:13;;;;;;;;;;;-1:-1:-1;;;;;5466:19:5;;;;;;;;;;5507;;;5503:129;;;5557:56;;-1:-1:-1;;;5557:56:5;;-1:-1:-1;;;;;18859:32:32;;5557:56:5;;;18841:51:32;18908:18;;;18901:34;;;18951:18;;;18944:34;;;18994:18;;;18987:34;;;18813:19;;5557:56:5;18610:417:32;5503:129:5;5748:9;:13;;;;;;;;;;;-1:-1:-1;;;;;5748:19:5;;;;;;;;;5770;;;;5748:41;;5402:420;-1:-1:-1;;;;;5840:16:5;;;5836:81;;5876:9;:13;;;;;;;;;;;-1:-1:-1;;;;;5876:17:5;;;;;;;;;:26;;5897:5;;5876:9;:26;;5897:5;;5876:26;:::i;:::-;;;;-1:-1:-1;;5836:81:5;5277:650;;5272:3;;;;:::i;:::-;;;5236:691;;;;5941:3;:10;5955:1;5941:15;5937:288;;17259:4:14;17230:35;;17224:42;5972:10:5;;17259:4:14;17230:35;;17224:42;5972:38:5;;-1:-1:-1;6118:2:5;-1:-1:-1;;;;;6087:45:5;6112:4;-1:-1:-1;;;;;6087:45:5;6102:8;-1:-1:-1;;;;;6087:45:5;;6122:2;6126:5;6087:45;;;;;;14532:25:32;;;14588:2;14573:18;;14566:34;14520:2;14505:18;;14358:248;6087:45:5;;;;;;;;5958:185;;5937:288;;;6198:2;-1:-1:-1;;;;;6168:46:5;6192:4;-1:-1:-1;;;;;6168:46:5;6182:8;-1:-1:-1;;;;;6168:46:5;;6202:3;6207:6;6168:46;;;;;;;:::i;:::-;;;;;;;;5057:1174;4950:1281;;;;:::o;1006:961:9:-;-1:-1:-1;;;;;1205:14:9;;;:18;1201:760;;1243:71;;-1:-1:-1;;;1243:71:9;;-1:-1:-1;;;;;1243:38:9;;;;;:71;;1282:8;;1292:4;;1298:2;;1302:5;;1309:4;;1243:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1243:71:9;;;;;;;;-1:-1:-1;;1243:71:9;;;;;;;;;;;;:::i;:::-;;;1239:712;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1613:6;:13;1630:1;1613:18;1609:328;;1718:41;;-1:-1:-1;;;1718:41:9;;-1:-1:-1;;;;;6323:32:32;;1718:41:9;;;6305:51:32;6278:18;;1718:41:9;6159:203:32;1609:328:9;1889:6;1883:13;1876:4;1868:6;1864:17;1857:40;1239:712;-1:-1:-1;;;;;;1363:55:9;;-1:-1:-1;;;1363:55:9;1359:189;;1488:41;;-1:-1:-1;;;1488:41:9;;-1:-1:-1;;;;;6323:32:32;;1488:41:9;;;6305:51:32;6278:18;;1488:41:9;6159:203:32;2523:1028:9;-1:-1:-1;;;;;2747:14:9;;;:18;2743:802;;2785:78;;-1:-1:-1;;;2785:78:9;;-1:-1:-1;;;;;2785:43:9;;;;;:78;;2829:8;;2839:4;;2845:3;;2850:6;;2858:4;;2785:78;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2785:78:9;;;;;;;;-1:-1:-1;;2785:78:9;;;;;;;;;;;;:::i;:::-;;;2781:754;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2942:60:9;;-1:-1:-1;;;2942:60:9;2938:194;;3072:41;;-1:-1:-1;;;3072:41:9;;-1:-1:-1;;;;;6323:32:32;;3072:41:9;;;6305:51:32;6278:18;;3072:41:9;6159:203:32;504:167:21;579:7;609:1;605;:5;:59;;864:13;928:15;;;963:4;956:15;;;1009:4;993:21;;605:59;;;864:13;928:15;;;963:4;956:15;;;1009:4;993:21;;613:24;598:66;504:167;-1:-1:-1;;;504:167:21:o;14:173:32:-;82:20;;-1:-1:-1;;;;;131:31:32;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:254::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;436:2;421:18;;;;408:32;;-1:-1:-1;;;192:254:32:o;633:131::-;-1:-1:-1;;;;;;707:32:32;;697:43;;687:71;;754:1;751;744:12;769:245;827:6;880:2;868:9;859:7;855:23;851:32;848:52;;;896:1;893;886:12;848:52;935:9;922:23;954:30;978:5;954:30;:::i;1211:366::-;1278:6;1286;1339:2;1327:9;1318:7;1314:23;1310:32;1307:52;;;1355:1;1352;1345:12;1307:52;1378:29;1397:9;1378:29;:::i;:::-;1368:39;;1457:2;1446:9;1442:18;1429:32;-1:-1:-1;;;;;1494:5:32;1490:38;1483:5;1480:49;1470:77;;1543:1;1540;1533:12;1470:77;1566:5;1556:15;;;1211:366;;;;;:::o;1582:180::-;1641:6;1694:2;1682:9;1673:7;1669:23;1665:32;1662:52;;;1710:1;1707;1700:12;1662:52;-1:-1:-1;1733:23:32;;1582:180;-1:-1:-1;1582:180:32:o;1767:250::-;1852:1;1862:113;1876:6;1873:1;1870:13;1862:113;;;1952:11;;;1946:18;1933:11;;;1926:39;1898:2;1891:10;1862:113;;;-1:-1:-1;;2009:1:32;1991:16;;1984:27;1767:250::o;2022:271::-;2064:3;2102:5;2096:12;2129:6;2124:3;2117:19;2145:76;2214:6;2207:4;2202:3;2198:14;2191:4;2184:5;2180:16;2145:76;:::i;:::-;2275:2;2254:15;-1:-1:-1;;2250:29:32;2241:39;;;;2282:4;2237:50;;2022:271;-1:-1:-1;;2022:271:32:o;2298:220::-;2447:2;2436:9;2429:21;2410:4;2467:45;2508:2;2497:9;2493:18;2485:6;2467:45;:::i;2523:248::-;2591:6;2599;2652:2;2640:9;2631:7;2627:23;2623:32;2620:52;;;2668:1;2665;2658:12;2620:52;-1:-1:-1;;2691:23:32;;;2761:2;2746:18;;;2733:32;;-1:-1:-1;2523:248:32:o;3308:127::-;3369:10;3364:3;3360:20;3357:1;3350:31;3400:4;3397:1;3390:15;3424:4;3421:1;3414:15;3440:275;3511:2;3505:9;3576:2;3557:13;;-1:-1:-1;;3553:27:32;3541:40;;3611:18;3596:34;;3632:22;;;3593:62;3590:88;;;3658:18;;:::i;:::-;3694:2;3687:22;3440:275;;-1:-1:-1;3440:275:32:o;3720:183::-;3780:4;3813:18;3805:6;3802:30;3799:56;;;3835:18;;:::i;:::-;-1:-1:-1;3880:1:32;3876:14;3892:4;3872:25;;3720:183::o;3908:662::-;3962:5;4015:3;4008:4;4000:6;3996:17;3992:27;3982:55;;4033:1;4030;4023:12;3982:55;4069:6;4056:20;4095:4;4119:60;4135:43;4175:2;4135:43;:::i;:::-;4119:60;:::i;:::-;4213:15;;;4299:1;4295:10;;;;4283:23;;4279:32;;;4244:12;;;;4323:15;;;4320:35;;;4351:1;4348;4341:12;4320:35;4387:2;4379:6;4375:15;4399:142;4415:6;4410:3;4407:15;4399:142;;;4481:17;;4469:30;;4519:12;;;;4432;;4399:142;;;-1:-1:-1;4559:5:32;3908:662;-1:-1:-1;;;;;;3908:662:32:o;4575:406::-;4639:5;4673:18;4665:6;4662:30;4659:56;;;4695:18;;:::i;:::-;4733:57;4778:2;4757:15;;-1:-1:-1;;4753:29:32;4784:4;4749:40;4733:57;:::i;:::-;4724:66;;4813:6;4806:5;4799:21;4853:3;4844:6;4839:3;4835:16;4832:25;4829:45;;;4870:1;4867;4860:12;4829:45;4919:6;4914:3;4907:4;4900:5;4896:16;4883:43;4973:1;4966:4;4957:6;4950:5;4946:18;4942:29;4935:40;4575:406;;;;;:::o;4986:220::-;5028:5;5081:3;5074:4;5066:6;5062:17;5058:27;5048:55;;5099:1;5096;5089:12;5048:55;5121:79;5196:3;5187:6;5174:20;5167:4;5159:6;5155:17;5121:79;:::i;5211:943::-;5365:6;5373;5381;5389;5397;5450:3;5438:9;5429:7;5425:23;5421:33;5418:53;;;5467:1;5464;5457:12;5418:53;5490:29;5509:9;5490:29;:::i;:::-;5480:39;;5538:38;5572:2;5561:9;5557:18;5538:38;:::i;:::-;5528:48;;5627:2;5616:9;5612:18;5599:32;5650:18;5691:2;5683:6;5680:14;5677:34;;;5707:1;5704;5697:12;5677:34;5730:61;5783:7;5774:6;5763:9;5759:22;5730:61;:::i;:::-;5720:71;;5844:2;5833:9;5829:18;5816:32;5800:48;;5873:2;5863:8;5860:16;5857:36;;;5889:1;5886;5879:12;5857:36;5912:63;5967:7;5956:8;5945:9;5941:24;5912:63;:::i;:::-;5902:73;;6028:3;6017:9;6013:19;6000:33;5984:49;;6058:2;6048:8;6045:16;6042:36;;;6074:1;6071;6064:12;6042:36;;6097:51;6140:7;6129:8;6118:9;6114:24;6097:51;:::i;:::-;6087:61;;;5211:943;;;;;;;;:::o;6367:1146::-;6485:6;6493;6546:2;6534:9;6525:7;6521:23;6517:32;6514:52;;;6562:1;6559;6552:12;6514:52;6602:9;6589:23;6631:18;6672:2;6664:6;6661:14;6658:34;;;6688:1;6685;6678:12;6658:34;6726:6;6715:9;6711:22;6701:32;;6771:7;6764:4;6760:2;6756:13;6752:27;6742:55;;6793:1;6790;6783:12;6742:55;6829:2;6816:16;6851:4;6875:60;6891:43;6931:2;6891:43;:::i;6875:60::-;6969:15;;;7051:1;7047:10;;;;7039:19;;7035:28;;;7000:12;;;;7075:19;;;7072:39;;;7107:1;7104;7097:12;7072:39;7131:11;;;;7151:148;7167:6;7162:3;7159:15;7151:148;;;7233:23;7252:3;7233:23;:::i;:::-;7221:36;;7184:12;;;;7277;;;;7151:148;;;7318:5;-1:-1:-1;;7361:18:32;;7348:32;;-1:-1:-1;;7392:16:32;;;7389:36;;;7421:1;7418;7411:12;7389:36;;7444:63;7499:7;7488:8;7477:9;7473:24;7444:63;:::i;:::-;7434:73;;;6367:1146;;;;;:::o;7518:435::-;7571:3;7609:5;7603:12;7636:6;7631:3;7624:19;7662:4;7691:2;7686:3;7682:12;7675:19;;7728:2;7721:5;7717:14;7749:1;7759:169;7773:6;7770:1;7767:13;7759:169;;;7834:13;;7822:26;;7868:12;;;;7903:15;;;;7795:1;7788:9;7759:169;;;-1:-1:-1;7944:3:32;;7518:435;-1:-1:-1;;;;;7518:435:32:o;7958:261::-;8137:2;8126:9;8119:21;8100:4;8157:56;8209:2;8198:9;8194:18;8186:6;8157:56;:::i;8224:450::-;8293:6;8346:2;8334:9;8325:7;8321:23;8317:32;8314:52;;;8362:1;8359;8352:12;8314:52;8402:9;8389:23;8435:18;8427:6;8424:30;8421:50;;;8467:1;8464;8457:12;8421:50;8490:22;;8543:4;8535:13;;8531:27;-1:-1:-1;8521:55:32;;8572:1;8569;8562:12;8521:55;8595:73;8660:7;8655:2;8642:16;8637:2;8633;8629:11;8595:73;:::i;8861:683::-;8956:6;8964;8972;9025:2;9013:9;9004:7;9000:23;8996:32;8993:52;;;9041:1;9038;9031:12;8993:52;9077:9;9064:23;9054:33;;9138:2;9127:9;9123:18;9110:32;9161:18;9202:2;9194:6;9191:14;9188:34;;;9218:1;9215;9208:12;9188:34;9256:6;9245:9;9241:22;9231:32;;9301:7;9294:4;9290:2;9286:13;9282:27;9272:55;;9323:1;9320;9313:12;9272:55;9363:2;9350:16;9389:2;9381:6;9378:14;9375:34;;;9405:1;9402;9395:12;9375:34;9458:7;9453:2;9443:6;9440:1;9436:14;9432:2;9428:23;9424:32;9421:45;9418:65;;;9479:1;9476;9469:12;9418:65;9510:2;9506;9502:11;9492:21;;9532:6;9522:16;;;;;8861:683;;;;;:::o;9549:254::-;9617:6;9625;9678:2;9666:9;9657:7;9653:23;9649:32;9646:52;;;9694:1;9691;9684:12;9646:52;9730:9;9717:23;9707:33;;9759:38;9793:2;9782:9;9778:18;9759:38;:::i;:::-;9749:48;;9549:254;;;;;:::o;9808:347::-;9873:6;9881;9934:2;9922:9;9913:7;9909:23;9905:32;9902:52;;;9950:1;9947;9940:12;9902:52;9973:29;9992:9;9973:29;:::i;:::-;9963:39;;10052:2;10041:9;10037:18;10024:32;10099:5;10092:13;10085:21;10078:5;10075:32;10065:60;;10121:1;10118;10111:12;10373:260;10441:6;10449;10502:2;10490:9;10481:7;10477:23;10473:32;10470:52;;;10518:1;10515;10508:12;10470:52;10541:29;10560:9;10541:29;:::i;:::-;10531:39;;10589:38;10623:2;10612:9;10608:18;10589:38;:::i;10638:606::-;10742:6;10750;10758;10766;10774;10827:3;10815:9;10806:7;10802:23;10798:33;10795:53;;;10844:1;10841;10834:12;10795:53;10867:29;10886:9;10867:29;:::i;:::-;10857:39;;10915:38;10949:2;10938:9;10934:18;10915:38;:::i;:::-;10905:48;;11000:2;10989:9;10985:18;10972:32;10962:42;;11051:2;11040:9;11036:18;11023:32;11013:42;;11106:3;11095:9;11091:19;11078:33;11134:18;11126:6;11123:30;11120:50;;;11166:1;11163;11156:12;11120:50;11189:49;11230:7;11221:6;11210:9;11206:22;11189:49;:::i;11249:186::-;11308:6;11361:2;11349:9;11340:7;11336:23;11332:32;11329:52;;;11377:1;11374;11367:12;11329:52;11400:29;11419:9;11400:29;:::i;11440:380::-;11519:1;11515:12;;;;11562;;;11583:61;;11637:4;11629:6;11625:17;11615:27;;11583:61;11690:2;11682:6;11679:14;11659:18;11656:38;11653:161;;11736:10;11731:3;11727:20;11724:1;11717:31;11771:4;11768:1;11761:15;11799:4;11796:1;11789:15;11653:161;;11440:380;;;:::o;11951:1187::-;12228:3;12257:1;12290:6;12284:13;12320:36;12346:9;12320:36;:::i;:::-;12375:1;12392:18;;;12419:133;;;;12566:1;12561:356;;;;12385:532;;12419:133;-1:-1:-1;;12452:24:32;;12440:37;;12525:14;;12518:22;12506:35;;12497:45;;;-1:-1:-1;12419:133:32;;12561:356;12592:6;12589:1;12582:17;12622:4;12667:2;12664:1;12654:16;12692:1;12706:165;12720:6;12717:1;12714:13;12706:165;;;12798:14;;12785:11;;;12778:35;12841:16;;;;12735:10;;12706:165;;;12710:3;;;12900:6;12895:3;12891:16;12884:23;;12385:532;;;;;12948:6;12942:13;12964:68;13023:8;13018:3;13011:4;13003:6;12999:17;12964:68;:::i;:::-;-1:-1:-1;;;13054:18:32;;13081:22;;;13130:1;13119:13;;11951:1187;-1:-1:-1;;;;11951:1187:32:o;13487:127::-;13548:10;13543:3;13539:20;13536:1;13529:31;13579:4;13576:1;13569:15;13603:4;13600:1;13593:15;13619:168;13692:9;;;13723;;13740:15;;;13734:22;;13720:37;13710:71;;13761:18;;:::i;13792:127::-;13853:10;13848:3;13844:20;13841:1;13834:31;13884:4;13881:1;13874:15;13908:4;13905:1;13898:15;13924:120;13964:1;13990;13980:35;;13995:18;;:::i;:::-;-1:-1:-1;14029:9:32;;13924:120::o;14611:127::-;14672:10;14667:3;14663:20;14660:1;14653:31;14703:4;14700:1;14693:15;14727:4;14724:1;14717:15;14743:135;14782:3;14803:17;;;14800:43;;14823:18;;:::i;:::-;-1:-1:-1;14870:1:32;14859:13;;14743:135::o;14883:545::-;14985:2;14980:3;14977:11;14974:448;;;15021:1;15046:5;15042:2;15035:17;15091:4;15087:2;15077:19;15161:2;15149:10;15145:19;15142:1;15138:27;15132:4;15128:38;15197:4;15185:10;15182:20;15179:47;;;-1:-1:-1;15220:4:32;15179:47;15275:2;15270:3;15266:12;15263:1;15259:20;15253:4;15249:31;15239:41;;15330:82;15348:2;15341:5;15338:13;15330:82;;;15393:17;;;15374:1;15363:13;15330:82;;14974:448;14883:545;;;:::o;15604:1352::-;15730:3;15724:10;15757:18;15749:6;15746:30;15743:56;;;15779:18;;:::i;:::-;15808:97;15898:6;15858:38;15890:4;15884:11;15858:38;:::i;:::-;15852:4;15808:97;:::i;:::-;15960:4;;16024:2;16013:14;;16041:1;16036:663;;;;16743:1;16760:6;16757:89;;;-1:-1:-1;16812:19:32;;;16806:26;16757:89;-1:-1:-1;;15561:1:32;15557:11;;;15553:24;15549:29;15539:40;15585:1;15581:11;;;15536:57;16859:81;;16006:944;;16036:663;11898:1;11891:14;;;11935:4;11922:18;;-1:-1:-1;;16072:20:32;;;16190:236;16204:7;16201:1;16198:14;16190:236;;;16293:19;;;16287:26;16272:42;;16385:27;;;;16353:1;16341:14;;;;16220:19;;16190:236;;;16194:3;16454:6;16445:7;16442:19;16439:201;;;16515:19;;;16509:26;-1:-1:-1;;16598:1:32;16594:14;;;16610:3;16590:24;16586:37;16582:42;16567:58;16552:74;;16439:201;-1:-1:-1;;;;;16686:1:32;16670:14;;;16666:22;16653:36;;-1:-1:-1;15604:1352:32:o;18230:128::-;18297:9;;;18318:11;;;18315:37;;;18332:18;;:::i;18363:112::-;18395:1;18421;18411:35;;18426:18;;:::i;:::-;-1:-1:-1;18460:9:32;;18363:112::o;18480:125::-;18545:9;;;18566:10;;;18563:36;;;18579:18;;:::i;19032:465::-;19289:2;19278:9;19271:21;19252:4;19315:56;19367:2;19356:9;19352:18;19344:6;19315:56;:::i;:::-;19419:9;19411:6;19407:22;19402:2;19391:9;19387:18;19380:50;19447:44;19484:6;19476;19447:44;:::i;:::-;19439:52;19032:465;-1:-1:-1;;;;;19032:465:32:o;19502:561::-;-1:-1:-1;;;;;19799:15:32;;;19781:34;;19851:15;;19846:2;19831:18;;19824:43;19898:2;19883:18;;19876:34;;;19941:2;19926:18;;19919:34;;;19761:3;19984;19969:19;;19962:32;;;19724:4;;20011:46;;20037:19;;20029:6;20011:46;:::i;:::-;20003:54;19502:561;-1:-1:-1;;;;;;;19502:561:32:o;20068:249::-;20137:6;20190:2;20178:9;20169:7;20165:23;20161:32;20158:52;;;20206:1;20203;20196:12;20158:52;20238:9;20232:16;20257:30;20281:5;20257:30;:::i;20322:827::-;-1:-1:-1;;;;;20719:15:32;;;20701:34;;20771:15;;20766:2;20751:18;;20744:43;20681:3;20818:2;20803:18;;20796:31;;;20644:4;;20850:57;;20887:19;;20879:6;20850:57;:::i;:::-;20955:9;20947:6;20943:22;20938:2;20927:9;20923:18;20916:50;20989:44;21026:6;21018;20989:44;:::i;:::-;20975:58;;21082:9;21074:6;21070:22;21064:3;21053:9;21049:19;21042:51;21110:33;21136:6;21128;21110:33;:::i;:::-;21102:41;20322:827;-1:-1:-1;;;;;;;;20322:827:32:o"},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","baseURI()":"6c0360eb","claimNFT(uint256,bytes32[])":"765b1845","hasClaimed(uint256,address)":"873f6f9e","isApprovedForAll(address,address)":"e985e9c5","merkleRoots(uint256)":"71c5ecb1","mintedCounts(uint256)":"d8b2eb99","owner()":"8da5cb5b","renounceOwnership()":"715018a6","royaltyFraction()":"e7dee99f","royaltyInfo(uint256,uint256)":"2a55205a","royaltyRecipient()":"4c00de82","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","setBaseURI(string)":"55f804b3","setMerkleRoot(uint256,bytes32)":"18712c21","setRoyaltyInfo(address,uint96)":"02fa7c47","supplyLimits(uint256)":"9354f175","supportsInterface(bytes4)":"01ffc9a7","transferOwnership(address)":"f2fde38b","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_initialBaseURI\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_initialOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_royaltyReceiver\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"BaseURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"newRoot\",\"type\":\"bytes32\"}],\"name\":\"MerkleRootUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"NFTClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"fraction\",\"type\":\"uint96\"}],\"name\":\"RoyaltyInfoUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"merkleProof\",\"type\":\"bytes32[]\"}],\"name\":\"claimNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hasClaimed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"merkleRoots\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"mintedCounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"royaltyFraction\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"royaltyRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_newBaseURI\",\"type\":\"string\"}],\"name\":\"setBaseURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_newRoot\",\"type\":\"bytes32\"}],\"name\":\"setMerkleRoot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"_fraction\",\"type\":\"uint96\"}],\"name\":\"setRoyaltyInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"supplyLimits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the zero address.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/RewardManager.sol\":\"RewardManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xb90916a13c108291699c6e6ddb4b1277ea860dfac118a60568a6f432baedcf68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90719e236eafdcbdf56d830f460714668f95eb76c534edf140bb2948d9f8a048\",\"dweb:/ipfs/QmU8QmdKUHBejNeYGuJ913L7xhcysyr5MZLnNnPy9Jqrdx\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xf189f9b417fe1931e1ab706838aff1128528694a9fcdb5ff7665197f2ca57d09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ff0143c836c8c9f85d13708733c09e21251395847fccfb518bf3b556726a840\",\"dweb:/ipfs/QmP69sjjrQrhYAsvCSSB69Bx66SiUPdQUqdzMYnf4wANHm\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x6ec6d7fce29668ede560c7d2e10f9d10de3473f5298e431e70a5767db42fa620\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac0139e51874aeec0730d040e57993187541777eb01d5939c06d5d2b986a54e8\",\"dweb:/ipfs/QmZbMbdPzusXuX9FGkyArV8hgzKLBZaL5RzMtCdCawtwPF\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x98c32de9b02f43eba7c0aba9fadf331cffb35a8d2076dce1d556c8f2cad704aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38f68f76e741cce3ca4e0f8ece5ab9d69a203829311a403bafc8f7b95a7e6d63\",\"dweb:/ipfs/QmZ8PrDXU5DiZ7fzEoRN7vHMQdemtsqvYVV5AdvAnScS4o\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0xaeca1511f7da49bdb16e44aa0f09dca76b51ba079bd068b2f80b8fe6d22b5fa1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://542fe084e72e14f4298954f70c407d5795c1207a02c049f9b91e15f3b9a525a5\",\"dweb:/ipfs/QmbPQMVUVZBE9R9Va6FNfZBTrUY51nrjm8qxpeoAoRrPrQ\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0xa4b9958797e0e9cde82a090525e90f80d5745ba1c67ee72b488bd3087498a17e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9344f7c2f80322c2e76d9d89bed03fd12f3e011e74fde7cf24ea21bdd2abe2d\",\"dweb:/ipfs/QmPMAjF5x2fHUAee2FKMZDBbFVrbZbPCr3a9KHLZaSn1zY\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/cryptography/Hashes.sol\":{\"keccak256\":\"0x8cbd338f083224b4b6f0ff42cbda641a0a6c31ffcdca197452b97fe4d0918269\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f517dec5ba0c6491395acbf7f1d621f4e89e8f218bf5303c867b1c5ad70c6b11\",\"dweb:/ipfs/QmWmXHRLEw8W6ckth7NyYTU88YfvuS7xSsfae5ksL8qNUe\"]},\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0x36a0c409c437a753cac9b92b75f93b0fbe92803bf2c8ff1517e54b247f166134\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f91ba472de411aa557cdbf6560c40750d87bd11c9060bc04d2ba7119af9d5a6\",\"dweb:/ipfs/QmQjtYo2i7dDvzCEzZ67bDoNSG4RrwMoxPWuqFmX5Xzpuw\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"contracts/RewardManager.sol\":{\"keccak256\":\"0x0b7ebdbbcbe0db51537ea2ad46b0f74bf14ae9688d9d6c7d7cc0fcd713fd015b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://037731b375bf725447c16885edd0add816d7c39bb09683e1f531dc0cf84eae1d\",\"dweb:/ipfs/QmdqaeAyriQmKud4WHzYbvDwyhAQzoCzpZHcXLFQhSuNQF\"]}},\"version\":1}"}},"contracts/Staking.sol":{"Staking":{"abi":[{"inputs":[{"internalType":"address","name":"_fTokenAddress","type":"address"},{"internalType":"address","name":"_initialOwner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"bool","name":"isLp","type":"bool"}],"name":"LpStatusChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"unlocksOn","type":"uint256"}],"name":"Staked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"reward","type":"uint256"}],"name":"Unstaked","type":"event"},{"inputs":[],"name":"F_TOKEN","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"STAKING_HARD_CAP","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"stakerAddress","type":"address"}],"name":"calculateReward","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"isLpStaker","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"lpRates","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"normalRates","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"bool","name":"isLp","type":"bool"}],"name":"setLpStaker","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"durationInDays","type":"uint256"}],"name":"stake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"stakers","outputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"since","type":"uint256"},{"internalType":"uint256","name":"unlocksOn","type":"uint256"},{"internalType":"bool","name":"isLpStaker","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalStaked","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unstake","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_3823":{"entryPoint":null,"id":3823,"parameterSlots":0,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_9828":{"entryPoint":null,"id":9828,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":233,"id":146,"parameterSlots":1,"returnSlots":0},"abi_decode_address_fromMemory":{"entryPoint":422,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_addresst_address_fromMemory":{"entryPoint":451,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:699:32","statements":[{"nodeType":"YulBlock","src":"6:3:32","statements":[]},{"body":{"nodeType":"YulBlock","src":"74:117:32","statements":[{"nodeType":"YulAssignment","src":"84:22:32","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"99:6:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"93:5:32"},"nodeType":"YulFunctionCall","src":"93:13:32"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"84:5:32"}]},{"body":{"nodeType":"YulBlock","src":"169:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"178:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"181:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"171:6:32"},"nodeType":"YulFunctionCall","src":"171:12:32"},"nodeType":"YulExpressionStatement","src":"171:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"128:5:32"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"139:5:32"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"154:3:32","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"159:1:32","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"150:3:32"},"nodeType":"YulFunctionCall","src":"150:11:32"},{"kind":"number","nodeType":"YulLiteral","src":"163:1:32","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"146:3:32"},"nodeType":"YulFunctionCall","src":"146:19:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"135:3:32"},"nodeType":"YulFunctionCall","src":"135:31:32"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"125:2:32"},"nodeType":"YulFunctionCall","src":"125:42:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"118:6:32"},"nodeType":"YulFunctionCall","src":"118:50:32"},"nodeType":"YulIf","src":"115:70:32"}]},"name":"abi_decode_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"53:6:32","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"64:5:32","type":""}],"src":"14:177:32"},{"body":{"nodeType":"YulBlock","src":"294:195:32","statements":[{"body":{"nodeType":"YulBlock","src":"340:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"349:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"352:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"342:6:32"},"nodeType":"YulFunctionCall","src":"342:12:32"},"nodeType":"YulExpressionStatement","src":"342:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"315:7:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"324:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"311:3:32"},"nodeType":"YulFunctionCall","src":"311:23:32"},{"kind":"number","nodeType":"YulLiteral","src":"336:2:32","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"307:3:32"},"nodeType":"YulFunctionCall","src":"307:32:32"},"nodeType":"YulIf","src":"304:52:32"},{"nodeType":"YulAssignment","src":"365:50:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"405:9:32"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"375:29:32"},"nodeType":"YulFunctionCall","src":"375:40:32"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"365:6:32"}]},{"nodeType":"YulAssignment","src":"424:59:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"468:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"479:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"464:3:32"},"nodeType":"YulFunctionCall","src":"464:18:32"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"434:29:32"},"nodeType":"YulFunctionCall","src":"434:49:32"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"424:6:32"}]}]},"name":"abi_decode_tuple_t_addresst_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"252:9:32","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"263:7:32","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"275:6:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"283:6:32","type":""}],"src":"196:293:32"},{"body":{"nodeType":"YulBlock","src":"595:102:32","statements":[{"nodeType":"YulAssignment","src":"605:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"617:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"628:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"613:3:32"},"nodeType":"YulFunctionCall","src":"613:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"605:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"647:9:32"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"662:6:32"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"678:3:32","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"683:1:32","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"674:3:32"},"nodeType":"YulFunctionCall","src":"674:11:32"},{"kind":"number","nodeType":"YulLiteral","src":"687:1:32","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"670:3:32"},"nodeType":"YulFunctionCall","src":"670:19:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"658:3:32"},"nodeType":"YulFunctionCall","src":"658:32:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"640:6:32"},"nodeType":"YulFunctionCall","src":"640:51:32"},"nodeType":"YulExpressionStatement","src":"640:51:32"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"564:9:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"575:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"586:4:32","type":""}],"src":"494:203:32"}]},"contents":"{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}","id":32,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"610120604052603260a0908152606460c05260c860e05261012c610100526200002d90600590600462000139565b50604080516080810182526064815260c860208201526101909181019190915261025860608201526200006590600690600462000139565b503480156200007357600080fd5b5060405162000ede38038062000ede8339810160408190526200009691620001c3565b806001600160a01b038116620000c657604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b620000d181620000e9565b5050600180556001600160a01b0316608052620001fb565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8280548282559060005260206000209081019282156200017d579160200282015b828111156200017d578251829061ffff169055916020019190600101906200015a565b506200018b9291506200018f565b5090565b5b808211156200018b576000815560010162000190565b80516001600160a01b0381168114620001be57600080fd5b919050565b60008060408385031215620001d757600080fd5b620001e283620001a6565b9150620001f260208401620001a6565b90509250929050565b608051610cba620002246000396000818160fe015281816103a501526106470152610cba6000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063ba85c2591161008c578063d82e396211610066578063d82e396214610235578063f2fde38b14610248578063f3aab1041461025b578063f6c4dd8d1461026e57600080fd5b8063ba85c259146101dc578063c2277742146101ef578063d7e751ba1461022257600080fd5b80637b0472f0116100c85780637b0472f014610145578063817b1cd2146101585780638da5cb5b1461016f5780639168ae721461018057600080fd5b80632def6620146100ef57806370af9b14146100f9578063715018a61461013d575b600080fd5b6100f7610280565b005b6101207f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6100f761041f565b6100f7610153366004610b3e565b610431565b61016160025481565b604051908152602001610134565b6000546001600160a01b0316610120565b6101ba61018e366004610b7c565b600360208190526000918252604090912080546001820154600283015492909301549092919060ff1684565b6040805194855260208501939093529183015215156060820152608001610134565b6101616101ea366004610b9e565b6106c8565b6102126101fd366004610b7c565b60046020526000908152604090205460ff1681565b6040519015158152602001610134565b6100f7610230366004610bb7565b6106e9565b610161610243366004610b7c565b610750565b6100f7610256366004610b7c565b6108e1565b610161610269366004610b9e565b61091f565b6101616a52b7d2dcc80cd2e400000081565b61028861092f565b33600090815260036020526040902080546102e35760405162461bcd60e51b8152602060048201526016602482015275556e7374616b696e673a206e6f74207374616b696e6760501b60448201526064015b60405180910390fd5b80600201544210156103375760405162461bcd60e51b815260206004820152601f60248201527f556e7374616b696e673a206c6f636b20706572696f64206e6f74206f7665720060448201526064016102da565b600061034233610750565b905060008183600001546103569190610c09565b905082600001546002600082825461036e9190610c22565b9091555050336000818152600360208190526040822082815560018101839055600281019290925501805460ff191690556103d4907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169083610959565b8254604080519182526020820184905233917f7fc4727e062e336010f2c282598ef5f14facb3de68cf8195c2f23e1454b2b74e910160405180910390a250505061041d60018055565b565b6104276109bd565b61041d60006109ea565b61043961092f565b6000821161047f5760405162461bcd60e51b815260206004820152601360248201527205374616b696e673a20616d6f756e74203e203606c1b60448201526064016102da565b33600090815260036020526040902054156104dc5760405162461bcd60e51b815260206004820152601860248201527f5374616b696e673a20616c7265616479207374616b696e67000000000000000060448201526064016102da565b6a52b7d2dcc80cd2e4000000826002546104f69190610c09565b11156105445760405162461bcd60e51b815260206004820152601960248201527f5374616b696e673a20686172642063617020726561636865640000000000000060448201526064016102da565b600061054f82610a3a565b9050600081116105a15760405162461bcd60e51b815260206004820152601960248201527f5374616b696e673a20696e76616c6964206475726174696f6e0000000000000060448201526064016102da565b82600260008282546105b39190610c09565b92505081905550604051806080016040528084815260200142815260200182426105dd9190610c09565b81523360008181526004602090815260408083205460ff161515948201949094528282526003808252918490208551815590850151600182015592840151600284015560609093015191909201805460ff191691151591909117905561066f906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016903086610a8e565b33600081815260036020908152604091829020600201548251878152918201527f1449c6dd7851abc30abf37f57715f492010519147cc2652fbc38202c18a6ee90910160405180910390a2506106c460018055565b5050565b600581815481106106d857600080fd5b600091825260209091200154905081565b6106f16109bd565b6001600160a01b038216600081815260046020908152604091829020805460ff191685151590811790915591519182527f479b155fd9ee4e038b5bb63a809c961882d5d8c138a03b33c7dc81c35b77975d910160405180910390a25050565b6001600160a01b0381166000908152600360208181526040808420815160808101835281548082526001830154948201949094526002820154928101929092529092015460ff161515606083015282036107ad5750600092915050565b6000816020015182604001516107c39190610c22565b9050600082606001516107d75760056107da565b60065b80548060200260200160405190810160405280929190818152602001828054801561082457602002820191906000526020600020905b815481526020019060010190808311610810575b5050505050905060006301e13380831061085a578160038151811061084b5761084b610c35565b602002602001015190506108bc565b62ed4e008310610877578160028151811061084b5761084b610c35565b6276a7008310610894578160018151811061084b5761084b610c35565b62278d0083106108bc57816000815181106108b1576108b1610c35565b602002602001015190505b8351612710906108cd908390610c4b565b6108d79190610c62565b9695505050505050565b6108e96109bd565b6001600160a01b03811661091357604051631e4fbdf760e01b8152600060048201526024016102da565b61091c816109ea565b50565b600681815481106106d857600080fd5b60026001540361095257604051633ee5aeb560e01b815260040160405180910390fd5b6002600155565b6040516001600160a01b038381166024830152604482018390526109b891859182169063a9059cbb906064015b604051602081830303815290604052915060e01b6020820180516001600160e01b038381831617835250505050610acd565b505050565b6000546001600160a01b0316331461041d5760405163118cdaa760e01b81523360048201526024016102da565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600081601e03610a4e575062278d00919050565b81605a03610a6057506276a700919050565b8160b403610a72575062ed4e00919050565b8161016d03610a8657506301e13380919050565b506000919050565b6040516001600160a01b038481166024830152838116604483015260648201839052610ac79186918216906323b872dd90608401610986565b50505050565b600080602060008451602086016000885af180610af0576040513d6000823e3d81fd5b50506000513d91508115610b08578060011415610b15565b6001600160a01b0384163b155b15610ac757604051635274afe760e01b81526001600160a01b03851660048201526024016102da565b60008060408385031215610b5157600080fd5b50508035926020909101359150565b80356001600160a01b0381168114610b7757600080fd5b919050565b600060208284031215610b8e57600080fd5b610b9782610b60565b9392505050565b600060208284031215610bb057600080fd5b5035919050565b60008060408385031215610bca57600080fd5b610bd383610b60565b915060208301358015158114610be857600080fd5b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b80820180821115610c1c57610c1c610bf3565b92915050565b81810381811115610c1c57610c1c610bf3565b634e487b7160e01b600052603260045260246000fd5b8082028115828204841417610c1c57610c1c610bf3565b600082610c7f57634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220f1d2ad828b4af4c6079e075b8be3e3873544cde9e9dd0af94aa49f93c2a3c64164736f6c63430008140033","opcodes":"PUSH2 0x120 PUSH1 0x40 MSTORE PUSH1 0x32 PUSH1 0xA0 SWAP1 DUP2 MSTORE PUSH1 0x64 PUSH1 0xC0 MSTORE PUSH1 0xC8 PUSH1 0xE0 MSTORE PUSH2 0x12C PUSH2 0x100 MSTORE PUSH3 0x2D SWAP1 PUSH1 0x5 SWAP1 PUSH1 0x4 PUSH3 0x139 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x64 DUP2 MSTORE PUSH1 0xC8 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x190 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x258 PUSH1 0x60 DUP3 ADD MSTORE PUSH3 0x65 SWAP1 PUSH1 0x6 SWAP1 PUSH1 0x4 PUSH3 0x139 JUMP JUMPDEST POP CALLVALUE DUP1 ISZERO PUSH3 0x73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xEDE CODESIZE SUB DUP1 PUSH3 0xEDE DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x96 SWAP2 PUSH3 0x1C3 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0xC6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xD1 DUP2 PUSH3 0xE9 JUMP JUMPDEST POP POP PUSH1 0x1 DUP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 MSTORE PUSH3 0x1FB JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH3 0x17D JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x17D JUMPI DUP3 MLOAD DUP3 SWAP1 PUSH2 0xFFFF AND SWAP1 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x15A JUMP JUMPDEST POP PUSH3 0x18B SWAP3 SWAP2 POP PUSH3 0x18F JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x18B JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x190 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x1BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1E2 DUP4 PUSH3 0x1A6 JUMP JUMPDEST SWAP2 POP PUSH3 0x1F2 PUSH1 0x20 DUP5 ADD PUSH3 0x1A6 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0xCBA PUSH3 0x224 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH1 0xFE ADD MSTORE DUP2 DUP2 PUSH2 0x3A5 ADD MSTORE PUSH2 0x647 ADD MSTORE PUSH2 0xCBA PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xBA85C259 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xD82E3962 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xD82E3962 EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0xF3AAB104 EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0xF6C4DD8D EQ PUSH2 0x26E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBA85C259 EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0xC2277742 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0xD7E751BA EQ PUSH2 0x222 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7B0472F0 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x7B0472F0 EQ PUSH2 0x145 JUMPI DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0x9168AE72 EQ PUSH2 0x180 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2DEF6620 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x70AF9B14 EQ PUSH2 0xF9 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x13D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF7 PUSH2 0x280 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x120 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF7 PUSH2 0x41F JUMP JUMPDEST PUSH2 0xF7 PUSH2 0x153 CALLDATASIZE PUSH1 0x4 PUSH2 0xB3E JUMP JUMPDEST PUSH2 0x431 JUMP JUMPDEST PUSH2 0x161 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x134 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x120 JUMP JUMPDEST PUSH2 0x1BA PUSH2 0x18E CALLDATASIZE PUSH1 0x4 PUSH2 0xB7C JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD SWAP3 SWAP1 SWAP4 ADD SLOAD SWAP1 SWAP3 SWAP2 SWAP1 PUSH1 0xFF AND DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x134 JUMP JUMPDEST PUSH2 0x161 PUSH2 0x1EA CALLDATASIZE PUSH1 0x4 PUSH2 0xB9E JUMP JUMPDEST PUSH2 0x6C8 JUMP JUMPDEST PUSH2 0x212 PUSH2 0x1FD CALLDATASIZE PUSH1 0x4 PUSH2 0xB7C JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x134 JUMP JUMPDEST PUSH2 0xF7 PUSH2 0x230 CALLDATASIZE PUSH1 0x4 PUSH2 0xBB7 JUMP JUMPDEST PUSH2 0x6E9 JUMP JUMPDEST PUSH2 0x161 PUSH2 0x243 CALLDATASIZE PUSH1 0x4 PUSH2 0xB7C JUMP JUMPDEST PUSH2 0x750 JUMP JUMPDEST PUSH2 0xF7 PUSH2 0x256 CALLDATASIZE PUSH1 0x4 PUSH2 0xB7C JUMP JUMPDEST PUSH2 0x8E1 JUMP JUMPDEST PUSH2 0x161 PUSH2 0x269 CALLDATASIZE PUSH1 0x4 PUSH2 0xB9E JUMP JUMPDEST PUSH2 0x91F JUMP JUMPDEST PUSH2 0x161 PUSH11 0x52B7D2DCC80CD2E4000000 DUP2 JUMP JUMPDEST PUSH2 0x288 PUSH2 0x92F JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x2E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x556E7374616B696E673A206E6F74207374616B696E67 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x337 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E7374616B696E673A206C6F636B20706572696F64206E6F74206F76657200 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2DA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x342 CALLER PUSH2 0x750 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x356 SWAP2 SWAP1 PUSH2 0xC09 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x0 ADD SLOAD PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x36E SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP3 DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP4 SWAP1 SSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 SSTORE ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0x3D4 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP4 PUSH2 0x959 JUMP JUMPDEST DUP3 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP5 SWAP1 MSTORE CALLER SWAP2 PUSH32 0x7FC4727E062E336010F2C282598EF5F14FACB3DE68CF8195C2F23E1454B2B74E SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP PUSH2 0x41D PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x427 PUSH2 0x9BD JUMP JUMPDEST PUSH2 0x41D PUSH1 0x0 PUSH2 0x9EA JUMP JUMPDEST PUSH2 0x439 PUSH2 0x92F JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x47F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x5374616B696E673A20616D6F756E74203E203 PUSH1 0x6C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2DA JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x4DC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E673A20616C7265616479207374616B696E670000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2DA JUMP JUMPDEST PUSH11 0x52B7D2DCC80CD2E4000000 DUP3 PUSH1 0x2 SLOAD PUSH2 0x4F6 SWAP2 SWAP1 PUSH2 0xC09 JUMP JUMPDEST GT ISZERO PUSH2 0x544 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E673A206861726420636170207265616368656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2DA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x54F DUP3 PUSH2 0xA3A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x5A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E673A20696E76616C6964206475726174696F6E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2DA JUMP JUMPDEST DUP3 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x5B3 SWAP2 SWAP1 PUSH2 0xC09 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP3 TIMESTAMP PUSH2 0x5DD SWAP2 SWAP1 PUSH2 0xC09 JUMP JUMPDEST DUP2 MSTORE CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO SWAP5 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP3 DUP3 MSTORE PUSH1 0x3 DUP1 DUP3 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP6 MLOAD DUP2 SSTORE SWAP1 DUP6 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE SWAP3 DUP5 ADD MLOAD PUSH1 0x2 DUP5 ADD SSTORE PUSH1 0x60 SWAP1 SWAP4 ADD MLOAD SWAP2 SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x66F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 ADDRESS DUP7 PUSH2 0xA8E JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD DUP3 MLOAD DUP8 DUP2 MSTORE SWAP2 DUP3 ADD MSTORE PUSH32 0x1449C6DD7851ABC30ABF37F57715F492010519147CC2652FBC38202C18A6EE90 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x6C4 PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x6D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH2 0x6F1 PUSH2 0x9BD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP6 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x479B155FD9EE4E038B5BB63A809C961882D5D8C138A03B33C7DC81C35B77975D SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP2 MLOAD PUSH1 0x80 DUP2 ADD DUP4 MSTORE DUP2 SLOAD DUP1 DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD SWAP5 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 SWAP3 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x60 DUP4 ADD MSTORE DUP3 SUB PUSH2 0x7AD JUMPI POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x20 ADD MLOAD DUP3 PUSH1 0x40 ADD MLOAD PUSH2 0x7C3 SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x60 ADD MLOAD PUSH2 0x7D7 JUMPI PUSH1 0x5 PUSH2 0x7DA JUMP JUMPDEST PUSH1 0x6 JUMPDEST DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x824 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x810 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH4 0x1E13380 DUP4 LT PUSH2 0x85A JUMPI DUP2 PUSH1 0x3 DUP2 MLOAD DUP2 LT PUSH2 0x84B JUMPI PUSH2 0x84B PUSH2 0xC35 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH2 0x8BC JUMP JUMPDEST PUSH3 0xED4E00 DUP4 LT PUSH2 0x877 JUMPI DUP2 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x84B JUMPI PUSH2 0x84B PUSH2 0xC35 JUMP JUMPDEST PUSH3 0x76A700 DUP4 LT PUSH2 0x894 JUMPI DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x84B JUMPI PUSH2 0x84B PUSH2 0xC35 JUMP JUMPDEST PUSH3 0x278D00 DUP4 LT PUSH2 0x8BC JUMPI DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x8B1 JUMPI PUSH2 0x8B1 PUSH2 0xC35 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP JUMPDEST DUP4 MLOAD PUSH2 0x2710 SWAP1 PUSH2 0x8CD SWAP1 DUP4 SWAP1 PUSH2 0xC4B JUMP JUMPDEST PUSH2 0x8D7 SWAP2 SWAP1 PUSH2 0xC62 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x8E9 PUSH2 0x9BD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x913 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2DA JUMP JUMPDEST PUSH2 0x91C DUP2 PUSH2 0x9EA JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x6D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x952 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0x9B8 SWAP2 DUP6 SWAP2 DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xACD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x41D JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2DA JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1E SUB PUSH2 0xA4E JUMPI POP PUSH3 0x278D00 SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH1 0x5A SUB PUSH2 0xA60 JUMPI POP PUSH3 0x76A700 SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH1 0xB4 SUB PUSH2 0xA72 JUMPI POP PUSH3 0xED4E00 SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH2 0x16D SUB PUSH2 0xA86 JUMPI POP PUSH4 0x1E13380 SWAP2 SWAP1 POP JUMP JUMPDEST POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0xAC7 SWAP2 DUP7 SWAP2 DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x84 ADD PUSH2 0x986 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 PUSH1 0x0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH1 0x0 DUP9 GAS CALL DUP1 PUSH2 0xAF0 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST POP POP PUSH1 0x0 MLOAD RETURNDATASIZE SWAP2 POP DUP2 ISZERO PUSH2 0xB08 JUMPI DUP1 PUSH1 0x1 EQ ISZERO PUSH2 0xB15 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0xAC7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2DA JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB97 DUP3 PUSH2 0xB60 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBCA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBD3 DUP4 PUSH2 0xB60 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xBE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xC1C JUMPI PUSH2 0xC1C PUSH2 0xBF3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xC1C JUMPI PUSH2 0xC1C PUSH2 0xBF3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0xC1C JUMPI PUSH2 0xC1C PUSH2 0xBF3 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xC7F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALL 0xD2 0xAD DUP3 DUP12 0x4A DELEGATECALL 0xC6 SMOD SWAP15 SMOD JUMPDEST DUP12 0xE3 0xE3 DUP8 CALLDATALOAD PREVRANDAO 0xCD 0xE9 0xE9 0xDD EXP 0xF9 0x4A LOG4 SWAP16 SWAP4 0xC2 LOG3 0xC6 COINBASE PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"704:50:29:-:0;293:3276;704:50;736:2;293:3276;704:50;;;740:3;704:50;;745:3;704:50;;750:3;704:50;;;;;;;;:::i;:::-;-1:-1:-1;760:47:29;;;;;;;;788:3;760:47;;793:3;760:47;;;;798:3;760:47;;;;;;;803:3;760:47;;;;;;;;;;:::i;:::-;;1022:119;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1089:13;-1:-1:-1;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;640:51:32;613:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;;1857:1:18;2061:21;;-1:-1:-1;;;;;1106:32:29::1;;::::0;293:3276;;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;293:3276:29:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;293:3276:29;;;-1:-1:-1;293:3276:29;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:177:32;93:13;;-1:-1:-1;;;;;135:31:32;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;494:203::-;293:3276:29;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@F_TOKEN_9755":{"entryPoint":null,"id":9755,"parameterSlots":0,"returnSlots":0},"@STAKING_HARD_CAP_9764":{"entryPoint":null,"id":9764,"parameterSlots":0,"returnSlots":0},"@_callOptionalReturn_2667":{"entryPoint":2765,"id":2667,"parameterSlots":2,"returnSlots":0},"@_checkOwner_84":{"entryPoint":2493,"id":84,"parameterSlots":0,"returnSlots":0},"@_getDurationInSeconds_10148":{"entryPoint":2618,"id":10148,"parameterSlots":1,"returnSlots":1},"@_msgSender_3731":{"entryPoint":null,"id":3731,"parameterSlots":0,"returnSlots":1},"@_nonReentrantAfter_3858":{"entryPoint":null,"id":3858,"parameterSlots":0,"returnSlots":0},"@_nonReentrantBefore_3850":{"entryPoint":2351,"id":3850,"parameterSlots":0,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":2538,"id":146,"parameterSlots":1,"returnSlots":0},"@calculateReward_10114":{"entryPoint":1872,"id":10114,"parameterSlots":1,"returnSlots":1},"@isLpStaker_9773":{"entryPoint":null,"id":9773,"parameterSlots":0,"returnSlots":0},"@lpRates_9789":{"entryPoint":2335,"id":9789,"parameterSlots":0,"returnSlots":0},"@normalRates_9781":{"entryPoint":1736,"id":9781,"parameterSlots":0,"returnSlots":0},"@owner_67":{"entryPoint":null,"id":67,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_98":{"entryPoint":1055,"id":98,"parameterSlots":0,"returnSlots":0},"@safeTransferFrom_2317":{"entryPoint":2702,"id":2317,"parameterSlots":4,"returnSlots":0},"@safeTransfer_2290":{"entryPoint":2393,"id":2290,"parameterSlots":3,"returnSlots":0},"@setLpStaker_10017":{"entryPoint":1769,"id":10017,"parameterSlots":2,"returnSlots":0},"@stake_9924":{"entryPoint":1073,"id":9924,"parameterSlots":2,"returnSlots":0},"@stakers_9769":{"entryPoint":null,"id":9769,"parameterSlots":0,"returnSlots":0},"@totalStaked_9757":{"entryPoint":null,"id":9757,"parameterSlots":0,"returnSlots":0},"@transferOwnership_126":{"entryPoint":2273,"id":126,"parameterSlots":1,"returnSlots":0},"@unstake_9996":{"entryPoint":640,"id":9996,"parameterSlots":0,"returnSlots":0},"abi_decode_address":{"entryPoint":2912,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":2940,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_bool":{"entryPoint":2999,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256":{"entryPoint":2974,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_uint256":{"entryPoint":2878,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IERC20_$2219__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0690a8e4b631531730d9bfeb0fa4fd8225ec55de47e7b362503d980527c80ae5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0882957523f77c6ee780235eac6554fa0cf1a717454885e14d8683aa7e8ad9ba__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0a4dcbcb5feccfe4ca77b5300fda7ccefc484148af5ee5dc5213adf60bbaf685__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6a141b6b026e8a2783b9b06b8696d05320243b7a657586fcf4b506358189df95__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6dbb76120780ac290fd31e593804dd93e5459ea534b2464ae98ba428bdfd31d3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_97489df0d9f2859eb1564424a1f8f89e238e19e9f094b93d8f3720f732307f8c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":3081,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":3170,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":3147,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":3106,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":3059,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":3125,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:6335:32","statements":[{"nodeType":"YulBlock","src":"6:3:32","statements":[]},{"body":{"nodeType":"YulBlock","src":"130:102:32","statements":[{"nodeType":"YulAssignment","src":"140:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"152:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"163:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"148:3:32"},"nodeType":"YulFunctionCall","src":"148:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"140:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"182:9:32"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"197:6:32"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"213:3:32","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"218:1:32","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"209:3:32"},"nodeType":"YulFunctionCall","src":"209:11:32"},{"kind":"number","nodeType":"YulLiteral","src":"222:1:32","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"205:3:32"},"nodeType":"YulFunctionCall","src":"205:19:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"193:3:32"},"nodeType":"YulFunctionCall","src":"193:32:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"175:6:32"},"nodeType":"YulFunctionCall","src":"175:51:32"},"nodeType":"YulExpressionStatement","src":"175:51:32"}]},"name":"abi_encode_tuple_t_contract$_IERC20_$2219__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"99:9:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"110:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"121:4:32","type":""}],"src":"14:218:32"},{"body":{"nodeType":"YulBlock","src":"324:161:32","statements":[{"body":{"nodeType":"YulBlock","src":"370:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"379:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"382:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"372:6:32"},"nodeType":"YulFunctionCall","src":"372:12:32"},"nodeType":"YulExpressionStatement","src":"372:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"345:7:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"354:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"341:3:32"},"nodeType":"YulFunctionCall","src":"341:23:32"},{"kind":"number","nodeType":"YulLiteral","src":"366:2:32","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"337:3:32"},"nodeType":"YulFunctionCall","src":"337:32:32"},"nodeType":"YulIf","src":"334:52:32"},{"nodeType":"YulAssignment","src":"395:33:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"418:9:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"405:12:32"},"nodeType":"YulFunctionCall","src":"405:23:32"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"395:6:32"}]},{"nodeType":"YulAssignment","src":"437:42:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"464:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"475:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"460:3:32"},"nodeType":"YulFunctionCall","src":"460:18:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"447:12:32"},"nodeType":"YulFunctionCall","src":"447:32:32"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"437:6:32"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"282:9:32","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"293:7:32","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"305:6:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"313:6:32","type":""}],"src":"237:248:32"},{"body":{"nodeType":"YulBlock","src":"591:76:32","statements":[{"nodeType":"YulAssignment","src":"601:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"613:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"624:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"609:3:32"},"nodeType":"YulFunctionCall","src":"609:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"601:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"643:9:32"},{"name":"value0","nodeType":"YulIdentifier","src":"654:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"636:6:32"},"nodeType":"YulFunctionCall","src":"636:25:32"},"nodeType":"YulExpressionStatement","src":"636:25:32"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"560:9:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"571:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"582:4:32","type":""}],"src":"490:177:32"},{"body":{"nodeType":"YulBlock","src":"773:102:32","statements":[{"nodeType":"YulAssignment","src":"783:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"795:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"806:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"791:3:32"},"nodeType":"YulFunctionCall","src":"791:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"783:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"825:9:32"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"840:6:32"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"856:3:32","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"861:1:32","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"852:3:32"},"nodeType":"YulFunctionCall","src":"852:11:32"},{"kind":"number","nodeType":"YulLiteral","src":"865:1:32","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"848:3:32"},"nodeType":"YulFunctionCall","src":"848:19:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"836:3:32"},"nodeType":"YulFunctionCall","src":"836:32:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"818:6:32"},"nodeType":"YulFunctionCall","src":"818:51:32"},"nodeType":"YulExpressionStatement","src":"818:51:32"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"742:9:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"753:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"764:4:32","type":""}],"src":"672:203:32"},{"body":{"nodeType":"YulBlock","src":"929:124:32","statements":[{"nodeType":"YulAssignment","src":"939:29:32","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"961:6:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"948:12:32"},"nodeType":"YulFunctionCall","src":"948:20:32"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"939:5:32"}]},{"body":{"nodeType":"YulBlock","src":"1031:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1040:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1043:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1033:6:32"},"nodeType":"YulFunctionCall","src":"1033:12:32"},"nodeType":"YulExpressionStatement","src":"1033:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"990:5:32"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1001:5:32"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1016:3:32","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1021:1:32","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1012:3:32"},"nodeType":"YulFunctionCall","src":"1012:11:32"},{"kind":"number","nodeType":"YulLiteral","src":"1025:1:32","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1008:3:32"},"nodeType":"YulFunctionCall","src":"1008:19:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"997:3:32"},"nodeType":"YulFunctionCall","src":"997:31:32"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"987:2:32"},"nodeType":"YulFunctionCall","src":"987:42:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"980:6:32"},"nodeType":"YulFunctionCall","src":"980:50:32"},"nodeType":"YulIf","src":"977:70:32"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"908:6:32","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"919:5:32","type":""}],"src":"880:173:32"},{"body":{"nodeType":"YulBlock","src":"1128:116:32","statements":[{"body":{"nodeType":"YulBlock","src":"1174:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1183:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1186:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1176:6:32"},"nodeType":"YulFunctionCall","src":"1176:12:32"},"nodeType":"YulExpressionStatement","src":"1176:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1149:7:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"1158:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1145:3:32"},"nodeType":"YulFunctionCall","src":"1145:23:32"},{"kind":"number","nodeType":"YulLiteral","src":"1170:2:32","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1141:3:32"},"nodeType":"YulFunctionCall","src":"1141:32:32"},"nodeType":"YulIf","src":"1138:52:32"},{"nodeType":"YulAssignment","src":"1199:39:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1228:9:32"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1209:18:32"},"nodeType":"YulFunctionCall","src":"1209:29:32"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1199:6:32"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1094:9:32","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1105:7:32","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1117:6:32","type":""}],"src":"1058:186:32"},{"body":{"nodeType":"YulBlock","src":"1428:222:32","statements":[{"nodeType":"YulAssignment","src":"1438:27:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1450:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"1461:3:32","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1446:3:32"},"nodeType":"YulFunctionCall","src":"1446:19:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1438:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1481:9:32"},{"name":"value0","nodeType":"YulIdentifier","src":"1492:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1474:6:32"},"nodeType":"YulFunctionCall","src":"1474:25:32"},"nodeType":"YulExpressionStatement","src":"1474:25:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1519:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"1530:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1515:3:32"},"nodeType":"YulFunctionCall","src":"1515:18:32"},{"name":"value1","nodeType":"YulIdentifier","src":"1535:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1508:6:32"},"nodeType":"YulFunctionCall","src":"1508:34:32"},"nodeType":"YulExpressionStatement","src":"1508:34:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1562:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"1573:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1558:3:32"},"nodeType":"YulFunctionCall","src":"1558:18:32"},{"name":"value2","nodeType":"YulIdentifier","src":"1578:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1551:6:32"},"nodeType":"YulFunctionCall","src":"1551:34:32"},"nodeType":"YulExpressionStatement","src":"1551:34:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1605:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"1616:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1601:3:32"},"nodeType":"YulFunctionCall","src":"1601:18:32"},{"arguments":[{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"1635:6:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1628:6:32"},"nodeType":"YulFunctionCall","src":"1628:14:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1621:6:32"},"nodeType":"YulFunctionCall","src":"1621:22:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1594:6:32"},"nodeType":"YulFunctionCall","src":"1594:50:32"},"nodeType":"YulExpressionStatement","src":"1594:50:32"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1373:9:32","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1384:6:32","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1392:6:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1400:6:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1408:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1419:4:32","type":""}],"src":"1249:401:32"},{"body":{"nodeType":"YulBlock","src":"1725:110:32","statements":[{"body":{"nodeType":"YulBlock","src":"1771:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1780:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1783:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1773:6:32"},"nodeType":"YulFunctionCall","src":"1773:12:32"},"nodeType":"YulExpressionStatement","src":"1773:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1746:7:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"1755:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1742:3:32"},"nodeType":"YulFunctionCall","src":"1742:23:32"},{"kind":"number","nodeType":"YulLiteral","src":"1767:2:32","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1738:3:32"},"nodeType":"YulFunctionCall","src":"1738:32:32"},"nodeType":"YulIf","src":"1735:52:32"},{"nodeType":"YulAssignment","src":"1796:33:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1819:9:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1806:12:32"},"nodeType":"YulFunctionCall","src":"1806:23:32"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1796:6:32"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1691:9:32","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1702:7:32","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1714:6:32","type":""}],"src":"1655:180:32"},{"body":{"nodeType":"YulBlock","src":"1935:92:32","statements":[{"nodeType":"YulAssignment","src":"1945:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1957:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"1968:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1953:3:32"},"nodeType":"YulFunctionCall","src":"1953:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1945:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1987:9:32"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2012:6:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2005:6:32"},"nodeType":"YulFunctionCall","src":"2005:14:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1998:6:32"},"nodeType":"YulFunctionCall","src":"1998:22:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1980:6:32"},"nodeType":"YulFunctionCall","src":"1980:41:32"},"nodeType":"YulExpressionStatement","src":"1980:41:32"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1904:9:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1915:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1926:4:32","type":""}],"src":"1840:187:32"},{"body":{"nodeType":"YulBlock","src":"2116:263:32","statements":[{"body":{"nodeType":"YulBlock","src":"2162:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2171:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2174:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2164:6:32"},"nodeType":"YulFunctionCall","src":"2164:12:32"},"nodeType":"YulExpressionStatement","src":"2164:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2137:7:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"2146:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2133:3:32"},"nodeType":"YulFunctionCall","src":"2133:23:32"},{"kind":"number","nodeType":"YulLiteral","src":"2158:2:32","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2129:3:32"},"nodeType":"YulFunctionCall","src":"2129:32:32"},"nodeType":"YulIf","src":"2126:52:32"},{"nodeType":"YulAssignment","src":"2187:39:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2216:9:32"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2197:18:32"},"nodeType":"YulFunctionCall","src":"2197:29:32"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2187:6:32"}]},{"nodeType":"YulVariableDeclaration","src":"2235:45:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2265:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"2276:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2261:3:32"},"nodeType":"YulFunctionCall","src":"2261:18:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2248:12:32"},"nodeType":"YulFunctionCall","src":"2248:32:32"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2239:5:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"2333:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2342:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2345:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2335:6:32"},"nodeType":"YulFunctionCall","src":"2335:12:32"},"nodeType":"YulExpressionStatement","src":"2335:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2302:5:32"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2323:5:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2316:6:32"},"nodeType":"YulFunctionCall","src":"2316:13:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2309:6:32"},"nodeType":"YulFunctionCall","src":"2309:21:32"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2299:2:32"},"nodeType":"YulFunctionCall","src":"2299:32:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2292:6:32"},"nodeType":"YulFunctionCall","src":"2292:40:32"},"nodeType":"YulIf","src":"2289:60:32"},{"nodeType":"YulAssignment","src":"2358:15:32","value":{"name":"value","nodeType":"YulIdentifier","src":"2368:5:32"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2358:6:32"}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2074:9:32","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2085:7:32","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2097:6:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2105:6:32","type":""}],"src":"2032:347:32"},{"body":{"nodeType":"YulBlock","src":"2558:172:32","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2575:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"2586:2:32","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2568:6:32"},"nodeType":"YulFunctionCall","src":"2568:21:32"},"nodeType":"YulExpressionStatement","src":"2568:21:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2609:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"2620:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2605:3:32"},"nodeType":"YulFunctionCall","src":"2605:18:32"},{"kind":"number","nodeType":"YulLiteral","src":"2625:2:32","type":"","value":"22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2598:6:32"},"nodeType":"YulFunctionCall","src":"2598:30:32"},"nodeType":"YulExpressionStatement","src":"2598:30:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2648:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"2659:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2644:3:32"},"nodeType":"YulFunctionCall","src":"2644:18:32"},{"hexValue":"556e7374616b696e673a206e6f74207374616b696e67","kind":"string","nodeType":"YulLiteral","src":"2664:24:32","type":"","value":"Unstaking: not staking"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2637:6:32"},"nodeType":"YulFunctionCall","src":"2637:52:32"},"nodeType":"YulExpressionStatement","src":"2637:52:32"},{"nodeType":"YulAssignment","src":"2698:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2710:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"2721:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2706:3:32"},"nodeType":"YulFunctionCall","src":"2706:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2698:4:32"}]}]},"name":"abi_encode_tuple_t_stringliteral_6a141b6b026e8a2783b9b06b8696d05320243b7a657586fcf4b506358189df95__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2535:9:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2549:4:32","type":""}],"src":"2384:346:32"},{"body":{"nodeType":"YulBlock","src":"2909:181:32","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2926:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"2937:2:32","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2919:6:32"},"nodeType":"YulFunctionCall","src":"2919:21:32"},"nodeType":"YulExpressionStatement","src":"2919:21:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2960:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"2971:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2956:3:32"},"nodeType":"YulFunctionCall","src":"2956:18:32"},{"kind":"number","nodeType":"YulLiteral","src":"2976:2:32","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2949:6:32"},"nodeType":"YulFunctionCall","src":"2949:30:32"},"nodeType":"YulExpressionStatement","src":"2949:30:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2999:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"3010:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2995:3:32"},"nodeType":"YulFunctionCall","src":"2995:18:32"},{"hexValue":"556e7374616b696e673a206c6f636b20706572696f64206e6f74206f766572","kind":"string","nodeType":"YulLiteral","src":"3015:33:32","type":"","value":"Unstaking: lock period not over"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2988:6:32"},"nodeType":"YulFunctionCall","src":"2988:61:32"},"nodeType":"YulExpressionStatement","src":"2988:61:32"},{"nodeType":"YulAssignment","src":"3058:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3070:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"3081:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3066:3:32"},"nodeType":"YulFunctionCall","src":"3066:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3058:4:32"}]}]},"name":"abi_encode_tuple_t_stringliteral_6dbb76120780ac290fd31e593804dd93e5459ea534b2464ae98ba428bdfd31d3__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2886:9:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2900:4:32","type":""}],"src":"2735:355:32"},{"body":{"nodeType":"YulBlock","src":"3127:95:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3144:1:32","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3151:3:32","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3156:10:32","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3147:3:32"},"nodeType":"YulFunctionCall","src":"3147:20:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3137:6:32"},"nodeType":"YulFunctionCall","src":"3137:31:32"},"nodeType":"YulExpressionStatement","src":"3137:31:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3184:1:32","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3187:4:32","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3177:6:32"},"nodeType":"YulFunctionCall","src":"3177:15:32"},"nodeType":"YulExpressionStatement","src":"3177:15:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3208:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3211:4:32","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3201:6:32"},"nodeType":"YulFunctionCall","src":"3201:15:32"},"nodeType":"YulExpressionStatement","src":"3201:15:32"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"3095:127:32"},{"body":{"nodeType":"YulBlock","src":"3275:77:32","statements":[{"nodeType":"YulAssignment","src":"3285:16:32","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3296:1:32"},{"name":"y","nodeType":"YulIdentifier","src":"3299:1:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3292:3:32"},"nodeType":"YulFunctionCall","src":"3292:9:32"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"3285:3:32"}]},{"body":{"nodeType":"YulBlock","src":"3324:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"3326:16:32"},"nodeType":"YulFunctionCall","src":"3326:18:32"},"nodeType":"YulExpressionStatement","src":"3326:18:32"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3316:1:32"},{"name":"sum","nodeType":"YulIdentifier","src":"3319:3:32"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3313:2:32"},"nodeType":"YulFunctionCall","src":"3313:10:32"},"nodeType":"YulIf","src":"3310:36:32"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"3258:1:32","type":""},{"name":"y","nodeType":"YulTypedName","src":"3261:1:32","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"3267:3:32","type":""}],"src":"3227:125:32"},{"body":{"nodeType":"YulBlock","src":"3406:79:32","statements":[{"nodeType":"YulAssignment","src":"3416:17:32","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3428:1:32"},{"name":"y","nodeType":"YulIdentifier","src":"3431:1:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3424:3:32"},"nodeType":"YulFunctionCall","src":"3424:9:32"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"3416:4:32"}]},{"body":{"nodeType":"YulBlock","src":"3457:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"3459:16:32"},"nodeType":"YulFunctionCall","src":"3459:18:32"},"nodeType":"YulExpressionStatement","src":"3459:18:32"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"3448:4:32"},{"name":"x","nodeType":"YulIdentifier","src":"3454:1:32"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3445:2:32"},"nodeType":"YulFunctionCall","src":"3445:11:32"},"nodeType":"YulIf","src":"3442:37:32"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"3388:1:32","type":""},{"name":"y","nodeType":"YulTypedName","src":"3391:1:32","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"3397:4:32","type":""}],"src":"3357:128:32"},{"body":{"nodeType":"YulBlock","src":"3619:119:32","statements":[{"nodeType":"YulAssignment","src":"3629:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3641:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"3652:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3637:3:32"},"nodeType":"YulFunctionCall","src":"3637:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3629:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3671:9:32"},{"name":"value0","nodeType":"YulIdentifier","src":"3682:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3664:6:32"},"nodeType":"YulFunctionCall","src":"3664:25:32"},"nodeType":"YulExpressionStatement","src":"3664:25:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3709:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"3720:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3705:3:32"},"nodeType":"YulFunctionCall","src":"3705:18:32"},{"name":"value1","nodeType":"YulIdentifier","src":"3725:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3698:6:32"},"nodeType":"YulFunctionCall","src":"3698:34:32"},"nodeType":"YulExpressionStatement","src":"3698:34:32"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3580:9:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3591:6:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3599:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3610:4:32","type":""}],"src":"3490:248:32"},{"body":{"nodeType":"YulBlock","src":"3917:169:32","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3934:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"3945:2:32","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3927:6:32"},"nodeType":"YulFunctionCall","src":"3927:21:32"},"nodeType":"YulExpressionStatement","src":"3927:21:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3968:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"3979:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3964:3:32"},"nodeType":"YulFunctionCall","src":"3964:18:32"},{"kind":"number","nodeType":"YulLiteral","src":"3984:2:32","type":"","value":"19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3957:6:32"},"nodeType":"YulFunctionCall","src":"3957:30:32"},"nodeType":"YulExpressionStatement","src":"3957:30:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4007:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"4018:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4003:3:32"},"nodeType":"YulFunctionCall","src":"4003:18:32"},{"hexValue":"5374616b696e673a20616d6f756e74203e2030","kind":"string","nodeType":"YulLiteral","src":"4023:21:32","type":"","value":"Staking: amount > 0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3996:6:32"},"nodeType":"YulFunctionCall","src":"3996:49:32"},"nodeType":"YulExpressionStatement","src":"3996:49:32"},{"nodeType":"YulAssignment","src":"4054:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4066:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"4077:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4062:3:32"},"nodeType":"YulFunctionCall","src":"4062:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4054:4:32"}]}]},"name":"abi_encode_tuple_t_stringliteral_0690a8e4b631531730d9bfeb0fa4fd8225ec55de47e7b362503d980527c80ae5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3894:9:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3908:4:32","type":""}],"src":"3743:343:32"},{"body":{"nodeType":"YulBlock","src":"4265:174:32","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4282:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"4293:2:32","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4275:6:32"},"nodeType":"YulFunctionCall","src":"4275:21:32"},"nodeType":"YulExpressionStatement","src":"4275:21:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4316:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"4327:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4312:3:32"},"nodeType":"YulFunctionCall","src":"4312:18:32"},{"kind":"number","nodeType":"YulLiteral","src":"4332:2:32","type":"","value":"24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4305:6:32"},"nodeType":"YulFunctionCall","src":"4305:30:32"},"nodeType":"YulExpressionStatement","src":"4305:30:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4355:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"4366:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4351:3:32"},"nodeType":"YulFunctionCall","src":"4351:18:32"},{"hexValue":"5374616b696e673a20616c7265616479207374616b696e67","kind":"string","nodeType":"YulLiteral","src":"4371:26:32","type":"","value":"Staking: already staking"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4344:6:32"},"nodeType":"YulFunctionCall","src":"4344:54:32"},"nodeType":"YulExpressionStatement","src":"4344:54:32"},{"nodeType":"YulAssignment","src":"4407:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4419:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"4430:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4415:3:32"},"nodeType":"YulFunctionCall","src":"4415:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4407:4:32"}]}]},"name":"abi_encode_tuple_t_stringliteral_0882957523f77c6ee780235eac6554fa0cf1a717454885e14d8683aa7e8ad9ba__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4242:9:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4256:4:32","type":""}],"src":"4091:348:32"},{"body":{"nodeType":"YulBlock","src":"4618:175:32","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4635:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"4646:2:32","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4628:6:32"},"nodeType":"YulFunctionCall","src":"4628:21:32"},"nodeType":"YulExpressionStatement","src":"4628:21:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4669:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"4680:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4665:3:32"},"nodeType":"YulFunctionCall","src":"4665:18:32"},{"kind":"number","nodeType":"YulLiteral","src":"4685:2:32","type":"","value":"25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4658:6:32"},"nodeType":"YulFunctionCall","src":"4658:30:32"},"nodeType":"YulExpressionStatement","src":"4658:30:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4708:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"4719:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4704:3:32"},"nodeType":"YulFunctionCall","src":"4704:18:32"},{"hexValue":"5374616b696e673a2068617264206361702072656163686564","kind":"string","nodeType":"YulLiteral","src":"4724:27:32","type":"","value":"Staking: hard cap reached"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4697:6:32"},"nodeType":"YulFunctionCall","src":"4697:55:32"},"nodeType":"YulExpressionStatement","src":"4697:55:32"},{"nodeType":"YulAssignment","src":"4761:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4773:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"4784:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4769:3:32"},"nodeType":"YulFunctionCall","src":"4769:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4761:4:32"}]}]},"name":"abi_encode_tuple_t_stringliteral_97489df0d9f2859eb1564424a1f8f89e238e19e9f094b93d8f3720f732307f8c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4595:9:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4609:4:32","type":""}],"src":"4444:349:32"},{"body":{"nodeType":"YulBlock","src":"4972:175:32","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4989:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"5000:2:32","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4982:6:32"},"nodeType":"YulFunctionCall","src":"4982:21:32"},"nodeType":"YulExpressionStatement","src":"4982:21:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5023:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"5034:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5019:3:32"},"nodeType":"YulFunctionCall","src":"5019:18:32"},{"kind":"number","nodeType":"YulLiteral","src":"5039:2:32","type":"","value":"25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5012:6:32"},"nodeType":"YulFunctionCall","src":"5012:30:32"},"nodeType":"YulExpressionStatement","src":"5012:30:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5062:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"5073:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5058:3:32"},"nodeType":"YulFunctionCall","src":"5058:18:32"},{"hexValue":"5374616b696e673a20696e76616c6964206475726174696f6e","kind":"string","nodeType":"YulLiteral","src":"5078:27:32","type":"","value":"Staking: invalid duration"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5051:6:32"},"nodeType":"YulFunctionCall","src":"5051:55:32"},"nodeType":"YulExpressionStatement","src":"5051:55:32"},{"nodeType":"YulAssignment","src":"5115:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5127:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"5138:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5123:3:32"},"nodeType":"YulFunctionCall","src":"5123:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5115:4:32"}]}]},"name":"abi_encode_tuple_t_stringliteral_0a4dcbcb5feccfe4ca77b5300fda7ccefc484148af5ee5dc5213adf60bbaf685__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4949:9:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4963:4:32","type":""}],"src":"4798:349:32"},{"body":{"nodeType":"YulBlock","src":"5184:95:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5201:1:32","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5208:3:32","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"5213:10:32","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5204:3:32"},"nodeType":"YulFunctionCall","src":"5204:20:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5194:6:32"},"nodeType":"YulFunctionCall","src":"5194:31:32"},"nodeType":"YulExpressionStatement","src":"5194:31:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5241:1:32","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5244:4:32","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5234:6:32"},"nodeType":"YulFunctionCall","src":"5234:15:32"},"nodeType":"YulExpressionStatement","src":"5234:15:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5265:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5268:4:32","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5258:6:32"},"nodeType":"YulFunctionCall","src":"5258:15:32"},"nodeType":"YulExpressionStatement","src":"5258:15:32"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"5152:127:32"},{"body":{"nodeType":"YulBlock","src":"5336:116:32","statements":[{"nodeType":"YulAssignment","src":"5346:20:32","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5361:1:32"},{"name":"y","nodeType":"YulIdentifier","src":"5364:1:32"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5357:3:32"},"nodeType":"YulFunctionCall","src":"5357:9:32"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"5346:7:32"}]},{"body":{"nodeType":"YulBlock","src":"5424:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"5426:16:32"},"nodeType":"YulFunctionCall","src":"5426:18:32"},"nodeType":"YulExpressionStatement","src":"5426:18:32"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5395:1:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5388:6:32"},"nodeType":"YulFunctionCall","src":"5388:9:32"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"5402:1:32"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"5409:7:32"},{"name":"x","nodeType":"YulIdentifier","src":"5418:1:32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"5405:3:32"},"nodeType":"YulFunctionCall","src":"5405:15:32"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5399:2:32"},"nodeType":"YulFunctionCall","src":"5399:22:32"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5385:2:32"},"nodeType":"YulFunctionCall","src":"5385:37:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5378:6:32"},"nodeType":"YulFunctionCall","src":"5378:45:32"},"nodeType":"YulIf","src":"5375:71:32"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"5315:1:32","type":""},{"name":"y","nodeType":"YulTypedName","src":"5318:1:32","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"5324:7:32","type":""}],"src":"5284:168:32"},{"body":{"nodeType":"YulBlock","src":"5503:171:32","statements":[{"body":{"nodeType":"YulBlock","src":"5534:111:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5555:1:32","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5562:3:32","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"5567:10:32","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5558:3:32"},"nodeType":"YulFunctionCall","src":"5558:20:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5548:6:32"},"nodeType":"YulFunctionCall","src":"5548:31:32"},"nodeType":"YulExpressionStatement","src":"5548:31:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5599:1:32","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5602:4:32","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5592:6:32"},"nodeType":"YulFunctionCall","src":"5592:15:32"},"nodeType":"YulExpressionStatement","src":"5592:15:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5627:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5630:4:32","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5620:6:32"},"nodeType":"YulFunctionCall","src":"5620:15:32"},"nodeType":"YulExpressionStatement","src":"5620:15:32"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"5523:1:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5516:6:32"},"nodeType":"YulFunctionCall","src":"5516:9:32"},"nodeType":"YulIf","src":"5513:132:32"},{"nodeType":"YulAssignment","src":"5654:14:32","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5663:1:32"},{"name":"y","nodeType":"YulIdentifier","src":"5666:1:32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"5659:3:32"},"nodeType":"YulFunctionCall","src":"5659:9:32"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"5654:1:32"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"5488:1:32","type":""},{"name":"y","nodeType":"YulTypedName","src":"5491:1:32","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"5497:1:32","type":""}],"src":"5457:217:32"},{"body":{"nodeType":"YulBlock","src":"5808:145:32","statements":[{"nodeType":"YulAssignment","src":"5818:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5830:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"5841:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5826:3:32"},"nodeType":"YulFunctionCall","src":"5826:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5818:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5860:9:32"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5875:6:32"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5891:3:32","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"5896:1:32","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5887:3:32"},"nodeType":"YulFunctionCall","src":"5887:11:32"},{"kind":"number","nodeType":"YulLiteral","src":"5900:1:32","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5883:3:32"},"nodeType":"YulFunctionCall","src":"5883:19:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5871:3:32"},"nodeType":"YulFunctionCall","src":"5871:32:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5853:6:32"},"nodeType":"YulFunctionCall","src":"5853:51:32"},"nodeType":"YulExpressionStatement","src":"5853:51:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5924:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"5935:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5920:3:32"},"nodeType":"YulFunctionCall","src":"5920:18:32"},{"name":"value1","nodeType":"YulIdentifier","src":"5940:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5913:6:32"},"nodeType":"YulFunctionCall","src":"5913:34:32"},"nodeType":"YulExpressionStatement","src":"5913:34:32"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5769:9:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5780:6:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5788:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5799:4:32","type":""}],"src":"5679:274:32"},{"body":{"nodeType":"YulBlock","src":"6115:218:32","statements":[{"nodeType":"YulAssignment","src":"6125:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6137:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"6148:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6133:3:32"},"nodeType":"YulFunctionCall","src":"6133:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6125:4:32"}]},{"nodeType":"YulVariableDeclaration","src":"6160:29:32","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6178:3:32","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"6183:1:32","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6174:3:32"},"nodeType":"YulFunctionCall","src":"6174:11:32"},{"kind":"number","nodeType":"YulLiteral","src":"6187:1:32","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6170:3:32"},"nodeType":"YulFunctionCall","src":"6170:19:32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"6164:2:32","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6205:9:32"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6220:6:32"},{"name":"_1","nodeType":"YulIdentifier","src":"6228:2:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6216:3:32"},"nodeType":"YulFunctionCall","src":"6216:15:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6198:6:32"},"nodeType":"YulFunctionCall","src":"6198:34:32"},"nodeType":"YulExpressionStatement","src":"6198:34:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6252:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"6263:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6248:3:32"},"nodeType":"YulFunctionCall","src":"6248:18:32"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"6272:6:32"},{"name":"_1","nodeType":"YulIdentifier","src":"6280:2:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6268:3:32"},"nodeType":"YulFunctionCall","src":"6268:15:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6241:6:32"},"nodeType":"YulFunctionCall","src":"6241:43:32"},"nodeType":"YulExpressionStatement","src":"6241:43:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6304:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"6315:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6300:3:32"},"nodeType":"YulFunctionCall","src":"6300:18:32"},{"name":"value2","nodeType":"YulIdentifier","src":"6320:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6293:6:32"},"nodeType":"YulFunctionCall","src":"6293:34:32"},"nodeType":"YulExpressionStatement","src":"6293:34:32"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6068:9:32","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6079:6:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6087:6:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6095:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6106:4:32","type":""}],"src":"5958:375:32"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_contract$_IERC20_$2219__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), iszero(iszero(value3)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_encode_tuple_t_stringliteral_6a141b6b026e8a2783b9b06b8696d05320243b7a657586fcf4b506358189df95__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Unstaking: not staking\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6dbb76120780ac290fd31e593804dd93e5459ea534b2464ae98ba428bdfd31d3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Unstaking: lock period not over\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_0690a8e4b631531730d9bfeb0fa4fd8225ec55de47e7b362503d980527c80ae5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Staking: amount > 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_0882957523f77c6ee780235eac6554fa0cf1a717454885e14d8683aa7e8ad9ba__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Staking: already staking\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_97489df0d9f2859eb1564424a1f8f89e238e19e9f094b93d8f3720f732307f8c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Staking: hard cap reached\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_0a4dcbcb5feccfe4ca77b5300fda7ccefc484148af5ee5dc5213adf60bbaf685__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Staking: invalid duration\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n}","id":32,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"9755":[{"length":32,"start":254},{"length":32,"start":933},{"length":32,"start":1607}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063ba85c2591161008c578063d82e396211610066578063d82e396214610235578063f2fde38b14610248578063f3aab1041461025b578063f6c4dd8d1461026e57600080fd5b8063ba85c259146101dc578063c2277742146101ef578063d7e751ba1461022257600080fd5b80637b0472f0116100c85780637b0472f014610145578063817b1cd2146101585780638da5cb5b1461016f5780639168ae721461018057600080fd5b80632def6620146100ef57806370af9b14146100f9578063715018a61461013d575b600080fd5b6100f7610280565b005b6101207f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6100f761041f565b6100f7610153366004610b3e565b610431565b61016160025481565b604051908152602001610134565b6000546001600160a01b0316610120565b6101ba61018e366004610b7c565b600360208190526000918252604090912080546001820154600283015492909301549092919060ff1684565b6040805194855260208501939093529183015215156060820152608001610134565b6101616101ea366004610b9e565b6106c8565b6102126101fd366004610b7c565b60046020526000908152604090205460ff1681565b6040519015158152602001610134565b6100f7610230366004610bb7565b6106e9565b610161610243366004610b7c565b610750565b6100f7610256366004610b7c565b6108e1565b610161610269366004610b9e565b61091f565b6101616a52b7d2dcc80cd2e400000081565b61028861092f565b33600090815260036020526040902080546102e35760405162461bcd60e51b8152602060048201526016602482015275556e7374616b696e673a206e6f74207374616b696e6760501b60448201526064015b60405180910390fd5b80600201544210156103375760405162461bcd60e51b815260206004820152601f60248201527f556e7374616b696e673a206c6f636b20706572696f64206e6f74206f7665720060448201526064016102da565b600061034233610750565b905060008183600001546103569190610c09565b905082600001546002600082825461036e9190610c22565b9091555050336000818152600360208190526040822082815560018101839055600281019290925501805460ff191690556103d4907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169083610959565b8254604080519182526020820184905233917f7fc4727e062e336010f2c282598ef5f14facb3de68cf8195c2f23e1454b2b74e910160405180910390a250505061041d60018055565b565b6104276109bd565b61041d60006109ea565b61043961092f565b6000821161047f5760405162461bcd60e51b815260206004820152601360248201527205374616b696e673a20616d6f756e74203e203606c1b60448201526064016102da565b33600090815260036020526040902054156104dc5760405162461bcd60e51b815260206004820152601860248201527f5374616b696e673a20616c7265616479207374616b696e67000000000000000060448201526064016102da565b6a52b7d2dcc80cd2e4000000826002546104f69190610c09565b11156105445760405162461bcd60e51b815260206004820152601960248201527f5374616b696e673a20686172642063617020726561636865640000000000000060448201526064016102da565b600061054f82610a3a565b9050600081116105a15760405162461bcd60e51b815260206004820152601960248201527f5374616b696e673a20696e76616c6964206475726174696f6e0000000000000060448201526064016102da565b82600260008282546105b39190610c09565b92505081905550604051806080016040528084815260200142815260200182426105dd9190610c09565b81523360008181526004602090815260408083205460ff161515948201949094528282526003808252918490208551815590850151600182015592840151600284015560609093015191909201805460ff191691151591909117905561066f906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016903086610a8e565b33600081815260036020908152604091829020600201548251878152918201527f1449c6dd7851abc30abf37f57715f492010519147cc2652fbc38202c18a6ee90910160405180910390a2506106c460018055565b5050565b600581815481106106d857600080fd5b600091825260209091200154905081565b6106f16109bd565b6001600160a01b038216600081815260046020908152604091829020805460ff191685151590811790915591519182527f479b155fd9ee4e038b5bb63a809c961882d5d8c138a03b33c7dc81c35b77975d910160405180910390a25050565b6001600160a01b0381166000908152600360208181526040808420815160808101835281548082526001830154948201949094526002820154928101929092529092015460ff161515606083015282036107ad5750600092915050565b6000816020015182604001516107c39190610c22565b9050600082606001516107d75760056107da565b60065b80548060200260200160405190810160405280929190818152602001828054801561082457602002820191906000526020600020905b815481526020019060010190808311610810575b5050505050905060006301e13380831061085a578160038151811061084b5761084b610c35565b602002602001015190506108bc565b62ed4e008310610877578160028151811061084b5761084b610c35565b6276a7008310610894578160018151811061084b5761084b610c35565b62278d0083106108bc57816000815181106108b1576108b1610c35565b602002602001015190505b8351612710906108cd908390610c4b565b6108d79190610c62565b9695505050505050565b6108e96109bd565b6001600160a01b03811661091357604051631e4fbdf760e01b8152600060048201526024016102da565b61091c816109ea565b50565b600681815481106106d857600080fd5b60026001540361095257604051633ee5aeb560e01b815260040160405180910390fd5b6002600155565b6040516001600160a01b038381166024830152604482018390526109b891859182169063a9059cbb906064015b604051602081830303815290604052915060e01b6020820180516001600160e01b038381831617835250505050610acd565b505050565b6000546001600160a01b0316331461041d5760405163118cdaa760e01b81523360048201526024016102da565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600081601e03610a4e575062278d00919050565b81605a03610a6057506276a700919050565b8160b403610a72575062ed4e00919050565b8161016d03610a8657506301e13380919050565b506000919050565b6040516001600160a01b038481166024830152838116604483015260648201839052610ac79186918216906323b872dd90608401610986565b50505050565b600080602060008451602086016000885af180610af0576040513d6000823e3d81fd5b50506000513d91508115610b08578060011415610b15565b6001600160a01b0384163b155b15610ac757604051635274afe760e01b81526001600160a01b03851660048201526024016102da565b60008060408385031215610b5157600080fd5b50508035926020909101359150565b80356001600160a01b0381168114610b7757600080fd5b919050565b600060208284031215610b8e57600080fd5b610b9782610b60565b9392505050565b600060208284031215610bb057600080fd5b5035919050565b60008060408385031215610bca57600080fd5b610bd383610b60565b915060208301358015158114610be857600080fd5b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b80820180821115610c1c57610c1c610bf3565b92915050565b81810381811115610c1c57610c1c610bf3565b634e487b7160e01b600052603260045260246000fd5b8082028115828204841417610c1c57610c1c610bf3565b600082610c7f57634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220f1d2ad828b4af4c6079e075b8be3e3873544cde9e9dd0af94aa49f93c2a3c64164736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xBA85C259 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xD82E3962 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xD82E3962 EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0xF3AAB104 EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0xF6C4DD8D EQ PUSH2 0x26E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBA85C259 EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0xC2277742 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0xD7E751BA EQ PUSH2 0x222 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7B0472F0 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x7B0472F0 EQ PUSH2 0x145 JUMPI DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0x9168AE72 EQ PUSH2 0x180 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2DEF6620 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x70AF9B14 EQ PUSH2 0xF9 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x13D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF7 PUSH2 0x280 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x120 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF7 PUSH2 0x41F JUMP JUMPDEST PUSH2 0xF7 PUSH2 0x153 CALLDATASIZE PUSH1 0x4 PUSH2 0xB3E JUMP JUMPDEST PUSH2 0x431 JUMP JUMPDEST PUSH2 0x161 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x134 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x120 JUMP JUMPDEST PUSH2 0x1BA PUSH2 0x18E CALLDATASIZE PUSH1 0x4 PUSH2 0xB7C JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD SWAP3 SWAP1 SWAP4 ADD SLOAD SWAP1 SWAP3 SWAP2 SWAP1 PUSH1 0xFF AND DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x134 JUMP JUMPDEST PUSH2 0x161 PUSH2 0x1EA CALLDATASIZE PUSH1 0x4 PUSH2 0xB9E JUMP JUMPDEST PUSH2 0x6C8 JUMP JUMPDEST PUSH2 0x212 PUSH2 0x1FD CALLDATASIZE PUSH1 0x4 PUSH2 0xB7C JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x134 JUMP JUMPDEST PUSH2 0xF7 PUSH2 0x230 CALLDATASIZE PUSH1 0x4 PUSH2 0xBB7 JUMP JUMPDEST PUSH2 0x6E9 JUMP JUMPDEST PUSH2 0x161 PUSH2 0x243 CALLDATASIZE PUSH1 0x4 PUSH2 0xB7C JUMP JUMPDEST PUSH2 0x750 JUMP JUMPDEST PUSH2 0xF7 PUSH2 0x256 CALLDATASIZE PUSH1 0x4 PUSH2 0xB7C JUMP JUMPDEST PUSH2 0x8E1 JUMP JUMPDEST PUSH2 0x161 PUSH2 0x269 CALLDATASIZE PUSH1 0x4 PUSH2 0xB9E JUMP JUMPDEST PUSH2 0x91F JUMP JUMPDEST PUSH2 0x161 PUSH11 0x52B7D2DCC80CD2E4000000 DUP2 JUMP JUMPDEST PUSH2 0x288 PUSH2 0x92F JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x2E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x556E7374616B696E673A206E6F74207374616B696E67 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x337 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E7374616B696E673A206C6F636B20706572696F64206E6F74206F76657200 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2DA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x342 CALLER PUSH2 0x750 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x356 SWAP2 SWAP1 PUSH2 0xC09 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x0 ADD SLOAD PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x36E SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP3 DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP4 SWAP1 SSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 SSTORE ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0x3D4 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP4 PUSH2 0x959 JUMP JUMPDEST DUP3 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP5 SWAP1 MSTORE CALLER SWAP2 PUSH32 0x7FC4727E062E336010F2C282598EF5F14FACB3DE68CF8195C2F23E1454B2B74E SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP PUSH2 0x41D PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x427 PUSH2 0x9BD JUMP JUMPDEST PUSH2 0x41D PUSH1 0x0 PUSH2 0x9EA JUMP JUMPDEST PUSH2 0x439 PUSH2 0x92F JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x47F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x5374616B696E673A20616D6F756E74203E203 PUSH1 0x6C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2DA JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x4DC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E673A20616C7265616479207374616B696E670000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2DA JUMP JUMPDEST PUSH11 0x52B7D2DCC80CD2E4000000 DUP3 PUSH1 0x2 SLOAD PUSH2 0x4F6 SWAP2 SWAP1 PUSH2 0xC09 JUMP JUMPDEST GT ISZERO PUSH2 0x544 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E673A206861726420636170207265616368656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2DA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x54F DUP3 PUSH2 0xA3A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x5A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E673A20696E76616C6964206475726174696F6E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2DA JUMP JUMPDEST DUP3 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x5B3 SWAP2 SWAP1 PUSH2 0xC09 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP3 TIMESTAMP PUSH2 0x5DD SWAP2 SWAP1 PUSH2 0xC09 JUMP JUMPDEST DUP2 MSTORE CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO SWAP5 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP3 DUP3 MSTORE PUSH1 0x3 DUP1 DUP3 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP6 MLOAD DUP2 SSTORE SWAP1 DUP6 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE SWAP3 DUP5 ADD MLOAD PUSH1 0x2 DUP5 ADD SSTORE PUSH1 0x60 SWAP1 SWAP4 ADD MLOAD SWAP2 SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x66F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 ADDRESS DUP7 PUSH2 0xA8E JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD DUP3 MLOAD DUP8 DUP2 MSTORE SWAP2 DUP3 ADD MSTORE PUSH32 0x1449C6DD7851ABC30ABF37F57715F492010519147CC2652FBC38202C18A6EE90 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x6C4 PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x6D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH2 0x6F1 PUSH2 0x9BD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP6 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x479B155FD9EE4E038B5BB63A809C961882D5D8C138A03B33C7DC81C35B77975D SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP2 MLOAD PUSH1 0x80 DUP2 ADD DUP4 MSTORE DUP2 SLOAD DUP1 DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD SWAP5 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 SWAP3 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x60 DUP4 ADD MSTORE DUP3 SUB PUSH2 0x7AD JUMPI POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x20 ADD MLOAD DUP3 PUSH1 0x40 ADD MLOAD PUSH2 0x7C3 SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x60 ADD MLOAD PUSH2 0x7D7 JUMPI PUSH1 0x5 PUSH2 0x7DA JUMP JUMPDEST PUSH1 0x6 JUMPDEST DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x824 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x810 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH4 0x1E13380 DUP4 LT PUSH2 0x85A JUMPI DUP2 PUSH1 0x3 DUP2 MLOAD DUP2 LT PUSH2 0x84B JUMPI PUSH2 0x84B PUSH2 0xC35 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH2 0x8BC JUMP JUMPDEST PUSH3 0xED4E00 DUP4 LT PUSH2 0x877 JUMPI DUP2 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x84B JUMPI PUSH2 0x84B PUSH2 0xC35 JUMP JUMPDEST PUSH3 0x76A700 DUP4 LT PUSH2 0x894 JUMPI DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x84B JUMPI PUSH2 0x84B PUSH2 0xC35 JUMP JUMPDEST PUSH3 0x278D00 DUP4 LT PUSH2 0x8BC JUMPI DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x8B1 JUMPI PUSH2 0x8B1 PUSH2 0xC35 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP JUMPDEST DUP4 MLOAD PUSH2 0x2710 SWAP1 PUSH2 0x8CD SWAP1 DUP4 SWAP1 PUSH2 0xC4B JUMP JUMPDEST PUSH2 0x8D7 SWAP2 SWAP1 PUSH2 0xC62 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x8E9 PUSH2 0x9BD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x913 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2DA JUMP JUMPDEST PUSH2 0x91C DUP2 PUSH2 0x9EA JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x6D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x952 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0x9B8 SWAP2 DUP6 SWAP2 DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xACD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x41D JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2DA JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1E SUB PUSH2 0xA4E JUMPI POP PUSH3 0x278D00 SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH1 0x5A SUB PUSH2 0xA60 JUMPI POP PUSH3 0x76A700 SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH1 0xB4 SUB PUSH2 0xA72 JUMPI POP PUSH3 0xED4E00 SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH2 0x16D SUB PUSH2 0xA86 JUMPI POP PUSH4 0x1E13380 SWAP2 SWAP1 POP JUMP JUMPDEST POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0xAC7 SWAP2 DUP7 SWAP2 DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x84 ADD PUSH2 0x986 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 PUSH1 0x0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH1 0x0 DUP9 GAS CALL DUP1 PUSH2 0xAF0 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST POP POP PUSH1 0x0 MLOAD RETURNDATASIZE SWAP2 POP DUP2 ISZERO PUSH2 0xB08 JUMPI DUP1 PUSH1 0x1 EQ ISZERO PUSH2 0xB15 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0xAC7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2DA JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB97 DUP3 PUSH2 0xB60 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBCA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBD3 DUP4 PUSH2 0xB60 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xBE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xC1C JUMPI PUSH2 0xC1C PUSH2 0xBF3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xC1C JUMPI PUSH2 0xC1C PUSH2 0xBF3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0xC1C JUMPI PUSH2 0xC1C PUSH2 0xBF3 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xC7F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALL 0xD2 0xAD DUP3 DUP12 0x4A DELEGATECALL 0xC6 SMOD SWAP15 SMOD JUMPDEST DUP12 0xE3 0xE3 DUP8 CALLDATALOAD PREVRANDAO 0xCD 0xE9 0xE9 0xDD EXP 0xF9 0x4A LOG4 SWAP16 SWAP4 0xC2 LOG3 0xC6 COINBASE PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"293:3276:29:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1888:551;;;:::i;:::-;;469:31;;;;;;;;-1:-1:-1;;;;;193:32:32;;;175:51;;163:2;148:18;469:31:29;;;;;;;;2293:101:0;;;:::i;1146:737:29:-;;;;;;:::i;:::-;;:::i;506:26::-;;;;;;;;;636:25:32;;;624:2;609:18;506:26:29;490:177:32;1638:85:0;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;1638:85;;605:45:29;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1474:25:32;;;1530:2;1515:18;;1508:34;;;;1558:18;;;1551:34;1628:14;1621:22;1616:2;1601:18;;1594:50;1461:3;1446:19;605:45:29;1249:401:32;704:50:29;;;;;;:::i;:::-;;:::i;656:42::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2005:14:32;;1998:22;1980:41;;1968:2;1953:18;656:42:29;1840:187:32;2444:125:29;;;;;;:::i;:::-;;:::i;2574:673::-;;;;;;:::i;:::-;;:::i;2543:215:0:-;;;;;;:::i;:::-;;:::i;760:47:29:-;;;;;;:::i;:::-;;:::i;538:61::-;;581:18;538:61;;1888:551;2500:21:18;:19;:21::i;:::-;1975:10:29::1;1939:25;1967:19:::0;;;:7:::1;:19;::::0;;;;2004:13;;1996:52:::1;;;::::0;-1:-1:-1;;;1996:52:29;;2586:2:32;1996:52:29::1;::::0;::::1;2568:21:32::0;2625:2;2605:18;;;2598:30;-1:-1:-1;;;2644:18:32;;;2637:52;2706:18;;1996:52:29::1;;;;;;;;;2085:6;:16;;;2066:15;:35;;2058:79;;;::::0;-1:-1:-1;;;2058:79:29;;2937:2:32;2058:79:29::1;::::0;::::1;2919:21:32::0;2976:2;2956:18;;;2949:30;3015:33;2995:18;;;2988:61;3066:18;;2058:79:29::1;2735:355:32::0;2058:79:29::1;2147:14;2164:27;2180:10;2164:15;:27::i;:::-;2147:44;;2201:19;2239:6;2223;:13;;;:22;;;;:::i;:::-;2201:44;;2270:6;:13;;;2255:11;;:28;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;2308:10:29::1;2300:19;::::0;;;:7:::1;:19;::::0;;;;;;2293:26;;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;;;::::1;::::0;;-1:-1:-1;;2293:26:29::1;::::0;;2329:45:::1;::::0;:7:::1;-1:-1:-1::0;;;;;2329:20:29::1;::::0;2362:11;2329:20:::1;:45::i;:::-;2410:13:::0;;2389:43:::1;::::0;;3664:25:32;;;3720:2;3705:18;;3698:34;;;2398:10:29::1;::::0;2389:43:::1;::::0;3637:18:32;2389:43:29::1;;;;;;;1929:510;;;2542:20:18::0;1857:1;3068:21;;2888:208;2542:20;1888:551:29:o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;1146:737:29:-:0;2500:21:18;:19;:21::i;:::-;1250:1:29::1;1241:6;:10;1233:42;;;::::0;-1:-1:-1;;;1233:42:29;;3945:2:32;1233:42:29::1;::::0;::::1;3927:21:32::0;3984:2;3964:18;;;3957:30;-1:-1:-1;;;4003:18:32;;;3996:49;4062:18;;1233:42:29::1;3743:343:32::0;1233:42:29::1;1301:10;1293:19;::::0;;;:7:::1;:19;::::0;;;;:26;:31;1285:68:::1;;;::::0;-1:-1:-1;;;1285:68:29;;4293:2:32;1285:68:29::1;::::0;::::1;4275:21:32::0;4332:2;4312:18;;;4305:30;4371:26;4351:18;;;4344:54;4415:18;;1285:68:29::1;4091:348:32::0;1285:68:29::1;581:18;1385:6;1371:11;;:20;;;;:::i;:::-;:40;;1363:78;;;::::0;-1:-1:-1;;;1363:78:29;;4646:2:32;1363:78:29::1;::::0;::::1;4628:21:32::0;4685:2;4665:18;;;4658:30;4724:27;4704:18;;;4697:55;4769:18;;1363:78:29::1;4444:349:32::0;1363:78:29::1;1451:22;1476:37;1498:14;1476:21;:37::i;:::-;1451:62;;1548:1;1531:14;:18;1523:56;;;::::0;-1:-1:-1;;;1523:56:29;;5000:2:32;1523:56:29::1;::::0;::::1;4982:21:32::0;5039:2;5019:18;;;5012:30;5078:27;5058:18;;;5051:55;5123:18;;1523:56:29::1;4798:349:32::0;1523:56:29::1;1604:6;1589:11;;:21;;;;;;;:::i;:::-;;;;;;;;1642:93;;;;;;;;1653:6;1642:93;;;;1661:15;1642:93;;;;1696:14;1678:15;:32;;;;:::i;:::-;1642:93:::0;;1723:10:::1;1712:22;::::0;;;:10:::1;1642:93;1712:22:::0;;;;;;;;::::1;;1642:93;;::::0;;::::1;::::0;;;;1620:19;;;:7:::1;:19:::0;;;;;;;:115;;;;;;::::1;::::0;1712:22;1620:115;::::1;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;;;;::::1;::::0;;-1:-1:-1;;1620:115:29::1;::::0;::::1;;::::0;;;::::1;::::0;;1745:59:::1;::::0;-1:-1:-1;;;;;1745:7:29::1;:24;::::0;1790:4:::1;1797:6:::0;1745:24:::1;:59::i;:::-;1826:10;1846:19;::::0;;;:7:::1;:19;::::0;;;;;;;;:29:::1;;::::0;1819:57;;3664:25:32;;;3705:18;;;3698:34;1819:57:29::1;::::0;3637:18:32;1819:57:29::1;;;;;;;1223:660;2542:20:18::0;1857:1;3068:21;;2888:208;2542:20;1146:737:29;;:::o;704:50::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;704:50:29;:::o;2444:125::-;1531:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;2509:16:29;::::1;;::::0;;;:10:::1;:16;::::0;;;;;;;;:23;;-1:-1:-1;;2509:23:29::1;::::0;::::1;;::::0;;::::1;::::0;;;2539:27;;1980:41:32;;;2539:27:29::1;::::0;1953:18:32;2539:27:29::1;;;;;;;2444:125:::0;;:::o;2574:673::-;-1:-1:-1;;;;;2689:22:29;;2643:7;2689:22;;;:7;:22;;;;;;;;2662:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2725:18;;2721:32;;-1:-1:-1;2752:1:29;;2574:673;-1:-1:-1;;2574:673:29:o;2721:32::-;2763:23;2808:6;:12;;;2789:6;:16;;;:31;;;;:::i;:::-;2763:57;;2830:22;2855:6;:17;;;:41;;2885:11;2855:41;;;2875:7;2855:41;2830:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2906:15;2959:8;2939:15;:29;2935:255;;2980:5;2986:1;2980:8;;;;;;;;:::i;:::-;;;;;;;2970:18;;2935:255;;;3027:8;3007:15;:29;3003:187;;3048:5;3054:1;3048:8;;;;;;;;:::i;3003:187::-;3095:7;3075:15;:28;3071:119;;3115:5;3121:1;3115:8;;;;;;;;:::i;3071:119::-;3162:7;3142:15;:28;3138:52;;3182:5;3188:1;3182:8;;;;;;;;:::i;:::-;;;;;;;3172:18;;3138:52;3208:13;;3235:5;;3208:23;;3224:7;;3208:23;:::i;:::-;3207:33;;;;:::i;:::-;3200:40;2574:673;-1:-1:-1;;;;;;2574:673:29:o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;175:51:32::0;148:18;;2672:31:0::1;14:218:32::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;760:47:29:-;;;;;;;;;;;;2575:307:18;1899:1;2702:7;;:18;2698:86;;2743:30;;-1:-1:-1;;;2743:30:18;;;;;;;;;;;2698:86;1899:1;2858:7;:17;2575:307::o;1219:160:13:-;1328:43;;-1:-1:-1;;;;;5871:32:32;;;1328:43:13;;;5853:51:32;5920:18;;;5913:34;;;1301:71:13;;1321:5;;1343:14;;;;;5826:18:32;;1328:43:13;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1328:43:13;;;;;;;;;;;1301:19;:71::i;:::-;1219:160;;;:::o;1796:162:0:-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;735:10:16;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:16;1901:40:0;;;175:51:32;148:18;;1901:40:0;14:218:32;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;3252:315:29:-;3329:7;3352:14;3370:2;3352:20;3348:40;;-1:-1:-1;3381:7:29;;3252:315;-1:-1:-1;3252:315:29:o;3348:40::-;3402:14;3420:2;3402:20;3398:40;;-1:-1:-1;3431:7:29;;3252:315;-1:-1:-1;3252:315:29:o;3398:40::-;3452:14;3470:3;3452:21;3448:42;;-1:-1:-1;3482:8:29;;3252:315;-1:-1:-1;3252:315:29:o;3448:42::-;3504:14;3522:3;3504:21;3500:42;;-1:-1:-1;3534:8:29;;3252:315;-1:-1:-1;3252:315:29:o;3500:42::-;-1:-1:-1;3559:1:29;;3252:315;-1:-1:-1;3252:315:29:o;1618:188:13:-;1745:53;;-1:-1:-1;;;;;6216:15:32;;;1745:53:13;;;6198:34:32;6268:15;;;6248:18;;;6241:43;6300:18;;;6293:34;;;1718:81:13;;1738:5;;1760:18;;;;;6133::32;;1745:53:13;5958:375:32;1718:81:13;1618:188;;;;:::o;8370:720::-;8450:18;8478:19;8616:4;8613:1;8606:4;8600:11;8593:4;8587;8583:15;8580:1;8573:5;8566;8561:60;8673:7;8663:176;;8717:4;8711:11;8762:16;8759:1;8754:3;8739:40;8808:16;8803:3;8796:29;8663:176;-1:-1:-1;;8916:1:13;8910:8;8866:16;;-1:-1:-1;8942:15:13;;:68;;8994:11;9009:1;8994:16;;8942:68;;;-1:-1:-1;;;;;8960:26:13;;;:31;8942:68;8938:146;;;9033:40;;-1:-1:-1;;;9033:40:13;;-1:-1:-1;;;;;193:32:32;;9033:40:13;;;175:51:32;148:18;;9033:40:13;14:218:32;237:248;305:6;313;366:2;354:9;345:7;341:23;337:32;334:52;;;382:1;379;372:12;334:52;-1:-1:-1;;405:23:32;;;475:2;460:18;;;447:32;;-1:-1:-1;237:248:32:o;880:173::-;948:20;;-1:-1:-1;;;;;997:31:32;;987:42;;977:70;;1043:1;1040;1033:12;977:70;880:173;;;:::o;1058:186::-;1117:6;1170:2;1158:9;1149:7;1145:23;1141:32;1138:52;;;1186:1;1183;1176:12;1138:52;1209:29;1228:9;1209:29;:::i;:::-;1199:39;1058:186;-1:-1:-1;;;1058:186:32:o;1655:180::-;1714:6;1767:2;1755:9;1746:7;1742:23;1738:32;1735:52;;;1783:1;1780;1773:12;1735:52;-1:-1:-1;1806:23:32;;1655:180;-1:-1:-1;1655:180:32:o;2032:347::-;2097:6;2105;2158:2;2146:9;2137:7;2133:23;2129:32;2126:52;;;2174:1;2171;2164:12;2126:52;2197:29;2216:9;2197:29;:::i;:::-;2187:39;;2276:2;2265:9;2261:18;2248:32;2323:5;2316:13;2309:21;2302:5;2299:32;2289:60;;2345:1;2342;2335:12;2289:60;2368:5;2358:15;;;2032:347;;;;;:::o;3095:127::-;3156:10;3151:3;3147:20;3144:1;3137:31;3187:4;3184:1;3177:15;3211:4;3208:1;3201:15;3227:125;3292:9;;;3313:10;;;3310:36;;;3326:18;;:::i;:::-;3227:125;;;;:::o;3357:128::-;3424:9;;;3445:11;;;3442:37;;;3459:18;;:::i;5152:127::-;5213:10;5208:3;5204:20;5201:1;5194:31;5244:4;5241:1;5234:15;5268:4;5265:1;5258:15;5284:168;5357:9;;;5388;;5405:15;;;5399:22;;5385:37;5375:71;;5426:18;;:::i;5457:217::-;5497:1;5523;5513:132;;5567:10;5562:3;5558:20;5555:1;5548:31;5602:4;5599:1;5592:15;5630:4;5627:1;5620:15;5513:132;-1:-1:-1;5659:9:32;;5457:217::o"},"methodIdentifiers":{"F_TOKEN()":"70af9b14","STAKING_HARD_CAP()":"f6c4dd8d","calculateReward(address)":"d82e3962","isLpStaker(address)":"c2277742","lpRates(uint256)":"f3aab104","normalRates(uint256)":"ba85c259","owner()":"8da5cb5b","renounceOwnership()":"715018a6","setLpStaker(address,bool)":"d7e751ba","stake(uint256,uint256)":"7b0472f0","stakers(address)":"9168ae72","totalStaked()":"817b1cd2","transferOwnership(address)":"f2fde38b","unstake()":"2def6620"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_fTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isLp\",\"type\":\"bool\"}],\"name\":\"LpStatusChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unlocksOn\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"Unstaked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"F_TOKEN\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STAKING_HARD_CAP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"stakerAddress\",\"type\":\"address\"}],\"name\":\"calculateReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isLpStaker\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"lpRates\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"normalRates\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isLp\",\"type\":\"bool\"}],\"name\":\"setLpStaker\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"durationInDays\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"since\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unlocksOn\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isLpStaker\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Staking.sol\":\"Staking\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"contracts/Staking.sol\":{\"keccak256\":\"0x2f5179cad36c356d3b753c91fc6df1b77001242c99d8373817ba37f6f6d399e8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://469fcd31145bf4b72b6e509a33b77331ca55ab94602adf25ce4b43d4b01eb642\",\"dweb:/ipfs/Qmbqp5BxWFEnPRghXovVeTKKVEgLKnfLRUSUpR9XGXX7sX\"]}},\"version\":1}"}},"contracts/TokenVesting.sol":{"TokenVesting":{"abi":[{"inputs":[{"internalType":"address","name":"_tokenAddress","type":"address"},{"internalType":"address","name":"_beneficiaryAddress","type":"address"},{"internalType":"address","name":"_initialOwner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"TokensDeposited","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beneficiary","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"TokensReleased","type":"event"},{"inputs":[],"name":"BENEFICIARY","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"CLIFF_DURATION","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"TOKEN","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"TOTAL_VESTING_DURATION","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"VESTING_START_TIMESTAMP","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_totalAmount","type":"uint256"}],"name":"depositVestingTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getReleasableAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"release","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"releasedAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"totalLockedAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_10245":{"entryPoint":null,"id":10245,"parameterSlots":3,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":307,"id":146,"parameterSlots":1,"returnSlots":0},"abi_decode_address_fromMemory":{"entryPoint":387,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_address_fromMemory":{"entryPoint":415,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_22f6cce1339c595bc00e2ef664940191a976b44113a916acf104399415592cad__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f7fa774e3cadc6f520fabdd5e1c12fb7597a9cfb0d311d6ef76c37293f85e631__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1474:32","statements":[{"nodeType":"YulBlock","src":"6:3:32","statements":[]},{"body":{"nodeType":"YulBlock","src":"74:117:32","statements":[{"nodeType":"YulAssignment","src":"84:22:32","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"99:6:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"93:5:32"},"nodeType":"YulFunctionCall","src":"93:13:32"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"84:5:32"}]},{"body":{"nodeType":"YulBlock","src":"169:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"178:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"181:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"171:6:32"},"nodeType":"YulFunctionCall","src":"171:12:32"},"nodeType":"YulExpressionStatement","src":"171:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"128:5:32"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"139:5:32"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"154:3:32","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"159:1:32","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"150:3:32"},"nodeType":"YulFunctionCall","src":"150:11:32"},{"kind":"number","nodeType":"YulLiteral","src":"163:1:32","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"146:3:32"},"nodeType":"YulFunctionCall","src":"146:19:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"135:3:32"},"nodeType":"YulFunctionCall","src":"135:31:32"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"125:2:32"},"nodeType":"YulFunctionCall","src":"125:42:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"118:6:32"},"nodeType":"YulFunctionCall","src":"118:50:32"},"nodeType":"YulIf","src":"115:70:32"}]},"name":"abi_decode_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"53:6:32","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"64:5:32","type":""}],"src":"14:177:32"},{"body":{"nodeType":"YulBlock","src":"311:263:32","statements":[{"body":{"nodeType":"YulBlock","src":"357:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"366:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"369:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"359:6:32"},"nodeType":"YulFunctionCall","src":"359:12:32"},"nodeType":"YulExpressionStatement","src":"359:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"332:7:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"341:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"328:3:32"},"nodeType":"YulFunctionCall","src":"328:23:32"},{"kind":"number","nodeType":"YulLiteral","src":"353:2:32","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"324:3:32"},"nodeType":"YulFunctionCall","src":"324:32:32"},"nodeType":"YulIf","src":"321:52:32"},{"nodeType":"YulAssignment","src":"382:50:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"422:9:32"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"392:29:32"},"nodeType":"YulFunctionCall","src":"392:40:32"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"382:6:32"}]},{"nodeType":"YulAssignment","src":"441:59:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"485:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"496:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"481:3:32"},"nodeType":"YulFunctionCall","src":"481:18:32"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"451:29:32"},"nodeType":"YulFunctionCall","src":"451:49:32"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"441:6:32"}]},{"nodeType":"YulAssignment","src":"509:59:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"553:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"564:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"549:3:32"},"nodeType":"YulFunctionCall","src":"549:18:32"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"519:29:32"},"nodeType":"YulFunctionCall","src":"519:49:32"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"509:6:32"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"261:9:32","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"272:7:32","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"284:6:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"292:6:32","type":""},{"name":"value2","nodeType":"YulTypedName","src":"300:6:32","type":""}],"src":"196:378:32"},{"body":{"nodeType":"YulBlock","src":"680:102:32","statements":[{"nodeType":"YulAssignment","src":"690:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"702:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"713:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"698:3:32"},"nodeType":"YulFunctionCall","src":"698:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"690:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"732:9:32"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"747:6:32"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"763:3:32","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"768:1:32","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"759:3:32"},"nodeType":"YulFunctionCall","src":"759:11:32"},{"kind":"number","nodeType":"YulLiteral","src":"772:1:32","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"755:3:32"},"nodeType":"YulFunctionCall","src":"755:19:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"743:3:32"},"nodeType":"YulFunctionCall","src":"743:32:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"725:6:32"},"nodeType":"YulFunctionCall","src":"725:51:32"},"nodeType":"YulExpressionStatement","src":"725:51:32"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"649:9:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"660:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"671:4:32","type":""}],"src":"579:203:32"},{"body":{"nodeType":"YulBlock","src":"961:169:32","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"978:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"989:2:32","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"971:6:32"},"nodeType":"YulFunctionCall","src":"971:21:32"},"nodeType":"YulExpressionStatement","src":"971:21:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1012:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"1023:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1008:3:32"},"nodeType":"YulFunctionCall","src":"1008:18:32"},{"kind":"number","nodeType":"YulLiteral","src":"1028:2:32","type":"","value":"19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1001:6:32"},"nodeType":"YulFunctionCall","src":"1001:30:32"},"nodeType":"YulExpressionStatement","src":"1001:30:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1051:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"1062:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1047:3:32"},"nodeType":"YulFunctionCall","src":"1047:18:32"},{"hexValue":"42656e6566696369617279206973207a65726f","kind":"string","nodeType":"YulLiteral","src":"1067:21:32","type":"","value":"Beneficiary is zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1040:6:32"},"nodeType":"YulFunctionCall","src":"1040:49:32"},"nodeType":"YulExpressionStatement","src":"1040:49:32"},{"nodeType":"YulAssignment","src":"1098:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1110:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"1121:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1106:3:32"},"nodeType":"YulFunctionCall","src":"1106:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1098:4:32"}]}]},"name":"abi_encode_tuple_t_stringliteral_22f6cce1339c595bc00e2ef664940191a976b44113a916acf104399415592cad__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"938:9:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"952:4:32","type":""}],"src":"787:343:32"},{"body":{"nodeType":"YulBlock","src":"1309:163:32","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1326:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"1337:2:32","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1319:6:32"},"nodeType":"YulFunctionCall","src":"1319:21:32"},"nodeType":"YulExpressionStatement","src":"1319:21:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1360:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"1371:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1356:3:32"},"nodeType":"YulFunctionCall","src":"1356:18:32"},{"kind":"number","nodeType":"YulLiteral","src":"1376:2:32","type":"","value":"13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1349:6:32"},"nodeType":"YulFunctionCall","src":"1349:30:32"},"nodeType":"YulExpressionStatement","src":"1349:30:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1399:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"1410:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1395:3:32"},"nodeType":"YulFunctionCall","src":"1395:18:32"},{"hexValue":"546f6b656e206973207a65726f","kind":"string","nodeType":"YulLiteral","src":"1415:15:32","type":"","value":"Token is zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1388:6:32"},"nodeType":"YulFunctionCall","src":"1388:43:32"},"nodeType":"YulExpressionStatement","src":"1388:43:32"},{"nodeType":"YulAssignment","src":"1440:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1452:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"1463:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1448:3:32"},"nodeType":"YulFunctionCall","src":"1448:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1440:4:32"}]}]},"name":"abi_encode_tuple_t_stringliteral_f7fa774e3cadc6f520fabdd5e1c12fb7597a9cfb0d311d6ef76c37293f85e631__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1286:9:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1300:4:32","type":""}],"src":"1135:337:32"}]},"contents":"{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        value2 := abi_decode_address_fromMemory(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_22f6cce1339c595bc00e2ef664940191a976b44113a916acf104399415592cad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Beneficiary is zero\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f7fa774e3cadc6f520fabdd5e1c12fb7597a9cfb0d311d6ef76c37293f85e631__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"Token is zero\")\n        tail := add(headStart, 96)\n    }\n}","id":32,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"61012060405234801561001157600080fd5b50604051610b6d380380610b6d8339810160408190526100309161019f565b806001600160a01b03811661006057604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b61006981610133565b506001600160a01b0382166100c05760405162461bcd60e51b815260206004820152601360248201527f42656e6566696369617279206973207a65726f000000000000000000000000006044820152606401610057565b6001600160a01b0383166101065760405162461bcd60e51b815260206004820152600d60248201526c546f6b656e206973207a65726f60981b6044820152606401610057565b506001600160a01b039182166080521660a05242610100526303c2670060c052630d28688060e0526101e2565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b038116811461019a57600080fd5b919050565b6000806000606084860312156101b457600080fd5b6101bd84610183565b92506101cb60208501610183565b91506101d960408501610183565b90509250925092565b60805160a05160c05160e051610100516108ed610280600039600081816101b601528181610575015281816105cc015261062e0152600081816101f0015281816105ab015261068601526000818161018f015281816105540152818161060d015261066501526000818160f5015281816102530152818161034b015261037201526000818161014701528181610329015261043401526108ed6000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806386d1a69f1161008c578063ba175dfa11610066578063ba175dfa146101b1578063cc279e80146101d8578063d4ce2b75146101eb578063f2fde38b1461021257600080fd5b806386d1a69f146101715780638da5cb5b14610179578063b3daa6521461018a57600080fd5b806305a9f274146100d45780632f99c6cc146100f057806345d30a171461012f578063715018a61461013857806382bfefc8146101425780638401b96814610169575b600080fd5b6100dd60015481565b6040519081526020015b60405180910390f35b6101177f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100e7565b6100dd60025481565b610140610225565b005b6101177f000000000000000000000000000000000000000000000000000000000000000081565b6100dd610239565b610140610248565b6000546001600160a01b0316610117565b6100dd7f000000000000000000000000000000000000000000000000000000000000000081565b6100dd7f000000000000000000000000000000000000000000000000000000000000000081565b6101406101e63660046107f3565b6103d6565b6100dd7f000000000000000000000000000000000000000000000000000000000000000081565b61014061022036600461080c565b610492565b61022d6104d0565b61023760006104fd565b565b600061024361054d565b905090565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146102b85760405162461bcd60e51b815260206004820152601060248201526f4f6e6c792062656e656669636961727960801b60448201526064015b60405180910390fd5b60006102c261054d565b9050600081116103045760405162461bcd60e51b815260206004820152600d60248201526c4e6f20746f6b656e732064756560981b60448201526064016102af565b80600260008282546103169190610852565b9091555061037090506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f0000000000000000000000000000000000000000000000000000000000000000836106df565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167fc7798891864187665ac6dd119286e44ec13f014527aeeb2b8eb3fd413df93179826040516103cb91815260200190565b60405180910390a250565b6103de6104d0565b600154156104225760405162461bcd60e51b81526020600482015260116024820152704465706f736974656420616c726561647960781b60448201526064016102af565b600181905561045c6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333084610743565b6040518181527f77acf75e237f9aae98f997395832d522bdb695e4a9bd07704936aa889a3667d19060200160405180910390a150565b61049a6104d0565b6001600160a01b0381166104c457604051631e4fbdf760e01b8152600060048201526024016102af565b6104cd816104fd565b50565b6000546001600160a01b031633146102375760405163118cdaa760e01b81523360048201526024016102af565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006105997f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000610852565b4210156105a65750600090565b6105f07f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000610852565b421061060657600254600154610243919061086b565b60006106527f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000610852565b61065c904261086b565b905060006106aa7f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000061086b565b9050600081836001546106bd919061087e565b6106c79190610895565b9050600254816106d7919061086b565b935050505090565b6040516001600160a01b0383811660248301526044820183905261073e91859182169063a9059cbb906064015b604051602081830303815290604052915060e01b6020820180516001600160e01b038381831617835250505050610782565b505050565b6040516001600160a01b03848116602483015283811660448301526064820183905261077c9186918216906323b872dd9060840161070c565b50505050565b600080602060008451602086016000885af1806107a5576040513d6000823e3d81fd5b50506000513d915081156107bd5780600114156107ca565b6001600160a01b0384163b155b1561077c57604051635274afe760e01b81526001600160a01b03851660048201526024016102af565b60006020828403121561080557600080fd5b5035919050565b60006020828403121561081e57600080fd5b81356001600160a01b038116811461083557600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b808201808211156108655761086561083c565b92915050565b818103818111156108655761086561083c565b80820281158282048414176108655761086561083c565b6000826108b257634e487b7160e01b600052601260045260246000fd5b50049056fea26469706673582212209cddb6b064cbd3a061fb7c1693a60ca8a8866a5cdc7a35a78b4159eadd28fbf864736f6c63430008140033","opcodes":"PUSH2 0x120 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xB6D CODESIZE SUB DUP1 PUSH2 0xB6D DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x30 SWAP2 PUSH2 0x19F JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x60 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x69 DUP2 PUSH2 0x133 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42656E6566696369617279206973207A65726F00000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x57 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x106 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x546F6B656E206973207A65726F PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x57 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x80 MSTORE AND PUSH1 0xA0 MSTORE TIMESTAMP PUSH2 0x100 MSTORE PUSH4 0x3C26700 PUSH1 0xC0 MSTORE PUSH4 0xD286880 PUSH1 0xE0 MSTORE PUSH2 0x1E2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x19A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1BD DUP5 PUSH2 0x183 JUMP JUMPDEST SWAP3 POP PUSH2 0x1CB PUSH1 0x20 DUP6 ADD PUSH2 0x183 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D9 PUSH1 0x40 DUP6 ADD PUSH2 0x183 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x8ED PUSH2 0x280 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x1B6 ADD MSTORE DUP2 DUP2 PUSH2 0x575 ADD MSTORE DUP2 DUP2 PUSH2 0x5CC ADD MSTORE PUSH2 0x62E ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x1F0 ADD MSTORE DUP2 DUP2 PUSH2 0x5AB ADD MSTORE PUSH2 0x686 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x18F ADD MSTORE DUP2 DUP2 PUSH2 0x554 ADD MSTORE DUP2 DUP2 PUSH2 0x60D ADD MSTORE PUSH2 0x665 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH1 0xF5 ADD MSTORE DUP2 DUP2 PUSH2 0x253 ADD MSTORE DUP2 DUP2 PUSH2 0x34B ADD MSTORE PUSH2 0x372 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x147 ADD MSTORE DUP2 DUP2 PUSH2 0x329 ADD MSTORE PUSH2 0x434 ADD MSTORE PUSH2 0x8ED PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x86D1A69F GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xBA175DFA GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xBA175DFA EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0xCC279E80 EQ PUSH2 0x1D8 JUMPI DUP1 PUSH4 0xD4CE2B75 EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x212 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x86D1A69F EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x179 JUMPI DUP1 PUSH4 0xB3DAA652 EQ PUSH2 0x18A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5A9F274 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x2F99C6CC EQ PUSH2 0xF0 JUMPI DUP1 PUSH4 0x45D30A17 EQ PUSH2 0x12F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0x82BFEFC8 EQ PUSH2 0x142 JUMPI DUP1 PUSH4 0x8401B968 EQ PUSH2 0x169 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDD PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x117 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE7 JUMP JUMPDEST PUSH2 0xDD PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x140 PUSH2 0x225 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x117 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0xDD PUSH2 0x239 JUMP JUMPDEST PUSH2 0x140 PUSH2 0x248 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x117 JUMP JUMPDEST PUSH2 0xDD PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0xDD PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x140 PUSH2 0x1E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x7F3 JUMP JUMPDEST PUSH2 0x3D6 JUMP JUMPDEST PUSH2 0xDD PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x140 PUSH2 0x220 CALLDATASIZE PUSH1 0x4 PUSH2 0x80C JUMP JUMPDEST PUSH2 0x492 JUMP JUMPDEST PUSH2 0x22D PUSH2 0x4D0 JUMP JUMPDEST PUSH2 0x237 PUSH1 0x0 PUSH2 0x4FD JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x243 PUSH2 0x54D JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x2B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x4F6E6C792062656E6566696369617279 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2C2 PUSH2 0x54D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x304 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x4E6F20746F6B656E7320647565 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2AF JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x316 SWAP2 SWAP1 PUSH2 0x852 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x370 SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH32 0x0 DUP4 PUSH2 0x6DF JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xC7798891864187665AC6DD119286E44EC13F014527AEEB2B8EB3FD413DF93179 DUP3 PUSH1 0x40 MLOAD PUSH2 0x3CB SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x3DE PUSH2 0x4D0 JUMP JUMPDEST PUSH1 0x1 SLOAD ISZERO PUSH2 0x422 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x4465706F736974656420616C7265616479 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2AF JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE PUSH2 0x45C PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER ADDRESS DUP5 PUSH2 0x743 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x77ACF75E237F9AAE98F997395832D522BDB695E4A9BD07704936AA889A3667D1 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x49A PUSH2 0x4D0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x4C4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2AF JUMP JUMPDEST PUSH2 0x4CD DUP2 PUSH2 0x4FD JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x237 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2AF JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x599 PUSH32 0x0 PUSH32 0x0 PUSH2 0x852 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x5A6 JUMPI POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x5F0 PUSH32 0x0 PUSH32 0x0 PUSH2 0x852 JUMP JUMPDEST TIMESTAMP LT PUSH2 0x606 JUMPI PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD PUSH2 0x243 SWAP2 SWAP1 PUSH2 0x86B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x652 PUSH32 0x0 PUSH32 0x0 PUSH2 0x852 JUMP JUMPDEST PUSH2 0x65C SWAP1 TIMESTAMP PUSH2 0x86B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x6AA PUSH32 0x0 PUSH32 0x0 PUSH2 0x86B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP4 PUSH1 0x1 SLOAD PUSH2 0x6BD SWAP2 SWAP1 PUSH2 0x87E JUMP JUMPDEST PUSH2 0x6C7 SWAP2 SWAP1 PUSH2 0x895 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 SLOAD DUP2 PUSH2 0x6D7 SWAP2 SWAP1 PUSH2 0x86B JUMP JUMPDEST SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0x73E SWAP2 DUP6 SWAP2 DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x782 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0x77C SWAP2 DUP7 SWAP2 DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x84 ADD PUSH2 0x70C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 PUSH1 0x0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH1 0x0 DUP9 GAS CALL DUP1 PUSH2 0x7A5 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST POP POP PUSH1 0x0 MLOAD RETURNDATASIZE SWAP2 POP DUP2 ISZERO PUSH2 0x7BD JUMPI DUP1 PUSH1 0x1 EQ ISZERO PUSH2 0x7CA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x77C JUMPI PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2AF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x805 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x81E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x835 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x865 JUMPI PUSH2 0x865 PUSH2 0x83C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x865 JUMPI PUSH2 0x865 PUSH2 0x83C JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x865 JUMPI PUSH2 0x865 PUSH2 0x83C JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x8B2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 0xDD 0xB6 0xB0 PUSH5 0xCBD3A061FB PUSH29 0x1693A60CA8A8866A5CDC7A35A78B4159EADD28FBF864736F6C63430008 EQ STOP CALLER ","sourceMap":"233:2337:30:-:0;;;720:474;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;815:13;-1:-1:-1;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;725:51:32;698:18;;1322:31:0;;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;;;;;;848:33:30;::::1;840:65;;;::::0;-1:-1:-1;;;840:65:30;;989:2:32;840:65:30::1;::::0;::::1;971:21:32::0;1028:2;1008:18;;;1001:30;1067:21;1047:18;;;1040:49;1106:18;;840:65:30::1;787:343:32::0;840:65:30::1;-1:-1:-1::0;;;;;923:27:30;::::1;915:53;;;::::0;-1:-1:-1;;;915:53:30;;1337:2:32;915:53:30::1;::::0;::::1;1319:21:32::0;1376:2;1356:18;;;1349:30;-1:-1:-1;;;1395:18:32;;;1388:43;1448:18;;915:53:30::1;1135:337:32::0;915:53:30::1;-1:-1:-1::0;;;;;;978:29:30;;::::1;;::::0;1017:33:::1;;::::0;1086:15:::1;1060:41;::::0;1128:12:::1;1111:29;::::0;1175:12:::1;1150:37;::::0;233:2337;;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:177:32:-;93:13;;-1:-1:-1;;;;;135:31:32;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:378::-;284:6;292;300;353:2;341:9;332:7;328:23;324:32;321:52;;;369:1;366;359:12;321:52;392:40;422:9;392:40;:::i;:::-;382:50;;451:49;496:2;485:9;481:18;451:49;:::i;:::-;441:59;;519:49;564:2;553:9;549:18;519:49;:::i;:::-;509:59;;196:378;;;;;:::o;1135:337::-;233:2337:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@BENEFICIARY_10165":{"entryPoint":null,"id":10165,"parameterSlots":0,"returnSlots":0},"@CLIFF_DURATION_10167":{"entryPoint":null,"id":10167,"parameterSlots":0,"returnSlots":0},"@TOKEN_10163":{"entryPoint":null,"id":10163,"parameterSlots":0,"returnSlots":0},"@TOTAL_VESTING_DURATION_10169":{"entryPoint":null,"id":10169,"parameterSlots":0,"returnSlots":0},"@VESTING_START_TIMESTAMP_10171":{"entryPoint":null,"id":10171,"parameterSlots":0,"returnSlots":0},"@_calculateReleasableAmount_10340":{"entryPoint":1357,"id":10340,"parameterSlots":0,"returnSlots":1},"@_callOptionalReturn_2667":{"entryPoint":1922,"id":2667,"parameterSlots":2,"returnSlots":0},"@_checkOwner_84":{"entryPoint":1232,"id":84,"parameterSlots":0,"returnSlots":0},"@_msgSender_3731":{"entryPoint":null,"id":3731,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_146":{"entryPoint":1277,"id":146,"parameterSlots":1,"returnSlots":0},"@depositVestingTokens_10384":{"entryPoint":982,"id":10384,"parameterSlots":1,"returnSlots":0},"@getReleasableAmount_10349":{"entryPoint":569,"id":10349,"parameterSlots":0,"returnSlots":1},"@owner_67":{"entryPoint":null,"id":67,"parameterSlots":0,"returnSlots":1},"@release_10285":{"entryPoint":584,"id":10285,"parameterSlots":0,"returnSlots":0},"@releasedAmount_10175":{"entryPoint":null,"id":10175,"parameterSlots":0,"returnSlots":0},"@renounceOwnership_98":{"entryPoint":549,"id":98,"parameterSlots":0,"returnSlots":0},"@safeTransferFrom_2317":{"entryPoint":1859,"id":2317,"parameterSlots":4,"returnSlots":0},"@safeTransfer_2290":{"entryPoint":1759,"id":2290,"parameterSlots":3,"returnSlots":0},"@totalLockedAmount_10173":{"entryPoint":null,"id":10173,"parameterSlots":0,"returnSlots":0},"@transferOwnership_126":{"entryPoint":1170,"id":126,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_address":{"entryPoint":2060,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":2035,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_contract$_IERC20_$2219__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1f7b4a6487610819c173ea871f75f2ea6c0cfbe06590b462fb02637c029c3ca8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6d7d0b87a1f27c8ca3bc5d6d69e2d75024f0eaa4e98d7be64586a2ba8804e028__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7e2dd7552b90edf2011346287bb6c296ed95d0bbf5b4216c87bf0c018b200e11__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":2130,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":2197,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":2174,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":2155,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":2108,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3582:32","statements":[{"nodeType":"YulBlock","src":"6:3:32","statements":[]},{"body":{"nodeType":"YulBlock","src":"115:76:32","statements":[{"nodeType":"YulAssignment","src":"125:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"137:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"148:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"133:3:32"},"nodeType":"YulFunctionCall","src":"133:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"125:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"167:9:32"},{"name":"value0","nodeType":"YulIdentifier","src":"178:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"160:6:32"},"nodeType":"YulFunctionCall","src":"160:25:32"},"nodeType":"YulExpressionStatement","src":"160:25:32"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"84:9:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"95:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"106:4:32","type":""}],"src":"14:177:32"},{"body":{"nodeType":"YulBlock","src":"297:102:32","statements":[{"nodeType":"YulAssignment","src":"307:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"319:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"330:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"315:3:32"},"nodeType":"YulFunctionCall","src":"315:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"307:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"349:9:32"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"364:6:32"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"380:3:32","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"385:1:32","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"376:3:32"},"nodeType":"YulFunctionCall","src":"376:11:32"},{"kind":"number","nodeType":"YulLiteral","src":"389:1:32","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"372:3:32"},"nodeType":"YulFunctionCall","src":"372:19:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"360:3:32"},"nodeType":"YulFunctionCall","src":"360:32:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"342:6:32"},"nodeType":"YulFunctionCall","src":"342:51:32"},"nodeType":"YulExpressionStatement","src":"342:51:32"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"266:9:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"277:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"288:4:32","type":""}],"src":"196:203:32"},{"body":{"nodeType":"YulBlock","src":"520:102:32","statements":[{"nodeType":"YulAssignment","src":"530:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"542:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"553:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"538:3:32"},"nodeType":"YulFunctionCall","src":"538:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"530:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"572:9:32"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"587:6:32"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"603:3:32","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"608:1:32","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"599:3:32"},"nodeType":"YulFunctionCall","src":"599:11:32"},{"kind":"number","nodeType":"YulLiteral","src":"612:1:32","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"595:3:32"},"nodeType":"YulFunctionCall","src":"595:19:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"583:3:32"},"nodeType":"YulFunctionCall","src":"583:32:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"565:6:32"},"nodeType":"YulFunctionCall","src":"565:51:32"},"nodeType":"YulExpressionStatement","src":"565:51:32"}]},"name":"abi_encode_tuple_t_contract$_IERC20_$2219__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"489:9:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"500:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"511:4:32","type":""}],"src":"404:218:32"},{"body":{"nodeType":"YulBlock","src":"697:110:32","statements":[{"body":{"nodeType":"YulBlock","src":"743:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"752:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"755:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"745:6:32"},"nodeType":"YulFunctionCall","src":"745:12:32"},"nodeType":"YulExpressionStatement","src":"745:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"718:7:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"727:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"714:3:32"},"nodeType":"YulFunctionCall","src":"714:23:32"},{"kind":"number","nodeType":"YulLiteral","src":"739:2:32","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"710:3:32"},"nodeType":"YulFunctionCall","src":"710:32:32"},"nodeType":"YulIf","src":"707:52:32"},{"nodeType":"YulAssignment","src":"768:33:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"791:9:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"778:12:32"},"nodeType":"YulFunctionCall","src":"778:23:32"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"768:6:32"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"663:9:32","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"674:7:32","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"686:6:32","type":""}],"src":"627:180:32"},{"body":{"nodeType":"YulBlock","src":"882:216:32","statements":[{"body":{"nodeType":"YulBlock","src":"928:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"937:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"940:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"930:6:32"},"nodeType":"YulFunctionCall","src":"930:12:32"},"nodeType":"YulExpressionStatement","src":"930:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"903:7:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"912:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"899:3:32"},"nodeType":"YulFunctionCall","src":"899:23:32"},{"kind":"number","nodeType":"YulLiteral","src":"924:2:32","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"895:3:32"},"nodeType":"YulFunctionCall","src":"895:32:32"},"nodeType":"YulIf","src":"892:52:32"},{"nodeType":"YulVariableDeclaration","src":"953:36:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"979:9:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"966:12:32"},"nodeType":"YulFunctionCall","src":"966:23:32"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"957:5:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"1052:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1061:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1064:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1054:6:32"},"nodeType":"YulFunctionCall","src":"1054:12:32"},"nodeType":"YulExpressionStatement","src":"1054:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1011:5:32"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1022:5:32"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1037:3:32","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1042:1:32","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1033:3:32"},"nodeType":"YulFunctionCall","src":"1033:11:32"},{"kind":"number","nodeType":"YulLiteral","src":"1046:1:32","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1029:3:32"},"nodeType":"YulFunctionCall","src":"1029:19:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1018:3:32"},"nodeType":"YulFunctionCall","src":"1018:31:32"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1008:2:32"},"nodeType":"YulFunctionCall","src":"1008:42:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1001:6:32"},"nodeType":"YulFunctionCall","src":"1001:50:32"},"nodeType":"YulIf","src":"998:70:32"},{"nodeType":"YulAssignment","src":"1077:15:32","value":{"name":"value","nodeType":"YulIdentifier","src":"1087:5:32"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1077:6:32"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"848:9:32","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"859:7:32","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"871:6:32","type":""}],"src":"812:286:32"},{"body":{"nodeType":"YulBlock","src":"1277:166:32","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1294:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"1305:2:32","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1287:6:32"},"nodeType":"YulFunctionCall","src":"1287:21:32"},"nodeType":"YulExpressionStatement","src":"1287:21:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1328:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"1339:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1324:3:32"},"nodeType":"YulFunctionCall","src":"1324:18:32"},{"kind":"number","nodeType":"YulLiteral","src":"1344:2:32","type":"","value":"16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1317:6:32"},"nodeType":"YulFunctionCall","src":"1317:30:32"},"nodeType":"YulExpressionStatement","src":"1317:30:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1367:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"1378:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1363:3:32"},"nodeType":"YulFunctionCall","src":"1363:18:32"},{"hexValue":"4f6e6c792062656e6566696369617279","kind":"string","nodeType":"YulLiteral","src":"1383:18:32","type":"","value":"Only beneficiary"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1356:6:32"},"nodeType":"YulFunctionCall","src":"1356:46:32"},"nodeType":"YulExpressionStatement","src":"1356:46:32"},{"nodeType":"YulAssignment","src":"1411:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1423:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"1434:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1419:3:32"},"nodeType":"YulFunctionCall","src":"1419:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1411:4:32"}]}]},"name":"abi_encode_tuple_t_stringliteral_7e2dd7552b90edf2011346287bb6c296ed95d0bbf5b4216c87bf0c018b200e11__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1254:9:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1268:4:32","type":""}],"src":"1103:340:32"},{"body":{"nodeType":"YulBlock","src":"1622:163:32","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1639:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"1650:2:32","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1632:6:32"},"nodeType":"YulFunctionCall","src":"1632:21:32"},"nodeType":"YulExpressionStatement","src":"1632:21:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1673:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"1684:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1669:3:32"},"nodeType":"YulFunctionCall","src":"1669:18:32"},{"kind":"number","nodeType":"YulLiteral","src":"1689:2:32","type":"","value":"13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1662:6:32"},"nodeType":"YulFunctionCall","src":"1662:30:32"},"nodeType":"YulExpressionStatement","src":"1662:30:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1712:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"1723:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1708:3:32"},"nodeType":"YulFunctionCall","src":"1708:18:32"},{"hexValue":"4e6f20746f6b656e7320647565","kind":"string","nodeType":"YulLiteral","src":"1728:15:32","type":"","value":"No tokens due"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1701:6:32"},"nodeType":"YulFunctionCall","src":"1701:43:32"},"nodeType":"YulExpressionStatement","src":"1701:43:32"},{"nodeType":"YulAssignment","src":"1753:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1765:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"1776:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1761:3:32"},"nodeType":"YulFunctionCall","src":"1761:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1753:4:32"}]}]},"name":"abi_encode_tuple_t_stringliteral_6d7d0b87a1f27c8ca3bc5d6d69e2d75024f0eaa4e98d7be64586a2ba8804e028__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1599:9:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1613:4:32","type":""}],"src":"1448:337:32"},{"body":{"nodeType":"YulBlock","src":"1822:95:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1839:1:32","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1846:3:32","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1851:10:32","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1842:3:32"},"nodeType":"YulFunctionCall","src":"1842:20:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1832:6:32"},"nodeType":"YulFunctionCall","src":"1832:31:32"},"nodeType":"YulExpressionStatement","src":"1832:31:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1879:1:32","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1882:4:32","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1872:6:32"},"nodeType":"YulFunctionCall","src":"1872:15:32"},"nodeType":"YulExpressionStatement","src":"1872:15:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1903:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1906:4:32","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1896:6:32"},"nodeType":"YulFunctionCall","src":"1896:15:32"},"nodeType":"YulExpressionStatement","src":"1896:15:32"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"1790:127:32"},{"body":{"nodeType":"YulBlock","src":"1970:77:32","statements":[{"nodeType":"YulAssignment","src":"1980:16:32","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"1991:1:32"},{"name":"y","nodeType":"YulIdentifier","src":"1994:1:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1987:3:32"},"nodeType":"YulFunctionCall","src":"1987:9:32"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"1980:3:32"}]},{"body":{"nodeType":"YulBlock","src":"2019:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"2021:16:32"},"nodeType":"YulFunctionCall","src":"2021:18:32"},"nodeType":"YulExpressionStatement","src":"2021:18:32"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2011:1:32"},{"name":"sum","nodeType":"YulIdentifier","src":"2014:3:32"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2008:2:32"},"nodeType":"YulFunctionCall","src":"2008:10:32"},"nodeType":"YulIf","src":"2005:36:32"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"1953:1:32","type":""},{"name":"y","nodeType":"YulTypedName","src":"1956:1:32","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"1962:3:32","type":""}],"src":"1922:125:32"},{"body":{"nodeType":"YulBlock","src":"2226:167:32","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2243:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"2254:2:32","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2236:6:32"},"nodeType":"YulFunctionCall","src":"2236:21:32"},"nodeType":"YulExpressionStatement","src":"2236:21:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2277:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"2288:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2273:3:32"},"nodeType":"YulFunctionCall","src":"2273:18:32"},{"kind":"number","nodeType":"YulLiteral","src":"2293:2:32","type":"","value":"17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2266:6:32"},"nodeType":"YulFunctionCall","src":"2266:30:32"},"nodeType":"YulExpressionStatement","src":"2266:30:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2316:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"2327:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2312:3:32"},"nodeType":"YulFunctionCall","src":"2312:18:32"},{"hexValue":"4465706f736974656420616c7265616479","kind":"string","nodeType":"YulLiteral","src":"2332:19:32","type":"","value":"Deposited already"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2305:6:32"},"nodeType":"YulFunctionCall","src":"2305:47:32"},"nodeType":"YulExpressionStatement","src":"2305:47:32"},{"nodeType":"YulAssignment","src":"2361:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2373:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"2384:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2369:3:32"},"nodeType":"YulFunctionCall","src":"2369:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2361:4:32"}]}]},"name":"abi_encode_tuple_t_stringliteral_1f7b4a6487610819c173ea871f75f2ea6c0cfbe06590b462fb02637c029c3ca8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2203:9:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2217:4:32","type":""}],"src":"2052:341:32"},{"body":{"nodeType":"YulBlock","src":"2447:79:32","statements":[{"nodeType":"YulAssignment","src":"2457:17:32","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2469:1:32"},{"name":"y","nodeType":"YulIdentifier","src":"2472:1:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2465:3:32"},"nodeType":"YulFunctionCall","src":"2465:9:32"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"2457:4:32"}]},{"body":{"nodeType":"YulBlock","src":"2498:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"2500:16:32"},"nodeType":"YulFunctionCall","src":"2500:18:32"},"nodeType":"YulExpressionStatement","src":"2500:18:32"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"2489:4:32"},{"name":"x","nodeType":"YulIdentifier","src":"2495:1:32"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2486:2:32"},"nodeType":"YulFunctionCall","src":"2486:11:32"},"nodeType":"YulIf","src":"2483:37:32"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"2429:1:32","type":""},{"name":"y","nodeType":"YulTypedName","src":"2432:1:32","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"2438:4:32","type":""}],"src":"2398:128:32"},{"body":{"nodeType":"YulBlock","src":"2583:116:32","statements":[{"nodeType":"YulAssignment","src":"2593:20:32","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2608:1:32"},{"name":"y","nodeType":"YulIdentifier","src":"2611:1:32"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2604:3:32"},"nodeType":"YulFunctionCall","src":"2604:9:32"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"2593:7:32"}]},{"body":{"nodeType":"YulBlock","src":"2671:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"2673:16:32"},"nodeType":"YulFunctionCall","src":"2673:18:32"},"nodeType":"YulExpressionStatement","src":"2673:18:32"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2642:1:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2635:6:32"},"nodeType":"YulFunctionCall","src":"2635:9:32"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"2649:1:32"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"2656:7:32"},{"name":"x","nodeType":"YulIdentifier","src":"2665:1:32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2652:3:32"},"nodeType":"YulFunctionCall","src":"2652:15:32"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2646:2:32"},"nodeType":"YulFunctionCall","src":"2646:22:32"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2632:2:32"},"nodeType":"YulFunctionCall","src":"2632:37:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2625:6:32"},"nodeType":"YulFunctionCall","src":"2625:45:32"},"nodeType":"YulIf","src":"2622:71:32"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"2562:1:32","type":""},{"name":"y","nodeType":"YulTypedName","src":"2565:1:32","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"2571:7:32","type":""}],"src":"2531:168:32"},{"body":{"nodeType":"YulBlock","src":"2750:171:32","statements":[{"body":{"nodeType":"YulBlock","src":"2781:111:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2802:1:32","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2809:3:32","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2814:10:32","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2805:3:32"},"nodeType":"YulFunctionCall","src":"2805:20:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2795:6:32"},"nodeType":"YulFunctionCall","src":"2795:31:32"},"nodeType":"YulExpressionStatement","src":"2795:31:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2846:1:32","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2849:4:32","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2839:6:32"},"nodeType":"YulFunctionCall","src":"2839:15:32"},"nodeType":"YulExpressionStatement","src":"2839:15:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2874:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2877:4:32","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2867:6:32"},"nodeType":"YulFunctionCall","src":"2867:15:32"},"nodeType":"YulExpressionStatement","src":"2867:15:32"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"2770:1:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2763:6:32"},"nodeType":"YulFunctionCall","src":"2763:9:32"},"nodeType":"YulIf","src":"2760:132:32"},{"nodeType":"YulAssignment","src":"2901:14:32","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2910:1:32"},{"name":"y","nodeType":"YulIdentifier","src":"2913:1:32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2906:3:32"},"nodeType":"YulFunctionCall","src":"2906:9:32"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"2901:1:32"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"2735:1:32","type":""},{"name":"y","nodeType":"YulTypedName","src":"2738:1:32","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"2744:1:32","type":""}],"src":"2704:217:32"},{"body":{"nodeType":"YulBlock","src":"3055:145:32","statements":[{"nodeType":"YulAssignment","src":"3065:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3077:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"3088:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3073:3:32"},"nodeType":"YulFunctionCall","src":"3073:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3065:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3107:9:32"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3122:6:32"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3138:3:32","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"3143:1:32","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3134:3:32"},"nodeType":"YulFunctionCall","src":"3134:11:32"},{"kind":"number","nodeType":"YulLiteral","src":"3147:1:32","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3130:3:32"},"nodeType":"YulFunctionCall","src":"3130:19:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3118:3:32"},"nodeType":"YulFunctionCall","src":"3118:32:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3100:6:32"},"nodeType":"YulFunctionCall","src":"3100:51:32"},"nodeType":"YulExpressionStatement","src":"3100:51:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3171:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"3182:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3167:3:32"},"nodeType":"YulFunctionCall","src":"3167:18:32"},{"name":"value1","nodeType":"YulIdentifier","src":"3187:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3160:6:32"},"nodeType":"YulFunctionCall","src":"3160:34:32"},"nodeType":"YulExpressionStatement","src":"3160:34:32"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3016:9:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3027:6:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3035:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3046:4:32","type":""}],"src":"2926:274:32"},{"body":{"nodeType":"YulBlock","src":"3362:218:32","statements":[{"nodeType":"YulAssignment","src":"3372:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3384:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"3395:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3380:3:32"},"nodeType":"YulFunctionCall","src":"3380:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3372:4:32"}]},{"nodeType":"YulVariableDeclaration","src":"3407:29:32","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3425:3:32","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"3430:1:32","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3421:3:32"},"nodeType":"YulFunctionCall","src":"3421:11:32"},{"kind":"number","nodeType":"YulLiteral","src":"3434:1:32","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3417:3:32"},"nodeType":"YulFunctionCall","src":"3417:19:32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3411:2:32","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3452:9:32"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3467:6:32"},{"name":"_1","nodeType":"YulIdentifier","src":"3475:2:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3463:3:32"},"nodeType":"YulFunctionCall","src":"3463:15:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3445:6:32"},"nodeType":"YulFunctionCall","src":"3445:34:32"},"nodeType":"YulExpressionStatement","src":"3445:34:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3499:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"3510:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3495:3:32"},"nodeType":"YulFunctionCall","src":"3495:18:32"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"3519:6:32"},{"name":"_1","nodeType":"YulIdentifier","src":"3527:2:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3515:3:32"},"nodeType":"YulFunctionCall","src":"3515:15:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3488:6:32"},"nodeType":"YulFunctionCall","src":"3488:43:32"},"nodeType":"YulExpressionStatement","src":"3488:43:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3551:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"3562:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3547:3:32"},"nodeType":"YulFunctionCall","src":"3547:18:32"},{"name":"value2","nodeType":"YulIdentifier","src":"3567:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3540:6:32"},"nodeType":"YulFunctionCall","src":"3540:34:32"},"nodeType":"YulExpressionStatement","src":"3540:34:32"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3315:9:32","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3326:6:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3334:6:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3342:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3353:4:32","type":""}],"src":"3205:375:32"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$2219__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_7e2dd7552b90edf2011346287bb6c296ed95d0bbf5b4216c87bf0c018b200e11__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Only beneficiary\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6d7d0b87a1f27c8ca3bc5d6d69e2d75024f0eaa4e98d7be64586a2ba8804e028__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"No tokens due\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_1f7b4a6487610819c173ea871f75f2ea6c0cfbe06590b462fb02637c029c3ca8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Deposited already\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n}","id":32,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"10163":[{"length":32,"start":327},{"length":32,"start":809},{"length":32,"start":1076}],"10165":[{"length":32,"start":245},{"length":32,"start":595},{"length":32,"start":843},{"length":32,"start":882}],"10167":[{"length":32,"start":399},{"length":32,"start":1364},{"length":32,"start":1549},{"length":32,"start":1637}],"10169":[{"length":32,"start":496},{"length":32,"start":1451},{"length":32,"start":1670}],"10171":[{"length":32,"start":438},{"length":32,"start":1397},{"length":32,"start":1484},{"length":32,"start":1582}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100cf5760003560e01c806386d1a69f1161008c578063ba175dfa11610066578063ba175dfa146101b1578063cc279e80146101d8578063d4ce2b75146101eb578063f2fde38b1461021257600080fd5b806386d1a69f146101715780638da5cb5b14610179578063b3daa6521461018a57600080fd5b806305a9f274146100d45780632f99c6cc146100f057806345d30a171461012f578063715018a61461013857806382bfefc8146101425780638401b96814610169575b600080fd5b6100dd60015481565b6040519081526020015b60405180910390f35b6101177f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100e7565b6100dd60025481565b610140610225565b005b6101177f000000000000000000000000000000000000000000000000000000000000000081565b6100dd610239565b610140610248565b6000546001600160a01b0316610117565b6100dd7f000000000000000000000000000000000000000000000000000000000000000081565b6100dd7f000000000000000000000000000000000000000000000000000000000000000081565b6101406101e63660046107f3565b6103d6565b6100dd7f000000000000000000000000000000000000000000000000000000000000000081565b61014061022036600461080c565b610492565b61022d6104d0565b61023760006104fd565b565b600061024361054d565b905090565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146102b85760405162461bcd60e51b815260206004820152601060248201526f4f6e6c792062656e656669636961727960801b60448201526064015b60405180910390fd5b60006102c261054d565b9050600081116103045760405162461bcd60e51b815260206004820152600d60248201526c4e6f20746f6b656e732064756560981b60448201526064016102af565b80600260008282546103169190610852565b9091555061037090506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f0000000000000000000000000000000000000000000000000000000000000000836106df565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167fc7798891864187665ac6dd119286e44ec13f014527aeeb2b8eb3fd413df93179826040516103cb91815260200190565b60405180910390a250565b6103de6104d0565b600154156104225760405162461bcd60e51b81526020600482015260116024820152704465706f736974656420616c726561647960781b60448201526064016102af565b600181905561045c6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333084610743565b6040518181527f77acf75e237f9aae98f997395832d522bdb695e4a9bd07704936aa889a3667d19060200160405180910390a150565b61049a6104d0565b6001600160a01b0381166104c457604051631e4fbdf760e01b8152600060048201526024016102af565b6104cd816104fd565b50565b6000546001600160a01b031633146102375760405163118cdaa760e01b81523360048201526024016102af565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006105997f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000610852565b4210156105a65750600090565b6105f07f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000610852565b421061060657600254600154610243919061086b565b60006106527f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000610852565b61065c904261086b565b905060006106aa7f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000061086b565b9050600081836001546106bd919061087e565b6106c79190610895565b9050600254816106d7919061086b565b935050505090565b6040516001600160a01b0383811660248301526044820183905261073e91859182169063a9059cbb906064015b604051602081830303815290604052915060e01b6020820180516001600160e01b038381831617835250505050610782565b505050565b6040516001600160a01b03848116602483015283811660448301526064820183905261077c9186918216906323b872dd9060840161070c565b50505050565b600080602060008451602086016000885af1806107a5576040513d6000823e3d81fd5b50506000513d915081156107bd5780600114156107ca565b6001600160a01b0384163b155b1561077c57604051635274afe760e01b81526001600160a01b03851660048201526024016102af565b60006020828403121561080557600080fd5b5035919050565b60006020828403121561081e57600080fd5b81356001600160a01b038116811461083557600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b808201808211156108655761086561083c565b92915050565b818103818111156108655761086561083c565b80820281158282048414176108655761086561083c565b6000826108b257634e487b7160e01b600052601260045260246000fd5b50049056fea26469706673582212209cddb6b064cbd3a061fb7c1693a60ca8a8866a5cdc7a35a78b4159eadd28fbf864736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x86D1A69F GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xBA175DFA GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xBA175DFA EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0xCC279E80 EQ PUSH2 0x1D8 JUMPI DUP1 PUSH4 0xD4CE2B75 EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x212 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x86D1A69F EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x179 JUMPI DUP1 PUSH4 0xB3DAA652 EQ PUSH2 0x18A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5A9F274 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x2F99C6CC EQ PUSH2 0xF0 JUMPI DUP1 PUSH4 0x45D30A17 EQ PUSH2 0x12F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0x82BFEFC8 EQ PUSH2 0x142 JUMPI DUP1 PUSH4 0x8401B968 EQ PUSH2 0x169 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDD PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x117 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE7 JUMP JUMPDEST PUSH2 0xDD PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x140 PUSH2 0x225 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x117 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0xDD PUSH2 0x239 JUMP JUMPDEST PUSH2 0x140 PUSH2 0x248 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x117 JUMP JUMPDEST PUSH2 0xDD PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0xDD PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x140 PUSH2 0x1E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x7F3 JUMP JUMPDEST PUSH2 0x3D6 JUMP JUMPDEST PUSH2 0xDD PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x140 PUSH2 0x220 CALLDATASIZE PUSH1 0x4 PUSH2 0x80C JUMP JUMPDEST PUSH2 0x492 JUMP JUMPDEST PUSH2 0x22D PUSH2 0x4D0 JUMP JUMPDEST PUSH2 0x237 PUSH1 0x0 PUSH2 0x4FD JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x243 PUSH2 0x54D JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x2B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x4F6E6C792062656E6566696369617279 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2C2 PUSH2 0x54D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x304 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x4E6F20746F6B656E7320647565 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2AF JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x316 SWAP2 SWAP1 PUSH2 0x852 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x370 SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH32 0x0 DUP4 PUSH2 0x6DF JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xC7798891864187665AC6DD119286E44EC13F014527AEEB2B8EB3FD413DF93179 DUP3 PUSH1 0x40 MLOAD PUSH2 0x3CB SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x3DE PUSH2 0x4D0 JUMP JUMPDEST PUSH1 0x1 SLOAD ISZERO PUSH2 0x422 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x4465706F736974656420616C7265616479 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2AF JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE PUSH2 0x45C PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER ADDRESS DUP5 PUSH2 0x743 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x77ACF75E237F9AAE98F997395832D522BDB695E4A9BD07704936AA889A3667D1 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x49A PUSH2 0x4D0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x4C4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2AF JUMP JUMPDEST PUSH2 0x4CD DUP2 PUSH2 0x4FD JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x237 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2AF JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x599 PUSH32 0x0 PUSH32 0x0 PUSH2 0x852 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x5A6 JUMPI POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x5F0 PUSH32 0x0 PUSH32 0x0 PUSH2 0x852 JUMP JUMPDEST TIMESTAMP LT PUSH2 0x606 JUMPI PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD PUSH2 0x243 SWAP2 SWAP1 PUSH2 0x86B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x652 PUSH32 0x0 PUSH32 0x0 PUSH2 0x852 JUMP JUMPDEST PUSH2 0x65C SWAP1 TIMESTAMP PUSH2 0x86B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x6AA PUSH32 0x0 PUSH32 0x0 PUSH2 0x86B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP4 PUSH1 0x1 SLOAD PUSH2 0x6BD SWAP2 SWAP1 PUSH2 0x87E JUMP JUMPDEST PUSH2 0x6C7 SWAP2 SWAP1 PUSH2 0x895 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 SLOAD DUP2 PUSH2 0x6D7 SWAP2 SWAP1 PUSH2 0x86B JUMP JUMPDEST SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0x73E SWAP2 DUP6 SWAP2 DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x782 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0x77C SWAP2 DUP7 SWAP2 DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x84 ADD PUSH2 0x70C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 PUSH1 0x0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH1 0x0 DUP9 GAS CALL DUP1 PUSH2 0x7A5 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST POP POP PUSH1 0x0 MLOAD RETURNDATASIZE SWAP2 POP DUP2 ISZERO PUSH2 0x7BD JUMPI DUP1 PUSH1 0x1 EQ ISZERO PUSH2 0x7CA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x77C JUMPI PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2AF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x805 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x81E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x835 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x865 JUMPI PUSH2 0x865 PUSH2 0x83C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x865 JUMPI PUSH2 0x865 PUSH2 0x83C JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x865 JUMPI PUSH2 0x865 PUSH2 0x83C JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x8B2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 0xDD 0xB6 0xB0 PUSH5 0xCBD3A061FB PUSH29 0x1693A60CA8A8866A5CDC7A35A78B4159EADD28FBF864736F6C63430008 EQ STOP CALLER ","sourceMap":"233:2337:30:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;533:32;;;;;;;;;160:25:32;;;148:2;133:18;533:32:30;;;;;;;;339:36;;;;;;;;-1:-1:-1;;;;;360:32:32;;;342:51;;330:2;315:18;339:36:30;196:203:32;571:29:30;;;;;;2293:101:0;;;:::i;:::-;;304:29:30;;;;;2165:101;;;:::i;1199:381::-;;;:::i;1638:85:0:-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;1638:85;;381:39:30;;;;;479:48;;;;;2271:297;;;;;;:::i;:::-;;:::i;426:47::-;;;;;2543:215:0;;;;;;:::i;:::-;;:::i;2293:101::-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;2165::30:-;2217:7;2235:28;:26;:28::i;:::-;2228:35;;2165:101;:::o;1199:381::-;1243:10;-1:-1:-1;;;;;1257:11:30;1243:25;;1235:54;;;;-1:-1:-1;;;1235:54:30;;1305:2:32;1235:54:30;;;1287:21:32;1344:2;1324:18;;;1317:30;-1:-1:-1;;;1363:18:32;;;1356:46;1419:18;;1235:54:30;;;;;;;;;1299:24;1326:28;:26;:28::i;:::-;1299:55;;1391:1;1372:16;:20;1364:46;;;;-1:-1:-1;;;1364:46:30;;1650:2:32;1364:46:30;;;1632:21:32;1689:2;1669:18;;;1662:30;-1:-1:-1;;;1708:18:32;;;1701:43;1761:18;;1364:46:30;1448:337:32;1364:46:30;1438:16;1420:14;;:34;;;;;;;:::i;:::-;;;;-1:-1:-1;1464:49:30;;-1:-1:-1;;;;;;1464:5:30;:18;1483:11;1496:16;1464:18;:49::i;:::-;1543:11;-1:-1:-1;;;;;1528:45:30;;1556:16;1528:45;;;;160:25:32;;148:2;133:18;;14:177;1528:45:30;;;;;;;;1225:355;1199:381::o;2271:297::-;1531:13:0;:11;:13::i;:::-;2358:17:30::1;::::0;:22;2350:52:::1;;;::::0;-1:-1:-1;;;2350:52:30;;2254:2:32;2350:52:30::1;::::0;::::1;2236:21:32::0;2293:2;2273:18;;;2266:30;-1:-1:-1;;;2312:18:32;;;2305:47;2369:18;;2350:52:30::1;2052:341:32::0;2350:52:30::1;2412:17;:32:::0;;;2454:63:::1;-1:-1:-1::0;;;;;2454:5:30::1;:22;2477:10;2497:4;2432:12:::0;2454:22:::1;:63::i;:::-;2532:29;::::0;160:25:32;;;2532:29:30::1;::::0;148:2:32;133:18;2532:29:30::1;;;;;;;2271:297:::0;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;342:51:32::0;315:18;;2672:31:0::1;196:203:32::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;735:10:16;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:16;1901:40:0;;;342:51:32;315:18;;1901:40:0;196:203:32;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;1585:575:30:-;1645:7;1686:40;1712:14;1686:23;:40;:::i;:::-;1668:15;:58;1664:72;;;-1:-1:-1;1735:1:30;;1585:575::o;1664:72::-;1769:48;1795:22;1769:23;:48;:::i;:::-;1750:15;:67;1746:114;;1846:14;;1826:17;;:34;;;;:::i;1746:114::-;1870:19;1911:40;1937:14;1911:23;:40;:::i;:::-;1892:60;;:15;:60;:::i;:::-;1870:82;-1:-1:-1;1962:21:30;1986:39;2011:14;1986:22;:39;:::i;:::-;1962:63;;2035:20;2094:13;2079:11;2059:17;;:31;;;;:::i;:::-;2058:49;;;;:::i;:::-;2035:72;;2139:14;;2124:12;:29;;;;:::i;:::-;2117:36;;;;;1585:575;:::o;1219:160:13:-;1328:43;;-1:-1:-1;;;;;3118:32:32;;;1328:43:13;;;3100:51:32;3167:18;;;3160:34;;;1301:71:13;;1321:5;;1343:14;;;;;3073:18:32;;1328:43:13;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1328:43:13;;;;;;;;;;;1301:19;:71::i;:::-;1219:160;;;:::o;1618:188::-;1745:53;;-1:-1:-1;;;;;3463:15:32;;;1745:53:13;;;3445:34:32;3515:15;;;3495:18;;;3488:43;3547:18;;;3540:34;;;1718:81:13;;1738:5;;1760:18;;;;;3380::32;;1745:53:13;3205:375:32;1718:81:13;1618:188;;;;:::o;8370:720::-;8450:18;8478:19;8616:4;8613:1;8606:4;8600:11;8593:4;8587;8583:15;8580:1;8573:5;8566;8561:60;8673:7;8663:176;;8717:4;8711:11;8762:16;8759:1;8754:3;8739:40;8808:16;8803:3;8796:29;8663:176;-1:-1:-1;;8916:1:13;8910:8;8866:16;;-1:-1:-1;8942:15:13;;:68;;8994:11;9009:1;8994:16;;8942:68;;;-1:-1:-1;;;;;8960:26:13;;;:31;8942:68;8938:146;;;9033:40;;-1:-1:-1;;;9033:40:13;;-1:-1:-1;;;;;360:32:32;;9033:40:13;;;342:51:32;315:18;;9033:40:13;196:203:32;627:180;686:6;739:2;727:9;718:7;714:23;710:32;707:52;;;755:1;752;745:12;707:52;-1:-1:-1;778:23:32;;627:180;-1:-1:-1;627:180:32:o;812:286::-;871:6;924:2;912:9;903:7;899:23;895:32;892:52;;;940:1;937;930:12;892:52;966:23;;-1:-1:-1;;;;;1018:31:32;;1008:42;;998:70;;1064:1;1061;1054:12;998:70;1087:5;812:286;-1:-1:-1;;;812:286:32:o;1790:127::-;1851:10;1846:3;1842:20;1839:1;1832:31;1882:4;1879:1;1872:15;1906:4;1903:1;1896:15;1922:125;1987:9;;;2008:10;;;2005:36;;;2021:18;;:::i;:::-;1922:125;;;;:::o;2398:128::-;2465:9;;;2486:11;;;2483:37;;;2500:18;;:::i;2531:168::-;2604:9;;;2635;;2652:15;;;2646:22;;2632:37;2622:71;;2673:18;;:::i;2704:217::-;2744:1;2770;2760:132;;2814:10;2809:3;2805:20;2802:1;2795:31;2849:4;2846:1;2839:15;2877:4;2874:1;2867:15;2760:132;-1:-1:-1;2906:9:32;;2704:217::o"},"methodIdentifiers":{"BENEFICIARY()":"2f99c6cc","CLIFF_DURATION()":"b3daa652","TOKEN()":"82bfefc8","TOTAL_VESTING_DURATION()":"d4ce2b75","VESTING_START_TIMESTAMP()":"ba175dfa","depositVestingTokens(uint256)":"cc279e80","getReleasableAmount()":"8401b968","owner()":"8da5cb5b","release()":"86d1a69f","releasedAmount()":"45d30a17","renounceOwnership()":"715018a6","totalLockedAmount()":"05a9f274","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_beneficiaryAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensReleased\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BENEFICIARY\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CLIFF_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TOKEN\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TOTAL_VESTING_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VESTING_START_TIMESTAMP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_totalAmount\",\"type\":\"uint256\"}],\"name\":\"depositVestingTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReleasableAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"release\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"releasedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalLockedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TokenVesting.sol\":\"TokenVesting\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"contracts/TokenVesting.sol\":{\"keccak256\":\"0xa50a30a18db444b1002a7df3abd3529ac9864bc18c309159bc4307336e13263f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2eed98e61b33eb46ea9ce833ffa7ec50452cfe372fea9363c5fd33860d7d627c\",\"dweb:/ipfs/QmZkXDzwLeaNcXf1NZMG4jy3Rp586w47tqtGinPDHgS9oa\"]}},\"version\":1}"}},"contracts/Treasury.sol":{"IAggregatorV3":{"abi":[{"inputs":[],"name":"latestRoundData","outputs":[{"internalType":"uint80","name":"","type":"uint80"},{"internalType":"int256","name":"","type":"int256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint80","name":"","type":"uint80"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"latestRoundData()":"feaf968c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Treasury.sol\":\"IAggregatorV3\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"contracts/Treasury.sol\":{\"keccak256\":\"0xb70ced93e8dabf40fab5da4b6a9d728b809f241b14db41998163cea0961b2f7f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://47a2c57edce830a8c1cb704405c9512bc20e8691c8627cd6b5bfe11c87482aa4\",\"dweb:/ipfs/QmdSmETvxrZezMy47vFLyAgEWssPB5FNtccLXXETmsMcSu\"]}},\"version\":1}"},"IPancakeRouter":{"abi":[{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address[]","name":"","type":"address[]"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"swapExactTokensForTokens","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)":"38ed1739"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Treasury.sol\":\"IPancakeRouter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"contracts/Treasury.sol\":{\"keccak256\":\"0xb70ced93e8dabf40fab5da4b6a9d728b809f241b14db41998163cea0961b2f7f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://47a2c57edce830a8c1cb704405c9512bc20e8691c8627cd6b5bfe11c87482aa4\",\"dweb:/ipfs/QmdSmETvxrZezMy47vFLyAgEWssPB5FNtccLXXETmsMcSu\"]}},\"version\":1}"},"Treasury":{"abi":[{"inputs":[{"internalType":"address","name":"_fTokenAddress","type":"address"},{"internalType":"address","name":"_stablecoinAddress","type":"address"},{"internalType":"address","name":"_routerAddress","type":"address"},{"internalType":"address","name":"_chainlinkFeedAddress","type":"address"},{"internalType":"address","name":"_stakingContract","type":"address"},{"internalType":"address","name":"_initialOwner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"FundsReceived","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"amountBought","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amountBurned","type":"uint256"}],"name":"ReburnExecuted","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"newPrice","type":"uint256"}],"name":"SoftFloorPriceUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"amountBought","type":"uint256"},{"indexed":false,"internalType":"int256","name":"currentPrice","type":"int256"}],"name":"SoftFloorProtected","type":"event"},{"inputs":[],"name":"FINAL_SUPPLY_TARGET","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"F_TOKEN","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"F_TOKEN_CONTRACT_ADDRESS","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PANCAKE_ROUTER","outputs":[{"internalType":"contract IPancakeRouter","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PRICE_FEED","outputs":[{"internalType":"contract IAggregatorV3","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"REBURN_ACTIVATION_TIMESTAMP","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"STABLECOIN","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"STAKING_CONTRACT","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"depositFees","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"executeReburn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getFTokenPrice","outputs":[{"internalType":"int256","name":"","type":"int256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lastBuybackTimestamp","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"protectSoftFloor","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_newPrice","type":"uint256"}],"name":"setSoftFloorPrice","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"softFloorPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_10551":{"entryPoint":null,"id":10551,"parameterSlots":6,"returnSlots":0},"@_3823":{"entryPoint":null,"id":3823,"parameterSlots":0,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":205,"id":146,"parameterSlots":1,"returnSlots":0},"abi_decode_address_fromMemory":{"entryPoint":285,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_addresst_addresst_addresst_address_fromMemory":{"entryPoint":314,"id":null,"parameterSlots":2,"returnSlots":6},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":443,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1269:32","statements":[{"nodeType":"YulBlock","src":"6:3:32","statements":[]},{"body":{"nodeType":"YulBlock","src":"74:117:32","statements":[{"nodeType":"YulAssignment","src":"84:22:32","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"99:6:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"93:5:32"},"nodeType":"YulFunctionCall","src":"93:13:32"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"84:5:32"}]},{"body":{"nodeType":"YulBlock","src":"169:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"178:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"181:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"171:6:32"},"nodeType":"YulFunctionCall","src":"171:12:32"},"nodeType":"YulExpressionStatement","src":"171:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"128:5:32"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"139:5:32"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"154:3:32","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"159:1:32","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"150:3:32"},"nodeType":"YulFunctionCall","src":"150:11:32"},{"kind":"number","nodeType":"YulLiteral","src":"163:1:32","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"146:3:32"},"nodeType":"YulFunctionCall","src":"146:19:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"135:3:32"},"nodeType":"YulFunctionCall","src":"135:31:32"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"125:2:32"},"nodeType":"YulFunctionCall","src":"125:42:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"118:6:32"},"nodeType":"YulFunctionCall","src":"118:50:32"},"nodeType":"YulIf","src":"115:70:32"}]},"name":"abi_decode_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"53:6:32","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"64:5:32","type":""}],"src":"14:177:32"},{"body":{"nodeType":"YulBlock","src":"362:470:32","statements":[{"body":{"nodeType":"YulBlock","src":"409:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"418:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"421:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"411:6:32"},"nodeType":"YulFunctionCall","src":"411:12:32"},"nodeType":"YulExpressionStatement","src":"411:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"383:7:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"392:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"379:3:32"},"nodeType":"YulFunctionCall","src":"379:23:32"},{"kind":"number","nodeType":"YulLiteral","src":"404:3:32","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"375:3:32"},"nodeType":"YulFunctionCall","src":"375:33:32"},"nodeType":"YulIf","src":"372:53:32"},{"nodeType":"YulAssignment","src":"434:50:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"474:9:32"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"444:29:32"},"nodeType":"YulFunctionCall","src":"444:40:32"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"434:6:32"}]},{"nodeType":"YulAssignment","src":"493:59:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"537:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"548:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"533:3:32"},"nodeType":"YulFunctionCall","src":"533:18:32"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"503:29:32"},"nodeType":"YulFunctionCall","src":"503:49:32"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"493:6:32"}]},{"nodeType":"YulAssignment","src":"561:59:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"605:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"616:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"601:3:32"},"nodeType":"YulFunctionCall","src":"601:18:32"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"571:29:32"},"nodeType":"YulFunctionCall","src":"571:49:32"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"561:6:32"}]},{"nodeType":"YulAssignment","src":"629:59:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"673:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"684:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"669:3:32"},"nodeType":"YulFunctionCall","src":"669:18:32"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"639:29:32"},"nodeType":"YulFunctionCall","src":"639:49:32"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"629:6:32"}]},{"nodeType":"YulAssignment","src":"697:60:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"741:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"752:3:32","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"737:3:32"},"nodeType":"YulFunctionCall","src":"737:19:32"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"707:29:32"},"nodeType":"YulFunctionCall","src":"707:50:32"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"697:6:32"}]},{"nodeType":"YulAssignment","src":"766:60:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"810:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"821:3:32","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"806:3:32"},"nodeType":"YulFunctionCall","src":"806:19:32"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"776:29:32"},"nodeType":"YulFunctionCall","src":"776:50:32"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"766:6:32"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_addresst_addresst_addresst_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"288:9:32","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"299:7:32","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"311:6:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"319:6:32","type":""},{"name":"value2","nodeType":"YulTypedName","src":"327:6:32","type":""},{"name":"value3","nodeType":"YulTypedName","src":"335:6:32","type":""},{"name":"value4","nodeType":"YulTypedName","src":"343:6:32","type":""},{"name":"value5","nodeType":"YulTypedName","src":"351:6:32","type":""}],"src":"196:636:32"},{"body":{"nodeType":"YulBlock","src":"938:102:32","statements":[{"nodeType":"YulAssignment","src":"948:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"960:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"971:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"956:3:32"},"nodeType":"YulFunctionCall","src":"956:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"948:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"990:9:32"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1005:6:32"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1021:3:32","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1026:1:32","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1017:3:32"},"nodeType":"YulFunctionCall","src":"1017:11:32"},{"kind":"number","nodeType":"YulLiteral","src":"1030:1:32","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1013:3:32"},"nodeType":"YulFunctionCall","src":"1013:19:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1001:3:32"},"nodeType":"YulFunctionCall","src":"1001:32:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"983:6:32"},"nodeType":"YulFunctionCall","src":"983:51:32"},"nodeType":"YulExpressionStatement","src":"983:51:32"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"907:9:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"918:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"929:4:32","type":""}],"src":"837:203:32"},{"body":{"nodeType":"YulBlock","src":"1093:174:32","statements":[{"nodeType":"YulAssignment","src":"1103:16:32","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"1114:1:32"},{"name":"y","nodeType":"YulIdentifier","src":"1117:1:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1110:3:32"},"nodeType":"YulFunctionCall","src":"1110:9:32"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"1103:3:32"}]},{"body":{"nodeType":"YulBlock","src":"1150:111:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1171:1:32","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1178:3:32","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1183:10:32","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1174:3:32"},"nodeType":"YulFunctionCall","src":"1174:20:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1164:6:32"},"nodeType":"YulFunctionCall","src":"1164:31:32"},"nodeType":"YulExpressionStatement","src":"1164:31:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1215:1:32","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1218:4:32","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1208:6:32"},"nodeType":"YulFunctionCall","src":"1208:15:32"},"nodeType":"YulExpressionStatement","src":"1208:15:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1243:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1246:4:32","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1236:6:32"},"nodeType":"YulFunctionCall","src":"1236:15:32"},"nodeType":"YulExpressionStatement","src":"1236:15:32"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"1134:1:32"},{"name":"sum","nodeType":"YulIdentifier","src":"1137:3:32"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1131:2:32"},"nodeType":"YulFunctionCall","src":"1131:10:32"},"nodeType":"YulIf","src":"1128:133:32"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"1076:1:32","type":""},{"name":"y","nodeType":"YulTypedName","src":"1079:1:32","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"1085:3:32","type":""}],"src":"1045:222:32"}]},"contents":"{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        value2 := abi_decode_address_fromMemory(add(headStart, 64))\n        value3 := abi_decode_address_fromMemory(add(headStart, 96))\n        value4 := abi_decode_address_fromMemory(add(headStart, 128))\n        value5 := abi_decode_address_fromMemory(add(headStart, 160))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n}","id":32,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"61018060405261dead610140523480156200001957600080fd5b506040516200115c3803806200115c8339810160408190526200003c916200013a565b806001600160a01b0381166200006c57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b6200007781620000cd565b50600180556001600160a01b03808716608081905286821660a05285821660c05284821660e05261010052821661012052620000b842630f099c00620001bb565b6101605250504260035550620001e392505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146200013557600080fd5b919050565b60008060008060008060c087890312156200015457600080fd5b6200015f876200011d565b95506200016f602088016200011d565b94506200017f604088016200011d565b93506200018f606088016200011d565b92506200019f608088016200011d565b9150620001af60a088016200011d565b90509295509295509295565b80820180821115620001dd57634e487b7160e01b600052601160045260246000fd5b92915050565b60805160a05160c05160e05161010051610120516101405161016051610ebf6200029d60003960008181610196015261059301526000610909015260008181610270015261085c015260008181610237015261051c015260008181610146015261041f01526000818161029701528181610a440152610afd0152600081816102100152818161032a0152818161073b015281816109990152610a730152600081816101bd0152818161060401526109ed0152610ebf6000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c80638da5cb5b116100a2578063da19ddfb11610071578063da19ddfb1461026b578063e08836dd14610292578063ebdac090146102b9578063efaee8a3146102cc578063f2fde38b146102d457600080fd5b80638da5cb5b146101fa57806393a397761461020b578063c3b6453e14610232578063c62016741461025957600080fd5b80635d7bdbea116100e95780635d7bdbea1461018857806362cd20181461019157806370af9b14146101b8578063715018a6146101df57806372a6bf8e146101e757600080fd5b80631a647fb71461011b578063218656e41461012557806331eb318a146101415780633238549114610180575b600080fd5b6101236102e7565b005b61012e60035481565b6040519081526020015b60405180910390f35b6101687f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610138565b61012e61041a565b61012e60025481565b61012e7f000000000000000000000000000000000000000000000000000000000000000081565b6101687f000000000000000000000000000000000000000000000000000000000000000081565b6101236104bc565b6101236101f5366004610ba9565b6104ce565b6000546001600160a01b0316610168565b6101687f000000000000000000000000000000000000000000000000000000000000000081565b6101687f000000000000000000000000000000000000000000000000000000000000000081565b61012e6a295be96e6406697200000081565b6101687f000000000000000000000000000000000000000000000000000000000000000081565b6101687f000000000000000000000000000000000000000000000000000000000000000081565b6101236102c7366004610ba9565b610511565b610123610589565b6101236102e2366004610bc2565b6107f1565b6102ef61082c565b6002541561040f57600061030161041a565b90506002548112610312575061040f565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610379573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061039d9190610bf2565b9050806000036103ae57505061040f565b600060646103bd836005610c21565b6103c79190610c38565b90506103d281610856565b60408051828152602081018590527f58c0c80496c71ceee0ba72810063be557bd3d50134028f18238d16ee9189a671910160405180910390a15050505b61041860018055565b565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561047b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049f9190610c79565b505050915050806402540be4006104b69190610cc9565b91505090565b6104c4610884565b61041860006108b1565b6104d6610884565b60028190556040518181527fa8bb388cf429c59dff818d603dba53ef8a6683d6daf61985bb28d136719ddced9060200160405180910390a150565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105865760405162461bcd60e51b815260206004820152601560248201527413db9b1e481188151bdad95b8818dbdb9d1c9858dd605a1b60448201526064015b60405180910390fd5b50565b61059161082c565b7f00000000000000000000000000000000000000000000000000000000000000004210156105f65760405162461bcd60e51b815260206004820152601260248201527152652d6275726e206e6f742061637469766560701b604482015260640161057d565b6a295be96e640669720000007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610660573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106849190610bf2565b116106d15760405162461bcd60e51b815260206004820152601b60248201527f46696e616c20737570706c792074617267657420726561636865640000000000604482015260640161057d565b6003546106e19062278d00610cf9565b4210156107235760405162461bcd60e51b815260206004820152601060248201526f293296b13ab9371031b7b7b63237bbb760811b604482015260640161057d565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa15801561078a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ae9190610bf2565b9050806000036107be575061040f565b600060646107cd836001610c21565b6107d79190610c38565b90506107e281610901565b50504260035561041860018055565b6107f9610884565b6001600160a01b03811661082357604051631e4fbdf760e01b81526000600482015260240161057d565b610586816108b1565b60026001540361084f57604051633ee5aeb560e01b815260040160405180910390fd5b6002600155565b610880817f0000000000000000000000000000000000000000000000000000000000000000610972565b5050565b6000546001600160a01b031633146104185760405163118cdaa760e01b815233600482015260240161057d565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600061092d827f0000000000000000000000000000000000000000000000000000000000000000610972565b905080156108805760408051838152602081018390527fbca429eac1a1f219916f1d45dd2ebfaca65503f5c0ca15922cd1ca7679f90fb4910160405180910390a15050565b604080516002808252606082018352600092839291906020830190803683370190505090507f0000000000000000000000000000000000000000000000000000000000000000816000815181106109cb576109cb610d22565b60200260200101906001600160a01b031690816001600160a01b0316815250507f000000000000000000000000000000000000000000000000000000000000000081600181518110610a1f57610a1f610d22565b6001600160a01b03928316602091820292909201015260405163095ea7b360e01b81527f000000000000000000000000000000000000000000000000000000000000000082166004820152602481018690527f00000000000000000000000000000000000000000000000000000000000000009091169063095ea7b3906044016020604051808303816000875af1158015610abe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ae29190610d38565b506040516338ed173960e01b81526000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906338ed173990610b3a908890859087908a904290600401610d5a565b6000604051808303816000875af1158015610b59573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610b819190810190610dcb565b905080600181518110610b9657610b96610d22565b6020026020010151925050505b92915050565b600060208284031215610bbb57600080fd5b5035919050565b600060208284031215610bd457600080fd5b81356001600160a01b0381168114610beb57600080fd5b9392505050565b600060208284031215610c0457600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b8082028115828204841417610ba357610ba3610c0b565b600082610c5557634e487b7160e01b600052601260045260246000fd5b500490565b805169ffffffffffffffffffff81168114610c7457600080fd5b919050565b600080600080600060a08688031215610c9157600080fd5b610c9a86610c5a565b9450602086015193506040860151925060608601519150610cbd60808701610c5a565b90509295509295909350565b80820260008212600160ff1b84141615610ce557610ce5610c0b565b8181058314821517610ba357610ba3610c0b565b80820180821115610ba357610ba3610c0b565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600060208284031215610d4a57600080fd5b81518015158114610beb57600080fd5b600060a082018783526020878185015260a0604085015281875180845260c086019150828901935060005b81811015610daa5784516001600160a01b031683529383019391830191600101610d85565b50506001600160a01b03969096166060850152505050608001529392505050565b60006020808385031215610dde57600080fd5b825167ffffffffffffffff80821115610df657600080fd5b818501915085601f830112610e0a57600080fd5b815181811115610e1c57610e1c610d0c565b8060051b604051601f19603f83011681018181108582111715610e4157610e41610d0c565b604052918252848201925083810185019188831115610e5f57600080fd5b938501935b82851015610e7d57845184529385019392850192610e64565b9897505050505050505056fea26469706673582212209d932397c9bc8545ccf137c0a1cc9a518748dde369b1b5165f9f703fd7dbedab64736f6c63430008140033","opcodes":"PUSH2 0x180 PUSH1 0x40 MSTORE PUSH2 0xDEAD PUSH2 0x140 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x115C CODESIZE SUB DUP1 PUSH3 0x115C DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x3C SWAP2 PUSH3 0x13A JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0x6C JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x77 DUP2 PUSH3 0xCD JUMP JUMPDEST POP PUSH1 0x1 DUP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH1 0x80 DUP2 SWAP1 MSTORE DUP7 DUP3 AND PUSH1 0xA0 MSTORE DUP6 DUP3 AND PUSH1 0xC0 MSTORE DUP5 DUP3 AND PUSH1 0xE0 MSTORE PUSH2 0x100 MSTORE DUP3 AND PUSH2 0x120 MSTORE PUSH3 0xB8 TIMESTAMP PUSH4 0xF099C00 PUSH3 0x1BB JUMP JUMPDEST PUSH2 0x160 MSTORE POP POP TIMESTAMP PUSH1 0x3 SSTORE POP PUSH3 0x1E3 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x135 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH3 0x154 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x15F DUP8 PUSH3 0x11D JUMP JUMPDEST SWAP6 POP PUSH3 0x16F PUSH1 0x20 DUP9 ADD PUSH3 0x11D JUMP JUMPDEST SWAP5 POP PUSH3 0x17F PUSH1 0x40 DUP9 ADD PUSH3 0x11D JUMP JUMPDEST SWAP4 POP PUSH3 0x18F PUSH1 0x60 DUP9 ADD PUSH3 0x11D JUMP JUMPDEST SWAP3 POP PUSH3 0x19F PUSH1 0x80 DUP9 ADD PUSH3 0x11D JUMP JUMPDEST SWAP2 POP PUSH3 0x1AF PUSH1 0xA0 DUP9 ADD PUSH3 0x11D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH3 0x1DD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0x160 MLOAD PUSH2 0xEBF PUSH3 0x29D PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x196 ADD MSTORE PUSH2 0x593 ADD MSTORE PUSH1 0x0 PUSH2 0x909 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x270 ADD MSTORE PUSH2 0x85C ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x237 ADD MSTORE PUSH2 0x51C ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x146 ADD MSTORE PUSH2 0x41F ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x297 ADD MSTORE DUP2 DUP2 PUSH2 0xA44 ADD MSTORE PUSH2 0xAFD ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x210 ADD MSTORE DUP2 DUP2 PUSH2 0x32A ADD MSTORE DUP2 DUP2 PUSH2 0x73B ADD MSTORE DUP2 DUP2 PUSH2 0x999 ADD MSTORE PUSH2 0xA73 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x1BD ADD MSTORE DUP2 DUP2 PUSH2 0x604 ADD MSTORE PUSH2 0x9ED ADD MSTORE PUSH2 0xEBF PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xDA19DDFB GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xDA19DDFB EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0xE08836DD EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0xEBDAC090 EQ PUSH2 0x2B9 JUMPI DUP1 PUSH4 0xEFAEE8A3 EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0x93A39776 EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0xC3B6453E EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0xC6201674 EQ PUSH2 0x259 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5D7BDBEA GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x5D7BDBEA EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x62CD2018 EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x70AF9B14 EQ PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x72A6BF8E EQ PUSH2 0x1E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1A647FB7 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x218656E4 EQ PUSH2 0x125 JUMPI DUP1 PUSH4 0x31EB318A EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x32385491 EQ PUSH2 0x180 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x123 PUSH2 0x2E7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x12E PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x168 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x138 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x41A JUMP JUMPDEST PUSH2 0x12E PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x12E PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x168 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x123 PUSH2 0x4BC JUMP JUMPDEST PUSH2 0x123 PUSH2 0x1F5 CALLDATASIZE PUSH1 0x4 PUSH2 0xBA9 JUMP JUMPDEST PUSH2 0x4CE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x168 JUMP JUMPDEST PUSH2 0x168 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x168 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x12E PUSH11 0x295BE96E64066972000000 DUP2 JUMP JUMPDEST PUSH2 0x168 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x168 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x123 PUSH2 0x2C7 CALLDATASIZE PUSH1 0x4 PUSH2 0xBA9 JUMP JUMPDEST PUSH2 0x511 JUMP JUMPDEST PUSH2 0x123 PUSH2 0x589 JUMP JUMPDEST PUSH2 0x123 PUSH2 0x2E2 CALLDATASIZE PUSH1 0x4 PUSH2 0xBC2 JUMP JUMPDEST PUSH2 0x7F1 JUMP JUMPDEST PUSH2 0x2EF PUSH2 0x82C JUMP JUMPDEST PUSH1 0x2 SLOAD ISZERO PUSH2 0x40F JUMPI PUSH1 0x0 PUSH2 0x301 PUSH2 0x41A JUMP JUMPDEST SWAP1 POP PUSH1 0x2 SLOAD DUP2 SLT PUSH2 0x312 JUMPI POP PUSH2 0x40F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x379 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x39D SWAP2 SWAP1 PUSH2 0xBF2 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 SUB PUSH2 0x3AE JUMPI POP POP PUSH2 0x40F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH2 0x3BD DUP4 PUSH1 0x5 PUSH2 0xC21 JUMP JUMPDEST PUSH2 0x3C7 SWAP2 SWAP1 PUSH2 0xC38 JUMP JUMPDEST SWAP1 POP PUSH2 0x3D2 DUP2 PUSH2 0x856 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH32 0x58C0C80496C71CEEE0BA72810063BE557BD3D50134028F18238D16EE9189A671 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMPDEST PUSH2 0x418 PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x47B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x49F SWAP2 SWAP1 PUSH2 0xC79 JUMP JUMPDEST POP POP POP SWAP2 POP POP DUP1 PUSH5 0x2540BE400 PUSH2 0x4B6 SWAP2 SWAP1 PUSH2 0xCC9 JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x4C4 PUSH2 0x884 JUMP JUMPDEST PUSH2 0x418 PUSH1 0x0 PUSH2 0x8B1 JUMP JUMPDEST PUSH2 0x4D6 PUSH2 0x884 JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0xA8BB388CF429C59DFF818D603DBA53EF8A6683D6DAF61985BB28D136719DDCED SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x586 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x13DB9B1E481188151BDAD95B8818DBDB9D1C9858DD PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x591 PUSH2 0x82C JUMP JUMPDEST PUSH32 0x0 TIMESTAMP LT ISZERO PUSH2 0x5F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x52652D6275726E206E6F7420616374697665 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x57D JUMP JUMPDEST PUSH11 0x295BE96E64066972000000 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x660 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x684 SWAP2 SWAP1 PUSH2 0xBF2 JUMP JUMPDEST GT PUSH2 0x6D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46696E616C20737570706C792074617267657420726561636865640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x57D JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x6E1 SWAP1 PUSH3 0x278D00 PUSH2 0xCF9 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x723 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x293296B13AB9371031B7B7B63237BBB7 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x57D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x78A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7AE SWAP2 SWAP1 PUSH2 0xBF2 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 SUB PUSH2 0x7BE JUMPI POP PUSH2 0x40F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH2 0x7CD DUP4 PUSH1 0x1 PUSH2 0xC21 JUMP JUMPDEST PUSH2 0x7D7 SWAP2 SWAP1 PUSH2 0xC38 JUMP JUMPDEST SWAP1 POP PUSH2 0x7E2 DUP2 PUSH2 0x901 JUMP JUMPDEST POP POP TIMESTAMP PUSH1 0x3 SSTORE PUSH2 0x418 PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH2 0x7F9 PUSH2 0x884 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x823 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x57D JUMP JUMPDEST PUSH2 0x586 DUP2 PUSH2 0x8B1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x84F JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH2 0x880 DUP2 PUSH32 0x0 PUSH2 0x972 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x418 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x57D JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x92D DUP3 PUSH32 0x0 PUSH2 0x972 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x880 JUMPI PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0xBCA429EAC1A1F219916F1D45DD2EBFACA65503F5C0CA15922CD1CA7679F90FB4 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP PUSH32 0x0 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x9CB JUMPI PUSH2 0x9CB PUSH2 0xD22 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH32 0x0 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xA1F JUMPI PUSH2 0xA1F PUSH2 0xD22 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH32 0x0 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xABE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAE2 SWAP2 SWAP1 PUSH2 0xD38 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x38ED1739 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x38ED1739 SWAP1 PUSH2 0xB3A SWAP1 DUP9 SWAP1 DUP6 SWAP1 DUP8 SWAP1 DUP11 SWAP1 TIMESTAMP SWAP1 PUSH1 0x4 ADD PUSH2 0xD5A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB59 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xB81 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xDCB JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xB96 JUMPI PUSH2 0xB96 PUSH2 0xD22 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBBB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBD4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xBEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC04 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0xBA3 JUMPI PUSH2 0xBA3 PUSH2 0xC0B JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xC55 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xC74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xC91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC9A DUP7 PUSH2 0xC5A JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD SWAP2 POP PUSH2 0xCBD PUSH1 0x80 DUP8 ADD PUSH2 0xC5A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST DUP1 DUP3 MUL PUSH1 0x0 DUP3 SLT PUSH1 0x1 PUSH1 0xFF SHL DUP5 EQ AND ISZERO PUSH2 0xCE5 JUMPI PUSH2 0xCE5 PUSH2 0xC0B JUMP JUMPDEST DUP2 DUP2 SDIV DUP4 EQ DUP3 ISZERO OR PUSH2 0xBA3 JUMPI PUSH2 0xBA3 PUSH2 0xC0B JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xBA3 JUMPI PUSH2 0xBA3 PUSH2 0xC0B JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xBEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD DUP8 DUP4 MSTORE PUSH1 0x20 DUP8 DUP2 DUP6 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP6 ADD MSTORE DUP2 DUP8 MLOAD DUP1 DUP5 MSTORE PUSH1 0xC0 DUP7 ADD SWAP2 POP DUP3 DUP10 ADD SWAP4 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xDAA JUMPI DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xD85 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 SWAP1 SWAP7 AND PUSH1 0x60 DUP6 ADD MSTORE POP POP POP PUSH1 0x80 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xDF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0xE1C JUMPI PUSH2 0xE1C PUSH2 0xD0C JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0xE41 JUMPI PUSH2 0xE41 PUSH2 0xD0C JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 POP DUP4 DUP2 ADD DUP6 ADD SWAP2 DUP9 DUP4 GT ISZERO PUSH2 0xE5F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP3 DUP6 LT ISZERO PUSH2 0xE7D JUMPI DUP5 MLOAD DUP5 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP3 DUP6 ADD SWAP3 PUSH2 0xE64 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 SWAP4 0x23 SWAP8 0xC9 0xBC DUP6 GASLIMIT 0xCC CALL CALLDATACOPY 0xC0 LOG1 0xCC SWAP11 MLOAD DUP8 BASEFEE 0xDD 0xE3 PUSH10 0xB1B5165F9F703FD7DBED 0xAB PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"558:3777:31:-:0;;;961:42;920:83;;1469:621;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1645:13;-1:-1:-1;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;983:51:32;956:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;1857:1:18;2061:21;;-1:-1:-1;;;;;1670:32:31;;::::1;;::::0;;;1712:39;;::::1;;::::0;1761:47;;::::1;;::::0;1818:49;;::::1;;::::0;1877:41:::1;::::0;1928:35;::::1;;::::0;2003:32:::1;:15;2022:12;2003:32;:::i;:::-;1973:62;::::0;-1:-1:-1;;2068:15:31::1;2045:20;:38:::0;-1:-1:-1;558:3777:31;;-1:-1:-1;;;558:3777:31;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:177:32:-;93:13;;-1:-1:-1;;;;;135:31:32;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:636::-;311:6;319;327;335;343;351;404:3;392:9;383:7;379:23;375:33;372:53;;;421:1;418;411:12;372:53;444:40;474:9;444:40;:::i;:::-;434:50;;503:49;548:2;537:9;533:18;503:49;:::i;:::-;493:59;;571:49;616:2;605:9;601:18;571:49;:::i;:::-;561:59;;639:49;684:2;673:9;669:18;639:49;:::i;:::-;629:59;;707:50;752:3;741:9;737:19;707:50;:::i;:::-;697:60;;776:50;821:3;810:9;806:19;776:50;:::i;:::-;766:60;;196:636;;;;;;;;:::o;1045:222::-;1110:9;;;1131:10;;;1128:133;;;1183:10;1178:3;1174:20;1171:1;1164:31;1218:4;1215:1;1208:15;1246:4;1243:1;1236:15;1128:133;1045:222;;;;:::o;:::-;558:3777:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@FINAL_SUPPLY_TARGET_10459":{"entryPoint":null,"id":10459,"parameterSlots":0,"returnSlots":0},"@F_TOKEN_10434":{"entryPoint":null,"id":10434,"parameterSlots":0,"returnSlots":0},"@F_TOKEN_CONTRACT_ADDRESS_10445":{"entryPoint":null,"id":10445,"parameterSlots":0,"returnSlots":0},"@PANCAKE_ROUTER_10440":{"entryPoint":null,"id":10440,"parameterSlots":0,"returnSlots":0},"@PRICE_FEED_10443":{"entryPoint":null,"id":10443,"parameterSlots":0,"returnSlots":0},"@REBURN_ACTIVATION_TIMESTAMP_10452":{"entryPoint":null,"id":10452,"parameterSlots":0,"returnSlots":0},"@STABLECOIN_10437":{"entryPoint":null,"id":10437,"parameterSlots":0,"returnSlots":0},"@STAKING_CONTRACT_10447":{"entryPoint":null,"id":10447,"parameterSlots":0,"returnSlots":0},"@_buyAndBurn_10696":{"entryPoint":2305,"id":10696,"parameterSlots":1,"returnSlots":0},"@_buyAndSupport_10707":{"entryPoint":2134,"id":10707,"parameterSlots":1,"returnSlots":0},"@_checkOwner_84":{"entryPoint":2180,"id":84,"parameterSlots":0,"returnSlots":0},"@_msgSender_3731":{"entryPoint":null,"id":3731,"parameterSlots":0,"returnSlots":1},"@_nonReentrantAfter_3858":{"entryPoint":null,"id":3858,"parameterSlots":0,"returnSlots":0},"@_nonReentrantBefore_3850":{"entryPoint":2092,"id":3850,"parameterSlots":0,"returnSlots":0},"@_swapStableForFToken_10775":{"entryPoint":2418,"id":10775,"parameterSlots":2,"returnSlots":1},"@_transferOwnership_146":{"entryPoint":2225,"id":146,"parameterSlots":1,"returnSlots":0},"@depositFees_10789":{"entryPoint":1297,"id":10789,"parameterSlots":1,"returnSlots":0},"@executeReburn_10617":{"entryPoint":1417,"id":10617,"parameterSlots":0,"returnSlots":0},"@getFTokenPrice_10823":{"entryPoint":1050,"id":10823,"parameterSlots":0,"returnSlots":1},"@lastBuybackTimestamp_10463":{"entryPoint":null,"id":10463,"parameterSlots":0,"returnSlots":0},"@owner_67":{"entryPoint":null,"id":67,"parameterSlots":0,"returnSlots":1},"@protectSoftFloor_10674":{"entryPoint":743,"id":10674,"parameterSlots":0,"returnSlots":0},"@renounceOwnership_98":{"entryPoint":1212,"id":98,"parameterSlots":0,"returnSlots":0},"@setSoftFloorPrice_10805":{"entryPoint":1230,"id":10805,"parameterSlots":1,"returnSlots":0},"@softFloorPrice_10461":{"entryPoint":null,"id":10461,"parameterSlots":0,"returnSlots":0},"@transferOwnership_126":{"entryPoint":2033,"id":126,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_address":{"entryPoint":3010,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory":{"entryPoint":3531,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":3384,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":2985,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":3058,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory":{"entryPoint":3193,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_uint80_fromMemory":{"entryPoint":3162,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_contract$_IAggregatorV3_$10405__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IERC20_$2219__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IPancakeRouter_$10423__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_32e03c615fd327bd02a3ff00e8e613f9bee3abe1c9c2ab6680ac5fe3d6dc0519__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_aeb05ce95fcea433e8444c29a5372eb4ece85e32eddbbe07ed65d04421d828bf__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e49ae48be73c974e12a156c9518d81c832d8ce47bdfa2d65c071477385562e9e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f135aab2725c07697a063e0924cb1befdf2b2f389453222dd0c695ca279f8a43__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_int256__to_t_uint256_t_int256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_rational_0_by_1_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed":{"entryPoint":3418,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":3321,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":3128,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_int256":{"entryPoint":3273,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":3105,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":3083,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":3362,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":3340,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:8315:32","statements":[{"nodeType":"YulBlock","src":"6:3:32","statements":[]},{"body":{"nodeType":"YulBlock","src":"115:76:32","statements":[{"nodeType":"YulAssignment","src":"125:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"137:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"148:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"133:3:32"},"nodeType":"YulFunctionCall","src":"133:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"125:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"167:9:32"},{"name":"value0","nodeType":"YulIdentifier","src":"178:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"160:6:32"},"nodeType":"YulFunctionCall","src":"160:25:32"},"nodeType":"YulExpressionStatement","src":"160:25:32"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"84:9:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"95:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"106:4:32","type":""}],"src":"14:177:32"},{"body":{"nodeType":"YulBlock","src":"320:102:32","statements":[{"nodeType":"YulAssignment","src":"330:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"342:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"353:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"338:3:32"},"nodeType":"YulFunctionCall","src":"338:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"330:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"372:9:32"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"387:6:32"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"403:3:32","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"408:1:32","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"399:3:32"},"nodeType":"YulFunctionCall","src":"399:11:32"},{"kind":"number","nodeType":"YulLiteral","src":"412:1:32","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"395:3:32"},"nodeType":"YulFunctionCall","src":"395:19:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"383:3:32"},"nodeType":"YulFunctionCall","src":"383:32:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"365:6:32"},"nodeType":"YulFunctionCall","src":"365:51:32"},"nodeType":"YulExpressionStatement","src":"365:51:32"}]},"name":"abi_encode_tuple_t_contract$_IAggregatorV3_$10405__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"289:9:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"300:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"311:4:32","type":""}],"src":"196:226:32"},{"body":{"nodeType":"YulBlock","src":"526:76:32","statements":[{"nodeType":"YulAssignment","src":"536:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"548:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"559:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"544:3:32"},"nodeType":"YulFunctionCall","src":"544:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"536:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"578:9:32"},{"name":"value0","nodeType":"YulIdentifier","src":"589:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"571:6:32"},"nodeType":"YulFunctionCall","src":"571:25:32"},"nodeType":"YulExpressionStatement","src":"571:25:32"}]},"name":"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"495:9:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"506:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"517:4:32","type":""}],"src":"427:175:32"},{"body":{"nodeType":"YulBlock","src":"723:102:32","statements":[{"nodeType":"YulAssignment","src":"733:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"745:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"756:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"741:3:32"},"nodeType":"YulFunctionCall","src":"741:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"733:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"775:9:32"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"790:6:32"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"806:3:32","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"811:1:32","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"802:3:32"},"nodeType":"YulFunctionCall","src":"802:11:32"},{"kind":"number","nodeType":"YulLiteral","src":"815:1:32","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"798:3:32"},"nodeType":"YulFunctionCall","src":"798:19:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"786:3:32"},"nodeType":"YulFunctionCall","src":"786:32:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"768:6:32"},"nodeType":"YulFunctionCall","src":"768:51:32"},"nodeType":"YulExpressionStatement","src":"768:51:32"}]},"name":"abi_encode_tuple_t_contract$_IERC20_$2219__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"692:9:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"703:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"714:4:32","type":""}],"src":"607:218:32"},{"body":{"nodeType":"YulBlock","src":"900:110:32","statements":[{"body":{"nodeType":"YulBlock","src":"946:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"955:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"958:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"948:6:32"},"nodeType":"YulFunctionCall","src":"948:12:32"},"nodeType":"YulExpressionStatement","src":"948:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"921:7:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"930:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"917:3:32"},"nodeType":"YulFunctionCall","src":"917:23:32"},{"kind":"number","nodeType":"YulLiteral","src":"942:2:32","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"913:3:32"},"nodeType":"YulFunctionCall","src":"913:32:32"},"nodeType":"YulIf","src":"910:52:32"},{"nodeType":"YulAssignment","src":"971:33:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"994:9:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"981:12:32"},"nodeType":"YulFunctionCall","src":"981:23:32"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"971:6:32"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"866:9:32","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"877:7:32","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"889:6:32","type":""}],"src":"830:180:32"},{"body":{"nodeType":"YulBlock","src":"1116:102:32","statements":[{"nodeType":"YulAssignment","src":"1126:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1138:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"1149:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1134:3:32"},"nodeType":"YulFunctionCall","src":"1134:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1126:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1168:9:32"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1183:6:32"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1199:3:32","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1204:1:32","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1195:3:32"},"nodeType":"YulFunctionCall","src":"1195:11:32"},{"kind":"number","nodeType":"YulLiteral","src":"1208:1:32","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1191:3:32"},"nodeType":"YulFunctionCall","src":"1191:19:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1179:3:32"},"nodeType":"YulFunctionCall","src":"1179:32:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1161:6:32"},"nodeType":"YulFunctionCall","src":"1161:51:32"},"nodeType":"YulExpressionStatement","src":"1161:51:32"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1085:9:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1096:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1107:4:32","type":""}],"src":"1015:203:32"},{"body":{"nodeType":"YulBlock","src":"1348:102:32","statements":[{"nodeType":"YulAssignment","src":"1358:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1370:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"1381:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1366:3:32"},"nodeType":"YulFunctionCall","src":"1366:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1358:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1400:9:32"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1415:6:32"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1431:3:32","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1436:1:32","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1427:3:32"},"nodeType":"YulFunctionCall","src":"1427:11:32"},{"kind":"number","nodeType":"YulLiteral","src":"1440:1:32","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1423:3:32"},"nodeType":"YulFunctionCall","src":"1423:19:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1411:3:32"},"nodeType":"YulFunctionCall","src":"1411:32:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1393:6:32"},"nodeType":"YulFunctionCall","src":"1393:51:32"},"nodeType":"YulExpressionStatement","src":"1393:51:32"}]},"name":"abi_encode_tuple_t_contract$_IPancakeRouter_$10423__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1317:9:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1328:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1339:4:32","type":""}],"src":"1223:227:32"},{"body":{"nodeType":"YulBlock","src":"1525:216:32","statements":[{"body":{"nodeType":"YulBlock","src":"1571:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1580:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1583:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1573:6:32"},"nodeType":"YulFunctionCall","src":"1573:12:32"},"nodeType":"YulExpressionStatement","src":"1573:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1546:7:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"1555:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1542:3:32"},"nodeType":"YulFunctionCall","src":"1542:23:32"},{"kind":"number","nodeType":"YulLiteral","src":"1567:2:32","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1538:3:32"},"nodeType":"YulFunctionCall","src":"1538:32:32"},"nodeType":"YulIf","src":"1535:52:32"},{"nodeType":"YulVariableDeclaration","src":"1596:36:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1622:9:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1609:12:32"},"nodeType":"YulFunctionCall","src":"1609:23:32"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1600:5:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"1695:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1704:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1707:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1697:6:32"},"nodeType":"YulFunctionCall","src":"1697:12:32"},"nodeType":"YulExpressionStatement","src":"1697:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1654:5:32"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1665:5:32"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1680:3:32","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1685:1:32","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1676:3:32"},"nodeType":"YulFunctionCall","src":"1676:11:32"},{"kind":"number","nodeType":"YulLiteral","src":"1689:1:32","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1672:3:32"},"nodeType":"YulFunctionCall","src":"1672:19:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1661:3:32"},"nodeType":"YulFunctionCall","src":"1661:31:32"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1651:2:32"},"nodeType":"YulFunctionCall","src":"1651:42:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1644:6:32"},"nodeType":"YulFunctionCall","src":"1644:50:32"},"nodeType":"YulIf","src":"1641:70:32"},{"nodeType":"YulAssignment","src":"1720:15:32","value":{"name":"value","nodeType":"YulIdentifier","src":"1730:5:32"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1720:6:32"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1491:9:32","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1502:7:32","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1514:6:32","type":""}],"src":"1455:286:32"},{"body":{"nodeType":"YulBlock","src":"1827:103:32","statements":[{"body":{"nodeType":"YulBlock","src":"1873:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1882:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1885:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1875:6:32"},"nodeType":"YulFunctionCall","src":"1875:12:32"},"nodeType":"YulExpressionStatement","src":"1875:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1848:7:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"1857:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1844:3:32"},"nodeType":"YulFunctionCall","src":"1844:23:32"},{"kind":"number","nodeType":"YulLiteral","src":"1869:2:32","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1840:3:32"},"nodeType":"YulFunctionCall","src":"1840:32:32"},"nodeType":"YulIf","src":"1837:52:32"},{"nodeType":"YulAssignment","src":"1898:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1914:9:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1908:5:32"},"nodeType":"YulFunctionCall","src":"1908:16:32"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1898:6:32"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1793:9:32","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1804:7:32","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1816:6:32","type":""}],"src":"1746:184:32"},{"body":{"nodeType":"YulBlock","src":"1967:95:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1984:1:32","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1991:3:32","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1996:10:32","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1987:3:32"},"nodeType":"YulFunctionCall","src":"1987:20:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1977:6:32"},"nodeType":"YulFunctionCall","src":"1977:31:32"},"nodeType":"YulExpressionStatement","src":"1977:31:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2024:1:32","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2027:4:32","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2017:6:32"},"nodeType":"YulFunctionCall","src":"2017:15:32"},"nodeType":"YulExpressionStatement","src":"2017:15:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2048:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2051:4:32","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2041:6:32"},"nodeType":"YulFunctionCall","src":"2041:15:32"},"nodeType":"YulExpressionStatement","src":"2041:15:32"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"1935:127:32"},{"body":{"nodeType":"YulBlock","src":"2119:116:32","statements":[{"nodeType":"YulAssignment","src":"2129:20:32","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2144:1:32"},{"name":"y","nodeType":"YulIdentifier","src":"2147:1:32"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2140:3:32"},"nodeType":"YulFunctionCall","src":"2140:9:32"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"2129:7:32"}]},{"body":{"nodeType":"YulBlock","src":"2207:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"2209:16:32"},"nodeType":"YulFunctionCall","src":"2209:18:32"},"nodeType":"YulExpressionStatement","src":"2209:18:32"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2178:1:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2171:6:32"},"nodeType":"YulFunctionCall","src":"2171:9:32"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"2185:1:32"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"2192:7:32"},{"name":"x","nodeType":"YulIdentifier","src":"2201:1:32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2188:3:32"},"nodeType":"YulFunctionCall","src":"2188:15:32"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2182:2:32"},"nodeType":"YulFunctionCall","src":"2182:22:32"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2168:2:32"},"nodeType":"YulFunctionCall","src":"2168:37:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2161:6:32"},"nodeType":"YulFunctionCall","src":"2161:45:32"},"nodeType":"YulIf","src":"2158:71:32"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"2098:1:32","type":""},{"name":"y","nodeType":"YulTypedName","src":"2101:1:32","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"2107:7:32","type":""}],"src":"2067:168:32"},{"body":{"nodeType":"YulBlock","src":"2286:171:32","statements":[{"body":{"nodeType":"YulBlock","src":"2317:111:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2338:1:32","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2345:3:32","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2350:10:32","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2341:3:32"},"nodeType":"YulFunctionCall","src":"2341:20:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2331:6:32"},"nodeType":"YulFunctionCall","src":"2331:31:32"},"nodeType":"YulExpressionStatement","src":"2331:31:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2382:1:32","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2385:4:32","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2375:6:32"},"nodeType":"YulFunctionCall","src":"2375:15:32"},"nodeType":"YulExpressionStatement","src":"2375:15:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2410:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2413:4:32","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2403:6:32"},"nodeType":"YulFunctionCall","src":"2403:15:32"},"nodeType":"YulExpressionStatement","src":"2403:15:32"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"2306:1:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2299:6:32"},"nodeType":"YulFunctionCall","src":"2299:9:32"},"nodeType":"YulIf","src":"2296:132:32"},{"nodeType":"YulAssignment","src":"2437:14:32","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2446:1:32"},{"name":"y","nodeType":"YulIdentifier","src":"2449:1:32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2442:3:32"},"nodeType":"YulFunctionCall","src":"2442:9:32"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"2437:1:32"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"2271:1:32","type":""},{"name":"y","nodeType":"YulTypedName","src":"2274:1:32","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"2280:1:32","type":""}],"src":"2240:217:32"},{"body":{"nodeType":"YulBlock","src":"2589:119:32","statements":[{"nodeType":"YulAssignment","src":"2599:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2611:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"2622:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2607:3:32"},"nodeType":"YulFunctionCall","src":"2607:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2599:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2641:9:32"},{"name":"value0","nodeType":"YulIdentifier","src":"2652:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2634:6:32"},"nodeType":"YulFunctionCall","src":"2634:25:32"},"nodeType":"YulExpressionStatement","src":"2634:25:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2679:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"2690:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2675:3:32"},"nodeType":"YulFunctionCall","src":"2675:18:32"},{"name":"value1","nodeType":"YulIdentifier","src":"2695:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2668:6:32"},"nodeType":"YulFunctionCall","src":"2668:34:32"},"nodeType":"YulExpressionStatement","src":"2668:34:32"}]},"name":"abi_encode_tuple_t_uint256_t_int256__to_t_uint256_t_int256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2550:9:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2561:6:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2569:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2580:4:32","type":""}],"src":"2462:246:32"},{"body":{"nodeType":"YulBlock","src":"2772:120:32","statements":[{"nodeType":"YulAssignment","src":"2782:22:32","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2797:6:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2791:5:32"},"nodeType":"YulFunctionCall","src":"2791:13:32"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2782:5:32"}]},{"body":{"nodeType":"YulBlock","src":"2870:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2879:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2882:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2872:6:32"},"nodeType":"YulFunctionCall","src":"2872:12:32"},"nodeType":"YulExpressionStatement","src":"2872:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2826:5:32"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2837:5:32"},{"kind":"number","nodeType":"YulLiteral","src":"2844:22:32","type":"","value":"0xffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2833:3:32"},"nodeType":"YulFunctionCall","src":"2833:34:32"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2823:2:32"},"nodeType":"YulFunctionCall","src":"2823:45:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2816:6:32"},"nodeType":"YulFunctionCall","src":"2816:53:32"},"nodeType":"YulIf","src":"2813:73:32"}]},"name":"abi_decode_uint80_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2751:6:32","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2762:5:32","type":""}],"src":"2713:179:32"},{"body":{"nodeType":"YulBlock","src":"3043:327:32","statements":[{"body":{"nodeType":"YulBlock","src":"3090:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3099:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3102:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3092:6:32"},"nodeType":"YulFunctionCall","src":"3092:12:32"},"nodeType":"YulExpressionStatement","src":"3092:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3064:7:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"3073:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3060:3:32"},"nodeType":"YulFunctionCall","src":"3060:23:32"},{"kind":"number","nodeType":"YulLiteral","src":"3085:3:32","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3056:3:32"},"nodeType":"YulFunctionCall","src":"3056:33:32"},"nodeType":"YulIf","src":"3053:53:32"},{"nodeType":"YulAssignment","src":"3115:49:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3154:9:32"}],"functionName":{"name":"abi_decode_uint80_fromMemory","nodeType":"YulIdentifier","src":"3125:28:32"},"nodeType":"YulFunctionCall","src":"3125:39:32"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3115:6:32"}]},{"nodeType":"YulAssignment","src":"3173:35:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3193:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"3204:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3189:3:32"},"nodeType":"YulFunctionCall","src":"3189:18:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3183:5:32"},"nodeType":"YulFunctionCall","src":"3183:25:32"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3173:6:32"}]},{"nodeType":"YulAssignment","src":"3217:35:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3237:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"3248:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3233:3:32"},"nodeType":"YulFunctionCall","src":"3233:18:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3227:5:32"},"nodeType":"YulFunctionCall","src":"3227:25:32"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3217:6:32"}]},{"nodeType":"YulAssignment","src":"3261:35:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3281:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"3292:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3277:3:32"},"nodeType":"YulFunctionCall","src":"3277:18:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3271:5:32"},"nodeType":"YulFunctionCall","src":"3271:25:32"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"3261:6:32"}]},{"nodeType":"YulAssignment","src":"3305:59:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3348:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"3359:3:32","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3344:3:32"},"nodeType":"YulFunctionCall","src":"3344:19:32"}],"functionName":{"name":"abi_decode_uint80_fromMemory","nodeType":"YulIdentifier","src":"3315:28:32"},"nodeType":"YulFunctionCall","src":"3315:49:32"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"3305:6:32"}]}]},"name":"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2977:9:32","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2988:7:32","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3000:6:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3008:6:32","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3016:6:32","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3024:6:32","type":""},{"name":"value4","nodeType":"YulTypedName","src":"3032:6:32","type":""}],"src":"2897:473:32"},{"body":{"nodeType":"YulBlock","src":"3426:186:32","statements":[{"nodeType":"YulAssignment","src":"3436:20:32","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3451:1:32"},{"name":"y","nodeType":"YulIdentifier","src":"3454:1:32"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3447:3:32"},"nodeType":"YulFunctionCall","src":"3447:9:32"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"3436:7:32"}]},{"body":{"nodeType":"YulBlock","src":"3503:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"3505:16:32"},"nodeType":"YulFunctionCall","src":"3505:18:32"},"nodeType":"YulExpressionStatement","src":"3505:18:32"}]},"condition":{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3476:1:32"},{"kind":"number","nodeType":"YulLiteral","src":"3479:1:32","type":"","value":"0"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3472:3:32"},"nodeType":"YulFunctionCall","src":"3472:9:32"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"3486:1:32"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3493:3:32","type":"","value":"255"},{"kind":"number","nodeType":"YulLiteral","src":"3498:1:32","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3489:3:32"},"nodeType":"YulFunctionCall","src":"3489:11:32"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3483:2:32"},"nodeType":"YulFunctionCall","src":"3483:18:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3468:3:32"},"nodeType":"YulFunctionCall","src":"3468:34:32"},"nodeType":"YulIf","src":"3465:60:32"},{"body":{"nodeType":"YulBlock","src":"3584:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"3586:16:32"},"nodeType":"YulFunctionCall","src":"3586:18:32"},"nodeType":"YulExpressionStatement","src":"3586:18:32"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3554:1:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3547:6:32"},"nodeType":"YulFunctionCall","src":"3547:9:32"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"3561:1:32"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"3569:7:32"},{"name":"x","nodeType":"YulIdentifier","src":"3578:1:32"}],"functionName":{"name":"sdiv","nodeType":"YulIdentifier","src":"3564:4:32"},"nodeType":"YulFunctionCall","src":"3564:16:32"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3558:2:32"},"nodeType":"YulFunctionCall","src":"3558:23:32"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3544:2:32"},"nodeType":"YulFunctionCall","src":"3544:38:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3537:6:32"},"nodeType":"YulFunctionCall","src":"3537:46:32"},"nodeType":"YulIf","src":"3534:72:32"}]},"name":"checked_mul_t_int256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"3405:1:32","type":""},{"name":"y","nodeType":"YulTypedName","src":"3408:1:32","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"3414:7:32","type":""}],"src":"3375:237:32"},{"body":{"nodeType":"YulBlock","src":"3791:171:32","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3808:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"3819:2:32","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3801:6:32"},"nodeType":"YulFunctionCall","src":"3801:21:32"},"nodeType":"YulExpressionStatement","src":"3801:21:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3842:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"3853:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3838:3:32"},"nodeType":"YulFunctionCall","src":"3838:18:32"},{"kind":"number","nodeType":"YulLiteral","src":"3858:2:32","type":"","value":"21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3831:6:32"},"nodeType":"YulFunctionCall","src":"3831:30:32"},"nodeType":"YulExpressionStatement","src":"3831:30:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3881:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"3892:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3877:3:32"},"nodeType":"YulFunctionCall","src":"3877:18:32"},{"hexValue":"4f6e6c79204620546f6b656e20636f6e7472616374","kind":"string","nodeType":"YulLiteral","src":"3897:23:32","type":"","value":"Only F Token contract"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3870:6:32"},"nodeType":"YulFunctionCall","src":"3870:51:32"},"nodeType":"YulExpressionStatement","src":"3870:51:32"},{"nodeType":"YulAssignment","src":"3930:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3942:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"3953:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3938:3:32"},"nodeType":"YulFunctionCall","src":"3938:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3930:4:32"}]}]},"name":"abi_encode_tuple_t_stringliteral_f135aab2725c07697a063e0924cb1befdf2b2f389453222dd0c695ca279f8a43__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3768:9:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3782:4:32","type":""}],"src":"3617:345:32"},{"body":{"nodeType":"YulBlock","src":"4141:168:32","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4158:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"4169:2:32","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4151:6:32"},"nodeType":"YulFunctionCall","src":"4151:21:32"},"nodeType":"YulExpressionStatement","src":"4151:21:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4192:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"4203:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4188:3:32"},"nodeType":"YulFunctionCall","src":"4188:18:32"},{"kind":"number","nodeType":"YulLiteral","src":"4208:2:32","type":"","value":"18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4181:6:32"},"nodeType":"YulFunctionCall","src":"4181:30:32"},"nodeType":"YulExpressionStatement","src":"4181:30:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4231:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"4242:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4227:3:32"},"nodeType":"YulFunctionCall","src":"4227:18:32"},{"hexValue":"52652d6275726e206e6f7420616374697665","kind":"string","nodeType":"YulLiteral","src":"4247:20:32","type":"","value":"Re-burn not active"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4220:6:32"},"nodeType":"YulFunctionCall","src":"4220:48:32"},"nodeType":"YulExpressionStatement","src":"4220:48:32"},{"nodeType":"YulAssignment","src":"4277:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4289:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"4300:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4285:3:32"},"nodeType":"YulFunctionCall","src":"4285:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4277:4:32"}]}]},"name":"abi_encode_tuple_t_stringliteral_e49ae48be73c974e12a156c9518d81c832d8ce47bdfa2d65c071477385562e9e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4118:9:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4132:4:32","type":""}],"src":"3967:342:32"},{"body":{"nodeType":"YulBlock","src":"4488:177:32","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4505:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"4516:2:32","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4498:6:32"},"nodeType":"YulFunctionCall","src":"4498:21:32"},"nodeType":"YulExpressionStatement","src":"4498:21:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4539:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"4550:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4535:3:32"},"nodeType":"YulFunctionCall","src":"4535:18:32"},{"kind":"number","nodeType":"YulLiteral","src":"4555:2:32","type":"","value":"27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4528:6:32"},"nodeType":"YulFunctionCall","src":"4528:30:32"},"nodeType":"YulExpressionStatement","src":"4528:30:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4578:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"4589:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4574:3:32"},"nodeType":"YulFunctionCall","src":"4574:18:32"},{"hexValue":"46696e616c20737570706c79207461726765742072656163686564","kind":"string","nodeType":"YulLiteral","src":"4594:29:32","type":"","value":"Final supply target reached"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4567:6:32"},"nodeType":"YulFunctionCall","src":"4567:57:32"},"nodeType":"YulExpressionStatement","src":"4567:57:32"},{"nodeType":"YulAssignment","src":"4633:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4645:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"4656:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4641:3:32"},"nodeType":"YulFunctionCall","src":"4641:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4633:4:32"}]}]},"name":"abi_encode_tuple_t_stringliteral_aeb05ce95fcea433e8444c29a5372eb4ece85e32eddbbe07ed65d04421d828bf__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4465:9:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4479:4:32","type":""}],"src":"4314:351:32"},{"body":{"nodeType":"YulBlock","src":"4718:77:32","statements":[{"nodeType":"YulAssignment","src":"4728:16:32","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4739:1:32"},{"name":"y","nodeType":"YulIdentifier","src":"4742:1:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4735:3:32"},"nodeType":"YulFunctionCall","src":"4735:9:32"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"4728:3:32"}]},{"body":{"nodeType":"YulBlock","src":"4767:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"4769:16:32"},"nodeType":"YulFunctionCall","src":"4769:18:32"},"nodeType":"YulExpressionStatement","src":"4769:18:32"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4759:1:32"},{"name":"sum","nodeType":"YulIdentifier","src":"4762:3:32"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4756:2:32"},"nodeType":"YulFunctionCall","src":"4756:10:32"},"nodeType":"YulIf","src":"4753:36:32"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"4701:1:32","type":""},{"name":"y","nodeType":"YulTypedName","src":"4704:1:32","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"4710:3:32","type":""}],"src":"4670:125:32"},{"body":{"nodeType":"YulBlock","src":"4974:166:32","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4991:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"5002:2:32","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4984:6:32"},"nodeType":"YulFunctionCall","src":"4984:21:32"},"nodeType":"YulExpressionStatement","src":"4984:21:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5025:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"5036:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5021:3:32"},"nodeType":"YulFunctionCall","src":"5021:18:32"},{"kind":"number","nodeType":"YulLiteral","src":"5041:2:32","type":"","value":"16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5014:6:32"},"nodeType":"YulFunctionCall","src":"5014:30:32"},"nodeType":"YulExpressionStatement","src":"5014:30:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5064:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"5075:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5060:3:32"},"nodeType":"YulFunctionCall","src":"5060:18:32"},{"hexValue":"52652d6275726e20636f6f6c646f776e","kind":"string","nodeType":"YulLiteral","src":"5080:18:32","type":"","value":"Re-burn cooldown"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5053:6:32"},"nodeType":"YulFunctionCall","src":"5053:46:32"},"nodeType":"YulExpressionStatement","src":"5053:46:32"},{"nodeType":"YulAssignment","src":"5108:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5120:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"5131:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5116:3:32"},"nodeType":"YulFunctionCall","src":"5116:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5108:4:32"}]}]},"name":"abi_encode_tuple_t_stringliteral_32e03c615fd327bd02a3ff00e8e613f9bee3abe1c9c2ab6680ac5fe3d6dc0519__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4951:9:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4965:4:32","type":""}],"src":"4800:340:32"},{"body":{"nodeType":"YulBlock","src":"5274:119:32","statements":[{"nodeType":"YulAssignment","src":"5284:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5296:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"5307:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5292:3:32"},"nodeType":"YulFunctionCall","src":"5292:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5284:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5326:9:32"},{"name":"value0","nodeType":"YulIdentifier","src":"5337:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5319:6:32"},"nodeType":"YulFunctionCall","src":"5319:25:32"},"nodeType":"YulExpressionStatement","src":"5319:25:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5364:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"5375:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5360:3:32"},"nodeType":"YulFunctionCall","src":"5360:18:32"},{"name":"value1","nodeType":"YulIdentifier","src":"5380:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5353:6:32"},"nodeType":"YulFunctionCall","src":"5353:34:32"},"nodeType":"YulExpressionStatement","src":"5353:34:32"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5235:9:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5246:6:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5254:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5265:4:32","type":""}],"src":"5145:248:32"},{"body":{"nodeType":"YulBlock","src":"5430:95:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5447:1:32","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5454:3:32","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"5459:10:32","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5450:3:32"},"nodeType":"YulFunctionCall","src":"5450:20:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5440:6:32"},"nodeType":"YulFunctionCall","src":"5440:31:32"},"nodeType":"YulExpressionStatement","src":"5440:31:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5487:1:32","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5490:4:32","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5480:6:32"},"nodeType":"YulFunctionCall","src":"5480:15:32"},"nodeType":"YulExpressionStatement","src":"5480:15:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5511:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5514:4:32","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5504:6:32"},"nodeType":"YulFunctionCall","src":"5504:15:32"},"nodeType":"YulExpressionStatement","src":"5504:15:32"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"5398:127:32"},{"body":{"nodeType":"YulBlock","src":"5562:95:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5579:1:32","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5586:3:32","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"5591:10:32","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5582:3:32"},"nodeType":"YulFunctionCall","src":"5582:20:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5572:6:32"},"nodeType":"YulFunctionCall","src":"5572:31:32"},"nodeType":"YulExpressionStatement","src":"5572:31:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5619:1:32","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5622:4:32","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5612:6:32"},"nodeType":"YulFunctionCall","src":"5612:15:32"},"nodeType":"YulExpressionStatement","src":"5612:15:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5643:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5646:4:32","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5636:6:32"},"nodeType":"YulFunctionCall","src":"5636:15:32"},"nodeType":"YulExpressionStatement","src":"5636:15:32"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"5530:127:32"},{"body":{"nodeType":"YulBlock","src":"5791:145:32","statements":[{"nodeType":"YulAssignment","src":"5801:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5813:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"5824:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5809:3:32"},"nodeType":"YulFunctionCall","src":"5809:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5801:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5843:9:32"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5858:6:32"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5874:3:32","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"5879:1:32","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5870:3:32"},"nodeType":"YulFunctionCall","src":"5870:11:32"},{"kind":"number","nodeType":"YulLiteral","src":"5883:1:32","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5866:3:32"},"nodeType":"YulFunctionCall","src":"5866:19:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5854:3:32"},"nodeType":"YulFunctionCall","src":"5854:32:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5836:6:32"},"nodeType":"YulFunctionCall","src":"5836:51:32"},"nodeType":"YulExpressionStatement","src":"5836:51:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5907:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"5918:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5903:3:32"},"nodeType":"YulFunctionCall","src":"5903:18:32"},{"name":"value1","nodeType":"YulIdentifier","src":"5923:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5896:6:32"},"nodeType":"YulFunctionCall","src":"5896:34:32"},"nodeType":"YulExpressionStatement","src":"5896:34:32"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5752:9:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5763:6:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5771:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5782:4:32","type":""}],"src":"5662:274:32"},{"body":{"nodeType":"YulBlock","src":"6019:199:32","statements":[{"body":{"nodeType":"YulBlock","src":"6065:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6074:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6077:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6067:6:32"},"nodeType":"YulFunctionCall","src":"6067:12:32"},"nodeType":"YulExpressionStatement","src":"6067:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6040:7:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"6049:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6036:3:32"},"nodeType":"YulFunctionCall","src":"6036:23:32"},{"kind":"number","nodeType":"YulLiteral","src":"6061:2:32","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6032:3:32"},"nodeType":"YulFunctionCall","src":"6032:32:32"},"nodeType":"YulIf","src":"6029:52:32"},{"nodeType":"YulVariableDeclaration","src":"6090:29:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6109:9:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6103:5:32"},"nodeType":"YulFunctionCall","src":"6103:16:32"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"6094:5:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"6172:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6181:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6184:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6174:6:32"},"nodeType":"YulFunctionCall","src":"6174:12:32"},"nodeType":"YulExpressionStatement","src":"6174:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6141:5:32"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6162:5:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6155:6:32"},"nodeType":"YulFunctionCall","src":"6155:13:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6148:6:32"},"nodeType":"YulFunctionCall","src":"6148:21:32"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6138:2:32"},"nodeType":"YulFunctionCall","src":"6138:32:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6131:6:32"},"nodeType":"YulFunctionCall","src":"6131:40:32"},"nodeType":"YulIf","src":"6128:60:32"},{"nodeType":"YulAssignment","src":"6197:15:32","value":{"name":"value","nodeType":"YulIdentifier","src":"6207:5:32"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6197:6:32"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5985:9:32","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5996:7:32","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6008:6:32","type":""}],"src":"5941:277:32"},{"body":{"nodeType":"YulBlock","src":"6494:709:32","statements":[{"nodeType":"YulVariableDeclaration","src":"6504:33:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6522:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"6533:3:32","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6518:3:32"},"nodeType":"YulFunctionCall","src":"6518:19:32"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"6508:6:32","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6553:9:32"},{"name":"value0","nodeType":"YulIdentifier","src":"6564:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6546:6:32"},"nodeType":"YulFunctionCall","src":"6546:25:32"},"nodeType":"YulExpressionStatement","src":"6546:25:32"},{"nodeType":"YulVariableDeclaration","src":"6580:12:32","value":{"kind":"number","nodeType":"YulLiteral","src":"6590:2:32","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"6584:2:32","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6612:9:32"},{"name":"_1","nodeType":"YulIdentifier","src":"6623:2:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6608:3:32"},"nodeType":"YulFunctionCall","src":"6608:18:32"},{"name":"value1","nodeType":"YulIdentifier","src":"6628:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6601:6:32"},"nodeType":"YulFunctionCall","src":"6601:34:32"},"nodeType":"YulExpressionStatement","src":"6601:34:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6655:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"6666:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6651:3:32"},"nodeType":"YulFunctionCall","src":"6651:18:32"},{"kind":"number","nodeType":"YulLiteral","src":"6671:3:32","type":"","value":"160"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6644:6:32"},"nodeType":"YulFunctionCall","src":"6644:31:32"},"nodeType":"YulExpressionStatement","src":"6644:31:32"},{"nodeType":"YulVariableDeclaration","src":"6684:17:32","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"6695:6:32"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"6688:3:32","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6710:27:32","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"6730:6:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6724:5:32"},"nodeType":"YulFunctionCall","src":"6724:13:32"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6714:6:32","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"6753:6:32"},{"name":"length","nodeType":"YulIdentifier","src":"6761:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6746:6:32"},"nodeType":"YulFunctionCall","src":"6746:22:32"},"nodeType":"YulExpressionStatement","src":"6746:22:32"},{"nodeType":"YulAssignment","src":"6777:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6788:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"6799:3:32","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6784:3:32"},"nodeType":"YulFunctionCall","src":"6784:19:32"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6777:3:32"}]},{"nodeType":"YulVariableDeclaration","src":"6812:29:32","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"6830:6:32"},{"name":"_1","nodeType":"YulIdentifier","src":"6838:2:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6826:3:32"},"nodeType":"YulFunctionCall","src":"6826:15:32"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"6816:6:32","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6850:10:32","value":{"kind":"number","nodeType":"YulLiteral","src":"6859:1:32","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"6854:1:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"6918:146:32","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6939:3:32"},{"arguments":[{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"6954:6:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6948:5:32"},"nodeType":"YulFunctionCall","src":"6948:13:32"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6971:3:32","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"6976:1:32","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6967:3:32"},"nodeType":"YulFunctionCall","src":"6967:11:32"},{"kind":"number","nodeType":"YulLiteral","src":"6980:1:32","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6963:3:32"},"nodeType":"YulFunctionCall","src":"6963:19:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6944:3:32"},"nodeType":"YulFunctionCall","src":"6944:39:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6932:6:32"},"nodeType":"YulFunctionCall","src":"6932:52:32"},"nodeType":"YulExpressionStatement","src":"6932:52:32"},{"nodeType":"YulAssignment","src":"6997:19:32","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7008:3:32"},{"name":"_1","nodeType":"YulIdentifier","src":"7013:2:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7004:3:32"},"nodeType":"YulFunctionCall","src":"7004:12:32"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6997:3:32"}]},{"nodeType":"YulAssignment","src":"7029:25:32","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"7043:6:32"},{"name":"_1","nodeType":"YulIdentifier","src":"7051:2:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7039:3:32"},"nodeType":"YulFunctionCall","src":"7039:15:32"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"7029:6:32"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6880:1:32"},{"name":"length","nodeType":"YulIdentifier","src":"6883:6:32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6877:2:32"},"nodeType":"YulFunctionCall","src":"6877:13:32"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6891:18:32","statements":[{"nodeType":"YulAssignment","src":"6893:14:32","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6902:1:32"},{"kind":"number","nodeType":"YulLiteral","src":"6905:1:32","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6898:3:32"},"nodeType":"YulFunctionCall","src":"6898:9:32"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"6893:1:32"}]}]},"pre":{"nodeType":"YulBlock","src":"6873:3:32","statements":[]},"src":"6869:195:32"},{"nodeType":"YulAssignment","src":"7073:11:32","value":{"name":"pos","nodeType":"YulIdentifier","src":"7081:3:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7073:4:32"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7104:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"7115:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7100:3:32"},"nodeType":"YulFunctionCall","src":"7100:18:32"},{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"7124:6:32"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7140:3:32","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"7145:1:32","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7136:3:32"},"nodeType":"YulFunctionCall","src":"7136:11:32"},{"kind":"number","nodeType":"YulLiteral","src":"7149:1:32","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7132:3:32"},"nodeType":"YulFunctionCall","src":"7132:19:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7120:3:32"},"nodeType":"YulFunctionCall","src":"7120:32:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7093:6:32"},"nodeType":"YulFunctionCall","src":"7093:60:32"},"nodeType":"YulExpressionStatement","src":"7093:60:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7173:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"7184:3:32","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7169:3:32"},"nodeType":"YulFunctionCall","src":"7169:19:32"},{"name":"value4","nodeType":"YulIdentifier","src":"7190:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7162:6:32"},"nodeType":"YulFunctionCall","src":"7162:35:32"},"nodeType":"YulExpressionStatement","src":"7162:35:32"}]},"name":"abi_encode_tuple_t_uint256_t_rational_0_by_1_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6431:9:32","type":""},{"name":"value4","nodeType":"YulTypedName","src":"6442:6:32","type":""},{"name":"value3","nodeType":"YulTypedName","src":"6450:6:32","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6458:6:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6466:6:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6474:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6485:4:32","type":""}],"src":"6223:980:32"},{"body":{"nodeType":"YulBlock","src":"7314:999:32","statements":[{"nodeType":"YulVariableDeclaration","src":"7324:12:32","value":{"kind":"number","nodeType":"YulLiteral","src":"7334:2:32","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"7328:2:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"7381:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7390:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7393:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7383:6:32"},"nodeType":"YulFunctionCall","src":"7383:12:32"},"nodeType":"YulExpressionStatement","src":"7383:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7356:7:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"7365:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7352:3:32"},"nodeType":"YulFunctionCall","src":"7352:23:32"},{"name":"_1","nodeType":"YulIdentifier","src":"7377:2:32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7348:3:32"},"nodeType":"YulFunctionCall","src":"7348:32:32"},"nodeType":"YulIf","src":"7345:52:32"},{"nodeType":"YulVariableDeclaration","src":"7406:30:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7426:9:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7420:5:32"},"nodeType":"YulFunctionCall","src":"7420:16:32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7410:6:32","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7445:28:32","value":{"kind":"number","nodeType":"YulLiteral","src":"7455:18:32","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"7449:2:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"7500:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7509:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7512:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7502:6:32"},"nodeType":"YulFunctionCall","src":"7502:12:32"},"nodeType":"YulExpressionStatement","src":"7502:12:32"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7488:6:32"},{"name":"_2","nodeType":"YulIdentifier","src":"7496:2:32"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7485:2:32"},"nodeType":"YulFunctionCall","src":"7485:14:32"},"nodeType":"YulIf","src":"7482:34:32"},{"nodeType":"YulVariableDeclaration","src":"7525:32:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7539:9:32"},{"name":"offset","nodeType":"YulIdentifier","src":"7550:6:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7535:3:32"},"nodeType":"YulFunctionCall","src":"7535:22:32"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"7529:2:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"7605:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7614:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7617:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7607:6:32"},"nodeType":"YulFunctionCall","src":"7607:12:32"},"nodeType":"YulExpressionStatement","src":"7607:12:32"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"7584:2:32"},{"kind":"number","nodeType":"YulLiteral","src":"7588:4:32","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7580:3:32"},"nodeType":"YulFunctionCall","src":"7580:13:32"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7595:7:32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7576:3:32"},"nodeType":"YulFunctionCall","src":"7576:27:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7569:6:32"},"nodeType":"YulFunctionCall","src":"7569:35:32"},"nodeType":"YulIf","src":"7566:55:32"},{"nodeType":"YulVariableDeclaration","src":"7630:19:32","value":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"7646:2:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7640:5:32"},"nodeType":"YulFunctionCall","src":"7640:9:32"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"7634:2:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"7672:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7674:16:32"},"nodeType":"YulFunctionCall","src":"7674:18:32"},"nodeType":"YulExpressionStatement","src":"7674:18:32"}]},"condition":{"arguments":[{"name":"_4","nodeType":"YulIdentifier","src":"7664:2:32"},{"name":"_2","nodeType":"YulIdentifier","src":"7668:2:32"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7661:2:32"},"nodeType":"YulFunctionCall","src":"7661:10:32"},"nodeType":"YulIf","src":"7658:36:32"},{"nodeType":"YulVariableDeclaration","src":"7703:20:32","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7717:1:32","type":"","value":"5"},{"name":"_4","nodeType":"YulIdentifier","src":"7720:2:32"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7713:3:32"},"nodeType":"YulFunctionCall","src":"7713:10:32"},"variables":[{"name":"_5","nodeType":"YulTypedName","src":"7707:2:32","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7732:23:32","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7752:2:32","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7746:5:32"},"nodeType":"YulFunctionCall","src":"7746:9:32"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"7736:6:32","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7764:56:32","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7786:6:32"},{"arguments":[{"arguments":[{"name":"_5","nodeType":"YulIdentifier","src":"7802:2:32"},{"kind":"number","nodeType":"YulLiteral","src":"7806:2:32","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7798:3:32"},"nodeType":"YulFunctionCall","src":"7798:11:32"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7815:2:32","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7811:3:32"},"nodeType":"YulFunctionCall","src":"7811:7:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7794:3:32"},"nodeType":"YulFunctionCall","src":"7794:25:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7782:3:32"},"nodeType":"YulFunctionCall","src":"7782:38:32"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"7768:10:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"7879:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7881:16:32"},"nodeType":"YulFunctionCall","src":"7881:18:32"},"nodeType":"YulExpressionStatement","src":"7881:18:32"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7838:10:32"},{"name":"_2","nodeType":"YulIdentifier","src":"7850:2:32"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7835:2:32"},"nodeType":"YulFunctionCall","src":"7835:18:32"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7858:10:32"},{"name":"memPtr","nodeType":"YulIdentifier","src":"7870:6:32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7855:2:32"},"nodeType":"YulFunctionCall","src":"7855:22:32"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7832:2:32"},"nodeType":"YulFunctionCall","src":"7832:46:32"},"nodeType":"YulIf","src":"7829:72:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7917:2:32","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7921:10:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7910:6:32"},"nodeType":"YulFunctionCall","src":"7910:22:32"},"nodeType":"YulExpressionStatement","src":"7910:22:32"},{"nodeType":"YulVariableDeclaration","src":"7941:17:32","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"7952:6:32"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"7945:3:32","type":""}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7974:6:32"},{"name":"_4","nodeType":"YulIdentifier","src":"7982:2:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7967:6:32"},"nodeType":"YulFunctionCall","src":"7967:18:32"},"nodeType":"YulExpressionStatement","src":"7967:18:32"},{"nodeType":"YulAssignment","src":"7994:22:32","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8005:6:32"},{"name":"_1","nodeType":"YulIdentifier","src":"8013:2:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8001:3:32"},"nodeType":"YulFunctionCall","src":"8001:15:32"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"7994:3:32"}]},{"nodeType":"YulVariableDeclaration","src":"8025:34:32","value":{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"8047:2:32"},{"name":"_5","nodeType":"YulIdentifier","src":"8051:2:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8043:3:32"},"nodeType":"YulFunctionCall","src":"8043:11:32"},{"name":"_1","nodeType":"YulIdentifier","src":"8056:2:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8039:3:32"},"nodeType":"YulFunctionCall","src":"8039:20:32"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"8029:6:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"8091:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8100:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8103:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8093:6:32"},"nodeType":"YulFunctionCall","src":"8093:12:32"},"nodeType":"YulExpressionStatement","src":"8093:12:32"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"8074:6:32"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8082:7:32"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8071:2:32"},"nodeType":"YulFunctionCall","src":"8071:19:32"},"nodeType":"YulIf","src":"8068:39:32"},{"nodeType":"YulVariableDeclaration","src":"8116:22:32","value":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"8131:2:32"},{"name":"_1","nodeType":"YulIdentifier","src":"8135:2:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8127:3:32"},"nodeType":"YulFunctionCall","src":"8127:11:32"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"8120:3:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"8203:79:32","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8224:3:32"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8235:3:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8229:5:32"},"nodeType":"YulFunctionCall","src":"8229:10:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8217:6:32"},"nodeType":"YulFunctionCall","src":"8217:23:32"},"nodeType":"YulExpressionStatement","src":"8217:23:32"},{"nodeType":"YulAssignment","src":"8253:19:32","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8264:3:32"},{"name":"_1","nodeType":"YulIdentifier","src":"8269:2:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8260:3:32"},"nodeType":"YulFunctionCall","src":"8260:12:32"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"8253:3:32"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8158:3:32"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"8163:6:32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8155:2:32"},"nodeType":"YulFunctionCall","src":"8155:15:32"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"8171:23:32","statements":[{"nodeType":"YulAssignment","src":"8173:19:32","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8184:3:32"},{"name":"_1","nodeType":"YulIdentifier","src":"8189:2:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8180:3:32"},"nodeType":"YulFunctionCall","src":"8180:12:32"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"8173:3:32"}]}]},"pre":{"nodeType":"YulBlock","src":"8151:3:32","statements":[]},"src":"8147:135:32"},{"nodeType":"YulAssignment","src":"8291:16:32","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"8301:6:32"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8291:6:32"}]}]},"name":"abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7280:9:32","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7291:7:32","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7303:6:32","type":""}],"src":"7208:1105:32"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_contract$_IAggregatorV3_$10405__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$2219__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IPancakeRouter_$10423__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_uint256_t_int256__to_t_uint256_t_int256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_uint80_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_uint80_fromMemory(headStart)\n        value1 := mload(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n        value3 := mload(add(headStart, 96))\n        value4 := abi_decode_uint80_fromMemory(add(headStart, 128))\n    }\n    function checked_mul_t_int256(x, y) -> product\n    {\n        product := mul(x, y)\n        if and(slt(x, 0), eq(y, shl(255, 1))) { panic_error_0x11() }\n        if iszero(or(iszero(x), eq(y, sdiv(product, x)))) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_f135aab2725c07697a063e0924cb1befdf2b2f389453222dd0c695ca279f8a43__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Only F Token contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e49ae48be73c974e12a156c9518d81c832d8ce47bdfa2d65c071477385562e9e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Re-burn not active\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_aeb05ce95fcea433e8444c29a5372eb4ece85e32eddbbe07ed65d04421d828bf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Final supply target reached\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_32e03c615fd327bd02a3ff00e8e613f9bee3abe1c9c2ab6680ac5fe3d6dc0519__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Re-burn cooldown\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256_t_rational_0_by_1_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let tail_1 := add(headStart, 160)\n        mstore(headStart, value0)\n        let _1 := 32\n        mstore(add(headStart, _1), value1)\n        mstore(add(headStart, 64), 160)\n        let pos := tail_1\n        let length := mload(value2)\n        mstore(tail_1, length)\n        pos := add(headStart, 192)\n        let srcPtr := add(value2, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n        mstore(add(headStart, 96), and(value3, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := mload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := shl(5, _4)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(_5, 63), not(31)))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        mstore(memPtr, _4)\n        dst := add(memPtr, _1)\n        let srcEnd := add(add(_3, _5), _1)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_3, _1)\n        for { } lt(src, srcEnd) { src := add(src, _1) }\n        {\n            mstore(dst, mload(src))\n            dst := add(dst, _1)\n        }\n        value0 := memPtr\n    }\n}","id":32,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"10434":[{"length":32,"start":445},{"length":32,"start":1540},{"length":32,"start":2541}],"10437":[{"length":32,"start":528},{"length":32,"start":810},{"length":32,"start":1851},{"length":32,"start":2457},{"length":32,"start":2675}],"10440":[{"length":32,"start":663},{"length":32,"start":2628},{"length":32,"start":2813}],"10443":[{"length":32,"start":326},{"length":32,"start":1055}],"10445":[{"length":32,"start":567},{"length":32,"start":1308}],"10447":[{"length":32,"start":624},{"length":32,"start":2140}],"10450":[{"length":32,"start":2313}],"10452":[{"length":32,"start":406},{"length":32,"start":1427}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101165760003560e01c80638da5cb5b116100a2578063da19ddfb11610071578063da19ddfb1461026b578063e08836dd14610292578063ebdac090146102b9578063efaee8a3146102cc578063f2fde38b146102d457600080fd5b80638da5cb5b146101fa57806393a397761461020b578063c3b6453e14610232578063c62016741461025957600080fd5b80635d7bdbea116100e95780635d7bdbea1461018857806362cd20181461019157806370af9b14146101b8578063715018a6146101df57806372a6bf8e146101e757600080fd5b80631a647fb71461011b578063218656e41461012557806331eb318a146101415780633238549114610180575b600080fd5b6101236102e7565b005b61012e60035481565b6040519081526020015b60405180910390f35b6101687f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610138565b61012e61041a565b61012e60025481565b61012e7f000000000000000000000000000000000000000000000000000000000000000081565b6101687f000000000000000000000000000000000000000000000000000000000000000081565b6101236104bc565b6101236101f5366004610ba9565b6104ce565b6000546001600160a01b0316610168565b6101687f000000000000000000000000000000000000000000000000000000000000000081565b6101687f000000000000000000000000000000000000000000000000000000000000000081565b61012e6a295be96e6406697200000081565b6101687f000000000000000000000000000000000000000000000000000000000000000081565b6101687f000000000000000000000000000000000000000000000000000000000000000081565b6101236102c7366004610ba9565b610511565b610123610589565b6101236102e2366004610bc2565b6107f1565b6102ef61082c565b6002541561040f57600061030161041a565b90506002548112610312575061040f565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610379573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061039d9190610bf2565b9050806000036103ae57505061040f565b600060646103bd836005610c21565b6103c79190610c38565b90506103d281610856565b60408051828152602081018590527f58c0c80496c71ceee0ba72810063be557bd3d50134028f18238d16ee9189a671910160405180910390a15050505b61041860018055565b565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561047b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049f9190610c79565b505050915050806402540be4006104b69190610cc9565b91505090565b6104c4610884565b61041860006108b1565b6104d6610884565b60028190556040518181527fa8bb388cf429c59dff818d603dba53ef8a6683d6daf61985bb28d136719ddced9060200160405180910390a150565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105865760405162461bcd60e51b815260206004820152601560248201527413db9b1e481188151bdad95b8818dbdb9d1c9858dd605a1b60448201526064015b60405180910390fd5b50565b61059161082c565b7f00000000000000000000000000000000000000000000000000000000000000004210156105f65760405162461bcd60e51b815260206004820152601260248201527152652d6275726e206e6f742061637469766560701b604482015260640161057d565b6a295be96e640669720000007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610660573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106849190610bf2565b116106d15760405162461bcd60e51b815260206004820152601b60248201527f46696e616c20737570706c792074617267657420726561636865640000000000604482015260640161057d565b6003546106e19062278d00610cf9565b4210156107235760405162461bcd60e51b815260206004820152601060248201526f293296b13ab9371031b7b7b63237bbb760811b604482015260640161057d565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa15801561078a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ae9190610bf2565b9050806000036107be575061040f565b600060646107cd836001610c21565b6107d79190610c38565b90506107e281610901565b50504260035561041860018055565b6107f9610884565b6001600160a01b03811661082357604051631e4fbdf760e01b81526000600482015260240161057d565b610586816108b1565b60026001540361084f57604051633ee5aeb560e01b815260040160405180910390fd5b6002600155565b610880817f0000000000000000000000000000000000000000000000000000000000000000610972565b5050565b6000546001600160a01b031633146104185760405163118cdaa760e01b815233600482015260240161057d565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600061092d827f0000000000000000000000000000000000000000000000000000000000000000610972565b905080156108805760408051838152602081018390527fbca429eac1a1f219916f1d45dd2ebfaca65503f5c0ca15922cd1ca7679f90fb4910160405180910390a15050565b604080516002808252606082018352600092839291906020830190803683370190505090507f0000000000000000000000000000000000000000000000000000000000000000816000815181106109cb576109cb610d22565b60200260200101906001600160a01b031690816001600160a01b0316815250507f000000000000000000000000000000000000000000000000000000000000000081600181518110610a1f57610a1f610d22565b6001600160a01b03928316602091820292909201015260405163095ea7b360e01b81527f000000000000000000000000000000000000000000000000000000000000000082166004820152602481018690527f00000000000000000000000000000000000000000000000000000000000000009091169063095ea7b3906044016020604051808303816000875af1158015610abe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ae29190610d38565b506040516338ed173960e01b81526000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906338ed173990610b3a908890859087908a904290600401610d5a565b6000604051808303816000875af1158015610b59573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610b819190810190610dcb565b905080600181518110610b9657610b96610d22565b6020026020010151925050505b92915050565b600060208284031215610bbb57600080fd5b5035919050565b600060208284031215610bd457600080fd5b81356001600160a01b0381168114610beb57600080fd5b9392505050565b600060208284031215610c0457600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b8082028115828204841417610ba357610ba3610c0b565b600082610c5557634e487b7160e01b600052601260045260246000fd5b500490565b805169ffffffffffffffffffff81168114610c7457600080fd5b919050565b600080600080600060a08688031215610c9157600080fd5b610c9a86610c5a565b9450602086015193506040860151925060608601519150610cbd60808701610c5a565b90509295509295909350565b80820260008212600160ff1b84141615610ce557610ce5610c0b565b8181058314821517610ba357610ba3610c0b565b80820180821115610ba357610ba3610c0b565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600060208284031215610d4a57600080fd5b81518015158114610beb57600080fd5b600060a082018783526020878185015260a0604085015281875180845260c086019150828901935060005b81811015610daa5784516001600160a01b031683529383019391830191600101610d85565b50506001600160a01b03969096166060850152505050608001529392505050565b60006020808385031215610dde57600080fd5b825167ffffffffffffffff80821115610df657600080fd5b818501915085601f830112610e0a57600080fd5b815181811115610e1c57610e1c610d0c565b8060051b604051601f19603f83011681018181108582111715610e4157610e41610d0c565b604052918252848201925083810185019188831115610e5f57600080fd5b938501935b82851015610e7d57845184529385019392850192610e64565b9897505050505050505056fea26469706673582212209d932397c9bc8545ccf137c0a1cc9a518748dde369b1b5165f9f703fd7dbedab64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xDA19DDFB GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xDA19DDFB EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0xE08836DD EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0xEBDAC090 EQ PUSH2 0x2B9 JUMPI DUP1 PUSH4 0xEFAEE8A3 EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0x93A39776 EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0xC3B6453E EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0xC6201674 EQ PUSH2 0x259 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5D7BDBEA GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x5D7BDBEA EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x62CD2018 EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x70AF9B14 EQ PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x72A6BF8E EQ PUSH2 0x1E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1A647FB7 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x218656E4 EQ PUSH2 0x125 JUMPI DUP1 PUSH4 0x31EB318A EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x32385491 EQ PUSH2 0x180 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x123 PUSH2 0x2E7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x12E PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x168 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x138 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x41A JUMP JUMPDEST PUSH2 0x12E PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x12E PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x168 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x123 PUSH2 0x4BC JUMP JUMPDEST PUSH2 0x123 PUSH2 0x1F5 CALLDATASIZE PUSH1 0x4 PUSH2 0xBA9 JUMP JUMPDEST PUSH2 0x4CE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x168 JUMP JUMPDEST PUSH2 0x168 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x168 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x12E PUSH11 0x295BE96E64066972000000 DUP2 JUMP JUMPDEST PUSH2 0x168 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x168 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x123 PUSH2 0x2C7 CALLDATASIZE PUSH1 0x4 PUSH2 0xBA9 JUMP JUMPDEST PUSH2 0x511 JUMP JUMPDEST PUSH2 0x123 PUSH2 0x589 JUMP JUMPDEST PUSH2 0x123 PUSH2 0x2E2 CALLDATASIZE PUSH1 0x4 PUSH2 0xBC2 JUMP JUMPDEST PUSH2 0x7F1 JUMP JUMPDEST PUSH2 0x2EF PUSH2 0x82C JUMP JUMPDEST PUSH1 0x2 SLOAD ISZERO PUSH2 0x40F JUMPI PUSH1 0x0 PUSH2 0x301 PUSH2 0x41A JUMP JUMPDEST SWAP1 POP PUSH1 0x2 SLOAD DUP2 SLT PUSH2 0x312 JUMPI POP PUSH2 0x40F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x379 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x39D SWAP2 SWAP1 PUSH2 0xBF2 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 SUB PUSH2 0x3AE JUMPI POP POP PUSH2 0x40F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH2 0x3BD DUP4 PUSH1 0x5 PUSH2 0xC21 JUMP JUMPDEST PUSH2 0x3C7 SWAP2 SWAP1 PUSH2 0xC38 JUMP JUMPDEST SWAP1 POP PUSH2 0x3D2 DUP2 PUSH2 0x856 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH32 0x58C0C80496C71CEEE0BA72810063BE557BD3D50134028F18238D16EE9189A671 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMPDEST PUSH2 0x418 PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x47B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x49F SWAP2 SWAP1 PUSH2 0xC79 JUMP JUMPDEST POP POP POP SWAP2 POP POP DUP1 PUSH5 0x2540BE400 PUSH2 0x4B6 SWAP2 SWAP1 PUSH2 0xCC9 JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x4C4 PUSH2 0x884 JUMP JUMPDEST PUSH2 0x418 PUSH1 0x0 PUSH2 0x8B1 JUMP JUMPDEST PUSH2 0x4D6 PUSH2 0x884 JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0xA8BB388CF429C59DFF818D603DBA53EF8A6683D6DAF61985BB28D136719DDCED SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x586 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x13DB9B1E481188151BDAD95B8818DBDB9D1C9858DD PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x591 PUSH2 0x82C JUMP JUMPDEST PUSH32 0x0 TIMESTAMP LT ISZERO PUSH2 0x5F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x52652D6275726E206E6F7420616374697665 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x57D JUMP JUMPDEST PUSH11 0x295BE96E64066972000000 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x660 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x684 SWAP2 SWAP1 PUSH2 0xBF2 JUMP JUMPDEST GT PUSH2 0x6D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46696E616C20737570706C792074617267657420726561636865640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x57D JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x6E1 SWAP1 PUSH3 0x278D00 PUSH2 0xCF9 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x723 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x293296B13AB9371031B7B7B63237BBB7 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x57D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x78A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7AE SWAP2 SWAP1 PUSH2 0xBF2 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 SUB PUSH2 0x7BE JUMPI POP PUSH2 0x40F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH2 0x7CD DUP4 PUSH1 0x1 PUSH2 0xC21 JUMP JUMPDEST PUSH2 0x7D7 SWAP2 SWAP1 PUSH2 0xC38 JUMP JUMPDEST SWAP1 POP PUSH2 0x7E2 DUP2 PUSH2 0x901 JUMP JUMPDEST POP POP TIMESTAMP PUSH1 0x3 SSTORE PUSH2 0x418 PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH2 0x7F9 PUSH2 0x884 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x823 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x57D JUMP JUMPDEST PUSH2 0x586 DUP2 PUSH2 0x8B1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x84F JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH2 0x880 DUP2 PUSH32 0x0 PUSH2 0x972 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x418 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x57D JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x92D DUP3 PUSH32 0x0 PUSH2 0x972 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x880 JUMPI PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0xBCA429EAC1A1F219916F1D45DD2EBFACA65503F5C0CA15922CD1CA7679F90FB4 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP PUSH32 0x0 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x9CB JUMPI PUSH2 0x9CB PUSH2 0xD22 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH32 0x0 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xA1F JUMPI PUSH2 0xA1F PUSH2 0xD22 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH32 0x0 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xABE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAE2 SWAP2 SWAP1 PUSH2 0xD38 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x38ED1739 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x38ED1739 SWAP1 PUSH2 0xB3A SWAP1 DUP9 SWAP1 DUP6 SWAP1 DUP8 SWAP1 DUP11 SWAP1 TIMESTAMP SWAP1 PUSH1 0x4 ADD PUSH2 0xD5A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB59 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xB81 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xDCB JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xB96 JUMPI PUSH2 0xB96 PUSH2 0xD22 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBBB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBD4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xBEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC04 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0xBA3 JUMPI PUSH2 0xBA3 PUSH2 0xC0B JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xC55 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xC74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xC91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC9A DUP7 PUSH2 0xC5A JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD SWAP2 POP PUSH2 0xCBD PUSH1 0x80 DUP8 ADD PUSH2 0xC5A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST DUP1 DUP3 MUL PUSH1 0x0 DUP3 SLT PUSH1 0x1 PUSH1 0xFF SHL DUP5 EQ AND ISZERO PUSH2 0xCE5 JUMPI PUSH2 0xCE5 PUSH2 0xC0B JUMP JUMPDEST DUP2 DUP2 SDIV DUP4 EQ DUP3 ISZERO OR PUSH2 0xBA3 JUMPI PUSH2 0xBA3 PUSH2 0xC0B JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xBA3 JUMPI PUSH2 0xBA3 PUSH2 0xC0B JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xBEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD DUP8 DUP4 MSTORE PUSH1 0x20 DUP8 DUP2 DUP6 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP6 ADD MSTORE DUP2 DUP8 MLOAD DUP1 DUP5 MSTORE PUSH1 0xC0 DUP7 ADD SWAP2 POP DUP3 DUP10 ADD SWAP4 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xDAA JUMPI DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xD85 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 SWAP1 SWAP7 AND PUSH1 0x60 DUP6 ADD MSTORE POP POP POP PUSH1 0x80 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xDF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0xE1C JUMPI PUSH2 0xE1C PUSH2 0xD0C JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0xE41 JUMPI PUSH2 0xE41 PUSH2 0xD0C JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 POP DUP4 DUP2 ADD DUP6 ADD SWAP2 DUP9 DUP4 GT ISZERO PUSH2 0xE5F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP3 DUP6 LT ISZERO PUSH2 0xE7D JUMPI DUP5 MLOAD DUP5 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP3 DUP6 ADD SWAP3 PUSH2 0xE64 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 SWAP4 0x23 SWAP8 0xC9 0xBC DUP6 GASLIMIT 0xCC CALL CALLDATACOPY 0xC0 LOG1 0xCC SWAP11 MLOAD DUP8 BASEFEE 0xDD 0xE3 PUSH10 0xB1B5165F9F703FD7DBED 0xAB PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"558:3777:31:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2686:487;;;:::i;:::-;;1171:35;;;;;;;;;160:25:32;;;148:2;133:18;1171:35:31;;;;;;;;771:41;;;;;;;;-1:-1:-1;;;;;383:32:32;;;365:51;;353:2;338:18;771:41:31;196:226:32;4197:136:31;;;:::i;1136:29::-;;;;;;1009:52;;;;;642:31;;;;;2293:101:0;;;:::i;4059:133:31:-;;;;;;:::i;:::-;;:::i;1638:85:0:-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;1638:85;;679:34:31;;;;;818:49;;;;;1067:63;;1113:17;1067:63;;873:41;;;;;719:46;;;;;3938:116;;;;;;:::i;:::-;;:::i;2095:586::-;;;:::i;2543:215:0:-;;;;;;:::i;:::-;;:::i;2686:487:31:-;2500:21:18;:19;:21::i;:::-;2750:14:31::1;::::0;2746:32;2771:7:::1;2746:32;2787:19;2809:16;:14;:16::i;:::-;2787:38;;2862:14;;2839:12;:38;2835:51;;2879:7;;;2835:51;2923:35;::::0;-1:-1:-1;;;2923:35:31;;2952:4:::1;2923:35;::::0;::::1;365:51:32::0;2895:25:31::1;::::0;2923:10:::1;-1:-1:-1::0;;;;;2923:20:31::1;::::0;::::1;::::0;338:18:32;;2923:35:31::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2895:63;;2972:17;2993:1;2972:22:::0;2968:35:::1;;2996:7;;;;2968:35;3012:21;3062:3;3037:21;:17:::0;3057:1:::1;3037:21;:::i;:::-;3036:29;;;;:::i;:::-;3012:53;;3075:29;3090:13;3075:14;:29::i;:::-;3119:47;::::0;;2634:25:32;;;2690:2;2675:18;;2668:34;;;3119:47:31::1;::::0;2607:18:32;3119:47:31::1;;;;;;;2736:437;;;2531:1:18;2542:20:::0;1857:1;3068:21;;2888:208;2542:20;2686:487:31:o;4197:136::-;4244:6;4257:12;4279:10;-1:-1:-1;;;;;4279:26:31;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4254:53;;;;;;4316:5;4324:6;4316:14;;;;:::i;:::-;4309:21;;;4197:136;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;4059:133:31:-:0;1531:13:0;:11;:13::i;:::-;4124:14:31::1;:26:::0;;;4157:32:::1;::::0;160:25:32;;;4157:32:31::1;::::0;148:2:32;133:18;4157:32:31::1;;;;;;;4059:133:::0;:::o;3938:116::-;3987:10;-1:-1:-1;;;;;4001:24:31;3987:38;;3979:72;;;;-1:-1:-1;;;3979:72:31;;3819:2:32;3979:72:31;;;3801:21:32;3858:2;3838:18;;;3831:30;-1:-1:-1;;;3877:18:32;;;3870:51;3938:18;;3979:72:31;;;;;;;;;3938:116;:::o;2095:586::-;2500:21:18;:19;:21::i;:::-;2179:27:31::1;2160:15;:46;;2152:77;;;::::0;-1:-1:-1;;;2152:77:31;;4169:2:32;2152:77:31::1;::::0;::::1;4151:21:32::0;4208:2;4188:18;;;4181:30;-1:-1:-1;;;4227:18:32;;;4220:48;4285:18;;2152:77:31::1;3967:342:32::0;2152:77:31::1;1113:17;2247:7;-1:-1:-1::0;;;;;2247:19:31::1;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:43;2239:83;;;::::0;-1:-1:-1;;;2239:83:31;;4516:2:32;2239:83:31::1;::::0;::::1;4498:21:32::0;4555:2;4535:18;;;4528:30;4594:29;4574:18;;;4567:57;4641:18;;2239:83:31::1;4314:351:32::0;2239:83:31::1;2359:20;::::0;:30:::1;::::0;2382:7:::1;2359:30;:::i;:::-;2340:15;:49;;2332:78;;;::::0;-1:-1:-1;;;2332:78:31;;5002:2:32;2332:78:31::1;::::0;::::1;4984:21:32::0;5041:2;5021:18;;;5014:30;-1:-1:-1;;;5060:18:32;;;5053:46;5116:18;;2332:78:31::1;4800:340:32::0;2332:78:31::1;2448:35;::::0;-1:-1:-1;;;2448:35:31;;2477:4:::1;2448:35;::::0;::::1;365:51:32::0;2420:25:31::1;::::0;2448:10:::1;-1:-1:-1::0;;;;;2448:20:31::1;::::0;::::1;::::0;338:18:32;;2448:35:31::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2420:63;;2497:17;2518:1;2497:22:::0;2493:35:::1;;2521:7;;;2493:35;2537:21;2587:3;2562:21;:17:::0;2582:1:::1;2562:21;:::i;:::-;2561:29;;;;:::i;:::-;2537:53;;2600:26;2612:13;2600:11;:26::i;:::-;-1:-1:-1::0;;2659:15:31::1;2636:20;:38:::0;2542:20:18;1857:1;3068:21;;2888:208;2543:215:0;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;365:51:32::0;338:18;;2672:31:0::1;196:226:32::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;2575:307:18:-:0;1899:1;2702:7;;:18;2698:86;;2743:30;;-1:-1:-1;;;2743:30:18;;;;;;;;;;;2698:86;1899:1;2858:7;:17;2575:307::o;3387:115:31:-;3445:54;3466:14;3482:16;3445:20;:54::i;:::-;;3387:115;:::o;1796:162:0:-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;735:10:16;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:16;1901:40:0;;;365:51:32;338:18;;1901:40:0;196:226:32;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;3178:204:31:-;3233:20;3256:50;3277:14;3293:12;3256:20;:50::i;:::-;3233:73;-1:-1:-1;3312:16:31;;3308:71;;3335:44;;;2634:25:32;;;2690:2;2675:18;;2668:34;;;3335:44:31;;2607:18:32;3335:44:31;;;;;;;3231:151;3178:204;:::o;3507:426::-;3629:16;;;3643:1;3629:16;;;;;;;;3586:7;;;;3629:16;3643:1;3629:16;;;;;;;;;;-1:-1:-1;3629:16:31;3605:40;;3673:10;3655:4;3660:1;3655:7;;;;;;;;:::i;:::-;;;;;;:29;-1:-1:-1;;;;;3655:29:31;;;-1:-1:-1;;;;;3655:29:31;;;;;3712:7;3694:4;3699:1;3694:7;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3694:26:31;;;:7;;;;;;;;;:26;3730:54;;-1:-1:-1;;;3730:54:31;;3757:14;5854:32:32;;3730:54:31;;;5836:51:32;5903:18;;;5896:34;;;3730:10:31;:18;;;;;;5809::32;;3730:54:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3818:81:31;;-1:-1:-1;;;3818:81:31;;3794:21;;-1:-1:-1;;;;;3818:14:31;:39;;;;:81;;3858:9;;3794:21;;3872:4;;3878:3;;3883:15;;3818:81;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3818:81:31;;;;;;;;;;;;:::i;:::-;3794:105;;3916:7;3924:1;3916:10;;;;;;;;:::i;:::-;;;;;;;3909:17;;;;3507:426;;;;;:::o;830:180:32:-;889:6;942:2;930:9;921:7;917:23;913:32;910:52;;;958:1;955;948:12;910:52;-1:-1:-1;981:23:32;;830:180;-1:-1:-1;830:180:32:o;1455:286::-;1514:6;1567:2;1555:9;1546:7;1542:23;1538:32;1535:52;;;1583:1;1580;1573:12;1535:52;1609:23;;-1:-1:-1;;;;;1661:31:32;;1651:42;;1641:70;;1707:1;1704;1697:12;1641:70;1730:5;1455:286;-1:-1:-1;;;1455:286:32:o;1746:184::-;1816:6;1869:2;1857:9;1848:7;1844:23;1840:32;1837:52;;;1885:1;1882;1875:12;1837:52;-1:-1:-1;1908:16:32;;1746:184;-1:-1:-1;1746:184:32:o;1935:127::-;1996:10;1991:3;1987:20;1984:1;1977:31;2027:4;2024:1;2017:15;2051:4;2048:1;2041:15;2067:168;2140:9;;;2171;;2188:15;;;2182:22;;2168:37;2158:71;;2209:18;;:::i;2240:217::-;2280:1;2306;2296:132;;2350:10;2345:3;2341:20;2338:1;2331:31;2385:4;2382:1;2375:15;2413:4;2410:1;2403:15;2296:132;-1:-1:-1;2442:9:32;;2240:217::o;2713:179::-;2791:13;;2844:22;2833:34;;2823:45;;2813:73;;2882:1;2879;2872:12;2813:73;2713:179;;;:::o;2897:473::-;3000:6;3008;3016;3024;3032;3085:3;3073:9;3064:7;3060:23;3056:33;3053:53;;;3102:1;3099;3092:12;3053:53;3125:39;3154:9;3125:39;:::i;:::-;3115:49;;3204:2;3193:9;3189:18;3183:25;3173:35;;3248:2;3237:9;3233:18;3227:25;3217:35;;3292:2;3281:9;3277:18;3271:25;3261:35;;3315:49;3359:3;3348:9;3344:19;3315:49;:::i;:::-;3305:59;;2897:473;;;;;;;;:::o;3375:237::-;3447:9;;;3414:7;3472:9;;-1:-1:-1;;;3483:18:32;;3468:34;3465:60;;;3505:18;;:::i;:::-;3578:1;3569:7;3564:16;3561:1;3558:23;3554:1;3547:9;3544:38;3534:72;;3586:18;;:::i;4670:125::-;4735:9;;;4756:10;;;4753:36;;;4769:18;;:::i;5398:127::-;5459:10;5454:3;5450:20;5447:1;5440:31;5490:4;5487:1;5480:15;5514:4;5511:1;5504:15;5530:127;5591:10;5586:3;5582:20;5579:1;5572:31;5622:4;5619:1;5612:15;5646:4;5643:1;5636:15;5941:277;6008:6;6061:2;6049:9;6040:7;6036:23;6032:32;6029:52;;;6077:1;6074;6067:12;6029:52;6109:9;6103:16;6162:5;6155:13;6148:21;6141:5;6138:32;6128:60;;6184:1;6181;6174:12;6223:980;6485:4;6533:3;6522:9;6518:19;6564:6;6553:9;6546:25;6590:2;6628:6;6623:2;6612:9;6608:18;6601:34;6671:3;6666:2;6655:9;6651:18;6644:31;6695:6;6730;6724:13;6761:6;6753;6746:22;6799:3;6788:9;6784:19;6777:26;;6838:2;6830:6;6826:15;6812:29;;6859:1;6869:195;6883:6;6880:1;6877:13;6869:195;;;6948:13;;-1:-1:-1;;;;;6944:39:32;6932:52;;7039:15;;;;7004:12;;;;6980:1;6898:9;6869:195;;;-1:-1:-1;;;;;;;7120:32:32;;;;7115:2;7100:18;;7093:60;-1:-1:-1;;;7184:3:32;7169:19;7162:35;7081:3;6223:980;-1:-1:-1;;;6223:980:32:o;7208:1105::-;7303:6;7334:2;7377;7365:9;7356:7;7352:23;7348:32;7345:52;;;7393:1;7390;7383:12;7345:52;7426:9;7420:16;7455:18;7496:2;7488:6;7485:14;7482:34;;;7512:1;7509;7502:12;7482:34;7550:6;7539:9;7535:22;7525:32;;7595:7;7588:4;7584:2;7580:13;7576:27;7566:55;;7617:1;7614;7607:12;7566:55;7646:2;7640:9;7668:2;7664;7661:10;7658:36;;;7674:18;;:::i;:::-;7720:2;7717:1;7713:10;7752:2;7746:9;7815:2;7811:7;7806:2;7802;7798:11;7794:25;7786:6;7782:38;7870:6;7858:10;7855:22;7850:2;7838:10;7835:18;7832:46;7829:72;;;7881:18;;:::i;:::-;7917:2;7910:22;7967:18;;;8001:15;;;;-1:-1:-1;8043:11:32;;;8039:20;;;8071:19;;;8068:39;;;8103:1;8100;8093:12;8068:39;8127:11;;;;8147:135;8163:6;8158:3;8155:15;8147:135;;;8229:10;;8217:23;;8180:12;;;;8260;;;;8147:135;;;8301:6;7208:1105;-1:-1:-1;;;;;;;;7208:1105:32:o"},"methodIdentifiers":{"FINAL_SUPPLY_TARGET()":"c6201674","F_TOKEN()":"70af9b14","F_TOKEN_CONTRACT_ADDRESS()":"c3b6453e","PANCAKE_ROUTER()":"e08836dd","PRICE_FEED()":"31eb318a","REBURN_ACTIVATION_TIMESTAMP()":"62cd2018","STABLECOIN()":"93a39776","STAKING_CONTRACT()":"da19ddfb","depositFees(uint256)":"ebdac090","executeReburn()":"efaee8a3","getFTokenPrice()":"32385491","lastBuybackTimestamp()":"218656e4","owner()":"8da5cb5b","protectSoftFloor()":"1a647fb7","renounceOwnership()":"715018a6","setSoftFloorPrice(uint256)":"72a6bf8e","softFloorPrice()":"5d7bdbea","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_fTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_stablecoinAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_routerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_chainlinkFeedAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_stakingContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FundsReceived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountBought\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountBurned\",\"type\":\"uint256\"}],\"name\":\"ReburnExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPrice\",\"type\":\"uint256\"}],\"name\":\"SoftFloorPriceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountBought\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"currentPrice\",\"type\":\"int256\"}],\"name\":\"SoftFloorProtected\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"FINAL_SUPPLY_TARGET\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"F_TOKEN\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"F_TOKEN_CONTRACT_ADDRESS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PANCAKE_ROUTER\",\"outputs\":[{\"internalType\":\"contract IPancakeRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRICE_FEED\",\"outputs\":[{\"internalType\":\"contract IAggregatorV3\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REBURN_ACTIVATION_TIMESTAMP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STABLECOIN\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STAKING_CONTRACT\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"depositFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"executeReburn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFTokenPrice\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastBuybackTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protectSoftFloor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newPrice\",\"type\":\"uint256\"}],\"name\":\"setSoftFloorPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"softFloorPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Treasury.sol\":\"Treasury\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"contracts/Treasury.sol\":{\"keccak256\":\"0xb70ced93e8dabf40fab5da4b6a9d728b809f241b14db41998163cea0961b2f7f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://47a2c57edce830a8c1cb704405c9512bc20e8691c8627cd6b5bfe11c87482aa4\",\"dweb:/ipfs/QmdSmETvxrZezMy47vFLyAgEWssPB5FNtccLXXETmsMcSu\"]}},\"version\":1}"}}}}}