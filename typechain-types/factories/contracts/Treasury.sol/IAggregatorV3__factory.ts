/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IAggregatorV3,
  IAggregatorV3Interface,
} from "../../../contracts/Treasury.sol/IAggregatorV3";

const _abi = [
  {
    inputs: [],
    name: "latestRoundData",
    outputs: [
      {
        internalType: "uint80",
        name: "",
        type: "uint80",
      },
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint80",
        name: "",
        type: "uint80",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IAggregatorV3__factory {
  static readonly abi = _abi;
  static createInterface(): IAggregatorV3Interface {
    return new Interface(_abi) as IAggregatorV3Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IAggregatorV3 {
    return new Contract(address, _abi, runner) as unknown as IAggregatorV3;
  }
}
