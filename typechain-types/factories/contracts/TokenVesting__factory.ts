/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  TokenVesting,
  TokenVestingInterface,
} from "../../contracts/TokenVesting";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_beneficiaryAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_initialOwner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TokensDeposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TokensReleased",
    type: "event",
  },
  {
    inputs: [],
    name: "BENEFICIARY",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CLIFF_DURATION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TOKEN",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TOTAL_VESTING_DURATION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VESTING_START_TIMESTAMP",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_totalAmount",
        type: "uint256",
      },
    ],
    name: "depositVestingTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getReleasableAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "releasedAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalLockedAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101206040523480156200001257600080fd5b506040516200157138038062001571833981810160405281019062000038919062000364565b80600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000ae5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a59190620003d1565b60405180910390fd5b620000bf816200023660201b60201c565b50600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160362000132576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000129906200044f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603620001a4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200019b90620004c1565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508173ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250504261010081815250506303c2670060c08181525050630d28688060e08181525050505050620004e3565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200032c82620002ff565b9050919050565b6200033e816200031f565b81146200034a57600080fd5b50565b6000815190506200035e8162000333565b92915050565b60008060006060848603121562000380576200037f620002fa565b5b600062000390868287016200034d565b9350506020620003a3868287016200034d565b9250506040620003b6868287016200034d565b9150509250925092565b620003cb816200031f565b82525050565b6000602082019050620003e86000830184620003c0565b92915050565b600082825260208201905092915050565b7f42656e6566696369617279206973207a65726f00000000000000000000000000600082015250565b600062000437601383620003ee565b91506200044482620003ff565b602082019050919050565b600060208201905081810360008301526200046a8162000428565b9050919050565b7f546f6b656e206973207a65726f00000000000000000000000000000000000000600082015250565b6000620004a9600d83620003ee565b9150620004b68262000471565b602082019050919050565b60006020820190508181036000830152620004dc816200049a565b9050919050565b60805160a05160c05160e05161010051610fee62000583600039600081816104c6015281816107dd0152818161083901526108a40152600081816105c50152818161081801526108ff0152600081816104a2015281816107bc0152818161088301526108de015260008181610236015281816102a7015281816103a00152610408015260008181610274015281816103c201526105440152610fee6000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806386d1a69f1161008c578063ba175dfa11610066578063ba175dfa146101ba578063cc279e80146101d8578063d4ce2b75146101f4578063f2fde38b14610212576100cf565b806386d1a69f146101745780638da5cb5b1461017e578063b3daa6521461019c576100cf565b806305a9f274146100d45780632f99c6cc146100f257806345d30a1714610110578063715018a61461012e57806382bfefc8146101385780638401b96814610156575b600080fd5b6100dc61022e565b6040516100e99190610b22565b60405180910390f35b6100fa610234565b6040516101079190610b7e565b60405180910390f35b610118610258565b6040516101259190610b22565b60405180910390f35b61013661025e565b005b610140610272565b60405161014d9190610bf8565b60405180910390f35b61015e610296565b60405161016b9190610b22565b60405180910390f35b61017c6102a5565b005b610186610477565b6040516101939190610b7e565b60405180910390f35b6101a46104a0565b6040516101b19190610b22565b60405180910390f35b6101c26104c4565b6040516101cf9190610b22565b60405180910390f35b6101f260048036038101906101ed9190610c44565b6104e8565b005b6101fc6105c3565b6040516102099190610b22565b60405180910390f35b61022c60048036038101906102279190610c9d565b6105e7565b005b60015481565b7f000000000000000000000000000000000000000000000000000000000000000081565b60025481565b61026661066d565b61027060006106f4565b565b7f000000000000000000000000000000000000000000000000000000000000000081565b60006102a06107b8565b905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610333576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032a90610d27565b60405180910390fd5b600061033d6107b8565b905060008111610382576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037990610d93565b60405180910390fd5b80600260008282546103949190610de2565b925050819055506104067f0000000000000000000000000000000000000000000000000000000000000000827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1661095e9092919063ffffffff16565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff167fc7798891864187665ac6dd119286e44ec13f014527aeeb2b8eb3fd413df931798260405161046c9190610b22565b60405180910390a250565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b6104f061066d565b600060015414610535576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052c90610e62565b60405180910390fd5b806001819055506105893330837f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166109dd909392919063ffffffff16565b7f77acf75e237f9aae98f997395832d522bdb695e4a9bd07704936aa889a3667d1816040516105b89190610b22565b60405180910390a150565b7f000000000000000000000000000000000000000000000000000000000000000081565b6105ef61066d565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036106615760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016106589190610b7e565b60405180910390fd5b61066a816106f4565b50565b610675610a5f565b73ffffffffffffffffffffffffffffffffffffffff16610693610477565b73ffffffffffffffffffffffffffffffffffffffff16146106f2576106b6610a5f565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016106e99190610b7e565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006108069190610de2565b421015610816576000905061095b565b7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006108629190610de2565b421061087f576002546001546108789190610e82565b905061095b565b60007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006108cd9190610de2565b426108d89190610e82565b905060007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006109289190610e82565b90506000818360015461093b9190610eb6565b6109459190610f27565b9050600254816109559190610e82565b93505050505b90565b6109d8838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401610991929190610f58565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610a67565b505050565b610a59848573ffffffffffffffffffffffffffffffffffffffff166323b872dd868686604051602401610a1293929190610f81565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610a67565b50505050565b600033905090565b600080602060008451602086016000885af180610a8a576040513d6000823e3d81fd5b3d925060005191505060008214610aa5576001811415610ac1565b60008473ffffffffffffffffffffffffffffffffffffffff163b145b15610b0357836040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401610afa9190610b7e565b60405180910390fd5b50505050565b6000819050919050565b610b1c81610b09565b82525050565b6000602082019050610b376000830184610b13565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b6882610b3d565b9050919050565b610b7881610b5d565b82525050565b6000602082019050610b936000830184610b6f565b92915050565b6000819050919050565b6000610bbe610bb9610bb484610b3d565b610b99565b610b3d565b9050919050565b6000610bd082610ba3565b9050919050565b6000610be282610bc5565b9050919050565b610bf281610bd7565b82525050565b6000602082019050610c0d6000830184610be9565b92915050565b600080fd5b610c2181610b09565b8114610c2c57600080fd5b50565b600081359050610c3e81610c18565b92915050565b600060208284031215610c5a57610c59610c13565b5b6000610c6884828501610c2f565b91505092915050565b610c7a81610b5d565b8114610c8557600080fd5b50565b600081359050610c9781610c71565b92915050565b600060208284031215610cb357610cb2610c13565b5b6000610cc184828501610c88565b91505092915050565b600082825260208201905092915050565b7f4f6e6c792062656e656669636961727900000000000000000000000000000000600082015250565b6000610d11601083610cca565b9150610d1c82610cdb565b602082019050919050565b60006020820190508181036000830152610d4081610d04565b9050919050565b7f4e6f20746f6b656e732064756500000000000000000000000000000000000000600082015250565b6000610d7d600d83610cca565b9150610d8882610d47565b602082019050919050565b60006020820190508181036000830152610dac81610d70565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ded82610b09565b9150610df883610b09565b9250828201905080821115610e1057610e0f610db3565b5b92915050565b7f4465706f736974656420616c7265616479000000000000000000000000000000600082015250565b6000610e4c601183610cca565b9150610e5782610e16565b602082019050919050565b60006020820190508181036000830152610e7b81610e3f565b9050919050565b6000610e8d82610b09565b9150610e9883610b09565b9250828203905081811115610eb057610eaf610db3565b5b92915050565b6000610ec182610b09565b9150610ecc83610b09565b9250828202610eda81610b09565b91508282048414831517610ef157610ef0610db3565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f3282610b09565b9150610f3d83610b09565b925082610f4d57610f4c610ef8565b5b828204905092915050565b6000604082019050610f6d6000830185610b6f565b610f7a6020830184610b13565b9392505050565b6000606082019050610f966000830186610b6f565b610fa36020830185610b6f565b610fb06040830184610b13565b94935050505056fea2646970667358221220041db8a6b4e138703b5dd3367080b1385b0378c409938226a7e4da756576e5c464736f6c63430008140033";

type TokenVestingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenVestingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenVesting__factory extends ContractFactory {
  constructor(...args: TokenVestingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _tokenAddress: AddressLike,
    _beneficiaryAddress: AddressLike,
    _initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _tokenAddress,
      _beneficiaryAddress,
      _initialOwner,
      overrides || {}
    );
  }
  override deploy(
    _tokenAddress: AddressLike,
    _beneficiaryAddress: AddressLike,
    _initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _tokenAddress,
      _beneficiaryAddress,
      _initialOwner,
      overrides || {}
    ) as Promise<
      TokenVesting & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TokenVesting__factory {
    return super.connect(runner) as TokenVesting__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenVestingInterface {
    return new Interface(_abi) as TokenVestingInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TokenVesting {
    return new Contract(address, _abi, runner) as unknown as TokenVesting;
  }
}
