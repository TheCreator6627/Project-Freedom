/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  RewardManager,
  RewardManagerInterface,
} from "../../contracts/RewardManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_initialBaseURI",
        type: "string",
      },
      {
        internalType: "address",
        name: "_initialOwner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_royaltyReceiver",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC1155InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC1155InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "idsLength",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "valuesLength",
        type: "uint256",
      },
    ],
    name: "ERC1155InvalidArrayLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC1155InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC1155InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC1155InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC1155MissingApprovalForAll",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "newURI",
        type: "string",
      },
    ],
    name: "BaseURIUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "newRoot",
        type: "bytes32",
      },
    ],
    name: "MerkleRootUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "NFTClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint96",
        name: "fraction",
        type: "uint96",
      },
    ],
    name: "RoyaltyInfoUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "claimNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "hasClaimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "merkleRoots",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "mintedCounts",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "royaltyFraction",
    outputs: [
      {
        internalType: "uint96",
        name: "",
        type: "uint96",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "royaltyRecipient",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_newBaseURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_newRoot",
        type: "bytes32",
      },
    ],
    name: "setMerkleRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "_fraction",
        type: "uint96",
      },
    ],
    name: "setRoyaltyInfo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "supplyLimits",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620021da380380620021da8339810160408190526200003491620001de565b8183620000418162000147565b506001600160a01b0381166200007157604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b6200007c8162000159565b5060046200008b848262000367565b506001600160a01b0316607d60a11b176009555050600860205262030d407f6add646517a5b0f6793cd5891b7937d28a5b2981a5d88ebc7cd776088fea904155620186a07f625b35f5e76f098dd7c3a05b10e2e5e78a4a01228d60c3b143426cdf36d2645555620138807f9321edea6e3be4df59a344b401fab4f888b556fda1f954244cff9204bad624b855600560005261c3507f91238f30f286c9a1c6e901c4eda3b214c381c846e3dbe48df95c21488e8e1fdb5562000433565b600262000155828262000367565b5050565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b0381168114620001d957600080fd5b919050565b600080600060608486031215620001f457600080fd5b83516001600160401b03808211156200020c57600080fd5b818601915086601f8301126200022157600080fd5b815181811115620002365762000236620001ab565b604051601f8201601f19908116603f01168101908382118183101715620002615762000261620001ab565b816040528281526020935089848487010111156200027e57600080fd5b600091505b82821015620002a2578482018401518183018501529083019062000283565b6000848483010152809750505050620002bd818701620001c1565b93505050620002cf60408501620001c1565b90509250925092565b600181811c90821680620002ed57607f821691505b6020821081036200030e57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200036257600081815260208120601f850160051c810160208610156200033d5750805b601f850160051c820191505b818110156200035e5782815560010162000349565b5050505b505050565b81516001600160401b03811115620003835762000383620001ab565b6200039b81620003948454620002d8565b8462000314565b602080601f831160018114620003d35760008415620003ba5750858301515b600019600386901b1c1916600185901b1785556200035e565b600085815260208120601f198616915b828110156200040457888601518255948401946001909101908401620003e3565b5085821015620004235787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b611d9780620004436000396000f3fe608060405234801561001057600080fd5b506004361061014c5760003560e01c8063715018a6116100c3578063a22cb4651161007c578063a22cb46514610327578063d8b2eb991461033a578063e7dee99f1461035a578063e985e9c51461038c578063f242432a1461039f578063f2fde38b146103b257600080fd5b8063715018a61461028d57806371c5ecb114610295578063765b1845146102b5578063873f6f9e146102c85780638da5cb5b146102f65780639354f1751461030757600080fd5b80632a55205a116101155780632a55205a146101e25780632eb2c2d6146102145780634c00de82146102275780634e1273f41461025257806355f804b3146102725780636c0360eb1461028557600080fd5b8062fdd58e1461015157806301ffc9a71461017757806302fa7c471461019a5780630e89341c146101af57806318712c21146101cf575b600080fd5b61016461015f3660046113c4565b6103c5565b6040519081526020015b60405180910390f35b61018a610185366004611404565b6103ed565b604051901515815260200161016e565b6101ad6101a8366004611421565b61043d565b005b6101c26101bd366004611464565b61049e565b60405161016e91906114cd565b6101ad6101dd3660046114e0565b6104d2565b6101f56101f03660046114e0565b610574565b604080516001600160a01b03909316835260208301919091520161016e565b6101ad610222366004611650565b6105ba565b60095461023a906001600160a01b031681565b6040516001600160a01b03909116815260200161016e565b6102656102603660046116fa565b610621565b60405161016e91906117f5565b6101ad610280366004611808565b6106f6565b6101c2610745565b6101ad6107d3565b6101646102a3366004611464565b60056020526000908152604090205481565b6101ad6102c3366004611851565b6107e7565b61018a6102d63660046118d0565b600660209081526000928352604080842090915290825290205460ff1681565b6003546001600160a01b031661023a565b610164610315366004611464565b60086020526000908152604090205481565b6101ad6103353660046118fc565b610a54565b610164610348366004611464565b60076020526000908152604090205481565b60095461037490600160a01b90046001600160601b031681565b6040516001600160601b03909116815260200161016e565b61018a61039a36600461192d565b610a63565b6101ad6103ad366004611957565b610a91565b6101ad6103c03660046119bc565b610af0565b6000818152602081815260408083206001600160a01b03861684529091529020545b92915050565b60006001600160e01b03198216636cdb3d1360e11b148061041e57506001600160e01b031982166303a24d0760e21b145b806103e757506301ffc9a760e01b6001600160e01b03198316146103e7565b610445610b2e565b6001600160a01b038216600160a01b6001600160601b03831690810282176009556040519081527fae1d656a1268648b04ffa79c1416f05879338ae295aae3234d8db217356a1c62906020015b60405180910390a25050565b606060046104ab83610b5b565b6040516020016104bc929190611a11565b6040516020818303038152906040529050919050565b6104da610b2e565b600182101580156104ec575060058211155b61052f5760405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081d1bdad95b9259608a1b60448201526064015b60405180910390fd5b600082815260056020526040908190208290555182907f9ff79792a92b66fee090acb66e07837a2edb31ee6b9780fa551fd04b79dffcd2906104929084815260200190565b60095460009081906001600160a01b03811690612710906105a590600160a01b90046001600160601b031686611abe565b6105af9190611aeb565b915091509250929050565b336001600160a01b03861681148015906105db57506105d98682610a63565b155b1561060c5760405163711bec9160e11b81526001600160a01b03808316600483015287166024820152604401610526565b6106198686868686610c64565b505050505050565b606081518351146106525781518351604051635b05999160e01b815260048101929092526024820152604401610526565b6000835167ffffffffffffffff81111561066e5761066e611502565b604051908082528060200260200182016040528015610697578160200160208202803683370190505b50905060005b84518110156106ee576020808202860101516106c1906020808402870101516103c5565b8282815181106106d3576106d3611aff565b60209081029190910101526106e781611b15565b905061069d565b509392505050565b6106fe610b2e565b600461070a8282611b79565b507f6741b2fc379fad678116fe3d4d4b9a1a184ab53ba36b86ad0fa66340b1ab41ad8160405161073a91906114cd565b60405180910390a150565b60048054610752906119d7565b80601f016020809104026020016040519081016040528092919081815260200182805461077e906119d7565b80156107cb5780601f106107a0576101008083540402835291602001916107cb565b820191906000526020600020905b8154815290600101906020018083116107ae57829003601f168201915b505050505081565b6107db610b2e565b6107e56000610ccb565b565b600183101580156107f9575060058311155b6108375760405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081d1bdad95b9259608a1b6044820152606401610526565b600083815260066020908152604080832033845290915290205460ff16156108935760405162461bcd60e51b815260206004820152600f60248201526e105b1c9958591e4818db185a5b5959608a1b6044820152606401610526565b6000838152600860205260409020541561090657600083815260086020908152604080832054600790925290912054106109065760405162461bcd60e51b815260206004820152601460248201527314dd5c1c1b1e481b1a5b5a5d081c995858da195960621b6044820152606401610526565b6040516bffffffffffffffffffffffff193360601b16602082015260009060340160405160208183030381529060405280519060200120905061098a8383808060200260200160405190810160405280939291908181526020018383602002808284376000920182905250898152600560205260409020549250859150610d1d9050565b6109c65760405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b210383937b7b360991b6044820152606401610526565b60008481526006602090815260408083203384528252808320805460ff1916600117905586835260079091528120805491610a0083611b15565b9190505550610a213385600160405180602001604052806000815250610d33565b604051849033907fb792983f4be9cd6a6722f6cf3c136d8cf44f77c5cf7cb263f75f36b04806a01b90600090a350505050565b610a5f338383610d90565b5050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b336001600160a01b0386168114801590610ab25750610ab08682610a63565b155b15610ae35760405163711bec9160e11b81526001600160a01b03808316600483015287166024820152604401610526565b6106198686868686610e26565b610af8610b2e565b6001600160a01b038116610b2257604051631e4fbdf760e01b815260006004820152602401610526565b610b2b81610ccb565b50565b6003546001600160a01b031633146107e55760405163118cdaa760e01b8152336004820152602401610526565b606081600003610b825750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610bac5780610b9681611b15565b9150610ba59050600a83611aeb565b9150610b86565b60008167ffffffffffffffff811115610bc757610bc7611502565b6040519080825280601f01601f191660200182016040528015610bf1576020820181803683370190505b5090505b8415610c5c57610c06600183611c39565b9150610c13600a86611c4c565b610c1e906030611c60565b60f81b818381518110610c3357610c33611aff565b60200101906001600160f81b031916908160001a905350610c55600a86611aeb565b9450610bf5565b949350505050565b6001600160a01b038416610c8e57604051632bfa23e760e11b815260006004820152602401610526565b6001600160a01b038516610cb757604051626a0d4560e21b815260006004820152602401610526565b610cc48585858585610eb4565b5050505050565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600082610d2a8584610f07565b14949350505050565b6001600160a01b038416610d5d57604051632bfa23e760e11b815260006004820152602401610526565b60408051600180825260208201869052818301908152606082018590526080820190925290610619600087848487610eb4565b6001600160a01b038216610db95760405162ced3e160e81b815260006004820152602401610526565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b038416610e5057604051632bfa23e760e11b815260006004820152602401610526565b6001600160a01b038516610e7957604051626a0d4560e21b815260006004820152602401610526565b60408051600180825260208201869052818301908152606082018590526080820190925290610eab8787848487610eb4565b50505050505050565b610ec085858585610f4c565b6001600160a01b03841615610cc45782513390600103610ef95760208481015190840151610ef2838989858589611169565b5050610619565b61061981878787878761128d565b600081815b84518110156106ee57610f3882868381518110610f2b57610f2b611aff565b6020026020010151611376565b915080610f4481611b15565b915050610f0c565b8051825114610f7b5781518151604051635b05999160e01b815260048101929092526024820152604401610526565b3360005b835181101561108a576020818102858101820151908501909101516001600160a01b03881615611032576000828152602081815260408083206001600160a01b038c1684529091529020548181101561100b576040516303dee4c560e01b81526001600160a01b038a166004820152602481018290526044810183905260648101849052608401610526565b6000838152602081815260408083206001600160a01b038d16845290915290209082900390555b6001600160a01b03871615611077576000828152602081815260408083206001600160a01b038b16845290915281208054839290611071908490611c60565b90915550505b50508061108390611b15565b9050610f7f565b50825160010361110b5760208301516000906020840151909150856001600160a01b0316876001600160a01b0316846001600160a01b03167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6285856040516110fc929190918252602082015260400190565b60405180910390a45050610cc4565b836001600160a01b0316856001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb868660405161115a929190611c73565b60405180910390a45050505050565b6001600160a01b0384163b156106195760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906111ad9089908990889088908890600401611ca1565b6020604051808303816000875af19250505080156111e8575060408051601f3d908101601f191682019092526111e591810190611ce6565b60015b611251573d808015611216576040519150601f19603f3d011682016040523d82523d6000602084013e61121b565b606091505b50805160000361124957604051632bfa23e760e11b81526001600160a01b0386166004820152602401610526565b805160208201fd5b6001600160e01b0319811663f23a6e6160e01b14610eab57604051632bfa23e760e11b81526001600160a01b0386166004820152602401610526565b6001600160a01b0384163b156106195760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906112d19089908990889088908890600401611d03565b6020604051808303816000875af192505050801561130c575060408051601f3d908101601f1916820190925261130991810190611ce6565b60015b61133a573d808015611216576040519150601f19603f3d011682016040523d82523d6000602084013e61121b565b6001600160e01b0319811663bc197c8160e01b14610eab57604051632bfa23e760e11b81526001600160a01b0386166004820152602401610526565b60008183106113925760008281526020849052604090206113a1565b60008381526020839052604090205b9392505050565b80356001600160a01b03811681146113bf57600080fd5b919050565b600080604083850312156113d757600080fd5b6113e0836113a8565b946020939093013593505050565b6001600160e01b031981168114610b2b57600080fd5b60006020828403121561141657600080fd5b81356113a1816113ee565b6000806040838503121561143457600080fd5b61143d836113a8565b915060208301356001600160601b038116811461145957600080fd5b809150509250929050565b60006020828403121561147657600080fd5b5035919050565b60005b83811015611498578181015183820152602001611480565b50506000910152565b600081518084526114b981602086016020860161147d565b601f01601f19169290920160200192915050565b6020815260006113a160208301846114a1565b600080604083850312156114f357600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561154157611541611502565b604052919050565b600067ffffffffffffffff82111561156357611563611502565b5060051b60200190565b600082601f83011261157e57600080fd5b8135602061159361158e83611549565b611518565b82815260059290921b840181019181810190868411156115b257600080fd5b8286015b848110156115cd57803583529183019183016115b6565b509695505050505050565b600067ffffffffffffffff8311156115f2576115f2611502565b611605601f8401601f1916602001611518565b905082815283838301111561161957600080fd5b828260208301376000602084830101529392505050565b600082601f83011261164157600080fd5b6113a1838335602085016115d8565b600080600080600060a0868803121561166857600080fd5b611671866113a8565b945061167f602087016113a8565b9350604086013567ffffffffffffffff8082111561169c57600080fd5b6116a889838a0161156d565b945060608801359150808211156116be57600080fd5b6116ca89838a0161156d565b935060808801359150808211156116e057600080fd5b506116ed88828901611630565b9150509295509295909350565b6000806040838503121561170d57600080fd5b823567ffffffffffffffff8082111561172557600080fd5b818501915085601f83011261173957600080fd5b8135602061174961158e83611549565b82815260059290921b8401810191818101908984111561176857600080fd5b948201945b8386101561178d5761177e866113a8565b8252948201949082019061176d565b965050860135925050808211156117a357600080fd5b506117b08582860161156d565b9150509250929050565b600081518084526020808501945080840160005b838110156117ea578151875295820195908201906001016117ce565b509495945050505050565b6020815260006113a160208301846117ba565b60006020828403121561181a57600080fd5b813567ffffffffffffffff81111561183157600080fd5b8201601f8101841361184257600080fd5b610c5c848235602084016115d8565b60008060006040848603121561186657600080fd5b83359250602084013567ffffffffffffffff8082111561188557600080fd5b818601915086601f83011261189957600080fd5b8135818111156118a857600080fd5b8760208260051b85010111156118bd57600080fd5b6020830194508093505050509250925092565b600080604083850312156118e357600080fd5b823591506118f3602084016113a8565b90509250929050565b6000806040838503121561190f57600080fd5b611918836113a8565b91506020830135801515811461145957600080fd5b6000806040838503121561194057600080fd5b611949836113a8565b91506118f3602084016113a8565b600080600080600060a0868803121561196f57600080fd5b611978866113a8565b9450611986602087016113a8565b93506040860135925060608601359150608086013567ffffffffffffffff8111156119b057600080fd5b6116ed88828901611630565b6000602082840312156119ce57600080fd5b6113a1826113a8565b600181811c908216806119eb57607f821691505b602082108103611a0b57634e487b7160e01b600052602260045260246000fd5b50919050565b6000808454611a1f816119d7565b60018281168015611a375760018114611a4c57611a7b565b60ff1984168752821515830287019450611a7b565b8860005260208060002060005b85811015611a725781548a820152908401908201611a59565b50505082870194505b505050508351611a8f81836020880161147d565b64173539b7b760d91b9101908152600501949350505050565b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176103e7576103e7611aa8565b634e487b7160e01b600052601260045260246000fd5b600082611afa57611afa611ad5565b500490565b634e487b7160e01b600052603260045260246000fd5b600060018201611b2757611b27611aa8565b5060010190565b601f821115611b7457600081815260208120601f850160051c81016020861015611b555750805b601f850160051c820191505b8181101561061957828155600101611b61565b505050565b815167ffffffffffffffff811115611b9357611b93611502565b611ba781611ba184546119d7565b84611b2e565b602080601f831160018114611bdc5760008415611bc45750858301515b600019600386901b1c1916600185901b178555610619565b600085815260208120601f198616915b82811015611c0b57888601518255948401946001909101908401611bec565b5085821015611c295787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b818103818111156103e7576103e7611aa8565b600082611c5b57611c5b611ad5565b500690565b808201808211156103e7576103e7611aa8565b604081526000611c8660408301856117ba565b8281036020840152611c9881856117ba565b95945050505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a060808201819052600090611cdb908301846114a1565b979650505050505050565b600060208284031215611cf857600080fd5b81516113a1816113ee565b6001600160a01b0386811682528516602082015260a060408201819052600090611d2f908301866117ba565b8281036060840152611d4181866117ba565b90508281036080840152611d5581856114a1565b9897505050505050505056fea2646970667358221220b55523b84826b9480fdc169256cb07be6b90f99f716096de28b7c4dff712f19064736f6c63430008140033";

type RewardManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RewardManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RewardManager__factory extends ContractFactory {
  constructor(...args: RewardManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _initialBaseURI: string,
    _initialOwner: AddressLike,
    _royaltyReceiver: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _initialBaseURI,
      _initialOwner,
      _royaltyReceiver,
      overrides || {}
    );
  }
  override deploy(
    _initialBaseURI: string,
    _initialOwner: AddressLike,
    _royaltyReceiver: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _initialBaseURI,
      _initialOwner,
      _royaltyReceiver,
      overrides || {}
    ) as Promise<
      RewardManager & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): RewardManager__factory {
    return super.connect(runner) as RewardManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RewardManagerInterface {
    return new Interface(_abi) as RewardManagerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): RewardManager {
    return new Contract(address, _abi, runner) as unknown as RewardManager;
  }
}
